"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _WMSCapabilities = _interopRequireDefault(require("ol/format/WMSCapabilities"));

var _ImageWMS = _interopRequireDefault(require("ol/source/ImageWMS"));

var _Image = _interopRequireDefault(require("ol/layer/Image"));

var _get = _interopRequireDefault(require("lodash/get"));

var _isFunction = _interopRequireDefault(require("lodash/isFunction"));

var _UrlUtil = _interopRequireDefault(require("@terrestris/base-util/dist/UrlUtil/UrlUtil"));

var _Logger = _interopRequireDefault(require("@terrestris/base-util/dist/Logger"));

var _LayerUtil = _interopRequireDefault(require("../LayerUtil/LayerUtil"));

/**
 * Helper class to parse capabilities of WMS layers
 *
 * @class CapabilitiesUtil
 */
var CapabilitiesUtil = /*#__PURE__*/function () {
  function CapabilitiesUtil() {
    (0, _classCallCheck2["default"])(this, CapabilitiesUtil);
  }

  (0, _createClass2["default"])(CapabilitiesUtil, null, [{
    key: "getWmsCapabilities",
    value:
    /**
     * Fetches and parses the WMS Capabilities document for the given URL.
     *
     * @param {string} capabilitiesUrl Url to WMS capabilities document.
     * @return {Object} An object representing the WMS capabilities.
     */
    function () {
      var _getWmsCapabilities = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(capabilitiesUrl) {
        var capabilitiesResponse, wmsCapabilitiesParser, capabilitiesText, capabilities;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return fetch(capabilitiesUrl);

              case 3:
                capabilitiesResponse = _context.sent;

                if (capabilitiesResponse.ok) {
                  _context.next = 7;
                  break;
                }

                _Logger["default"].error('Could not get Capabilities');

                return _context.abrupt("return");

              case 7:
                wmsCapabilitiesParser = new _WMSCapabilities["default"]();
                _context.next = 10;
                return capabilitiesResponse.text();

              case 10:
                capabilitiesText = _context.sent;
                capabilities = wmsCapabilitiesParser.read(capabilitiesText);
                return _context.abrupt("return", capabilities);

              case 15:
                _context.prev = 15;
                _context.t0 = _context["catch"](0);

                _Logger["default"].error("Error while reading Capabilities: ".concat(_context.t0));

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[0, 15]]);
      }));

      function getWmsCapabilities(_x) {
        return _getWmsCapabilities.apply(this, arguments);
      }

      return getWmsCapabilities;
    }()
    /**
     * Fetches and parses the WMS Capabilities document for the given layer.
     *
     * @param {ol.layer.Layer} layer The layer to the get the Capabilites for.
     * @return {Object} An object representing the WMS capabilities.
     */

  }, {
    key: "getWmsCapabilitiesByLayer",
    value: function () {
      var _getWmsCapabilitiesByLayer = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(layer) {
        var capabilitiesUrl;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                capabilitiesUrl = this.getCapabilitiesUrl(layer);
                _context2.next = 3;
                return this.getWmsCapabilities(capabilitiesUrl);

              case 3:
                return _context2.abrupt("return", _context2.sent);

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getWmsCapabilitiesByLayer(_x2) {
        return _getWmsCapabilitiesByLayer.apply(this, arguments);
      }

      return getWmsCapabilitiesByLayer;
    }()
    /**
     * @param {string} capabilitiesUrl Url to WMS capabilities document
     * @return {Object} An object representing the WMS capabilities.
     * @deprecated Please make use of #getWmsCapabilities
     */

  }, {
    key: "parseWmsCapabilities",
    value: function () {
      var _parseWmsCapabilities = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(capabilitiesUrl) {
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.getWmsCapabilities(capabilitiesUrl);

              case 2:
                return _context3.abrupt("return", _context3.sent);

              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function parseWmsCapabilities(_x3) {
        return _parseWmsCapabilities.apply(this, arguments);
      }

      return parseWmsCapabilities;
    }()
    /**
     * Returns the Capabilities URL for the given layer.
     *
     * @param {ol.layer.Layer} layer The layer to the get the Capabilities URL for.
     * @return {string} The Capabilities URL.
     */

  }, {
    key: "getCapabilitiesUrl",
    value: function getCapabilitiesUrl(layer) {
      var layerSource = layer.getSource();

      var layerBaseUrl = _LayerUtil["default"].getLayerUrl(layer);

      var wmsVersion = layerSource.getParams().VERSION || '1.3.0';

      var getCapabilitiesUrl = _UrlUtil["default"].createValidGetCapabilitiesRequest(layerBaseUrl, 'WMS', wmsVersion);

      return getCapabilitiesUrl;
    }
    /**
     * Returns the layers from a parsed WMS GetCapabilities object.
     *
     * @param {Object} capabilities A capabilities object.
     * @param {string} nameField Configure the field which should be set as the
     *                           'name' property in the openlayers layer.
     * @param {Function} proxyFn Optional proxy function which can be applied to
     *                           `GetMap`, `GetFeatureInfo` and `GetLegendGraphic`
     *                           requests to avoid CORS issues.
     * @return {OlLayerTile[]} Array of OlLayerTile
     */

  }, {
    key: "getLayersFromWmsCapabilities",
    value: function getLayersFromWmsCapabilities(capabilities) {
      var nameField = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Name';
      var proxyFn = arguments.length > 2 ? arguments[2] : undefined;
      var wmsVersion = (0, _get["default"])(capabilities, 'version');
      var layersInCapabilities = (0, _get["default"])(capabilities, 'Capability.Layer.Layer');
      var wmsGetMapConfig = (0, _get["default"])(capabilities, 'Capability.Request.GetMap');
      var wmsGetFeatureInfoConfig = (0, _get["default"])(capabilities, 'Capability.Request.GetFeatureInfo');
      var getMapUrl = (0, _get["default"])(wmsGetMapConfig, 'DCPType[0].HTTP.Get.OnlineResource');
      var getFeatureInfoUrl = (0, _get["default"])(wmsGetFeatureInfoConfig, 'DCPType[0].HTTP.Get.OnlineResource');
      var legendUrl = layersInCapabilities.length > 0 ? (0, _get["default"])(layersInCapabilities[0], 'Style[0].LegendURL[0].OnlineResource') : null;
      return layersInCapabilities.map(function (layerObj) {
        var title = (0, _get["default"])(layerObj, 'Attribution.Title');
        var onlineResource = (0, _get["default"])(layerObj, 'Attribution.OnlineResource');
        var attributions = [onlineResource ? "<a target=\"_blank\" href=\"".concat(onlineResource, "\">").concat(title, "</a>") : title];
        return new _Image["default"]({
          opacity: 1,
          title: (0, _get["default"])(layerObj, 'Title'),
          name: (0, _get["default"])(layerObj, nameField),
          "abstract": (0, _get["default"])(layerObj, 'Abstract'),
          getFeatureInfoUrl: (0, _isFunction["default"])(proxyFn) ? proxyFn(getFeatureInfoUrl) : getFeatureInfoUrl,
          getFeatureInfoFormats: (0, _get["default"])(wmsGetFeatureInfoConfig, 'Format'),
          legendUrl: (0, _isFunction["default"])(proxyFn) ? proxyFn(legendUrl) : legendUrl,
          queryable: (0, _get["default"])(layerObj, 'queryable'),
          source: new _ImageWMS["default"]({
            url: (0, _isFunction["default"])(proxyFn) ? proxyFn(getMapUrl) : getMapUrl,
            attributions: attributions,
            params: {
              'LAYERS': (0, _get["default"])(layerObj, 'Name'),
              'VERSION': wmsVersion
            }
          })
        });
      });
    }
  }]);
  return CapabilitiesUtil;
}();

var _default = CapabilitiesUtil;
exports["default"] = _default;