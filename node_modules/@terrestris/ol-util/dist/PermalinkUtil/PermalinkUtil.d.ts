/**
 * Helper class for some operations related to permalink function.
 *
 * @class
 */
export class PermalinkUtil {
    /**
     * Creates a permalink based on the given map state. It will contain
     * the current view state of the map (center and zoom) as well as
     * the current (filtered) list of layers.
     *
     * @param {ol/Map} map The OpenLayers map
     * @param {string} separator The separator for the layers list and center
     *                           coordinates in the link. Default is to ';'.
     * @param {Function} identifier Function to generate the identifier of the
     *                              layer in the link. Default is the name
     *                              (given by the associated property) of
     *                              the layer.
     * @param {Function} filter Function to filter layers that should be
     *                          added to the link. Default is to add all
     *                          visible layers of type ol/layer/Tile.
     * @return {string} The permalink.
     */
    static getLink: (map: any, separator?: string, identifier?: Function, filter?: Function) => string;
    /**
     * Applies an existing permalink to the given map.
     *
     * @param {ol/Map} map The OpenLayers map.
     * @param {string} separator The separator of the layers list and center
     *                           coordinates in the link. Default is to ';'.
     * @param {Function} identifier Function to generate the identifier of the
     *                              layer in the link. Default is the name
     *                              (given by the associated property) of
     *                              the layer.
     * @param {Function} filter Function to filter layers that should be
     *                          handled by the link. Default is to consider all
     *                          current map layers of type ol/layer/Tile.
     */
    static applyLink: (map: any, separator?: string, identifier?: Function, filter?: Function) => void;
    /**
     * Search through the given Ol-Collection for the given id and
     * set all parenting groups visible.
     * @param {Object} map The openlayers map
     * @param {Object} coll The Openlayers Collection
     * @param {string} id Ther layer ol uid to search for
     */
    static setParentsVisible: (map: any, coll: any, id: string) => void;
}
export default PermalinkUtil;
