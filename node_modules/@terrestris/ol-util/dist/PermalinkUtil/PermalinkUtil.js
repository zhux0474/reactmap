"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.PermalinkUtil = void 0;

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _Tile = _interopRequireDefault(require("ol/layer/Tile"));

var _Group = _interopRequireDefault(require("ol/layer/Group"));

var _MapUtil = _interopRequireDefault(require("../MapUtil/MapUtil"));

/**
 * Helper class for some operations related to permalink function.
 *
 * @class
 */
var PermalinkUtil = /*#__PURE__*/(0, _createClass2["default"])(function PermalinkUtil() {
  (0, _classCallCheck2["default"])(this, PermalinkUtil);
});
exports.PermalinkUtil = PermalinkUtil;
(0, _defineProperty2["default"])(PermalinkUtil, "getLink", function (map) {
  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ';';
  var identifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (l) {
    return l.get('name');
  };
  var filter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (l) {
    return l instanceof _Tile["default"] && l.getVisible();
  };
  var center = map.getView().getCenter().join(separator);
  var zoom = map.getView().getZoom();

  var layers = _MapUtil["default"].getAllLayers(map);

  var visibles = layers.filter(filter).map(identifier).join(separator);
  var link = new URL(window.location.href);
  link.searchParams.set('center', center);
  link.searchParams.set('zoom', zoom.toString());
  link.searchParams.set('layers', visibles);
  return link.href;
});
(0, _defineProperty2["default"])(PermalinkUtil, "applyLink", function (map) {
  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ';';
  var identifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (l) {
    return l.get('name');
  };
  var filter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (l) {
    return l instanceof _Tile["default"];
  };
  var url = new URL(window.location.href);
  var center = url.searchParams.get('center');
  var zoom = url.searchParams.get('zoom');
  var layers = url.searchParams.get('layers');

  var allLayers = _MapUtil["default"].getAllLayers(map);

  if (layers) {
    layers = layers.split(separator);
    allLayers.filter(filter).forEach(function (l) {
      var visible = layers.includes(identifier(l));
      l.setVisible(visible); // also make all parent folders / groups visible so
      // that the layer becomes visible in map

      if (visible) {
        PermalinkUtil.setParentsVisible(map, map.getLayerGroup().getLayers(), l.ol_uid);
      }
    });
  }

  if (center) {
    map.getView().setCenter([parseFloat(center.split(separator)[0]), parseFloat(center.split(separator)[1])]);
  }

  if (zoom) {
    map.getView().setZoom(parseInt(zoom, 10));
  }
});
(0, _defineProperty2["default"])(PermalinkUtil, "setParentsVisible", function (map, coll, id) {
  coll.forEach(function (el) {
    if (el instanceof _Group["default"]) {
      var layers = _MapUtil["default"].getLayersByGroup(map, el);

      if (layers.map(function (layer) {
        return layer.ol_uid;
      }).includes(id)) {
        el.setVisible(true);
      }

      PermalinkUtil.setParentsVisible(map, el.getLayers(), id);
    }
  });
});
var _default = PermalinkUtil;
exports["default"] = _default;