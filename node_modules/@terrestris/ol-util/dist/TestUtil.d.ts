/**
 * A set of some useful static helper methods.
 *
 * @class
 */
export class TestUtil {
    static mapDivId: string;
    static mapDivHeight: number;
    static mapDivWidth: number;
    /**
     * Creates and applies a map <div> element to the body.
     *
     * @return {Element} The mounted <div> element.
     */
    static mountMapDiv: () => Element;
    /**
     * Removes the map div element from the body.
     */
    static unmountMapDiv: () => void;
    /**
     * Creates an OpenLayers map.
     *
     * @param {Object} mapOpts Additional options for the map to create.
     * @return {ol.Map} The ol map.
     */
    static createMap: (mapOpts: any) => ol.Map;
    /**
     * Removes the map.
     */
    static removeMap: (map: any) => void;
    /**
     * Simulates a browser pointer event on the map viewport.
     * Origin: https://github.com/openlayers/openlayers/blob/master/test/spec/ol/interaction/draw.test.js#L67
     *
     * @param {ol.Map} map The map to use.
     * @param {string} type Event type.
     * @param {number} x Horizontal offset from map center.
     * @param {number} y Vertical offset from map center.
     * @param {boolean} opt_shiftKey Shift key is pressed
     * @param {boolean} dragging Whether the map is being dragged or not.
     */
    static simulatePointerEvent: (map: ol.Map, type: string, x: number, y: number, opt_shiftKey: boolean, dragging: boolean) => void;
    /**
     * Creates and returns an empty vector layer.
     *
     * @param {Object} properties The properties to set.
     * @return {ol.layer.Vector} The layer.
     */
    static createVectorLayer: (properties: any) => ol.layer.Vector;
    /**
     * Returns a point feature with a random position.
     * @type {Object}
     */
    static generatePointFeature: any;
}
export default TestUtil;
