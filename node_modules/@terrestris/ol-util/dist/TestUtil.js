"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.TestUtil = void 0;

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _View = _interopRequireDefault(require("ol/View"));

var _Map = _interopRequireDefault(require("ol/Map"));

var _Vector = _interopRequireDefault(require("ol/source/Vector"));

var _Vector2 = _interopRequireDefault(require("ol/layer/Vector"));

var _Feature = _interopRequireDefault(require("ol/Feature"));

var _Point = _interopRequireDefault(require("ol/geom/Point"));

var _MapBrowserEvent = _interopRequireDefault(require("ol/MapBrowserEvent"));

/**
 * A set of some useful static helper methods.
 *
 * @class
 */
var TestUtil = /*#__PURE__*/(0, _createClass2["default"])(function TestUtil() {
  (0, _classCallCheck2["default"])(this, TestUtil);
});
exports.TestUtil = TestUtil;
(0, _defineProperty2["default"])(TestUtil, "mapDivId", 'map');
(0, _defineProperty2["default"])(TestUtil, "mapDivHeight", 256);
(0, _defineProperty2["default"])(TestUtil, "mapDivWidth", 256);
(0, _defineProperty2["default"])(TestUtil, "mountMapDiv", function () {
  var div = document.createElement('div');
  var style = div.style;
  style.position = 'absolute';
  style.left = '-1000px';
  style.top = '-1000px';
  style.width = TestUtil.mapDivWidth + 'px';
  style.height = TestUtil.mapDivHeight + 'px';
  div.id = TestUtil.mapDivId;
  document.body.appendChild(div);
  return div;
});
(0, _defineProperty2["default"])(TestUtil, "unmountMapDiv", function () {
  var div = document.querySelector("div#".concat(TestUtil.mapDivId));

  if (!div) {
    return;
  }

  var parent = div.parentNode;

  if (parent) {
    parent.removeChild(div);
  }

  div = null;
});
(0, _defineProperty2["default"])(TestUtil, "createMap", function (mapOpts) {
  var source = new _Vector["default"]();
  var layer = new _Vector2["default"]({
    source: source
  });
  var targetDiv = TestUtil.mountMapDiv();
  var defaultMapOpts = {
    target: targetDiv,
    layers: [layer],
    view: new _View["default"]({
      center: [829729, 6708850],
      resolution: 1,
      resolutions: mapOpts ? mapOpts.resolutions : undefined
    })
  };
  Object.assign(defaultMapOpts, mapOpts);
  var map = new _Map["default"](defaultMapOpts);
  map.renderSync();
  return map;
});
(0, _defineProperty2["default"])(TestUtil, "removeMap", function (map) {
  if (map instanceof _Map["default"]) {
    map.dispose();
  }

  TestUtil.unmountMapDiv();
});
(0, _defineProperty2["default"])(TestUtil, "simulatePointerEvent", function (map, type, x, y, opt_shiftKey, dragging) {
  var viewport = map.getViewport(); // Calculated in case body has top < 0 (test runner with small window).

  var position = viewport.getBoundingClientRect();
  var shiftKey = opt_shiftKey !== undefined ? opt_shiftKey : false;
  var event = new Event();
  event.type = type;
  event.clientX = position.left + x + TestUtil.mapDivWidth / 2;
  event.clientY = position.top + y + TestUtil.mapDivHeight / 2;
  event.shiftKey = shiftKey;
  map.handleMapBrowserEvent(new _MapBrowserEvent["default"](type, map, event, dragging));
});
(0, _defineProperty2["default"])(TestUtil, "createVectorLayer", function (properties) {
  var source = new _Vector["default"]();
  var layer = new _Vector2["default"]({
    source: source
  });
  layer.setProperties(properties);
  return layer;
});
(0, _defineProperty2["default"])(TestUtil, "generatePointFeature", function () {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    ATTR_1: Math.random() * 100,
    ATTR_2: 'Borsigplatz 9',
    ATTR_3: 'Dortmund'
  };
  var coords = [Math.floor(Math.random() * 180) - 180, Math.floor(Math.random() * 90) - 90];
  var geom = new _Point["default"](coords);
  var feat = new _Feature["default"]({
    geometry: geom
  });
  feat.setProperties(props);
  return feat;
});
var _default = TestUtil;
exports["default"] = _default;