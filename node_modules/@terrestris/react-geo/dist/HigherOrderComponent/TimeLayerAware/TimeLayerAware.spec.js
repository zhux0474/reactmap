"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var React = _interopRequireWildcard(require("react"));

var _moment = _interopRequireDefault(require("moment"));

var _Tile = _interopRequireDefault(require("ol/layer/Tile"));

var _TileWMS = _interopRequireDefault(require("ol/source/TileWMS"));

var _TestUtil = _interopRequireDefault(require("../../Util/TestUtil"));

var _TimeLayerAware = require("./TimeLayerAware");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

describe('timeLayerAware', function () {
  var EnhancedComponent;
  var EnhancedComponent2;
  var layer;
  var layerWithFunnyTimeSpelling;
  var customHandler = jest.fn();
  /* eslint-disable require-jsdoc */

  var MockComponent = /*#__PURE__*/function (_React$Component) {
    _inherits(MockComponent, _React$Component);

    var _super = _createSuper(MockComponent);

    function MockComponent() {
      _classCallCheck(this, MockComponent);

      return _super.apply(this, arguments);
    }

    _createClass(MockComponent, [{
      key: "render",
      value: function render() {
        return /*#__PURE__*/React.createElement("div", null, "A mock Component");
      }
    }]);

    return MockComponent;
  }(React.Component);
  /* eslint-enable require-jsdoc */


  beforeEach(function () {
    layer = new _Tile["default"]({
      source: new _TileWMS["default"]({
        params: {
          LAYERS: 'humpty:dumpty',
          TIME: 'overwrite me!'
        }
      })
    });
    layerWithFunnyTimeSpelling = new _Tile["default"]({
      source: new _TileWMS["default"]({
        params: {
          LAYERS: 'humpty:dumpty',
          tImE: 'overwrite me!'
        }
      })
    });
    EnhancedComponent = (0, _TimeLayerAware.timeLayerAware)(MockComponent, [{
      isWmsTime: false,
      customHandler: customHandler
    }]);
    EnhancedComponent2 = (0, _TimeLayerAware.timeLayerAware)(MockComponent, [{
      isWmsTime: true,
      layer: layer
    }, {
      isWmsTime: true,
      layer: layerWithFunnyTimeSpelling
    }]);
  });
  describe('Basics', function () {
    it('is defined', function () {
      expect(_TimeLayerAware.timeLayerAware).not.toBeUndefined();
    });
    it('can be rendered', function () {
      var wrapper = _TestUtil["default"].mountComponent(EnhancedComponent, {}, {});

      expect(wrapper).not.toBeUndefined();
      expect(wrapper.first().is(EnhancedComponent)).toBe(true);
    });
    it('calls configured custom handlers', function () {
      var time = (0, _moment["default"])().toISOString();
      new EnhancedComponent().timeChanged(time);
      expect(customHandler).toHaveBeenCalledWith(time);
    });
    it('changes WMS Time layer parameter TIME, single instant', function () {
      var time = (0, _moment["default"])().toISOString();
      new EnhancedComponent2().timeChanged(time);
      var params = layer.getSource().getParams();
      expect(params.TIME).toBe(time);
    });
    it('changes WMS Time layer parameter TIME, start and end instants', function () {
      var start = (0, _moment["default"])().toISOString();
      var end = (0, _moment["default"])().toISOString();
      new EnhancedComponent2().timeChanged([start, end]);
      var params = layer.getSource().getParams();
      expect(params.TIME).toBe("".concat(start, "/").concat(end));
    });
    it('updates the correct parameter, even when spelled funnily', function () {
      var time = (0, _moment["default"])().toISOString();
      new EnhancedComponent2().timeChanged(time);
      var params = layerWithFunnyTimeSpelling.getSource().getParams();
      expect(params.tImE).toBe(time); // right one overwriten

      expect('TIME' in params).toBe(false); // only right one overwritten
    });
  });
});