import { SelectFeaturesButtonProps } from '../SelectFeaturesButton/SelectFeaturesButton';
import OlVectorLayer from 'ol/layer/Vector';
import OlVectorSource from 'ol/source/Vector';
import OlGeometry from 'ol/geom/Geometry';
import * as React from 'react';
import { ModifyEvent, Options as ModifyOptions } from 'ol/interaction/Modify';
import { Options as TranslateOptions, TranslateEvent } from 'ol/interaction/Translate';
import OlFeature from 'ol/Feature';
interface OwnProps {
    /**
     * Additional configuration object to apply to the ol.interaction.Modify.
     * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Modify-Modify.html
     * for more information
     *
     * Note: The keys features, deleteCondition and style are handled internally
     *       and shouldn't be overwritten without any specific cause.
     */
    modifyInteractionConfig?: Omit<ModifyOptions, 'features' | 'source' | 'deleteCondition' | 'style'>;
    /**
     * Additional configuration object to apply to the ol.interaction.Translate.
     * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-Translate.html
     * for more information
     *
     * Note: The key feature is handled internally and shouldn't be overwritten
     *       without any specific cause.
     */
    translateInteractionConfig?: Omit<TranslateOptions, 'features' | 'layers'>;
    /**
     * The vector layer which will be used for digitize features.
     * The standard digitizeLayer can be retrieved via `DigitizeUtil.getDigitizeLayer(map)`.
     */
    digitizeLayer?: OlVectorLayer<OlVectorSource<OlGeometry>>;
    /**
     * Listener function for the 'modifystart' event of an ol.interaction.Modify.
     * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Modify-ModifyEvent.html
     * for more information.
     */
    onModifyStart?: (event: ModifyEvent) => void;
    /**
     * Listener function for the 'modifyend' event of an ol.interaction.Modify.
     * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Modify-ModifyEvent.html
     * for more information.
     */
    onModifyEnd?: (event: ModifyEvent) => void;
    /**
     * Listener function for the 'translatestart' event of an ol.interaction.Translate.
     * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-TranslateEvent.html
     * for more information.
     */
    onTranslateStart?: (event: TranslateEvent) => void;
    /**
     * Listener function for the 'translateend' event of an ol.interaction.Translate.
     * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-TranslateEvent.html
     * for more information.
     */
    onTranslateEnd?: (event: TranslateEvent) => void;
    /**
     * Listener function for the 'translating' event of an ol.interaction.Translate.
     * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-TranslateEvent.html
     * for more information.
     */
    onTranslating?: (event: TranslateEvent) => void;
    /**
     * Callback function that will be called when the ok-button of the modal was clicked
     */
    onModalLabelOk?: (feature: OlFeature<OlGeometry>) => void;
    /**
     * Callback function that will be called
     * when the cancel-button of the modal was clicked
     */
    onModalLabelCancel?: () => void;
    /**
     * Maximal length of feature label.
     * If exceeded label will be divided into multiple lines. Optional.
     */
    maxLabelLineLength?: number;
    /**
     * Title for modal used for input of labels for digitize features.
     */
    modalPromptTitle?: string;
    /**
     * Text string for `OK` button of the modal.
     */
    modalPromptOkButtonText?: string;
    /**
     * Text string for `Cancel` button of the modal.
     */
    modalPromptCancelButtonText?: string;
    /**
     * Enable label editing via modal. Will open before being able to modify/translate feature. Default: `true`.
     */
    editLabel?: boolean;
}
export declare type ModifyButtonProps = OwnProps & Omit<SelectFeaturesButtonProps, 'layers' | 'onFeatureSelect' | 'featuresCollection'>;
export declare const ModifyButton: React.FC<ModifyButtonProps>;
export {};
