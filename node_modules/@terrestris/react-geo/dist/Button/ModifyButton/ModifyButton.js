"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModifyButton = void 0;

var _SelectFeaturesButton = _interopRequireDefault(require("../SelectFeaturesButton/SelectFeaturesButton"));

var _constants = require("../../constants");

var React = _interopRequireWildcard(require("react"));

var _ = require("../..");

var _DigitizeUtil = require("../../Util/DigitizeUtil");

var _Modify = _interopRequireDefault(require("ol/interaction/Modify"));

var _Translate = _interopRequireDefault(require("ol/interaction/Translate"));

var _condition = require("ol/events/condition");

var _Observable = require("ol/Observable");

var _Collection = _interopRequireDefault(require("ol/Collection"));

var _FeatureLabelModal = require("../../FeatureLabelModal/FeatureLabelModal");

var _excluded = ["className", "onModifyStart", "onModifyEnd", "onTranslateStart", "onTranslateEnd", "onTranslating", "digitizeLayer", "selectStyle", "modifyInteractionConfig", "translateInteractionConfig", "onModalLabelOk", "onModalLabelCancel", "onToggle", "maxLabelLineLength", "modalPromptTitle", "modalPromptOkButtonText", "modalPromptCancelButtonText", "editLabel"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * The className added to this component.
 */
var defaultClassName = "".concat(_constants.CSS_PREFIX, "modifybutton");

var ModifyButton = function ModifyButton(_ref) {
  var className = _ref.className,
      onModifyStart = _ref.onModifyStart,
      onModifyEnd = _ref.onModifyEnd,
      onTranslateStart = _ref.onTranslateStart,
      onTranslateEnd = _ref.onTranslateEnd,
      onTranslating = _ref.onTranslating,
      digitizeLayer = _ref.digitizeLayer,
      selectStyle = _ref.selectStyle,
      modifyInteractionConfig = _ref.modifyInteractionConfig,
      translateInteractionConfig = _ref.translateInteractionConfig,
      onModalLabelOk = _ref.onModalLabelOk,
      onModalLabelCancel = _ref.onModalLabelCancel,
      onToggle = _ref.onToggle,
      maxLabelLineLength = _ref.maxLabelLineLength,
      modalPromptTitle = _ref.modalPromptTitle,
      modalPromptOkButtonText = _ref.modalPromptOkButtonText,
      modalPromptCancelButtonText = _ref.modalPromptCancelButtonText,
      _ref$editLabel = _ref.editLabel,
      editLabel = _ref$editLabel === void 0 ? true : _ref$editLabel,
      passThroughProps = _objectWithoutProperties(_ref, _excluded);

  var _useState = (0, React.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      layers = _useState2[0],
      setLayers = _useState2[1];

  var _useState3 = (0, React.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      modifyInteraction = _useState4[0],
      setModifyInteraction = _useState4[1];

  var _useState5 = (0, React.useState)(null),
      _useState6 = _slicedToArray(_useState5, 2),
      translateInteraction = _useState6[0],
      setTranslateInteraction = _useState6[1];

  var _useState7 = (0, React.useState)(null),
      _useState8 = _slicedToArray(_useState7, 2),
      features = _useState8[0],
      setFeatures = _useState8[1];

  var map = (0, _.useMap)();

  var _useState9 = (0, React.useState)(null),
      _useState10 = _slicedToArray(_useState9, 2),
      editLabelFeature = _useState10[0],
      setEditLabelFeature = _useState10[1];

  (0, React.useEffect)(function () {
    if (!map) {
      return;
    }

    setLayers([digitizeLayer !== null && digitizeLayer !== void 0 ? digitizeLayer : _DigitizeUtil.DigitizeUtil.getDigitizeLayer(map)]);
    setFeatures(new _Collection["default"]());
  }, [map, digitizeLayer]);
  (0, React.useEffect)(function () {
    if (!map || !features) {
      return undefined;
    }

    var newTranslateInteraction = new _Translate["default"](_objectSpread({
      features: features
    }, translateInteractionConfig));
    newTranslateInteraction.set('name', 'react-geo-translate-interaction');
    newTranslateInteraction.setActive(false);
    map.addInteraction(newTranslateInteraction);
    setTranslateInteraction(newTranslateInteraction);
    var newModifyInteraction = new _Modify["default"](_objectSpread({
      features: features,
      deleteCondition: _condition.singleClick,
      style: selectStyle !== null && selectStyle !== void 0 ? selectStyle : _DigitizeUtil.DigitizeUtil.DEFAULT_SELECT_STYLE
    }, modifyInteractionConfig));
    newModifyInteraction.set('name', 'react-geo-modify-interaction');
    newModifyInteraction.setActive(false);
    map.addInteraction(newModifyInteraction);
    setModifyInteraction(newModifyInteraction);
    return function () {
      map.removeInteraction(newModifyInteraction);
      map.removeInteraction(newTranslateInteraction);
    };
  }, [selectStyle, modifyInteractionConfig, translateInteractionConfig, features, map]);
  (0, React.useEffect)(function () {
    if (!modifyInteraction) {
      return undefined;
    }

    var startKey = modifyInteraction.on('modifystart', function (e) {
      onModifyStart === null || onModifyStart === void 0 ? void 0 : onModifyStart(e);
    });
    var endKey = modifyInteraction.on('modifyend', function (e) {
      onModifyEnd === null || onModifyEnd === void 0 ? void 0 : onModifyEnd(e);
    });
    return function () {
      (0, _Observable.unByKey)(startKey);
      (0, _Observable.unByKey)(endKey);
    };
  }, [modifyInteraction, onModifyStart, onModifyEnd]);
  (0, React.useEffect)(function () {
    if (!translateInteraction) {
      return undefined;
    }

    var startKey = translateInteraction.on('translatestart', function (e) {
      onTranslateStart === null || onTranslateStart === void 0 ? void 0 : onTranslateStart(e);
    });
    var endKey = translateInteraction.on('translatestart', function (e) {
      onTranslateEnd === null || onTranslateEnd === void 0 ? void 0 : onTranslateEnd(e);
    });
    var translatingKey = translateInteraction.on('translating', function (e) {
      onTranslating === null || onTranslating === void 0 ? void 0 : onTranslating(e);
    });
    return function () {
      (0, _Observable.unByKey)(startKey);
      (0, _Observable.unByKey)(endKey);
      (0, _Observable.unByKey)(translatingKey);
    };
  }, [translateInteraction, onTranslateStart, onTranslateEnd, onTranslating]);

  if (!layers || !features || !modifyInteraction || !translateInteraction) {
    return null;
  }

  var onToggleInternal = function onToggleInternal(pressed, lastClickEvent) {
    modifyInteraction.setActive(pressed);
    translateInteraction.setActive(pressed);
    onToggle === null || onToggle === void 0 ? void 0 : onToggle(pressed, lastClickEvent);
  };

  var onFeatureSelect = function onFeatureSelect(event) {
    if (editLabel) {
      var labeled = event.selected.find(function (f) {
        return f.get('isLabel');
      });
      setEditLabelFeature(labeled || null);
    }
  };

  var finalClassName = className ? "".concat(defaultClassName, " ").concat(className) : defaultClassName;
  var button = /*#__PURE__*/React.createElement(_SelectFeaturesButton["default"], _extends({
    layers: layers,
    selectStyle: selectStyle,
    className: finalClassName,
    onToggle: onToggleInternal,
    featuresCollection: features,
    clearAfterSelect: false,
    onFeatureSelect: onFeatureSelect
  }, passThroughProps));
  var modal = null;

  if (editLabelFeature) {
    var onModalLabelOkInternal = function onModalLabelOkInternal() {
      onModalLabelOk === null || onModalLabelOk === void 0 ? void 0 : onModalLabelOk(editLabelFeature);
      setEditLabelFeature(null);
    };

    var onModalLabelCancelInternal = function onModalLabelCancelInternal() {
      onModalLabelCancel === null || onModalLabelCancel === void 0 ? void 0 : onModalLabelCancel();
      setEditLabelFeature(null);
    };

    modal = /*#__PURE__*/React.createElement(_FeatureLabelModal.FeatureLabelModal, {
      onOk: onModalLabelOkInternal,
      onCancel: onModalLabelCancelInternal,
      title: modalPromptTitle,
      okText: modalPromptOkButtonText,
      cancelText: modalPromptCancelButtonText,
      maxLabelLineLength: maxLabelLineLength,
      feature: editLabelFeature
    });
  }

  if (!editLabel) {
    return button;
  } else {
    return /*#__PURE__*/React.createElement(React.Fragment, null, button, modal);
  }
};

exports.ModifyButton = ModifyButton;