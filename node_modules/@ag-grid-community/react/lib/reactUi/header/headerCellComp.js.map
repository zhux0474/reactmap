{"version":3,"sources":["reactUi/header/headerCellComp.tsx"],"names":[],"mappings":"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","file":"headerCellComp.js","sourcesContent":["import React, { memo, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { ColumnSortState, HeaderCellCtrl, IHeader, IHeaderCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { CssClasses, isComponentStateless } from '../utils';\nimport { showJsComp } from '../jsComp';\n\nconst HeaderCellComp = (props: {ctrl: HeaderCellCtrl}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses());\n    const [width, setWidth] = useState<string>();\n    const [title, setTitle] = useState<string>();\n    const [colId, setColId] = useState<string>();\n    const [ariaSort, setAriaSort] = useState<ColumnSortState>();\n    const [ariaDescribedBy, setAriaDescribedBy] = useState<string>();\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails>();\n\n    const eGui = useRef<HTMLDivElement>(null);\n    const eResize = useRef<HTMLDivElement>(null);\n    const userCompRef = useRef<IHeader>();\n\n    const { ctrl } = props;\n\n    useEffect(() => {\n\n        const compProxy: IHeaderCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setAriaSort: sort => setAriaSort(sort),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n            setAriaDescribedBy: value => setAriaDescribedBy(value),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            getUserCompInstance: ()=> userCompRef.current || undefined\n        };\n\n        ctrl.setComp(compProxy, eGui.current!, eResize.current!);\n\n        const selectAllGui = ctrl.getSelectAllGui();\n        eResize.current!.insertAdjacentElement('afterend', selectAllGui);\n\n    }, []);\n\n    // js comps\n    useEffect(() => {\n        return showJsComp(userCompDetails, context, eGui.current!, userCompRef);\n    }, [userCompDetails]);\n\n    // add drag handling, must be done after component is added to the dom\n    useEffect(()=> {\n        let userCompDomElement: HTMLElement | undefined = undefined;\n        eGui.current!.childNodes.forEach( node => {\n            if (node!=null && node!==eResize.current) {\n                userCompDomElement = node as HTMLElement;\n            }\n        });\n\n        ctrl.setDragSource(userCompDomElement);\n    }, [userCompDetails]);\n\n    const style = useMemo( ()=> ({\n        width: width\n    }), [width]);\n\n    const className = useMemo( ()=> 'ag-header-cell ' + cssClasses.toString(), [cssClasses] );\n\n    const userCompStateless = useMemo( ()=> {\n        const res = userCompDetails \n                    && userCompDetails.componentFromFramework \n                    && isComponentStateless(userCompDetails.componentClass);\n        return !!res;\n    }, [userCompDetails]);\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div ref={eGui} className={className} style={style} title={title} col-id={colId} \n                    aria-sort={ariaSort} role=\"columnheader\" unselectable=\"on\" tabIndex={-1}\n                    aria-describedby={ariaDescribedBy}>\n            <div ref={eResize} className=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            { reactUserComp && userCompStateless && <UserCompClass { ...userCompDetails!.params } /> }\n            { reactUserComp && !userCompStateless && <UserCompClass { ...userCompDetails!.params } ref={ userCompRef }/> }\n        </div>\n    );\n};\n\nexport default memo(HeaderCellComp);\n"]}