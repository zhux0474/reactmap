{"version":3,"sources":["reactUi/header/headerGroupCellComp.tsx"],"names":[],"mappings":"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","file":"headerGroupCellComp.js","sourcesContent":["import { HeaderGroupCellCtrl, IHeaderGroupCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport React, { memo, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { showJsComp } from '../jsComp';\nimport { CssClasses } from '../utils';\n\nconst HeaderGroupCellComp = (props: {ctrl: HeaderGroupCellCtrl}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses());\n    const [cssResizableClasses, setResizableCssClasses] = useState<CssClasses>(new CssClasses());\n    const [width, setWidth] = useState<string>();\n    const [title, setTitle] = useState<string>();\n    const [colId, setColId] = useState<string>();\n    const [ariaExpanded, setAriaExpanded] = useState<'true'|'false'|undefined>();\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails>();\n\n    const eGui = useRef<HTMLDivElement>(null);\n    const eResize = useRef<HTMLDivElement>(null);\n\n    const { ctrl } = props;\n\n    useEffect(() => {\n\n        const compProxy: IHeaderGroupCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            addOrRemoveResizableCssClass: (name, on) => setResizableCssClasses(prev => prev.setClass(name, on)),\n            setAriaExpanded: expanded => setAriaExpanded(expanded)\n        };\n\n        ctrl.setComp(compProxy, eGui.current!, eResize.current!);\n\n    }, []);\n\n    // js comps\n    useEffect(() => {\n        return showJsComp(userCompDetails, context, eGui.current!);\n    }, [userCompDetails]);\n\n    // add drag handling, must be done after component is added to the dom\n    useEffect(()=> {\n        let userCompDomElement: HTMLElement | undefined = undefined;\n        eGui.current!.childNodes.forEach( node => {\n            if (node!=null && node!==eResize.current) {\n                userCompDomElement = node as HTMLElement;\n            }\n        });\n\n        userCompDomElement && ctrl.setDragSource(userCompDomElement);\n    }, [userCompDetails]);\n\n    const style = useMemo( ()=> ({\n        width: width\n    }), [width]);\n    \n    const className = useMemo( ()=> 'ag-header-group-cell ' + cssClasses.toString(), [cssClasses] );\n    const resizableClassName = useMemo( ()=> 'ag-header-cell-resize ' + cssResizableClasses.toString(), [cssResizableClasses] );\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div ref={eGui} className={className} style={style} title={title} col-id={colId} \n                    role=\"columnheader\" tabIndex={-1} aria-expanded={ariaExpanded}>\n            { reactUserComp && <UserCompClass { ...userCompDetails!.params } /> }\n            <div ref={eResize} className={resizableClassName}></div>\n        </div>\n    );\n};\n\nexport default memo(HeaderGroupCellComp);"]}