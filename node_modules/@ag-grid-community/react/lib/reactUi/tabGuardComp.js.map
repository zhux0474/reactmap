{"version":3,"sources":["reactUi/tabGuardComp.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,6CAAsI;AAEtI,gDAEiC;AACjC,+CAA8C;AAa9C,IAAM,eAAe,GAAgE,UAAC,KAAK,EAAE,UAAU;IAE3F,IAAA,yBAAQ,EAAE,2CAAiB,EAAE,iCAAY,EAAE,yBAAQ,CAAW;IAC9D,IAAA,iEAAO,CAA8B;IAE7C,IAAM,cAAc,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IACpD,IAAM,iBAAiB,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IACvD,IAAM,eAAe,GAAG,cAAM,EAAgB,CAAC;IACzC,IAAA,uBAA4C,EAA3C,gBAAQ,EAAE,mBAAiC,CAAC;IAEnD,2BAAmB,CAAC,UAAU,EAAE,cAAM,OAAA,CAAC;QACnC,wBAAwB,EAAxB;YACI,eAAe,CAAC,OAAQ,CAAC,wBAAwB,EAAE,CAAC;QACxD,CAAC;KACJ,CAAC,EAJoC,CAIpC,CAAC,CAAC;IAEJ,iBAAS,CAAC;QACN,IAAM,SAAS,GAAG,cAAc,CAAC,OAAQ,CAAC;QAC1C,IAAM,YAAY,GAAG,iBAAiB,CAAC,OAAQ,CAAC;QAEhD,IAAM,SAAS,GAAc;YACzB,WAAW,EAAE,UAAA,KAAK,IAAI,OAAA,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAzE,CAAyE;SAClG,CAAA;QAED,IAAM,IAAI,GAAG,eAAe,CAAC,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,mBAAY,CAAC;YACvE,IAAI,EAAE,SAAS;YACf,SAAS,EAAE,SAAS;YACpB,YAAY,EAAE,YAAY;YAC1B,iBAAiB,EAAE,iBAAiB;YAEpC,YAAY,EAAE,YAAY;YAC1B,iBAAiB,EAAE,UAAA,UAAU,IAAI,OAAA,QAAQ,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAtC,CAAsC;SAC1E,CAAC,CAAC,CAAC;QAEJ,OAAO;YACH,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC;IAEN,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,cAAc,GAAG,UAAC,IAAsB,IAAK,OAAA,CAC/C,uCACI,SAAS,EAAG,+BAA6B,IAAM,EAC/C,IAAI,EAAC,cAAc,EACnB,QAAQ,EAAG,QAAQ,EACnB,GAAG,EAAG,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,GACtD,CACV,EAPkD,CAOlD,CAAA;IACD,OAAO,CACH;QACK,cAAc,CAAC,KAAK,CAAC;QACpB,QAAQ;QACT,cAAc,CAAC,QAAQ,CAAC,CAC1B,CACN,CAAA;AACL,CAAC,CAAC;AAEF,IAAM,YAAY,GAAG,kBAAU,CAAC,eAAe,CAAC,CAAC;AAEjD,kBAAe,YAAI,CAAC,YAAY,CAAC,CAAC","file":"tabGuardComp.js","sourcesContent":["import React, { useRef, useEffect, useState, forwardRef, useImperativeHandle, RefForwardingComponent, memo, useContext } from 'react';\n\nimport {\n    Context, TabGuardCtrl, ITabGuard, GridCtrl\n} from '@ag-grid-community/core';\nimport { BeansContext } from './beansContext';\n\nexport interface TabGuardCompCallback {\n    forceFocusOutOfContainer(): void;\n}\n\ninterface TabGuardProps {\n    children: React.ReactNode,\n    eFocusableElement: HTMLDivElement,\n    onTabKeyDown: (e: KeyboardEvent) => void,\n    gridCtrl: GridCtrl,\n}\n\nconst TabGuardCompRef: RefForwardingComponent<TabGuardCompCallback, TabGuardProps> = (props, forwardRef) => {\n\n    const { children, eFocusableElement, onTabKeyDown, gridCtrl } = props;\n    const { context } = useContext(BeansContext);\n\n    const topTabGuardRef = useRef<HTMLDivElement>(null);\n    const bottomTabGuardRef = useRef<HTMLDivElement>(null);\n    const tabGuardCtrlRef = useRef<TabGuardCtrl>();\n    const [tabIndex, setTabIndex] = useState<number>();\n\n    useImperativeHandle(forwardRef, () => ({\n        forceFocusOutOfContainer() {\n            tabGuardCtrlRef.current!.forceFocusOutOfContainer();\n        }\n    }));\n\n    useEffect(() => {\n        const eTopGuard = topTabGuardRef.current!;\n        const eBottomGuard = bottomTabGuardRef.current!;\n\n        const compProxy: ITabGuard = {\n            setTabIndex: value => value == null ? setTabIndex(undefined) : setTabIndex(parseInt(value, 10))\n        }\n\n        const ctrl = tabGuardCtrlRef.current = context.createBean(new TabGuardCtrl({\n            comp: compProxy,\n            eTopGuard: eTopGuard,\n            eBottomGuard: eBottomGuard,\n            eFocusableElement: eFocusableElement,\n            \n            onTabKeyDown: onTabKeyDown,\n            focusInnerElement: fromBottom => gridCtrl.focusInnerElement(fromBottom)\n        }));\n\n        return () => {\n            context.destroyBean(ctrl);\n        };\n\n    }, []);\n\n    const createTabGuard = (side: 'top' | 'bottom') => (\n        <div \n            className={ `ag-tab-guard ag-tab-guard-${side}` }\n            role=\"presentation\"\n            tabIndex={ tabIndex }\n            ref={ side === 'top' ? topTabGuardRef : bottomTabGuardRef }\n        ></div>\n    )\n    return (\n        <>\n            {createTabGuard('top')}\n            { children }\n            {createTabGuard('bottom')}\n        </>\n    )\n};\n\nconst TabGuardComp = forwardRef(TabGuardCompRef);\n\nexport default memo(TabGuardComp);\n"]}