{"version":3,"sources":["reactUi/gridBodyComp.tsx"],"names":[],"mappings":"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","file":"gridBodyComp.js","sourcesContent":["import {\n    GridBodyCtrl,\n    IGridBodyComp, RowContainerName\n} from '@ag-grid-community/core';\nimport React, { memo, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from './beansContext';\nimport GridHeaderComp from './header/gridHeaderComp';\nimport useReactCommentEffect from './reactComment';\nimport RowContainerComp from './rows/rowContainerComp';\nimport { classesList } from './utils';\n\ninterface SectionProperties {\n    section: React.RefObject<HTMLDivElement>;\n    className: string;\n    style?: React.CSSProperties;\n    unselectable?: 'on';\n}\n\nconst GridBodyComp = () => {\n\n    const {context, agStackComponentsRegistry, resizeObserverService} = useContext(BeansContext);\n\n    const [rowAnimationClass, setRowAnimationClass] = useState<string>('');\n    const [ariaColCount, setAriaColCount] = useState<number>(0);\n    const [ariaRowCount, setAriaRowCount] = useState<number>(0);\n    const [topHeight, setTopHeight] = useState<number>(0);\n    const [bottomHeight, setBottomHeight] = useState<number>(0);\n    const [topDisplay, setTopDisplay] = useState<string>('');\n    const [bottomDisplay, setBottomDisplay] = useState<string>('');\n    const [movingCss, setMovingCss] = useState<string | null>(null);\n    const [layoutClass, setLayoutClass] = useState<string>('');\n    const [forceVerticalScrollClass, setForceVerticalScrollClass] = useState<string | null>(null);\n    const [topAndBottomOverflowY, setTopAndBottomOverflowY] = useState<string>('');\n    const [cellSelectableCss, setCellSelectableCss] = useState<string | null>(null);\n\n    const eRoot = useRef<HTMLDivElement>(null);\n    const eTop = useRef<HTMLDivElement>(null);\n    const eBodyViewport = useRef<HTMLDivElement>(null);\n    const eBottom = useRef<HTMLDivElement>(null);\n\n    useReactCommentEffect(' AG Grid Body ', eRoot);\n    useReactCommentEffect(' AG Pinned Top ', eTop);\n    useReactCommentEffect(' AG Middle ', eBodyViewport);\n    useReactCommentEffect(' AG Pinned Bottom ', eBottom);\n\n    useEffect(() => {\n        const beansToDestroy: any[] = [];\n        const destroyFuncs: (() => void)[] = [];\n\n        if (!context) { return; }\n\n        const newComp = (tag: string) => {\n            const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n            const comp = context.createBean(new CompClass());\n            beansToDestroy.push(comp);\n            return comp;\n        };\n\n        eRoot.current!.appendChild(document.createComment(' AG Fake Horizontal Scroll '));\n        eRoot.current!.appendChild(newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n\n        eRoot.current!.appendChild(document.createComment(' AG Overlay Wrapper '));\n        eRoot.current!.appendChild(newComp('AG-OVERLAY-WRAPPER').getGui());\n\n        const compProxy: IGridBodyComp = {\n            setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n            setColumnCount: setAriaColCount,\n            setRowCount: setAriaRowCount,\n            setTopHeight: setTopHeight,\n            setBottomHeight: setBottomHeight,\n            setTopDisplay: setTopDisplay,\n            setBottomDisplay: setBottomDisplay,\n            setColumnMovingCss: setMovingCss,\n            updateLayoutClasses: setLayoutClass,\n            setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n            setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n            setCellSelectableCss: setCellSelectableCss,\n\n            registerBodyViewportResizeListener: listener => {\n                const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport.current!, listener);\n                destroyFuncs.push(() => unsubscribeFromResize());\n            }\n        };\n\n        const ctrl = context.createBean(new GridBodyCtrl());\n        beansToDestroy.push(ctrl);\n        ctrl.setComp(compProxy, eRoot.current!, eBodyViewport.current!, eTop.current!, eBottom.current!);\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n            destroyFuncs.forEach(f => f());\n        };\n\n    }, []);\n\n    const rootClasses = useMemo( ()=> \n        classesList('ag-root','ag-unselectable', movingCss, layoutClass), \n        [movingCss, layoutClass]\n    );\n    const bodyViewportClasses = useMemo( ()=> \n        classesList('ag-body-viewport', rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss), \n        [rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss]\n    );\n    const topClasses = useMemo( ()=> \n        classesList('ag-floating-top', cellSelectableCss), \n        [cellSelectableCss]\n    );\n    const bottomClasses = useMemo( ()=> \n        classesList('ag-floating-bottom', cellSelectableCss), \n        [cellSelectableCss]\n    );\n\n    const topStyle: React.CSSProperties = useMemo( () => ({\n        height: topHeight,\n        minHeight: topHeight,\n        display: topDisplay,\n        overflowY: (topAndBottomOverflowY as any)\n    }), [topHeight, topDisplay, topAndBottomOverflowY]);\n\n    const bottomStyle: React.CSSProperties = useMemo( ()=> ({\n        height: bottomHeight,\n        minHeight: bottomHeight,\n        display: bottomDisplay,\n        overflowY: (topAndBottomOverflowY as any)\n    }), [bottomHeight, bottomDisplay, topAndBottomOverflowY]);\n\n    const createRowContainer = (container: RowContainerName) => <RowContainerComp name={ container } key={`${container}-container`} />;\n    const createSection = ({\n        section, \n        children,\n        className, \n        style,\n        unselectable\n    }: SectionProperties & { children: RowContainerName[] } ) => (\n        <div ref={ section } className={ className } role=\"presentation\" style={ style } unselectable={unselectable}>\n            { children.map(createRowContainer) }\n        </div>\n    );\n\n    return (\n        <div ref={ eRoot } className={ rootClasses } role=\"grid\" unselectable=\"on\" aria-colcount={ ariaColCount } aria-rowcount={ ariaRowCount }>\n            <GridHeaderComp/>\n            { createSection({ section: eTop, className: topClasses, style: topStyle, unselectable: 'on', children: [\n                RowContainerName.TOP_LEFT,\n                RowContainerName.TOP_CENTER,\n                RowContainerName.TOP_RIGHT,\n                RowContainerName.TOP_FULL_WITH,\n            ]}) }\n            { createSection({ section: eBodyViewport, className: bodyViewportClasses, children: [\n                RowContainerName.LEFT,\n                RowContainerName.CENTER,\n                RowContainerName.RIGHT,\n                RowContainerName.FULL_WIDTH,\n            ]}) }\n            { createSection({ section: eBottom, className: bottomClasses, style: bottomStyle, unselectable: 'on', children: [\n                RowContainerName.BOTTOM_LEFT,\n                RowContainerName.BOTTOM_CENTER,\n                RowContainerName.BOTTOM_RIGHT,\n                RowContainerName.BOTTOM_FULL_WITH,\n            ]}) }\n        </div>\n    );\n};\n\nexport default memo(GridBodyComp);\n"]}