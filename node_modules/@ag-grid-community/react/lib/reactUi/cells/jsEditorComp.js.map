{"version":3,"sources":["reactUi/cells/jsEditorComp.tsx"],"names":[],"mappings":";;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAsCE","file":"jsEditorComp.js","sourcesContent":["import { CellCtrl, ICellEditor, ICellEditorComp, UserCompDetails } from '@ag-grid-community/core';\nimport React, { useEffect, memo, useContext } from 'react';\nimport { createJsComp } from '../jsComp';\nimport { BeansContext } from '../beansContext';\n\n/*\nconst JsEditorComp = (props: {setCellEditorRef: (cellEditor: ICellEditor | undefined)=>void, \n    compDetails: UserCompDetails, eParentElement: HTMLElement}) => {\n\n    const {context} = useContext(BeansContext);\n\n    useEffect(() => {\n\n        const {compDetails, eParentElement, setCellEditorRef} = props;\n\n        const cellEditor = createJsComp(context, factory => factory.createCellEditor(compDetails) ) as ICellEditorComp;\n        if (!cellEditor) { return; }\n\n        const compGui = cellEditor.getGui();\n\n        if (compGui) {\n            eParentElement.appendChild(cellEditor.getGui());\n        }\n\n        setCellEditorRef(cellEditor);\n\n        cellEditor.afterGuiAttached && cellEditor.afterGuiAttached();\n\n        return () => {\n            context.destroyBean(cellEditor);\n            setCellEditorRef(undefined);\n            if (compGui && compGui.parentElement) {\n                compGui.parentElement.removeChild(compGui);\n            }\n        };\n    }, []);\n\n    return (\n        <></>\n    );\n};\n\nexport default memo(JsEditorComp);\n*/"]}