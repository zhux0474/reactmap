{"version":3,"sources":["reactUi/cells/cellComp.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA8I;AAC9I,6CAAqH;AACrH,kCAA4D;AAC5D,sEAAgD;AAChD,oEAAiD;AACjD,gDAA+C;AAC/C,oCAAyC;AAEzC,IAAY,aAAsC;AAAlD,WAAY,aAAa;IAAG,2DAAS,CAAA;IAAE,2DAAS,CAAA;AAAC,CAAC,EAAtC,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAAyB;AAElD,IAAM,2BAA2B,GAAG,UAAC,KAAc,EAAE,UAAuB,EAAE,QAAkB;IAE5F,IAAM,GAAG,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;IAEjC,wFAAwF;IACxF,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE;QACtD,IAAM,KAAG,GAAG,uCAAqC,GAAG,CAAC,QAAQ,EAAE,uFAAoF,CAAC;QACpJ,QAAC,CAAC,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,IAAI,CAAC,KAAG,CAAC,EAAjB,CAAiB,EAAE,uBAAuB,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;KAChG;IAED,4EAA4E;IAC5E,IAAI,KAAK,IAAI,UAAU,CAAC,gBAAgB,IAAI,UAAU,CAAC,gBAAgB,EAAE,IAAE,IAAI,EAAE;QAC7E,IAAM,KAAG,GAAG,gDAA8C,GAAG,CAAC,QAAQ,EAAE,sGAAmG,CAAC;QAC5K,QAAC,CAAC,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,IAAI,CAAC,KAAG,CAAC,EAAjB,CAAiB,EAAE,gCAAgC,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;KACzG;AACL,CAAC,CAAA;AAED,IAAM,YAAY,GAAG,UACb,WAAwB,EACxB,sBAAmE,EACnE,qBAAkE,EAClE,IAAiB,EACjB,QAAkB,EAClB,YAAyC;IAE7C,IAAM,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;IAC5C,IAAM,eAAe,GAAG,WAAW,CAAC,cAAc,CAAC;IAEnD,IAAM,iBAAiB,GAAG,WAAW,CAAC,sBAAsB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IACnF,IAAM,gBAAgB,GAAG,WAAW,CAAC,sBAAsB,IAAI,WAAW,CAAC,KAAK,CAAC;IACjF,IAAM,aAAa,GAAG,CAAC,WAAW,CAAC,sBAAsB,IAAI,WAAW,CAAC,KAAK,CAAC;IAE/E,OAAO,CACH;QAGQ,iBAAiB;eACd,8BAAC,eAAe,eAAM,WAAW,CAAC,WAAW,CAAC,MAAM,IAAG,GAAG,EAAG,sBAAsB,IAAI;QAI1F,gBAAgB;eACb,8BAAC,yBAAe,IAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EACvE,cAAc,EACV,8BAAC,eAAe,eAAM,WAAW,CAAC,WAAW,CAAC,MAAM,IAAG,GAAG,EAAG,qBAAqB,IAAI,GACvF;QAIf,aAAa,IAAI,YAAY,IAAI,8BAAC,yBAAe,IAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAClF,WAAW,EAAE,IAAI,EAAE,WAAW,EAAG,YAAY,GAAK,CAEnE,CACN,CAAA;AACL,CAAC,CAAA;AAED,IAAM,YAAY,GAAG,UACjB,WAA0B,EAC1B,QAAgB,EAChB,eAAsC,EACtC,SAAkB,EAClB,YAA8B,EAC9B,0BAAmC,EACnC,gBAAmC,EACnC,qBAAwC;IAEjC,IAAA,qCAAW,EAAE,yBAAK,CAAgB;IAEzC,IAAM,cAAc,GAAG,CAAC,WAAW,CAAC;IACpC,IAAM,iBAAiB,GAAG,WAAW,IAAI,WAAW,CAAC,sBAAsB,CAAC;IAE5E,IAAM,iBAAiB,GAAG,WAAW,IAAI,WAAW,CAAC,cAAc,CAAC;IAEpE,IAAM,WAAW,GAAG,cAAM,OAAA,CACtB;QACM,cAAc,IAAI,8DAAI,KAAK,CAAK;QAChC,iBAAiB,IAAI,CAAC,0BAA0B,IAAI,8BAAC,iBAAiB,eAAM,WAAY,CAAC,MAAM,IAAG,GAAG,EAAG,eAAe,IAAI;QAC3H,iBAAiB,IAAI,0BAA0B,IAAI,8BAAC,iBAAiB,eAAM,WAAY,CAAC,MAAM,EAAI,CACrG,CACN,EANyB,CAMzB,CAAC;IAEF,OAAO,CACH,8DACM,SAAS,CAAC,CAAC;QACT,uCAAK,SAAS,EAAC,iBAAiB,EAAC,IAAI,EAAC,cAAc,EAAC,GAAG,EAAG,gBAAgB;YACvE,wCAAM,IAAI,EAAC,cAAc,EAAC,EAAE,EAAE,UAAQ,QAAU,EAAE,SAAS,EAAC,eAAe,EAAC,YAAY,EAAG,YAAY,EAAG,GAAG,EAAG,qBAAqB,IAC/H,WAAW,EAAE,CACZ,CACL,CAAC,CAAC;QACR,WAAW,EAAE,CAElB,CACN,CAAC;AACN,CAAC,CAAA;AAaD,IAAM,QAAQ,GAAG,UAAC,KAIjB;IAEU,IAAA,iEAAO,CAA6B;IAEnC,IAAA,yBAAQ,EAAE,+BAAW,EAAE,6BAAU,CAAW;IAE9C,IAAA,uBAA8D,EAA7D,qBAAa,EAAE,wBAA8C,CAAC;IAC/D,IAAA,uBAAwD,EAAvD,mBAAW,EAAE,sBAA0C,CAAC;IAEzD,IAAA,+CAAoE,EAAnE,kBAAU,EAAE,qBAAuD,CAAC;IACrE,IAAA,uBAA6C,EAA5C,kBAAU,EAAE,qBAAgC,CAAC;IAC9C,IAAA,2BAAkE,EAAjE,oBAAY,EAAE,uBAAmD,CAAC;IACnE,IAAA,uBAAgD,EAA/C,YAAI,EAAE,eAAyC,CAAC;IACjD,IAAA,uBAAkD,EAAjD,aAAK,EAAE,gBAA0C,CAAC;IACnD,IAAA,uBAAoD,EAAnD,cAAM,EAAE,iBAA2C,CAAC;IACrD,IAAA,uBAA4D,EAA3D,kBAAU,EAAE,qBAA+C,CAAC;IAC7D,IAAA,uBAA4C,EAA3C,gBAAQ,EAAE,mBAAiC,CAAC;IAC7C,IAAA,uBAAiE,EAAhE,oBAAY,EAAE,uBAAkD,CAAC;IAClE,IAAA,uBAAiE,EAAhE,oBAAY,EAAE,uBAAkD,CAAC;IAClE,IAAA,uBAAoD,EAAnD,oBAAY,EAAE,uBAAqC,CAAC;IACrD,IAAA,uBAAsE,EAArE,uBAAe,EAAE,0BAAoD,CAAC;IACvE,IAAA,uBAAwC,EAAvC,cAAM,EAAE,iBAA+B,CAAC;IACzC,IAAA,uBAAoC,EAAnC,YAAI,EAAE,eAA6B,CAAC;IACrC,IAAA,uBAAsC,EAArC,aAAK,EAAE,gBAA8B,CAAC;IACvC,IAAA,uBAAkD,EAAjD,aAAK,EAAE,gBAA0C,CAAC;IACnD,IAAA,4BAAkE,EAAjE,wBAAgB,EAAE,2BAA+C,CAAC;IACnE,IAAA,4BAA8D,EAA7D,sBAAc,EAAE,yBAA6C,CAAC;IAC/D,IAAA,4BAAkE,EAAjE,wBAAgB,EAAE,2BAA+C,CAAC;IACnE,IAAA,4BAA0D,EAAzD,oBAAY,EAAE,uBAA2C,CAAC;IAE3D,IAAA,uBAA6D,EAA5D,oBAAY,EAAE,uBAA8C,CAAC;IAEpE,IAAM,IAAI,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IAC1C,IAAM,eAAe,GAAG,cAAM,CAAM,IAAI,CAAC,CAAC;IAC1C,IAAM,iBAAiB,GAAG,cAAM,EAAqB,CAAC;IACtD,IAAM,aAAa,GAAG,cAAM,EAAe,CAAC;IAEtC,IAAA,uBAAmD,EAAlD,iBAAS,EAAE,oBAAuC,CAAC;IACpD,IAAA,uBAA6D,EAA5D,sBAAc,EAAE,yBAA4C,CAAC;IAEpE,IAAM,SAAS,GAAG,aAAa,IAAE,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,IAAI,cAAc,IAAI,YAAY,CAAC,CAAC;IAElH,IAAM,gBAAgB,GAAG,mBAAW,CAAE,UAAC,KAAc,EAAE,UAAmC;QACtF,aAAa,CAAC,OAAO,GAAG,UAAU,CAAC;QACnC,IAAI,UAAU,EAAE;YACZ,2BAA2B,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;YACzD,IAAM,0BAA0B,GAAG,UAAU,CAAC,mBAAmB,IAAI,UAAU,CAAC,mBAAmB,EAAE,CAAC;YACtG,IAAI,0BAA0B,EAAE;gBAC5B,yEAAyE;gBACzE,UAAU,CAAE,cAAK,OAAA,QAAQ,CAAC,WAAW,EAAE,EAAtB,CAAsB,EAAE,CAAC,CAAC,CAAC;aAC/C;SACJ;IACL,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,qBAAqB,GAAG,mBAAW,CACrC,UAAC,YAAqC,IAAK,OAAA,gBAAgB,CAAC,IAAI,EAAE,YAAY,CAAC,EAApC,CAAoC,EAC/E,EAAE,CACL,CAAC;IAEF,IAAM,sBAAsB,GAAG,mBAAW,CACtC,UAAC,YAAqC,IAAK,OAAA,gBAAgB,CAAC,KAAK,EAAE,YAAY,CAAC,EAArC,CAAqC,EAChF,EAAE,CACL,CAAC;IAEF,wBAAiB,CAAC,aAAa,EAAE,SAAS,EAAE,cAAc,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAErF,iBAAS,CAAC;QACN,IAAM,aAAa,GAAG,WAAW,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,sBAAsB,CAAC;QACrF,IAAI,CAAC,aAAa,EAAE;YAAE,OAAO;SAAE;QAE/B,IAAM,WAAW,GAAG,WAAY,CAAC,WAAW,CAAC;QAC7C,IAAM,OAAO,GAAG,WAAY,CAAC,KAAK,KAAG,IAAI,CAAC;QAE1C,IAAM,UAAU,GAAG,qBAAY,CAAC,WAAW,CAAoB,CAAC;QAChE,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;SAAE;QAE5B,IAAM,OAAO,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;QAEpC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEtC,IAAI,CAAC,OAAO,EAAE;YACV,IAAI,CAAC,OAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACnC,UAAU,CAAC,gBAAgB,IAAI,UAAU,CAAC,gBAAgB,EAAE,CAAC;SAChE;QAED,eAAe,CAAC,UAAU,CAAC,CAAC;QAE5B,OAAO;YACH,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAChC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YACrC,eAAe,CAAC,SAAS,CAAC,CAAC;YAC3B,IAAI,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE;gBAClC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aAC9C;QACL,CAAC,CAAC;IACN,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;IAElB,sBAAsB;IACtB,iBAAS,CAAC;QACN,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,EAAE;YAAE,OAAO;SAAE;QAEtC,kBAAkB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAQ,QAAQ,CAAC,aAAa,EAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAEjF,IAAI,CAAC,SAAS,EAAE;YAAE,OAAO;SAAE;QAE3B,IAAM,cAAc,GAAU,EAAE,CAAC;QAEjC,IAAM,OAAO,GAAG,UAAC,IAA2B;YACxC,IAAI,IAAI,EAAE;gBACN,SAAS,CAAC,qBAAqB,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC7D,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC7B;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAA;QAED,IAAI,gBAAgB,EAAE;YAClB,OAAO,CAAC,QAAQ,CAAC,uBAAuB,EAAE,CAAC,CAAC;SAC/C;QAED,IAAI,gBAAgB,EAAE;YAClB,OAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC;SACvC;QAED,IAAI,cAAc,EAAE;YAChB,OAAO,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,CAAC;SACzC;QAED,OAAO;YACH,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACzC,CAAC,CAAC;IAEN,CAAC,EAAE,CAAC,gBAAgB,EAAE,cAAc,EAAE,gBAAgB,EAAE,SAAS,CAAC,CAAC,CAAC;IAEpE,mFAAmF;IACnF,sFAAsF;IACtF,qFAAqF;IACrF,IAAM,gBAAgB,GAAG,mBAAW,CAAC,UAAA,GAAG,IAAI,OAAA,YAAY,CAAC,GAAG,CAAC,EAAjB,CAAiB,EAAE,EAAE,CAAC,CAAC;IACnE,IAAM,qBAAqB,GAAG,mBAAW,CAAC,UAAA,GAAG,IAAI,OAAA,iBAAiB,CAAC,GAAG,CAAC,EAAtB,CAAsB,EAAE,EAAE,CAAC,CAAC;IAE7E,iBAAS,CAAC;QACN,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO;SAAE;QAE1B,IAAM,SAAS,GAAc;YACzB,mBAAmB,EAAE,UAAC,IAAI,EAAE,EAAE,IAAK,OAAA,aAAa,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,EAA9C,CAA8C;YACjF,aAAa,EAAE,UAAA,MAAM,IAAI,OAAA,aAAa,CAAC,MAAM,CAAC,EAArB,CAAqB;YAC9C,eAAe,EAAE,UAAA,KAAK,IAAI,OAAA,eAAe,CAAC,KAAK,CAAC,EAAtB,CAAsB;YAChD,eAAe,EAAE,UAAA,KAAK,IAAI,OAAA,eAAe,CAAC,KAAK,CAAC,EAAtB,CAAsB;YAChD,mBAAmB,EAAE,cAAM,OAAA,IAAI,CAAC,OAAQ,EAAb,CAAa;YACxC,OAAO,EAAE,UAAA,IAAI,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,EAAb,CAAa;YAC9B,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,KAAK,CAAC,EAAf,CAAe;YAClC,eAAe,EAAE,UAAA,KAAK,IAAI,OAAA,eAAe,CAAC,KAAK,CAAC,EAAtB,CAAsB;YAChD,SAAS,EAAE,UAAA,MAAM,IAAI,OAAA,SAAS,CAAC,MAAM,CAAC,EAAjB,CAAiB;YACtC,SAAS,EAAE,UAAA,MAAM,IAAI,OAAA,SAAS,CAAC,MAAM,CAAC,EAAjB,CAAiB;YACtC,WAAW,EAAE,UAAA,QAAQ,IAAI,OAAA,WAAW,CAAC,QAAQ,CAAC,EAArB,CAAqB;YAC9C,OAAO,EAAE,UAAA,IAAI,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,EAAb,CAAa;YAC9B,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,KAAK,CAAC,EAAf,CAAe;YAClC,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,KAAK,CAAC,EAAf,CAAe;YAClC,eAAe,EAAE,UAAA,KAAK,IAAI,OAAA,eAAe,CAAC,KAAK,IAAI,SAAS,CAAC,EAAnC,CAAmC;YAC7D,aAAa,EAAE,UAAA,UAAU,IAAI,OAAA,aAAa,CAAC,UAAU,CAAC,EAAzB,CAAyB;YACtD,mBAAmB,EAAE,UAAA,OAAO,IAAI,OAAA,mBAAmB,CAAC,OAAO,CAAC,EAA5B,CAA4B;YAC5D,iBAAiB,EAAE,UAAA,OAAO,IAAI,OAAA,iBAAiB,CAAC,OAAO,CAAC,EAA1B,CAA0B;YACxD,mBAAmB,EAAE,UAAA,OAAO,IAAI,OAAA,mBAAmB,CAAC,OAAO,CAAC,EAA5B,CAA4B;YAC5D,eAAe,EAAE,UAAA,KAAK,IAAI,OAAA,eAAe,CAAC,KAAK,CAAC,EAAtB,CAAsB;YAEhD,aAAa,EAAE,cAAM,OAAA,aAAa,CAAC,OAAO,IAAI,IAAI,EAA7B,CAA6B;YAClD,eAAe,EAAE,cAAM,OAAA,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,EAA7E,CAA6E;YACpG,gBAAgB,EAAE,cAAM,OAAA,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAA9C,CAA8C;YAEtE,gBAAgB,EAAE,UAAC,WAAW,EAAE,KAAK,EAAE,KAAK;gBACxC,gBAAgB,CAAC;oBACb,KAAK,OAAA;oBACL,WAAW,aAAA;oBACX,KAAK,OAAA;iBACR,CAAC,CAAC;YACP,CAAC;YAED,cAAc,EAAE,UAAC,WAAW,EAAE,KAAK,EAAE,aAAa;gBAC9C,IAAI,WAAW,EAAE;oBACb,gBAAgB;oBAChB,cAAc,CAAC;wBACX,WAAW,EAAE,WAAY;wBACzB,KAAK,OAAA;wBACL,aAAa,eAAA;qBAChB,CAAC,CAAC;oBACH,IAAI,CAAC,KAAK,EAAE;wBACR,gBAAgB,CAAC,SAAS,CAAC,CAAC;qBAC/B;iBACJ;qBAAM;oBACH,eAAe;oBACf,cAAc,CAAC,SAAS,CAAC,CAAC;iBAC7B;YACL,CAAC;SACJ,CAAC;QAEF,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,OAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;IAE9E,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,0BAA0B,GAAG,eAAO,CAAE;QACxC,IAAM,GAAG,GAAG,aAAa,IAAI,aAAa,CAAC,WAAW;eACvC,aAAa,CAAC,WAAW,CAAC,sBAAsB;eAChD,4BAAoB,CAAC,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC9E,OAAO,CAAC,CAAC,GAAG,CAAC;IACjB,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAEpB,IAAM,SAAS,GAAG,eAAO,CAAE;QACvB,IAAI,GAAG,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,EAAE;YACZ,GAAG,IAAI,gBAAgB,CAAC;SAC3B;QACD,OAAO,GAAG,CAAC;IACf,CAAC,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;IAE5B,IAAM,UAAU,GAAG,eAAO,CAAE;QACxB,IAAM,GAAG,GAAwB;YAC7B,IAAI,MAAA;YACJ,KAAK,OAAA;YACL,MAAM,QAAA;YACN,UAAU,YAAA;YACV,MAAM,EAAG,MAAc;SAC1B,CAAC;QACF,QAAC,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;QAC1B,OAAO,GAAG,CAAC;IACf,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;IAE1D,IAAM,cAAc,GAAG,eAAO,CAAE,cAAK,OAAA,QAAQ,CAAC,aAAa,EAAE,EAAxB,CAAwB,EAAE,EAAE,CAAC,CAAC;IAEnE,OAAO,CACH,uCAAK,GAAG,EAAG,IAAI,EAAG,SAAS,EAAG,SAAS,EAAG,KAAK,EAAG,UAAU,EAAG,QAAQ,EAAG,QAAQ,mBAC7D,YAAY,mBAAmB,YAAY,EAAG,IAAI,EAAG,IAAI,mBACzD,YAAY,YAAY,KAAK,EAAG,KAAK,EAAG,KAAK,EAC7D,YAAY,EAAG,YAAY,sBAAsB,eAAe;QAE/D,aAAa,IAAI,IAAI,IAAI,YAAY,CAAC,aAAa,EAAE,cAAc,EAAE,eAAe,EAClD,SAAS,EAAE,YAAY,EAAE,0BAA0B,EACnD,gBAAgB,EAAE,qBAAqB,CAAC;QAC1E,WAAW,IAAI,IAAI,IAAI,YAAY,CAAC,WAAW,EAAE,sBAAsB,EAAE,qBAAqB,EAAE,IAAI,CAAC,OAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC,CAEtI,CACT,CAAC;AACN,CAAC,CAAA;AAED,kBAAe,YAAI,CAAC,QAAQ,CAAC,CAAC","file":"cellComp.js","sourcesContent":["import { CellCtrl, Component, ICellComp, ICellEditor, ICellRendererComp, UserCompDetails, _, ICellEditorComp } from '@ag-grid-community/core';\nimport React, { MutableRefObject, useCallback, useEffect, useRef, useState, useMemo, memo, useContext } from 'react';\nimport { CssClasses, isComponentStateless } from '../utils';\nimport PopupEditorComp from './popupEditorComp';\nimport useJsCellRenderer from './showJsRenderer';\nimport { BeansContext } from '../beansContext';\nimport { createJsComp } from '../jsComp';\n\nexport enum CellCompState { ShowValue, EditValue }\n\nconst checkCellEditorDeprecations = (popup: boolean, cellEditor: ICellEditor, cellCtrl: CellCtrl) => {\n\n    const col = cellCtrl.getColumn();\n\n    // cellEditor is written to be a popup editor, however colDef.cellEditorPopup is not set\n    if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using ReactUI, specify an editor is a popup using colDef.cellEditorPopup=true`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-isPopup-' + cellCtrl.getColumn().getColId());\n    }\n\n    // cellEditor is a popup and is trying to position itself the deprecated way\n    if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition()!=null) {\n        const msg = `AG Grid: AG Grid: Found an issue in column ${col.getColId()}. If using ReactUI, specify an editor popup position using colDef.cellEditorPopupPosition=[value]`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-getPopupPosition-' + cellCtrl.getColumn().getColId());\n    }\n}\n\nconst jsxEditValue = (\n        editDetails: EditDetails, \n        setInlineCellEditorRef: (cellEditor: ICellEditor | undefined)=>void,\n        setPopupCellEditorRef: (cellEditor: ICellEditor | undefined)=>void,\n        eGui: HTMLElement, \n        cellCtrl: CellCtrl,\n        jsEditorComp: ICellEditorComp | undefined ) => {\n\n    const compDetails = editDetails.compDetails;\n    const CellEditorClass = compDetails.componentClass;\n\n    const reactInlineEditor = compDetails.componentFromFramework && !editDetails.popup;\n    const reactPopupEditor = compDetails.componentFromFramework && editDetails.popup;\n    const jsPopupEditor = !compDetails.componentFromFramework && editDetails.popup;\n\n    return (\n        <>\n\n            { \n                reactInlineEditor \n                && <CellEditorClass { ...editDetails.compDetails.params } ref={ setInlineCellEditorRef }/> \n            }\n\n            { \n                reactPopupEditor \n                && <PopupEditorComp editDetails={editDetails} cellCtrl={cellCtrl} eParentCell={eGui}\n                            wrappedContent={ \n                                <CellEditorClass { ...editDetails.compDetails.params } ref={ setPopupCellEditorRef }/> \n                            }/> \n            }\n\n            { \n                jsPopupEditor && jsEditorComp && <PopupEditorComp editDetails={editDetails} cellCtrl={cellCtrl} \n                            eParentCell={eGui} jsChildComp={ jsEditorComp } /> \n            }\n        </>\n    )\n}\n\nconst jsxShowValue = (\n    showDetails: RenderDetails,\n    parentId: string,\n    cellRendererRef: MutableRefObject<any>,\n    showTools: boolean,\n    unSelectable: 'on' | undefined,\n    reactCellRendererStateless: boolean,\n    toolsRefCallback: (ref:any) => void,\n    toolsValueRefCallback: (ref:any) => void\n) => {\n    const {compDetails, value} = showDetails;\n\n    const noCellRenderer = !compDetails;\n    const reactCellRenderer = compDetails && compDetails.componentFromFramework;\n\n    const CellRendererClass = compDetails && compDetails.componentClass;\n\n    const bodyJsxFunc = () => (\n        <>\n            { noCellRenderer && <>{ value }</> }\n            { reactCellRenderer && !reactCellRendererStateless && <CellRendererClass { ...compDetails!.params } ref={ cellRendererRef }/> }\n            { reactCellRenderer && reactCellRendererStateless && <CellRendererClass { ...compDetails!.params }/> }\n        </>\n    );\n\n    return (\n        <>\n            { showTools ?\n                <div className=\"ag-cell-wrapper\" role=\"presentation\" ref={ toolsRefCallback }>\n                    <span role=\"presentation\" id={`cell-${parentId}`} className=\"ag-cell-value\" unselectable={ unSelectable } ref={ toolsValueRefCallback }>\n                        { bodyJsxFunc() }\n                    </span>\n                </div> :\n                bodyJsxFunc()\n            }\n        </>\n    );\n}\n\nexport interface RenderDetails {\n    compDetails: UserCompDetails | undefined;\n    value?: any;\n    force?: boolean;\n}\nexport interface EditDetails {\n    compDetails: UserCompDetails;\n    popup?: boolean;\n    popupPosition?: string;\n}\n\nconst CellComp = (props: {\n    cellCtrl: CellCtrl,\n    printLayout: boolean, \n    editingRow: boolean\n}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const { cellCtrl, printLayout, editingRow } = props;\n\n    const [renderDetails, setRenderDetails ] = useState<RenderDetails>();\n    const [editDetails, setEditDetails ] = useState<EditDetails>();\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses());\n    const [userStyles, setUserStyles] = useState<any>();\n    const [unselectable, setUnselectable] = useState<'on' | undefined>('on');\n    const [left, setLeft] = useState<string | undefined>();\n    const [width, setWidth] = useState<string | undefined>();\n    const [height, setHeight] = useState<string | undefined>();\n    const [transition, setTransition] = useState<string | undefined>();\n    const [tabIndex, setTabIndex] = useState<number>();\n    const [ariaSelected, setAriaSelected] = useState<boolean | undefined>();\n    const [ariaExpanded, setAriaExpanded] = useState<boolean | undefined>();\n    const [ariaColIndex, setAriaColIndex] = useState<number>();\n    const [ariaDescribedBy, setAriaDescribedBy] = useState<string | undefined>();\n    const [zIndex, setZIndex] = useState<string>();\n    const [role, setRole] = useState<string>();\n    const [colId, setColId] = useState<string>();\n    const [title, setTitle] = useState<string | undefined>();\n    const [includeSelection, setIncludeSelection] = useState<boolean>(false);\n    const [includeRowDrag, setIncludeRowDrag] = useState<boolean>(false);\n    const [includeDndSource, setIncludeDndSource] = useState<boolean>(false);\n    const [forceWrapper, setForceWrapper] = useState<boolean>(false);\n\n    const [jsEditorComp, setJsEditorComp] = useState<ICellEditorComp>();\n\n    const eGui = useRef<HTMLDivElement>(null);\n    const cellRendererRef = useRef<any>(null);\n    const jsCellRendererRef = useRef<ICellRendererComp>();\n    const cellEditorRef = useRef<ICellEditor>();\n\n    const [toolsSpan, setToolsSpan] = useState<HTMLElement>();\n    const [toolsValueSpan, setToolsValueSpan] = useState<HTMLElement>();\n    \n    const showTools = renderDetails!=null && (includeSelection || includeDndSource || includeRowDrag || forceWrapper);\n\n    const setCellEditorRef = useCallback( (popup: boolean, cellEditor: ICellEditor | undefined) => {\n        cellEditorRef.current = cellEditor;\n        if (cellEditor) {\n            checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n            const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n            if (editingCancelledByUserComp) {\n                // we cannot set state inside render, so hack is to do it in next VM turn\n                setTimeout( ()=> cellCtrl.stopEditing(), 0);\n            }\n        }\n    }, []);\n\n    const setPopupCellEditorRef = useCallback( \n        (cellRenderer: ICellEditor | undefined) => setCellEditorRef(true, cellRenderer),\n        []\n    );\n\n    const setInlineCellEditorRef = useCallback(\n        (cellRenderer: ICellEditor | undefined) => setCellEditorRef(false, cellRenderer), \n        []\n    );\n\n    useJsCellRenderer(renderDetails, showTools, toolsValueSpan, jsCellRendererRef, eGui);\n\n    useEffect(() => {\n        const doingJsEditor = editDetails && !editDetails.compDetails.componentFromFramework;\n        if (!doingJsEditor) { return; }\n\n        const compDetails = editDetails!.compDetails;\n        const isPopup = editDetails!.popup===true;\n    \n        const cellEditor = createJsComp(compDetails) as ICellEditorComp;\n        if (!cellEditor) { return; }\n\n        const compGui = cellEditor.getGui();\n\n        setCellEditorRef(isPopup, cellEditor);\n\n        if (!isPopup) {\n            eGui.current!.appendChild(compGui);\n            cellEditor.afterGuiAttached && cellEditor.afterGuiAttached();\n        }\n\n        setJsEditorComp(cellEditor);\n\n        return () => {\n            context.destroyBean(cellEditor);\n            setCellEditorRef(isPopup, undefined);\n            setJsEditorComp(undefined);\n            if (compGui && compGui.parentElement) {\n                compGui.parentElement.removeChild(compGui);\n            }\n        };\n    }, [editDetails]);\n\n    // tool widgets effect\n    useEffect(() => {\n        if (!cellCtrl || !context) { return; }\n\n        setAriaDescribedBy(!!toolsSpan ? `cell-${cellCtrl.getInstanceId()}` : undefined);\n\n        if (!toolsSpan) { return; }\n\n        const beansToDestroy: any[] = [];\n\n        const addComp = (comp: Component | undefined) => {\n            if (comp) {\n                toolsSpan.insertAdjacentElement('afterbegin', comp.getGui());\n                beansToDestroy.push(comp);\n            }\n            return comp;\n        }\n\n        if (includeSelection) {\n            addComp(cellCtrl.createSelectionCheckbox());\n        }\n\n        if (includeDndSource) {\n            addComp(cellCtrl.createDndSource());\n        }\n\n        if (includeRowDrag) {\n            addComp(cellCtrl.createRowDragComp());\n        }\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n        };\n\n    }, [includeDndSource, includeRowDrag, includeSelection, toolsSpan]);\n\n    // attaching the ref to state makes sure we render again when state is set. this is\n    // how we make sure the tools are added, as it's not possible to have an effect depend\n    // on a reference, as reference is not state, it doesn't create another render cycle.\n    const toolsRefCallback = useCallback(ref => setToolsSpan(ref), []);\n    const toolsValueRefCallback = useCallback(ref => setToolsValueSpan(ref), []);\n\n    useEffect(() => {\n        if (!cellCtrl) { return; }\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setUserStyles: styles => setUserStyles(styles),\n            setAriaSelected: value => setAriaSelected(value),\n            setAriaExpanded: value => setAriaExpanded(value),\n            getFocusableElement: () => eGui.current!,\n            setLeft: left => setLeft(left),\n            setWidth: width => setWidth(width),\n            setAriaColIndex: index => setAriaColIndex(index),\n            setHeight: height => setHeight(height),\n            setZIndex: zIndex => setZIndex(zIndex),\n            setTabIndex: tabIndex => setTabIndex(tabIndex),\n            setRole: role => setRole(role),\n            setColId: colId => setColId(colId),\n            setTitle: title => setTitle(title),\n            setUnselectable: value => setUnselectable(value || undefined),\n            setTransition: transition => setTransition(transition),\n            setIncludeSelection: include => setIncludeSelection(include),\n            setIncludeRowDrag: include => setIncludeRowDrag(include),\n            setIncludeDndSource: include => setIncludeDndSource(include),\n            setForceWrapper: force => setForceWrapper(force),\n            \n            getCellEditor: () => cellEditorRef.current || null,\n            getCellRenderer: () => cellRendererRef.current ? cellRendererRef.current : jsCellRendererRef.current,\n            getParentOfValue: () => toolsValueSpan ? toolsValueSpan : eGui.current,\n\n            setRenderDetails: (compDetails, value, force) => {\n                setRenderDetails({\n                    value,\n                    compDetails,\n                    force\n                });\n            },\n            \n            setEditDetails: (compDetails, popup, popupPosition) => {\n                if (compDetails) {\n                    // start editing\n                    setEditDetails({\n                        compDetails: compDetails!,\n                        popup,\n                        popupPosition\n                    });\n                    if (!popup) {\n                        setRenderDetails(undefined);\n                    }\n                } else {\n                    // stop editing\n                    setEditDetails(undefined);\n                }\n            }\n        };\n\n        cellCtrl.setComp(compProxy, null, eGui.current!, printLayout, editingRow);\n\n    }, []);\n\n    const reactCellRendererStateless = useMemo( ()=> {\n        const res = renderDetails && renderDetails.compDetails \n                    && renderDetails.compDetails.componentFromFramework \n                    && isComponentStateless(renderDetails.compDetails.componentClass);\n        return !!res;\n    }, [renderDetails]);\n\n    const className = useMemo( ()=> {\n        let res = cssClasses.toString();\n        if (!showTools) {\n            res += ' ag-cell-value';\n        }\n        return res;\n    }, [cssClasses, showTools]);\n\n    const cellStyles = useMemo( ()=> {\n        const res: React.CSSProperties = {\n            left,\n            width,\n            height,\n            transition,\n            zIndex: (zIndex as any)\n        };\n        _.assign(res, userStyles);\n        return res;\n    }, [left, width, height, transition, zIndex, userStyles]);\n\n    const cellInstanceId = useMemo( ()=> cellCtrl.getInstanceId(), []);\n\n    return (\n        <div ref={ eGui } className={ className } style={ cellStyles } tabIndex={ tabIndex }\n             aria-selected={ ariaSelected } aria-colindex={ ariaColIndex } role={ role }\n             aria-expanded={ ariaExpanded } col-id={ colId } title={ title } \n             unselectable={ unselectable } aria-describedby={ ariaDescribedBy }>\n\n            { renderDetails != null && jsxShowValue(renderDetails, cellInstanceId, cellRendererRef, \n                                                showTools, unselectable, reactCellRendererStateless,\n                                                toolsRefCallback, toolsValueRefCallback) }\n            { editDetails != null && jsxEditValue(editDetails, setInlineCellEditorRef, setPopupCellEditorRef, eGui.current!, cellCtrl, jsEditorComp) }\n\n        </div>\n    );\n}\n\nexport default memo(CellComp);\n"]}