{"version":3,"sources":["reactUi/rows/rowContainerComp.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,gDAAkH;AAClH,6CAAsF;AACtF,kCAAuC;AACvC,iEAAoD;AACpD,sDAAgC;AAChC,gDAA+C;AAE/C,IAAM,gBAAgB,GAAG,UAAC,MAAgC;IAE/C,IAAA,iEAAO,CAA6B;IAErC,IAAA,yBAA0D,EAAzD,sBAAc,EAAE,yBAAyC,CAAC;IAC3D,IAAA,yBAAiD,EAAhD,gBAAQ,EAAE,mBAAsC,CAAC;IAClD,IAAA,4BAAkD,EAAjD,gBAAQ,EAAE,mBAAuC,CAAC;IACnD,IAAA,yBAA0D,EAAzD,sBAAc,EAAE,yBAAyC,CAAC;IAEzD,IAAA,kBAAI,CAAY;IAExB,IAAM,MAAM,GAAG,eAAO,CAAC,cAAM,OAAA,uBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,EAAhC,CAAgC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAEvE,IAAM,QAAQ,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IAC9C,IAAM,SAAS,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IAC/C,IAAM,UAAU,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IAEhD,IAAM,UAAU,GAAG,eAAO,CAAC,cAAM,OAAA,uBAAgB,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAhD,CAAgD,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3F,IAAM,cAAc,GAAG,eAAO,CAAE,cAAK,OAAA,mBAAW,CAAC,UAAU,CAAC,OAAO,CAAC,EAA/B,CAA+B,EAAE,EAAE,CAAC,CAAC;IAC1E,IAAM,eAAe,GAAG,eAAO,CAAE,cAAK,OAAA,mBAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAhC,CAAgC,EAAE,EAAE,CAAC,CAAC;IAC5E,IAAM,gBAAgB,GAAG,eAAO,CAAE,cAAK,OAAA,mBAAW,CAAC,UAAU,CAAC,SAAS,CAAC,EAAjC,CAAiC,EAAE,EAAE,CAAC,CAAC;IAE9E,uCAAuC;IACvC,IAAM,SAAS,GAAG,IAAI,KAAK,uBAAgB,CAAC,MAAM,CAAC;IACnD,IAAM,SAAS,GAAG,IAAI,KAAK,uBAAgB,CAAC,UAAU,IAAI,IAAI,KAAK,uBAAgB,CAAC,aAAa,CAAC;IAClG,IAAM,SAAS,GAAG,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC;IAE3C,IAAM,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;IAE9E,sBAAqB,CAAC,oBAAoB,GAAG,IAAI,GAAG,GAAG,EAAE,WAAW,CAAC,CAAC;IAEtE,iBAAS,CAAC;QACN,IAAM,cAAc,GAAU,EAAE,CAAC;QAEjC,IAAM,SAAS,GAAsB;YACjC,iBAAiB,EAAE,iBAAiB;YACpC,WAAW,EAAE,UAAA,QAAQ;gBACjB,WAAW,CAAE,UAAA,IAAI;oBACb,IAAI,QAAQ,EAAE;wBACV,OAAO,QAAQ,CAAC;qBACnB;oBACD,gEAAgE;oBAChE,oEAAoE;oBACpE,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAxB,CAAwB,CAAC,CAAC;oBAC3D,IAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAtB,CAAsB,CAAC,CAAC;oBAC7D,IAAM,IAAI,kBAAO,OAAO,EAAK,OAAO,CAAC,CAAC;oBACtC,OAAO,IAAI,CAAC;gBAChB,CAAC,CAAC,CAAC;YACP,CAAC;YACD,WAAW,EAAE,UAAA,QAAQ,IAAI,OAAA,WAAW,CAAC,QAAQ,CAAC,EAArB,CAAqB;YAC9C,iBAAiB,EAAE,UAAA,KAAK,IAAI,OAAA,iBAAiB,CAAC,KAAK,CAAC,EAAxB,CAAwB;SACvD,CAAC;QAEF,IAAM,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,uBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,OAAQ,EAAE,SAAS,CAAC,OAAQ,EAAE,QAAQ,CAAC,OAAQ,CAAC,CAAC;QAEpF,OAAO;YACH,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACzC,CAAC,CAAC;IAEN,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,aAAa,GAAG,eAAO,CAAE,cAAK,OAAA,CAAC;QACjC,MAAM,EAAE,cAAc;KACzB,CAAC,EAFkC,CAElC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;IAEtB,IAAM,cAAc,GAAG,eAAO,CAAE,cAAK,OAAA,CAAC;QAClC,KAAK,EAAE,cAAc;KACxB,CAAC,EAFmC,CAEnC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;IAEtB,IAAM,cAAc,GAAG,cAAM,OAAA,CACzB,uCACI,SAAS,EAAG,gBAAgB,EAC5B,GAAG,EAAG,UAAU,EAChB,IAAI,EAAC,UAAU,EACf,KAAK,EAAG,cAAc,EACtB,YAAY,EAAC,IAAI,IAEb,QAAQ,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,8BAAC,iBAAO,IAAC,OAAO,EAAG,OAAO,EAAG,MAAM,EAAG,MAAM,EAAG,GAAG,EAAG,OAAO,CAAC,aAAa,EAAE,GAAa,EAAzF,CAAyF,CAAC,CAEpH,CACT,EAX4B,CAW5B,CAAC;IAEF,OAAO,CACH;QAEQ,SAAS;YACT,uCAAK,SAAS,EAAG,cAAc,EAAG,GAAG,EAAG,QAAQ,EAAG,IAAI,EAAC,cAAc,EAAC,YAAY,EAAC,IAAI;gBACpF,uCAAK,SAAS,EAAG,eAAe,EAAG,GAAG,EAAI,SAAS,EAAG,IAAI,EAAC,cAAc,EAAC,KAAK,EAAG,aAAa,IACzF,cAAc,EAAE,CAChB,CACJ;QAGN,SAAS;YACT,uCAAK,SAAS,EAAG,eAAe,EAAG,GAAG,EAAI,SAAS,EAAG,IAAI,EAAC,cAAc,EAAC,KAAK,EAAG,aAAa,IACzF,cAAc,EAAE,CAChB;QAGN,SAAS,IAAI,cAAc,EAAE,CAElC,CACN,CAAC;AACN,CAAC,CAAC;AAEF,kBAAe,YAAI,CAAC,gBAAgB,CAAC,CAAC","file":"rowContainerComp.js","sourcesContent":["import { Context, IRowContainerComp, RowContainerCtrl, RowContainerName, RowCtrl } from '@ag-grid-community/core';\nimport React, { useEffect, useMemo, useRef, useState, memo, useContext } from 'react';\nimport { classesList } from '../utils';\nimport useReactCommentEffect from '../reactComment';\nimport RowComp from './rowComp';\nimport { BeansContext } from '../beansContext';\n\nconst RowContainerComp = (params: {name: RowContainerName}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const [viewportHeight, setViewportHeight] = useState<string>('');\n    const [rowCtrls, setRowCtrls] = useState<RowCtrl[]>([]);\n    const [domOrder, setDomOrder] = useState<boolean>(false);\n    const [containerWidth, setContainerWidth] = useState<string>('');\n\n    const { name } = params;\n\n    const pinned = useMemo(() => RowContainerCtrl.getPinned(name), [name]);\n\n    const eWrapper = useRef<HTMLDivElement>(null);\n    const eViewport = useRef<HTMLDivElement>(null);\n    const eContainer = useRef<HTMLDivElement>(null);\n\n    const cssClasses = useMemo(() => RowContainerCtrl.getRowContainerCssClasses(name), [name]);\n    const wrapperClasses = useMemo( ()=> classesList(cssClasses.wrapper), []);\n    const viewportClasses = useMemo( ()=> classesList(cssClasses.viewport), []);\n    const containerClasses = useMemo( ()=> classesList(cssClasses.container), []);\n\n    // no need to useMemo for boolean types\n    const template1 = name === RowContainerName.CENTER;\n    const template2 = name === RowContainerName.TOP_CENTER || name === RowContainerName.BOTTOM_CENTER;\n    const template3 = !template1 && !template2;\n\n    const topLevelRef = template1 ? eWrapper : template2 ? eViewport : eContainer;\n\n    useReactCommentEffect(' AG Row Container ' + name + ' ', topLevelRef);\n\n    useEffect(() => {\n        const beansToDestroy: any[] = [];\n\n        const compProxy: IRowContainerComp = {\n            setViewportHeight: setViewportHeight,\n            setRowCtrls: rowCtrls => {\n                setRowCtrls( prev => {\n                    if (domOrder) {\n                        return rowCtrls;\n                    }\n                    // if dom order not important, we don't want to change the order\n                    // of the elements in the dom, as this would break transition styles\n                    const oldRows = prev.filter(r => rowCtrls.indexOf(r) >= 0);\n                    const newRows = rowCtrls.filter(r => oldRows.indexOf(r) < 0);\n                    const next = [...oldRows, ...newRows];\n                    return next;\n                });\n            },\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setContainerWidth: width => setContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new RowContainerCtrl(name));\n        beansToDestroy.push(ctrl);\n        ctrl.setComp(compProxy, eContainer.current!, eViewport.current!, eWrapper.current!);\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n        };\n\n    }, []);\n\n    const viewportStyle = useMemo( ()=> ({\n        height: viewportHeight\n    }), [viewportHeight]);\n\n    const containerStyle = useMemo( ()=> ({\n        width: containerWidth\n    }), [containerWidth]);\n\n    const buildContainer = () => (\n        <div\n            className={ containerClasses }\n            ref={ eContainer }\n            role=\"rowgroup\" \n            style={ containerStyle }\n            unselectable=\"on\">\n            {\n                rowCtrls.map(rowCtrl => <RowComp rowCtrl={ rowCtrl } pinned={ pinned } key={ rowCtrl.getInstanceId() }></RowComp>)\n            }\n        </div>\n    );\n\n    return (\n        <>\n            {\n                template1 &&\n                <div className={ wrapperClasses } ref={ eWrapper } role=\"presentation\" unselectable=\"on\">\n                    <div className={ viewportClasses } ref= { eViewport } role=\"presentation\" style={ viewportStyle }>\n                        { buildContainer() }\n                    </div>\n                </div>\n            }\n            {\n                template2 &&\n                <div className={ viewportClasses } ref= { eViewport } role=\"presentation\" style={ viewportStyle }>\n                    { buildContainer() }\n                </div>\n            }\n            {\n                template3 && buildContainer()\n            }\n        </>\n    );\n};\n\nexport default memo(RowContainerComp);\n"]}