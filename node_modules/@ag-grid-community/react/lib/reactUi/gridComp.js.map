{"version":3,"sources":["reactUi/gridComp.tsx"],"names":[],"mappings":"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","file":"gridComp.js","sourcesContent":["import {\n    Beans, Context,\n    FocusService,\n    GridCtrl,\n    IGridComp\n} from '@ag-grid-community/core';\nimport React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from './beansContext';\nimport GridBodyComp from './gridBodyComp';\nimport useReactCommentEffect from './reactComment';\nimport TabGuardComp, { TabGuardCompCallback } from './tabGuardComp';\nimport { classesList } from './utils';\n\ninterface GridCompProps {\n    context: Context;\n}\n\nconst GridComp = ({ context }: GridCompProps) => {\n\n    const [rtlClass, setRtlClass] = useState<string>('');\n    const [keyboardFocusClass, setKeyboardFocusClass] = useState<string>('');\n    const [layoutClass, setLayoutClass] = useState<string>('');\n    const [cursor, setCursor] = useState<string | null>(null);\n    const [userSelect, setUserSelect] = useState<string | null>(null);\n    const [initialised, setInitialised] = useState<boolean>(false);\n    const [tabGuardReady, setTabGuardReady] = useState<any>();\n\n    const gridCtrlRef = useRef<GridCtrl | null>(null);\n    const eRootWrapperRef = useRef<HTMLDivElement>(null);\n    const tabGuardRef = useRef<TabGuardCompCallback>();\n    const eGridBodyParentRef = useRef<HTMLDivElement>(null);\n    const focusInnerElementRef = useRef<((fromBottom?: boolean) => void)>(() => undefined);\n\n    const onTabKeyDown = useCallback(() => undefined, []);\n\n    const beans = useMemo( ()=> context.getBean('beans') as Beans, []);\n\n    useReactCommentEffect(' AG Grid ', eRootWrapperRef);\n\n    // create shared controller.\n    useEffect(() => {\n        const currentController = gridCtrlRef.current = context.createBean(new GridCtrl());\n\n        return () => {\n            context.destroyBean(currentController);\n            gridCtrlRef.current = null;\n        }\n    }, []);\n\n    // initialise the UI\n    useEffect(() => {\n        const gridCtrl = gridCtrlRef.current!;\n\n        focusInnerElementRef.current = gridCtrl.focusInnerElement.bind(gridCtrl);\n\n        const compProxy: IGridComp = {\n            destroyGridUi:\n                () => {}, // do nothing, as framework users destroy grid by removing the comp\n            setRtlClass: setRtlClass,\n            addOrRemoveKeyboardFocusClass:\n                (addOrRemove: boolean) => setKeyboardFocusClass(addOrRemove ? FocusService.AG_KEYBOARD_FOCUS : ''),\n            forceFocusOutOfContainer: () => {\n                tabGuardRef.current!.forceFocusOutOfContainer();\n            },\n            updateLayoutClasses: setLayoutClass,\n            getFocusableContainers: () => {\n                const els: HTMLElement[] = [];\n\n                const gridBodyCompEl = eRootWrapperRef.current!.querySelector('.ag-root');\n                const sideBarEl = eRootWrapperRef.current!.querySelector('.ag-side-bar')\n\n                if (gridBodyCompEl) {\n                    els.push(gridBodyCompEl as HTMLElement);\n                }\n\n                if (sideBarEl) {\n                    els.push(sideBarEl as HTMLElement);\n                }\n\n                return els;\n            },\n            setCursor,\n            setUserSelect\n        };\n\n        gridCtrl.setComp(compProxy, eRootWrapperRef.current!, eRootWrapperRef.current!);\n\n        setInitialised(true);\n    }, []);\n\n    // initialise the extra components\n    useEffect(() => {\n        if (!tabGuardReady) { return; }\n\n        const gridCtrl = gridCtrlRef.current!;\n        const beansToDestroy: any[] = [];\n\n        const {agStackComponentsRegistry} = beans;\n\n        const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n        const SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n        const StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n        const WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n        const PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n        const additionalEls: HTMLDivElement[] = [];\n        const eRootWrapper = eRootWrapperRef.current!;\n        const eGridBodyParent = eGridBodyParentRef.current!;\n\n        if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n            const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n            const eGui = headerDropZonesComp.getGui();\n            eRootWrapper.insertAdjacentElement('afterbegin', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(headerDropZonesComp);\n        }\n\n        if (gridCtrl.showSideBar() && SideBarClass) {\n            const sideBarComp = context.createBean(new SideBarClass());\n            const eGui = sideBarComp.getGui();\n            const bottomTabGuard = eGridBodyParent.querySelector('.ag-tab-guard-bottom');\n            if (bottomTabGuard) {\n                bottomTabGuard.insertAdjacentElement('beforebegin', eGui);\n                additionalEls.push(eGui);\n            }\n\n            beansToDestroy.push(sideBarComp);\n        }\n\n        if (gridCtrl.showStatusBar() && StatusBarClass) {\n            const statusBarComp = context.createBean(new StatusBarClass());\n            const eGui = statusBarComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(statusBarComp);\n        }\n\n        if (PaginationClass) {\n            const paginationComp = context.createBean(new PaginationClass());\n            const eGui = paginationComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(paginationComp);\n        }\n\n        if (gridCtrl.showWatermark() && WatermarkClass) {\n            const watermarkComp = context.createBean(new WatermarkClass());\n            const eGui = watermarkComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(watermarkComp);\n        }\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n            additionalEls.forEach(el => {\n                if (el.parentElement) {\n                    el.parentElement.removeChild(el);\n                }\n            });\n        }\n    }, [tabGuardReady])\n\n    const rootWrapperClasses = useMemo( ()=> classesList('ag-root-wrapper', rtlClass, keyboardFocusClass, layoutClass), [rtlClass, keyboardFocusClass, layoutClass]);\n    const rootWrapperBodyClasses = useMemo( () => classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass), [layoutClass]);\n\n    const topStyle: React.CSSProperties = useMemo(() => ({\n        userSelect: userSelect != null ? (userSelect as any) : '',\n        WebkitUserSelect: userSelect != null ? (userSelect as any) : '',\n        cursor: cursor != null ? cursor : ''\n    }), [userSelect, cursor]);\n\n    const eGridBodyParent = eGridBodyParentRef.current;\n\n    const setTabGuardCompRef = useCallback((ref: TabGuardCompCallback) => {\n        tabGuardRef.current = ref;\n        setTabGuardReady(true);\n    }, []);\n\n    return (\n        <div ref={ eRootWrapperRef } className={ rootWrapperClasses } style={ topStyle }>\n            <div className={ rootWrapperBodyClasses } ref={ eGridBodyParentRef }>\n                { initialised && eGridBodyParent &&\n                    <BeansContext.Provider value={beans}>\n                        <TabGuardComp\n                            ref={ setTabGuardCompRef }\n                            eFocusableElement= { eGridBodyParent }\n                            onTabKeyDown={ onTabKeyDown }\n                            gridCtrl={ gridCtrlRef.current! }>\n                        { // we wait for initialised before rending the children, so GridComp has created and registered with it's\n                        // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n                        // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n                        // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n                        // hangs the UI)\n                            <GridBodyComp/>\n                        }\n                        </TabGuardComp>\n                    </BeansContext.Provider>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default memo(GridComp);\n"]}