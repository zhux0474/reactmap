{"version":3,"sources":["index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,6CAAwC;AACxC,wDAAiC;AACjC,kFAAmF;AACnF,sDAAoD;AACpD,yDAAwD;AAExD,2DAAyD;AACzD,mEAAiE;AAGjE,IAAM,GAAG,GAAG;IACF,IAAA,2BAAsC,EAArC,eAAO,EAAE,kBAA4B,CAAC;IACvC,IAAA,2BAAkD,EAAjD,qBAAa,EAAE,wBAAkC,CAAC;IAEnD,IAAA;;;;MAIJ,EAJK,eAAO,EAAE,kBAId,CAAC;IAEH,IAAM,WAAW,GAAG,UAAC,MAAU;QAC3B,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACvB,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACnC,UAAU,CAAC,cAAM,OAAA,UAAU,gBAAK,OAAO,EAAK,OAAO,EAAE,EAApC,CAAoC,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC,CAAA;IAED,OAAO,CACH,uCAAK,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;QAC3B,uCAAK,SAAS,EAAC,iBAAiB,EAAC,KAAK,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE;YAE3E,8BAAC,6BAAa,IACV,aAAa,EAAE;oBACX,SAAS,EAAE,IAAI;oBACf,MAAM,EAAE,IAAI;oBACZ,IAAI,EAAE,CAAC;oBACP,QAAQ,EAAE,IAAI;iBACjB,EACD,YAAY,EAAC,UAAU,EACvB,WAAW,EAAG,IAAI,EAClB,WAAW,EAAG,WAAW,EACzB,OAAO,EAAG,OAAO,EACjB,OAAO,EAAG,CAAC,gDAAwB,CAAC;gBACpC,8BAAC,2BAAY,IAAC,KAAK,EAAC,MAAM,GAAgB;gBAC1C,8BAAC,2BAAY,IAAC,KAAK,EAAC,OAAO,GAAgB;gBAC3C,8BAAC,2BAAY,IAAC,KAAK,EAAC,OAAO,GAAgB,CAC/B,CAEd,CAcJ,CACT,CAAC;AACN,CAAC,CAAC;AAEF,mBAAQ,CAAC,MAAM,CACX,8BAAC,GAAG,OAAG,EACP,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAClC,CAAC","file":"index.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model'\nimport { AgGridColumn } from './shared/agGridColumn'\nimport { AgGridReactUi } from './reactUi/agGridReactUi';\n\nimport '@ag-grid-community/core/dist/styles/ag-grid.css';\nimport '@ag-grid-community/core/dist/styles/ag-theme-alpine.css';\n\n\nconst App = () => {\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n\n    const [rowData, setRowData] = useState([\n        { make: 'Toyota', model: 'Celica', price: 35000 },\n        { make: 'Ford', model: 'Mondeo', price: 32000 },\n        { make: 'Porsche', model: 'Boxter', price: 72000 }\n    ]);\n\n    const onGridReady = (params:any) => {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n        setTimeout(() => setRowData([...rowData, ...rowData]), 2000);\n    }\n\n    return (\n        <div style={{ display: 'flex' }}>\n            <div className=\"ag-theme-alpine\" style={{ height: 400, width: 600, margin: 10 }}>\n                {/*<AgGridReact*/}\n                <AgGridReactUi\n                    defaultColDef={{\n                        resizable: true,\n                        filter: true,\n                        flex: 1,\n                        sortable: true\n                    }}\n                    rowSelection=\"multiple\"\n                    animateRows={ true }\n                    onGridReady={ onGridReady }\n                    rowData={ rowData }\n                    modules={ [ClientSideRowModelModule] }>\n                    <AgGridColumn field=\"make\"></AgGridColumn>\n                    <AgGridColumn field=\"model\"></AgGridColumn>\n                    <AgGridColumn field=\"price\"></AgGridColumn>\n                </AgGridReactUi>\n                {/*</AgGridReact>*/}\n            </div>\n{/*\n            <div className=\"ag-theme-alpine\" style={{ height: 400, width: 600, margin: 10 }}>\n                <AgGridReact\n                    onGridReady={onGridReady}\n                    rowData={rowData}\n                    rowHeight={42}\n                    modules={[ClientSideRowModelModule]}>\n                    <AgGridColumn field=\"make\"></AgGridColumn>\n                    <AgGridColumn field=\"model\"></AgGridColumn>\n                    <AgGridColumn field=\"price\"></AgGridColumn>\n                </AgGridReact>\n            </div>\n*/}\n        </div>\n    );\n};\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"]}