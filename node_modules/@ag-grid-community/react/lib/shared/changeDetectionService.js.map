{"version":3,"sources":["shared/changeDetectionService.ts"],"names":[],"mappings":"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","file":"changeDetectionService.js","sourcesContent":["export enum ChangeDetectionStrategyType {\n    IdentityCheck = 'IdentityCheck',\n    DeepValueCheck = 'DeepValueCheck',\n    NoCheck = 'NoCheck'\n}\n\nexport interface ChangeDetectionStrategy {\n    areEqual(a: any, b: any): boolean;\n}\n\nclass SimpleFunctionalStrategy implements ChangeDetectionStrategy {\n    private strategy: (a: any, b: any) => boolean;\n\n    constructor(strategy: (a: any, b: any) => boolean) {\n        this.strategy = strategy;\n    }\n\n    areEqual(a: any, b: any): boolean {\n        return this.strategy(a, b);\n    }\n}\n\nclass DeepValueStrategy implements ChangeDetectionStrategy {\n    areEqual(a: any, b: any): boolean {\n        return DeepValueStrategy.areEquivalent(DeepValueStrategy.copy(a), DeepValueStrategy.copy(b));\n    }\n\n    /*\n     * deeper object comparison - taken from https://stackoverflow.com/questions/1068834/object-comparison-in-javascript\n     */\n    static unwrapStringOrNumber(obj: any) {\n        return obj instanceof Number || obj instanceof String ? obj.valueOf() : obj;\n    }\n\n    // sigh, here for ie compatibility\n    static copy(value: any): any {\n        if (!value) {\n            return value;\n        }\n\n        if (Array.isArray(value)) {\n            // shallow copy the array - this will typically be either rowData or columnDefs\n            const arrayCopy = [];\n            for (let i = 0; i < value.length; i++) {\n                arrayCopy.push(this.copy(value[i]));\n            }\n            return arrayCopy;\n        }\n\n        // for anything without keys (boolean, string etc).\n        // Object.keys - chrome will swallow them, IE will fail (correctly, imho)\n        if (typeof value !== \"object\") {\n            return value;\n        }\n\n        return [{}, value].reduce((r, o) => {\n            Object.keys(o).forEach(function (k) {\n                r[k] = o[k];\n            });\n            return r;\n        }, {});\n    }\n\n    static isNaN(value: any) {\n        if(Number.isNaN) {\n            return Number.isNaN(value);\n        }\n        // for ie11...\n        return typeof(value) === 'number' && isNaN(value);\n    }\n    /*\n     * slightly modified, but taken from https://stackoverflow.com/questions/1068834/object-comparison-in-javascript\n     *\n     * What we're trying to do here is determine if the property being checked has changed in _value_, not just in reference\n     *\n     * For eg, if a user updates the columnDefs via property binding, but the actual columns defs are the same before and\n     * after, then we don't want the grid to re-render\n     */\n    static areEquivalent(a: any, b: any) {\n        a = DeepValueStrategy.unwrapStringOrNumber(a);\n        b = DeepValueStrategy.unwrapStringOrNumber(b);\n        if (a === b) return true; //e.g. a and b both null\n        if (a === null || b === null || typeof a !== typeof b) return false;\n        if(DeepValueStrategy.isNaN(a) && DeepValueStrategy.isNaN(b)) {\n            return true;\n        }\n        if (a instanceof Date) {\n            return b instanceof Date && a.valueOf() === b.valueOf();\n        }\n        if (typeof a === \"function\") {\n            // false to allow for callbacks to be reactive...\n            return false;\n        }\n        if (typeof a !== \"object\" ||\n            (a.$$typeof && a.$$typeof.toString() === \"Symbol(react.element)\")) {\n            return a == b; //for boolean, number, string, function, xml\n        }\n        if(Object.isFrozen(a) || Object.isFrozen(b)) {\n            return a === b;\n        }\n\n        const newA = a.areEquivPropertyTracking === undefined,\n            newB = b.areEquivPropertyTracking === undefined;\n        try {\n            let prop;\n            if (newA) {\n                a.areEquivPropertyTracking = [];\n            } else if (\n                a.areEquivPropertyTracking.some(function (other: any) {\n                    return other === b;\n                })\n            )\n                return true;\n            if (newB) {\n                b.areEquivPropertyTracking = [];\n            } else if (b.areEquivPropertyTracking.some((other: any) => other === a)) {\n                return true;\n            }\n            a.areEquivPropertyTracking.push(b);\n            b.areEquivPropertyTracking.push(a);\n\n            const tmp = {};\n            for (prop in a)\n                if (prop != \"areEquivPropertyTracking\") {\n                    (tmp as any)[prop] = null;\n                }\n            for (prop in b)\n                if (prop != \"areEquivPropertyTracking\") {\n                    (tmp as any)[prop] = null;\n                }\n\n            for (prop in tmp) {\n                if (!this.areEquivalent(a[prop], b[prop])) {\n                    return false;\n                }\n            }\n            return true;\n        } finally {\n            if (newA) delete a.areEquivPropertyTracking;\n            if (newB) delete b.areEquivPropertyTracking;\n        }\n    }\n}\n\nexport class ChangeDetectionService {\n    private strategyMap: { [key in ChangeDetectionStrategyType]: ChangeDetectionStrategy } = {\n        [ChangeDetectionStrategyType.DeepValueCheck]: new DeepValueStrategy(),\n        [ChangeDetectionStrategyType.IdentityCheck]: new SimpleFunctionalStrategy((a, b) => a === b),\n        [ChangeDetectionStrategyType.NoCheck]: new SimpleFunctionalStrategy((a, b) => false)\n    };\n\n    public getStrategy(changeDetectionStrategy: ChangeDetectionStrategyType): ChangeDetectionStrategy {\n        return this.strategyMap[changeDetectionStrategy];\n    }\n}"]}