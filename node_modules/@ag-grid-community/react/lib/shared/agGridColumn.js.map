{"version":3,"sources":["shared/agGridColumn.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAyC;AACzC,0DAAmC;AACnC,8DAAkD;AASlD;IAAkC,gCAAyD;IACvF,sBAAmB,KAAU;QAA7B,YACI,kBAAM,KAAK,CAAC,SACf;QAFkB,WAAK,GAAL,KAAK,CAAK;;IAE7B,CAAC;IAED,6BAAM,GAAN;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IAEa,+BAAkB,GAAhC,UAAiC,QAAa;QAC1C,OAAO,eAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAE,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAApD,CAAoD,CAAC,CAAC;IACvG,CAAC;IAEa,qBAAQ,GAAtB,UAAuB,WAAgB;QAC3B,IAAA,+BAAQ,EAAE,0CAAS,CAAiB;QAE5C,IAAI,YAAY,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;YACxC,MAAM,CAAC,QAAQ,GAAG,YAAY,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SAC/D;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAEa,4BAAe,GAA7B,UAA8B,QAAa;QACvC,OAAO,eAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC;IACL,mBAAC;AAAD,CA1BA,AA0BC,CA1BiC,iBAAS,GA0B1C;AA1BY,oCAAY;AA4BzB,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,kBAAkB,EAAE,oBAAS,CAAC,IAAI,CAAC,CAAC;AACpE,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,EAAE,oBAAS,CAAC,MAAM,CAAC,CAAC;AACrE,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,EAAE,oBAAS,CAAC,MAAM,CAAC,CAAC;AACrE,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,gBAAgB,EAAE,oBAAS,CAAC,KAAK,CAAC,CAAC;AACnE,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,EAAE,oBAAS,CAAC,MAAM,CAAC,CAAC;AACrE,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,mBAAmB,EAAE,oBAAS,CAAC,IAAI,CAAC,CAAC;AAErE,SAAS,aAAa,CAAC,WAAqB,EAAE,QAAa;IACvD,WAAW,CAAC,OAAO,CAAC,UAAC,OAAe;QAChC,aAAa;QACb,YAAY,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC;IACrC,CAAC,CAAC,CAAC;AACP,CAAC","file":"agGridColumn.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as AgGrid from '@ag-grid-community/core';\nimport { ColDef, ColGroupDef } from '@ag-grid-community/core';\n\nexport interface AgGridColumnProps extends ColDef {\n}\n\nexport interface AgGridColumnGroupProps extends ColGroupDef {\n}\n\nexport class AgGridColumn extends Component<AgGridColumnProps | AgGridColumnGroupProps, {}> {\n    constructor(public props: any) {\n        super(props);\n    }\n\n    render() {\n        return null;\n    }\n\n    public static mapChildColumnDefs(children: any) {\n        return React.Children.map(children, child => !!child ?  AgGridColumn.toColDef(child.props) : null);\n    }\n\n    public static toColDef(columnProps: any): ColDef {\n        const { children, ...colDef } = columnProps;\n\n        if (AgGridColumn.hasChildColumns(children)) {\n            colDef.children = AgGridColumn.mapChildColumnDefs(children);\n        }\n\n        return colDef;\n    }\n\n    public static hasChildColumns(children: any): boolean {\n        return React.Children.count(children) > 0;\n    }\n}\n\naddProperties(AgGrid.ColDefUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(AgGrid.ColDefUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(AgGrid.ColDefUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(AgGrid.ColDefUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(AgGrid.ColDefUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(AgGrid.ColDefUtil.FUNCTION_PROPERTIES, PropTypes.func);\n\nfunction addProperties(listOfProps: string[], propType: any) {\n    listOfProps.forEach((propKey: string) => {\n        // @ts-ignore\n        AgGridColumn[propKey] = propType;\n    });\n}\n"]}