{"version":3,"sources":["../../src/ts/ctrlsService.ts"],"names":[],"mappings":"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","file":"ctrlsService.js","sourcesContent":["import { GridCtrl } from \"./gridComp/gridCtrl\";\nimport { Bean } from \"./context/context\";\nimport { GridBodyCtrl } from \"./gridBodyComp/gridBodyCtrl\";\nimport { RowContainerCtrl } from \"./gridBodyComp/rowContainer/rowContainerCtrl\";\nimport { FakeHScrollCtrl } from \"./gridBodyComp/fakeHScrollCtrl\";\nimport { BeanStub } from \"./context/beanStub\";\nimport { GridHeaderCtrl } from \"./headerRendering/gridHeaderCtrl\";\nimport { Constants } from \"./constants/constants\";\nimport { HeaderRowContainerCtrl } from \"./headerRendering/rowContainer/headerRowContainerCtrl\";\n\n// for all controllers that are singletons, they can register here so other parts\n// of the application can access them.\n\ninterface ReadyParams {\n    gridCtrl: GridCtrl;\n    gridBodyCtrl: GridBodyCtrl;\n\n    centerRowContainerCtrl: RowContainerCtrl;\n    leftRowContainerCtrl: RowContainerCtrl;\n    rightRowContainerCtrl: RowContainerCtrl;\n\n    bottomCenterRowContainerCtrl: RowContainerCtrl;\n    bottomLeftRowContainerCtrl: RowContainerCtrl;\n    bottomRightRowContainerCtrl: RowContainerCtrl;\n\n    topCenterRowContainerCtrl: RowContainerCtrl;\n    topLeftRowContainerCtrl: RowContainerCtrl;\n    topRightRowContainerCtrl: RowContainerCtrl;\n\n    fakeHScrollCtrl: FakeHScrollCtrl;\n    gridHeaderCtrl: GridHeaderCtrl;\n\n    centerHeaderRowContainerCtrl: HeaderRowContainerCtrl;\n    leftHeaderRowContainerCtrl: HeaderRowContainerCtrl;\n    rightHeaderRowContainerCtrl: HeaderRowContainerCtrl;\n}\n\n@Bean('ctrlsService')\nexport class CtrlsService extends BeanStub {\n\n    private gridCtrl: GridCtrl;\n    private gridBodyCtrl: GridBodyCtrl;\n\n    private centerRowContainerCtrl: RowContainerCtrl;\n    private leftRowContainerCtrl: RowContainerCtrl;\n    private rightRowContainerCtrl: RowContainerCtrl;\n\n    private bottomCenterRowContainerCtrl: RowContainerCtrl;\n    private bottomLeftRowContainerCtrl: RowContainerCtrl;\n    private bottomRightRowContainerCtrl: RowContainerCtrl;\n\n    private topCenterRowContainerCtrl: RowContainerCtrl;\n    private topLeftRowContainerCtrl: RowContainerCtrl;\n    private topRightRowContainerCtrl: RowContainerCtrl;\n\n    private centerHeaderRowContainerCtrl: HeaderRowContainerCtrl;\n    private leftHeaderRowContainerCtrl: HeaderRowContainerCtrl;\n    private rightHeaderRowContainerCtrl: HeaderRowContainerCtrl;\n\n    private fakeHScrollCtrl: FakeHScrollCtrl;\n\n    private gridHeaderCtrl: GridHeaderCtrl;\n\n    private ready = false;\n    private readyCallbacks: ((p: ReadyParams) => void)[] = [];\n\n    private checkReady(): void {\n        this.ready =\n            this.gridCtrl != null\n            && this.gridBodyCtrl != null\n\n            && this.centerRowContainerCtrl != null\n            && this.leftRowContainerCtrl != null\n            && this.rightRowContainerCtrl != null\n\n            && this.bottomCenterRowContainerCtrl != null\n            && this.bottomLeftRowContainerCtrl != null\n            && this.bottomRightRowContainerCtrl != null\n\n            && this.topCenterRowContainerCtrl != null\n            && this.topLeftRowContainerCtrl != null\n            && this.topRightRowContainerCtrl != null\n\n            && this.centerHeaderRowContainerCtrl != null\n            && this.leftHeaderRowContainerCtrl != null\n            && this.rightHeaderRowContainerCtrl != null\n\n            && this.fakeHScrollCtrl != null\n            && this.gridHeaderCtrl != null;\n\n        if (this.ready) {\n            const p = this.createReadyParams();\n            this.readyCallbacks.forEach(c => c(p));\n            this.readyCallbacks.length = 0;\n        }\n    }\n\n    public whenReady(callback: (p: ReadyParams) => void): void {\n        if (this.ready) {\n            callback(this.createReadyParams());\n        } else {\n            this.readyCallbacks.push(callback);\n        }\n    }\n\n    private createReadyParams(): ReadyParams {\n        return {\n            centerRowContainerCtrl: this.centerRowContainerCtrl,\n            leftRowContainerCtrl: this.leftRowContainerCtrl,\n            rightRowContainerCtrl: this.rightRowContainerCtrl,\n\n            bottomCenterRowContainerCtrl: this.bottomCenterRowContainerCtrl,\n            bottomLeftRowContainerCtrl: this.bottomLeftRowContainerCtrl,\n            bottomRightRowContainerCtrl: this.bottomRightRowContainerCtrl,\n\n            topCenterRowContainerCtrl: this.topCenterRowContainerCtrl,\n            topLeftRowContainerCtrl: this.topLeftRowContainerCtrl,\n            topRightRowContainerCtrl: this.topRightRowContainerCtrl,\n\n            centerHeaderRowContainerCtrl: this.centerHeaderRowContainerCtrl,\n            leftHeaderRowContainerCtrl: this.leftHeaderRowContainerCtrl,\n            rightHeaderRowContainerCtrl: this.rightHeaderRowContainerCtrl,\n\n            fakeHScrollCtrl: this.fakeHScrollCtrl,\n            gridBodyCtrl: this.gridBodyCtrl,\n            gridCtrl: this.gridCtrl,\n            gridHeaderCtrl: this.gridHeaderCtrl,\n        };\n    }\n\n    public registerFakeHScrollCtrl(ctrl: FakeHScrollCtrl): void {\n        this.fakeHScrollCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerGridHeaderCtrl(gridHeaderCtrl: GridHeaderCtrl): void {\n        this.gridHeaderCtrl = gridHeaderCtrl;\n        this.checkReady();\n    }\n\n    public registerCenterRowContainerCtrl(ctrl: RowContainerCtrl): void {\n        this.centerRowContainerCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerLeftRowContainerCtrl(ctrl: RowContainerCtrl): void {\n        this.leftRowContainerCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerRightRowContainerCtrl(ctrl: RowContainerCtrl): void {\n        this.rightRowContainerCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerTopCenterRowContainerCtrl(ctrl: RowContainerCtrl): void {\n        this.topCenterRowContainerCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerTopLeftRowContainerCon(ctrl: RowContainerCtrl): void {\n        this.topLeftRowContainerCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerTopRightRowContainerCtrl(ctrl: RowContainerCtrl): void {\n        this.topRightRowContainerCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerBottomCenterRowContainerCtrl(ctrl: RowContainerCtrl): void {\n        this.bottomCenterRowContainerCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerBottomLeftRowContainerCtrl(ctrl: RowContainerCtrl): void {\n        this.bottomLeftRowContainerCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerBottomRightRowContainerCtrl(ctrl: RowContainerCtrl): void {\n        this.bottomRightRowContainerCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerHeaderContainer(ctrl: HeaderRowContainerCtrl, pinned: string | null): void {\n        switch (pinned) {\n            case Constants.PINNED_LEFT: \n                this.leftHeaderRowContainerCtrl = ctrl; \n                break;\n            case Constants.PINNED_RIGHT: \n                this.rightHeaderRowContainerCtrl = ctrl; \n                break;\n            default: this.centerHeaderRowContainerCtrl = ctrl; \n                break;\n        }\n        this.checkReady();\n    }\n\n    public registerGridBodyCtrl(ctrl: GridBodyCtrl): void {\n        this.gridBodyCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public registerGridCtrl(ctrl: GridCtrl): void {\n        this.gridCtrl = ctrl;\n        this.checkReady();\n    }\n\n    public getFakeHScrollCtrl(): FakeHScrollCtrl {\n        return this.fakeHScrollCtrl;\n    }\n\n    public getGridHeaderCtrl(): GridHeaderCtrl {\n        return this.gridHeaderCtrl;\n    }\n\n    public getGridCtrl(): GridCtrl {\n        return this.gridCtrl;\n    }\n\n    public getCenterRowContainerCtrl(): RowContainerCtrl {\n        return this.centerRowContainerCtrl;\n    }\n\n    public getTopCenterRowContainerCtrl(): RowContainerCtrl {\n        return this.topCenterRowContainerCtrl;\n    }\n\n    public getBottomCenterRowContainerCtrl(): RowContainerCtrl {\n        return this.bottomCenterRowContainerCtrl;\n    }\n\n    public getGridBodyCtrl(): GridBodyCtrl {\n        return this.gridBodyCtrl;\n    }\n\n    public getHeaderRowContainerCtrls(): HeaderRowContainerCtrl[] {\n        return [this.leftHeaderRowContainerCtrl, this.rightHeaderRowContainerCtrl, this.centerHeaderRowContainerCtrl];\n    }\n\n    public getHeaderRowContainerCtrl(pinned?: string | null): HeaderRowContainerCtrl {\n        switch (pinned) {\n            case Constants.PINNED_LEFT: return this.leftHeaderRowContainerCtrl;\n            case Constants.PINNED_RIGHT: return this.rightHeaderRowContainerCtrl;\n            default: return this.centerHeaderRowContainerCtrl;\n        }\n    }\n}"]}