{"version":3,"sources":["../../src/ts/gridBodyComp/centerWidthFeature.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA+C;AAC/C,8CAA8D;AAE9D,4DAA2D;AAC3D,oDAAmD;AACnD,0CAAsC;AAEtC;IAAwC,sCAAQ;IAM5C,4BAAY,QAAiC;QAA7C,YACI,iBAAO,SAEV;QADG,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;IAC7B,CAAC;IAGO,0CAAa,GAArB;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,EAAE,uCAAkB,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QAC/F,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,EAAE,kBAAM,CAAC,+BAA+B,EAAE,QAAQ,CAAC,CAAC;QAC7F,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,EAAE,kBAAM,CAAC,qCAAqC,EAAE,QAAQ,CAAC,CAAC;QAEnG,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAEO,qCAAQ,GAAhB;QACW,IAAA,8BAAW,CAAS;QAE3B,IAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,KAAK,qBAAS,CAAC,gBAAgB,CAAC;QAE1F,IAAM,WAAW,GAAG,WAAW,CAAC,qBAAqB,EAAE,CAAC;QACxD,IAAM,SAAS,GAAG,WAAW,CAAC,4BAA4B,EAAE,CAAC;QAC7D,IAAM,UAAU,GAAG,WAAW,CAAC,6BAA6B,EAAE,CAAC;QAE/D,IAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,GAAG,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC;QAEpF,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IA/ByB;QAAzB,mBAAS,CAAC,aAAa,CAAC;2DAAkC;IAU3D;QADC,uBAAa;2DAQb;IAeL,yBAAC;CAlCD,AAkCC,CAlCuC,mBAAQ,GAkC/C;AAlCY,gDAAkB","file":"centerWidthFeature.js","sourcesContent":["import { BeanStub } from \"../context/beanStub\";\nimport { Autowired, PostConstruct } from \"../context/context\";\nimport { ColumnModel } from \"../columns/columnModel\";\nimport { GridOptionsWrapper } from \"../gridOptionsWrapper\";\nimport { Constants } from \"../constants/constants\";\nimport { Events } from \"../eventKeys\";\n\nexport class CenterWidthFeature extends BeanStub {\n\n    @Autowired('columnModel') private columnModel: ColumnModel;\n\n    private callback: (width: number) => void;\n\n    constructor(callback: (width: number) => void) {\n        super();\n        this.callback = callback;\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        const listener = this.setWidth.bind(this);\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_DOM_LAYOUT, listener);\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, listener);\n\n        this.setWidth();\n    }\n\n    private setWidth(): void {\n        const {columnModel} = this;\n\n        const printLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n\n        const centerWidth = columnModel.getBodyContainerWidth();\n        const leftWidth = columnModel.getDisplayedColumnsLeftWidth();\n        const rightWidth = columnModel.getDisplayedColumnsRightWidth();\n\n        const totalWidth = printLayout ? centerWidth + leftWidth + rightWidth : centerWidth;\n\n        this.callback(totalWidth);\n    }\n}"]}