{"version":3,"sources":["../../src/ts/widgets/agDialog.ts"],"names":[],"mappings":"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","file":"agDialog.js","sourcesContent":["import { Autowired } from \"../context/context\";\nimport { PanelOptions, AgPanel } from \"./agPanel\";\nimport { Component } from \"./component\";\nimport { addCssClass, setDisplayed } from \"../utils/dom\";\nimport { createIconNoSpan } from \"../utils/icon\";\nimport { PopupService } from \"./popupService\";\nimport { ResizableStructure } from \"../rendering/features/positionableFeature\";\n\nexport type ResizableSides = 'topLeft' |\n    'top' |\n    'topRight' |\n    'right' |\n    'bottomRight' |\n    'bottom' |\n    'bottomLeft' |\n    'left';\n\nexport interface DialogOptions extends PanelOptions {\n    eWrapper?: HTMLElement;\n    modal?: boolean;\n    movable?: boolean;\n    alwaysOnTop?: boolean;\n    maximizable?: boolean;\n}\n\nexport class AgDialog extends AgPanel {\n\n    @Autowired('popupService') private popupService: PopupService;\n\n    private isMaximizable: boolean = false;\n    private isMaximized: boolean = false;\n    private maximizeListeners: (() => void)[] = [];\n    private maximizeButtonComp: Component | undefined;\n    private maximizeIcon: HTMLElement | undefined;\n    private minimizeIcon: HTMLElement | undefined;\n    private resizeListenerDestroy: (() => void) | null | undefined = null;\n\n    private lastPosition = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n    };\n\n    protected config: DialogOptions | undefined;\n\n    constructor(config: DialogOptions) {\n        super({...config, popup: true });\n    }\n\n    protected postConstruct() {\n        const eGui = this.getGui();\n        const { movable, resizable, maximizable } = this.config as DialogOptions;\n\n        addCssClass(eGui, 'ag-dialog');\n\n        super.postConstruct();\n\n        this.addManagedListener(eGui, 'focusin', (e: FocusEvent) => {\n            if (eGui.contains(e.relatedTarget as HTMLElement)) { return; }\n            this.popupService.bringPopupToFront(eGui);\n        });\n\n        if (movable) { this.setMovable(movable); }\n        if (maximizable) { this.setMaximizable(maximizable); }\n        if (resizable) { this.setResizable(resizable); }\n    }\n\n    protected renderComponent() {\n        const eGui = this.getGui();\n        const { alwaysOnTop, modal, title } = this.config as DialogOptions;\n        const translate = this.gridOptionsWrapper.getLocaleTextFunc();\n\n        const addPopupRes = this.popupService.addPopup({\n            modal,\n            eChild: eGui,\n            closeOnEsc: true,\n            closedCallback: this.destroy.bind(this),\n            alwaysOnTop,\n            ariaLabel: title || translate('ariaLabelDialog', 'Dialog')\n        });\n\n        if (addPopupRes) {\n            this.close = addPopupRes.hideFunc;\n        }\n    }\n\n    private toggleMaximize() {\n        const position = this.positionableFeature.getPosition();\n        if (this.isMaximized) {\n            const { x, y, width, height } = this.lastPosition;\n            this.setWidth(width);\n            this.setHeight(height);\n            this.positionableFeature.offsetElement(x, y);\n        } else {\n            this.lastPosition.width = this.getWidth()!;\n            this.lastPosition.height = this.getHeight()!;\n            this.lastPosition.x = position.x;\n            this.lastPosition.y = position.y;\n            this.positionableFeature.offsetElement(0, 0);\n            this.setHeight('100%');\n            this.setWidth('100%');\n        }\n\n        this.isMaximized = !this.isMaximized;\n        this.refreshMaximizeIcon();\n    }\n\n    private refreshMaximizeIcon() {\n        setDisplayed(this.maximizeIcon!, !this.isMaximized);\n        setDisplayed(this.minimizeIcon!, this.isMaximized);\n    }\n\n    private clearMaximizebleListeners() {\n        if (this.maximizeListeners.length) {\n            this.maximizeListeners.forEach(destroyListener => destroyListener());\n            this.maximizeListeners.length = 0;\n        }\n\n        if (this.resizeListenerDestroy) {\n            this.resizeListenerDestroy();\n            this.resizeListenerDestroy = null;\n        }\n    }\n\n    protected destroy(): void {\n        this.maximizeButtonComp = this.destroyBean(this.maximizeButtonComp);\n\n        this.clearMaximizebleListeners();\n        super.destroy();\n    }\n\n    public setResizable(resizable: boolean | ResizableStructure) {\n        this.positionableFeature.setResizable(resizable);\n    }\n\n    public setMovable(movable: boolean) {\n        this.positionableFeature.setMovable(movable, this.eTitleBar);\n    }\n\n    public setMaximizable(maximizable: boolean) {\n        if (!maximizable) {\n            this.clearMaximizebleListeners();\n\n            if (this.maximizeButtonComp) {\n                this.destroyBean(this.maximizeButtonComp);\n                this.maximizeButtonComp = this.maximizeIcon = this.minimizeIcon = undefined;\n            }\n\n            return;\n        }\n\n        const eTitleBar = this.eTitleBar;\n\n        if (!eTitleBar || maximizable === this.isMaximizable) { return; }\n\n        const maximizeButtonComp = this.maximizeButtonComp =\n            this.createBean(new Component(/* html */`<div class=\"ag-dialog-button\"></span>`));\n\n        const eGui = maximizeButtonComp.getGui();\n\n        eGui.appendChild(this.maximizeIcon = createIconNoSpan('maximize', this.gridOptionsWrapper)!);\n        addCssClass(this.maximizeIcon, 'ag-panel-title-bar-button-icon');\n\n        eGui.appendChild(this.minimizeIcon = createIconNoSpan('minimize', this.gridOptionsWrapper)!);\n        addCssClass(this.minimizeIcon, 'ag-panel-title-bar-button-icon');\n        addCssClass(this.minimizeIcon, 'ag-hidden');\n\n        maximizeButtonComp.addManagedListener(eGui, 'click', this.toggleMaximize.bind(this));\n\n        this.addTitleBarButton(maximizeButtonComp, 0);\n\n        this.maximizeListeners.push(\n            this.addManagedListener(eTitleBar, 'dblclick', this.toggleMaximize.bind(this))!\n        );\n\n        this.resizeListenerDestroy = this.addManagedListener(this, 'resize', () => {\n            this.isMaximized = false;\n            this.refreshMaximizeIcon();\n        });\n    }\n}\n"]}