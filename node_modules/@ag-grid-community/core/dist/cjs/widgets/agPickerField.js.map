{"version":3,"sources":["../../src/ts/widgets/agPickerField.ts"],"names":[],"mappings":"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","file":"agPickerField.js","sourcesContent":["import { AgAbstractField } from \"./agAbstractField\";\nimport { Component } from \"./component\";\nimport { RefSelector } from \"./componentAnnotations\";\nimport { setAriaLabelledBy, setAriaLabel, setAriaDescribedBy } from \"../utils/aria\";\nimport { createIconNoSpan } from \"../utils/icon\";\nimport { exists } from \"../utils/generic\";\nimport { setElementWidth, isVisible } from \"../utils/dom\";\nimport { KeyCode } from '../constants/keyCode';\nimport { IAgLabel } from './agAbstractLabel';\n\nexport abstract class AgPickerField<TElement extends HTMLElement, TValue> extends AgAbstractField<TValue> {\n    public abstract showPicker(): Component;\n    protected value: TValue;\n    protected isPickerDisplayed: boolean = false;\n    protected isDestroyingPicker: boolean = false;\n    private skipClick: boolean = false;\n    private pickerComponent: Component;\n\n    @RefSelector('eLabel') protected readonly eLabel: HTMLElement;\n    @RefSelector('eWrapper') protected readonly eWrapper: HTMLElement;\n    @RefSelector('eDisplayField') protected readonly eDisplayField: TElement;\n    @RefSelector('eIcon') private readonly eIcon: HTMLButtonElement;\n\n    constructor(config?: IAgLabel, className?: string, private readonly pickerIcon?: string, popupRole?: string) {\n        super(config,\n            /* html */ `<div class=\"ag-picker-field\" role=\"presentation\">\n                <div ref=\"eLabel\"></div>\n                <div ref=\"eWrapper\"\n                    class=\"ag-wrapper ag-picker-field-wrapper\"\n                    tabIndex=\"-1\"\n                    ${popupRole ? `aria-haspopup=\"${popupRole}\"` : ''}\n                >\n                    <div ref=\"eDisplayField\" class=\"ag-picker-field-display\"></div>\n                    <div ref=\"eIcon\" class=\"ag-picker-field-icon\" aria-hidden=\"true\"></div>\n                </div>\n            </div>`, className);\n    }\n\n    protected postConstruct() {\n        super.postConstruct();\n\n        const displayId = `${this.getCompId()}-display`;\n\n        this.eDisplayField.setAttribute('id', displayId);\n        setAriaDescribedBy(this.eWrapper, displayId);\n\n        const clickHandler = () => {\n            if (this.skipClick) {\n                this.skipClick = false;\n                return;\n            }\n\n            if (this.isDisabled()) { return; }\n\n            this.pickerComponent = this.showPicker();\n        };\n\n        const eGui = this.getGui();\n\n        this.addManagedListener(eGui, 'mousedown', (e: MouseEvent) => {\n            if (\n                !this.skipClick &&\n                this.pickerComponent &&\n                this.pickerComponent.isAlive() &&\n                isVisible(this.pickerComponent.getGui()) &&\n                eGui.contains(e.target as HTMLElement)\n            ) {\n                this.skipClick = true;\n            }\n        });\n\n        this.addManagedListener(eGui, 'keydown', (e: KeyboardEvent) => {\n            switch (e.keyCode) {\n                case KeyCode.UP:\n                case KeyCode.DOWN:\n                case KeyCode.ENTER:\n                case KeyCode.SPACE:\n                    clickHandler();\n                case KeyCode.ESCAPE:\n                    if (this.isPickerDisplayed) {\n                        e.preventDefault();\n                    }\n                    break;\n            }\n        });\n\n        this.addManagedListener(this.eWrapper, 'click', clickHandler);\n        this.addManagedListener(this.eLabel, 'click', clickHandler);\n\n        if (this.pickerIcon) {\n            const icon = createIconNoSpan(this.pickerIcon, this.gridOptionsWrapper);\n            if (icon) {\n                this.eIcon.appendChild(icon);\n            }\n        }\n    }\n\n    protected refreshLabel() {\n        if (exists(this.getLabel())) {\n            setAriaLabelledBy(this.eWrapper, this.getLabelId());\n        } else {\n            this.eWrapper.removeAttribute('aria-labelledby');\n        }\n\n        super.refreshLabel();\n    }\n\n    public setAriaLabel(label: string): this {\n        setAriaLabel(this.eWrapper, label);\n\n        return this;\n    }\n\n    public setInputWidth(width: number | 'flex'): this {\n        setElementWidth(this.eWrapper, width);\n        return this;\n    }\n\n    public getFocusableElement(): HTMLElement {\n        return this.eWrapper;\n    }\n}\n"]}