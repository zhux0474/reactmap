{"version":3,"sources":["../../src/ts/widgets/tabGuardCtrl.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA+C;AAC/C,8CAA8D;AAE9D,6DAA4D;AAM5D;IAAkC,gCAAQ;IAoBtC,sBAAY,MAWX;QAXD,YAYI,iBAAO,SA2BV;QAzCO,uBAAiB,GAAY,KAAK,CAAC;QAiBnC,IAAA,kBAAI,EACJ,4BAAS,EACT,kCAAY,EACZ,4CAAiB,EACjB,4BAAS,EACT,8BAAU,EACV,8DAA0B,EAC1B,kCAAY,EACZ,oCAAa,EACb,4CAAiB,CACV;QAEX,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,KAAI,CAAC,yBAAyB,GAAG,iBAAiB,CAAC;QACnD,KAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAE3C,KAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,KAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC;QACnC,KAAI,CAAC,kCAAkC,GAAG,0BAA0B,CAAC;QACrE,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;QACzC,KAAI,CAAC,qBAAqB,GAAG,aAAa,CAAC;;IAC/C,CAAC;IAGO,oCAAa,GAArB;QADA,iBAkBC;QAhBG,IAAI,CAAC,iBAAiB,CAAC,IAAI,yCAAmB,CAC1C,IAAI,CAAC,iBAAiB,EACtB;YACI,0BAA0B,EAAE,cAAM,OAAA,KAAI,CAAC,0BAA0B,EAAE,EAAjC,CAAiC;YACnE,YAAY,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAApB,CAAoB;YACvC,aAAa,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAArB,CAAqB;YACzC,SAAS,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAjB,CAAiB;YACjC,UAAU,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAlB,CAAkB;SACtC,CACJ,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CACvC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,OAAO,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,EAAhE,CAAgE,CAC5E,CAAC;IACN,CAAC;IAEO,oCAAa,GAArB,UAAsB,CAAgB;QAClC,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC5B,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;SACjC;IACL,CAAC;IAEO,yCAAkB,GAA1B;QACI,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IACvE,CAAC;IAEO,iDAA0B,GAAlC;QACI,IAAI,IAAI,CAAC,kCAAkC,EAAE;YACzC,OAAO,IAAI,CAAC,kCAAkC,EAAE,CAAC;SACpD;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,wCAAiB,GAAzB;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;IAClD,CAAC;IAEO,0CAAmB,GAA3B;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC5B,CAAC;IAEO,8BAAO,GAAf,UAAgB,CAAa;QACzB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,OAAO;SACV;QAED,IAAM,UAAU,GAAG,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC;QAClD,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAChC,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC;SAC9C;aAAM;YACH,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;SACtC;IACL,CAAC;IAEO,gCAAS,GAAjB,UAAkB,CAAa;QAC3B,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;YAAE,OAAO;SAAE;QAEhE,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAEO,iCAAU,GAAlB,UAAmB,CAAa;QAC5B,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;YAAE,OAAO;SAAE;QAElE,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,aAA4B,CAAC,EAAE;YAClE,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;IACL,CAAC;IAEM,mCAAY,GAAnB,UAAoB,CAAgB;QAApC,iBA0BC;QAzBG,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC3B,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO;SACV;QAED,IAAI,CAAC,CAAC,gBAAgB,EAAE;YAAE,OAAO;SAAE;QAEnC,IAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAErD,IAAI,kBAAkB,EAAE;YACpB,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAE1D,IAAI,kBAAkB,EAAE;YACpB,0GAA0G;YAC1G,qDAAqD;YACrD,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,iBAAiB,EAAE,EAAxB,CAAwB,EAAE,CAAC,CAAC,CAAC;SACjD;QAED,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO;SAAE;QAE1B,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAEM,sCAAe,GAAtB;QACI,OAAO,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;IACrD,CAAC;IAEM,wCAAiB,GAAxB,UAAyB,UAAkB;QAAlB,2BAAA,EAAA,kBAAkB;QACvC,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAElF,IAAI,IAAI,CAAC,kBAAkB,EAAE,EAAE;YAC3B,wEAAwE;YACxE,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACvB,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7C;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YAAE,OAAO;SAAE;QAElC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7D,CAAC;IAEM,8CAAuB,GAA9B,UAA+B,SAAmB;QAC9C,OAAO,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,iBAAiB,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IAChG,CAAC;IAEM,+CAAwB,GAA/B,UAAgC,EAAmB;QAAnB,mBAAA,EAAA,UAAmB;QAC/C,IAAM,eAAe,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;QAEhE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE9B,eAAe,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IA7L0B;QAA1B,mBAAS,CAAC,cAAc,CAAC;sDAA6C;IA4DvE;QADC,uBAAa;qDAkBb;IAkHL,mBAAC;CAjMD,AAiMC,CAjMiC,mBAAQ,GAiMzC;AAjMY,oCAAY","file":"tabGuardCtrl.js","sourcesContent":["import { BeanStub } from \"../context/beanStub\";\nimport { Autowired, PostConstruct } from \"../context/context\";\nimport { FocusService } from \"../focusService\";\nimport { ManagedFocusFeature } from \"./managedFocusFeature\";\n\nexport interface ITabGuard {\n    setTabIndex(tabIndex?: string): void;\n}\n\nexport class TabGuardCtrl extends BeanStub {\n\n    @Autowired('focusService') private readonly focusService: FocusService;\n\n    private readonly comp: ITabGuard;\n    private readonly eTopGuard: HTMLElement;\n    private readonly eBottomGuard: HTMLElement;\n\n    private readonly eFocusableElement: HTMLElement;\n\n    private readonly providedFocusInnerElement?: (fromBottom: boolean) => void;\n    private readonly providedFocusIn?: (event: FocusEvent) => boolean;\n    private readonly providedFocusOut?: (event: FocusEvent) => boolean;\n\n    private readonly providedShouldStopEventPropagation?: () => boolean;\n    private readonly providedOnTabKeyDown?: (e: KeyboardEvent) => void;\n    private readonly providedHandleKeyDown?: (e: KeyboardEvent) => void;\n\n    private skipTabGuardFocus: boolean = false;\n\n    constructor(params: {\n        comp: ITabGuard,\n        eTopGuard: HTMLElement,\n        eBottomGuard: HTMLElement,\n        eFocusableElement: HTMLElement,\n        focusInnerElement?: (fromBottom: boolean) => void,\n        onFocusIn?: (event: FocusEvent) => boolean,\n        onFocusOut?: (event: FocusEvent) => boolean,\n        shouldStopEventPropagation?: () => boolean,\n        onTabKeyDown?: (e: KeyboardEvent) => void,\n        handleKeyDown?: (e: KeyboardEvent) => void\n    }) {\n        super();\n\n        const {\n            comp,\n            eTopGuard,\n            eBottomGuard,\n            focusInnerElement,\n            onFocusIn,\n            onFocusOut,\n            shouldStopEventPropagation,\n            onTabKeyDown,\n            handleKeyDown,\n            eFocusableElement\n        } = params;\n\n        this.comp = comp;\n\n        this.eTopGuard = eTopGuard;\n        this.eBottomGuard = eBottomGuard;\n        this.providedFocusInnerElement = focusInnerElement;\n        this.eFocusableElement = eFocusableElement;\n\n        this.providedFocusIn = onFocusIn;\n        this.providedFocusOut = onFocusOut;\n        this.providedShouldStopEventPropagation = shouldStopEventPropagation;\n        this.providedOnTabKeyDown = onTabKeyDown;\n        this.providedHandleKeyDown = handleKeyDown;\n    }\n\n    @PostConstruct\n    private postConstruct() {\n        this.createManagedBean(new ManagedFocusFeature(\n            this.eFocusableElement,\n            {\n                shouldStopEventPropagation: () => this.shouldStopEventPropagation(),\n                onTabKeyDown: e => this.onTabKeyDown(e),\n                handleKeyDown: e => this.handleKeyDown(e),\n                onFocusIn: e => this.onFocusIn(e),\n                onFocusOut: e => this.onFocusOut(e)\n            }\n        ));\n\n        this.activateTabGuards();\n\n        [this.eTopGuard, this.eBottomGuard].forEach(\n            guard => this.addManagedListener(guard, 'focus', this.onFocus.bind(this))\n        );\n    }\n\n    private handleKeyDown(e: KeyboardEvent): void {\n        if (this.providedHandleKeyDown) {\n            this.providedHandleKeyDown(e);\n        }\n    }\n\n    private tabGuardsAreActive(): boolean {\n        return !!this.eTopGuard && this.eTopGuard.hasAttribute('tabIndex');\n    }\n\n    private shouldStopEventPropagation(): boolean {\n        if (this.providedShouldStopEventPropagation) {\n            return this.providedShouldStopEventPropagation();\n        }\n        return false;\n    }\n\n    private activateTabGuards(): void {\n        this.comp.setTabIndex(this.getGridTabIndex());\n    }\n\n    private deactivateTabGuards(): void {\n        this.comp.setTabIndex();\n    }\n\n    private onFocus(e: FocusEvent): void {\n        if (this.skipTabGuardFocus) {\n            this.skipTabGuardFocus = false;\n            return;\n        }\n\n        const fromBottom = e.target === this.eBottomGuard;\n        if (this.providedFocusInnerElement) {\n            this.providedFocusInnerElement(fromBottom);\n        } else {\n            this.focusInnerElement(fromBottom);\n        }\n    }\n\n    private onFocusIn(e: FocusEvent): void {\n        if (this.providedFocusIn && this.providedFocusIn(e)) { return; }\n\n        this.deactivateTabGuards();\n    }\n\n    private onFocusOut(e: FocusEvent): void {\n        if (this.providedFocusOut && this.providedFocusOut(e)) { return; }\n\n        if (!this.eFocusableElement.contains(e.relatedTarget as HTMLElement)) {\n            this.activateTabGuards();\n        }\n    }\n\n    public onTabKeyDown(e: KeyboardEvent): void {\n        if (this.providedOnTabKeyDown) {\n            this.providedOnTabKeyDown(e);\n            return;\n        }\n\n        if (e.defaultPrevented) { return; }\n\n        const tabGuardsAreActive = this.tabGuardsAreActive();\n\n        if (tabGuardsAreActive) {\n            this.deactivateTabGuards();\n        }\n\n        const nextRoot = this.getNextFocusableElement(e.shiftKey);\n\n        if (tabGuardsAreActive) {\n            // ensure the tab guards are only re-instated once the event has finished processing, to avoid the browser\n            // tabbing to the tab guard from inside the component\n            setTimeout(() => this.activateTabGuards(), 0);\n        }\n\n        if (!nextRoot) { return; }\n\n        nextRoot.focus();\n        e.preventDefault();\n    }\n\n    public getGridTabIndex(): string {\n        return this.gridOptionsWrapper.getGridTabIndex();\n    }\n\n    public focusInnerElement(fromBottom = false): void {\n        const focusable = this.focusService.findFocusableElements(this.eFocusableElement);\n\n        if (this.tabGuardsAreActive()) {\n            // remove tab guards from this component from list of focusable elements\n            focusable.splice(0, 1);\n            focusable.splice(focusable.length - 1, 1);\n        }\n\n        if (!focusable.length) { return; }\n\n        focusable[fromBottom ? focusable.length - 1 : 0].focus();\n    }\n\n    public getNextFocusableElement(backwards?: boolean): HTMLElement | null {\n        return this.focusService.findNextFocusableElement(this.eFocusableElement, false, backwards);\n    }\n\n    public forceFocusOutOfContainer(up: boolean = false): void {\n        const tabGuardToFocus = up ? this.eTopGuard : this.eBottomGuard;\n\n        this.activateTabGuards();\n        this.skipTabGuardFocus = true;\n\n        tabGuardToFocus.focus();\n    }\n\n}"]}