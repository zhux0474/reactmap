{"version":3,"sources":["../../src/ts/widgets/agInputNumberField.ts"],"names":[],"mappings":"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","file":"agInputNumberField.js","sourcesContent":["import { AgInputTextField, ITextInputField } from \"./agInputTextField\";\nimport { addOrRemoveAttribute } from '../utils/dom';\n\nexport class AgInputNumberField extends AgInputTextField {\n    private precision?: number;\n    private step?: number;\n    private min?: number;\n    private max?: number;\n\n    constructor(config?: ITextInputField) {\n        super(config, 'ag-number-field', 'number');\n    }\n\n    postConstruct() {\n        super.postConstruct();\n        this.addManagedListener(this.eInput, 'blur', () => {\n            const floatedValue = parseFloat(this.eInput.value);\n            const value = isNaN(floatedValue) ? '' : this.normalizeValue(floatedValue.toString());\n\n            if (this.value !== value) {\n                this.setValue(value);\n            }\n        });\n    }\n\n    public normalizeValue(value: string): string {\n        if (value === '') { return ''; }\n\n        if (this.precision) {\n            value = this.adjustPrecision(value);\n        }\n\n        const val = parseFloat(value);\n\n        if (this.min != null && val < this.min) {\n            value = this.min.toString();\n        } else if (this.max != null && val > this.max) {\n            value = this.max.toString();\n        }\n\n        return value;\n    }\n\n    private adjustPrecision(value: string): string {\n        if (this.precision) {\n            const floatString = parseFloat(value).toFixed(this.precision);\n            value = parseFloat(floatString).toString();\n        }\n\n        return value;\n    }\n\n    public setMin(min: number | undefined): this {\n        if (this.min === min) {\n            return this;\n        }\n\n        this.min = min;\n\n        addOrRemoveAttribute(this.eInput, 'min', min);\n\n        return this;\n    }\n\n    public setMax(max: number | undefined): this {\n        if (this.max === max) {\n            return this;\n        }\n\n        this.max = max;\n\n        addOrRemoveAttribute(this.eInput, 'max', max);\n\n        return this;\n    }\n\n    public setPrecision(precision: number): this {\n        this.precision = precision;\n\n        return this;\n    }\n\n    public setStep(step?: number): this {\n        if (this.step === step) {\n            return this;\n        }\n\n        this.step = step;\n\n        addOrRemoveAttribute(this.eInput, 'step', step);\n\n        return this;\n    }\n\n    public setValue(value: string, silent?: boolean): this {\n        value = this.adjustPrecision(value);\n        const normalizedValue = this.normalizeValue(value);\n\n        if (value != normalizedValue) { return this; }\n\n        return super.setValue(value, silent);\n    }\n}\n"]}