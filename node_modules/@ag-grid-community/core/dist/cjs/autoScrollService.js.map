{"version":3,"sources":["../../src/ts/autoScrollService.ts"],"names":[],"mappings":"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","file":"autoScrollService.js","sourcesContent":["export class AutoScrollService {\n\n    private tickingInterval: number | null = null;\n\n    private scrollHorizontally: boolean;\n    private scrollVertically: boolean;\n\n    private tickLeft: boolean;\n    private tickRight: boolean;\n    private tickUp: boolean;\n    private tickDown: boolean;\n\n    private scrollContainer: HTMLElement;\n    private scrollByTick: number;\n\n    private getVerticalPosition: () => number;\n    private setVerticalPosition: (position: number) => void;\n\n    private getHorizontalPosition: () => number;\n    private setHorizontalPosition: (position: number) => void;\n\n    private shouldSkipVerticalScroll: () => boolean;\n    private shouldSkipHorizontalScroll: () => boolean;\n\n    private onScrollCallback: (() => void) | null = null;\n\n    private tickCount: number;\n\n    constructor(params: {\n        scrollContainer: HTMLElement,\n        scrollAxis: 'x' | 'y' | 'xy',\n        scrollByTick?: number,\n        getVerticalPosition?: () => number,\n        setVerticalPosition?: (position: number) => void,\n        getHorizontalPosition?: () => number,\n        setHorizontalPosition?: (position: number) => void,\n        shouldSkipVerticalScroll?: () => boolean,\n        shouldSkipHorizontalScroll?: () => boolean,\n        onScrollCallback?: () => void\n    }) {\n        this.scrollContainer = params.scrollContainer;\n        this.scrollHorizontally = params.scrollAxis.indexOf('x') !== -1;\n        this.scrollVertically = params.scrollAxis.indexOf('y') !== -1;\n\n        this.scrollByTick = params.scrollByTick != null ? params.scrollByTick : 20;\n        \n        if (params.onScrollCallback) {\n            this.onScrollCallback = params.onScrollCallback;\n        }\n\n        if (this.scrollVertically) {\n            this.getVerticalPosition = params.getVerticalPosition!;\n            this.setVerticalPosition = params.setVerticalPosition!;\n        }\n\n        if (this.scrollHorizontally) {\n            this.getHorizontalPosition = params.getHorizontalPosition!;\n            this.setHorizontalPosition = params.setHorizontalPosition!;\n        }\n        \n        this.shouldSkipVerticalScroll = params.shouldSkipVerticalScroll || (() => false);\n        this.shouldSkipHorizontalScroll = params.shouldSkipHorizontalScroll || (() => false);\n    }\n\n    public check(mouseEvent: MouseEvent, forceSkipVerticalScroll: boolean = false): void {\n        const skipVerticalScroll = forceSkipVerticalScroll || this.shouldSkipVerticalScroll();\n\n        if (skipVerticalScroll && this.shouldSkipHorizontalScroll()) { return; }\n\n        const rect = this.scrollContainer.getBoundingClientRect();\n        const scrollTick = this.scrollByTick;\n\n        this.tickLeft = mouseEvent.clientX < (rect.left + scrollTick);\n        this.tickRight = mouseEvent.clientX > (rect.right - scrollTick);\n        this.tickUp = mouseEvent.clientY < (rect.top + scrollTick) && !skipVerticalScroll;\n        this.tickDown = mouseEvent.clientY > (rect.bottom - scrollTick) && !skipVerticalScroll;\n\n        if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n            this.ensureTickingStarted();\n        } else {\n            this.ensureCleared();\n        }\n    }\n\n    private ensureTickingStarted(): void {\n        if (this.tickingInterval === null) {\n            this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n            this.tickCount = 0;\n        }\n    }\n\n    private doTick(): void {\n        this.tickCount++;\n\n        let tickAmount: number;\n\n        tickAmount = this.tickCount > 20 ? 200 : (this.tickCount > 10 ? 80 : 40);\n\n        if (this.scrollVertically) {\n            const vScrollPosition = this.getVerticalPosition();\n            if (this.tickUp) {\n                this.setVerticalPosition(vScrollPosition - tickAmount);\n            }\n    \n            if (this.tickDown) {\n                this.setVerticalPosition(vScrollPosition + tickAmount);\n            }\n        }\n\n        if (this.scrollHorizontally) {\n            const hScrollPosition = this.getHorizontalPosition();\n            if (this.tickLeft) {\n                this.setHorizontalPosition(hScrollPosition - tickAmount);\n            }\n    \n            if (this.tickRight) {\n                this.setHorizontalPosition(hScrollPosition + tickAmount);\n            }\n        }\n\n        if (this.onScrollCallback) {\n            this.onScrollCallback();\n        }\n    }\n\n    public ensureCleared(): void {\n        if (this.tickingInterval) {\n            window.clearInterval(this.tickingInterval);\n            this.tickingInterval = null;\n        }\n    }\n}\n"]}