{"version":3,"sources":["../../src/ts/rendering/cell/cellComp.ts"],"names":[],"mappings":"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","file":"cellComp.js","sourcesContent":["import { Column } from \"../../entities/column\";\nimport { RowNode } from \"../../entities/rowNode\";\nimport { Beans } from \"./../beans\";\nimport { Component } from \"../../widgets/component\";\nimport { ICellEditorComp, ICellEditorParams } from \"../../interfaces/iCellEditor\";\nimport { ICellRendererComp } from \"./../cellRenderers/iCellRenderer\";\nimport { CheckboxSelectionComponent } from \"./../checkboxSelectionComponent\";\nimport { RowCtrl } from \"./../row/rowCtrl\";\nimport { RowDragComp } from \"./../row/rowDragComp\";\nimport { PopupEditorWrapper } from \"./../cellEditors/popupEditorWrapper\";\nimport { DndSourceComp } from \"./../dndSourceComp\";\nimport { TooltipParentComp } from \"../../widgets/customTooltipFeature\";\nimport { setAriaColIndex, setAriaDescribedBy, setAriaSelected, setAriaExpanded, setAriaRole } from \"../../utils/aria\";\nimport { escapeString } from \"../../utils/string\";\nimport { missing } from \"../../utils/generic\";\nimport { addStylesToElement, clearElement, removeFromParent } from \"../../utils/dom\";\nimport { isBrowserIE } from \"../../utils/browser\";\nimport { CellCtrl, ICellComp } from \"./cellCtrl\";\nimport { UserCompDetails } from \"../../components/framework/userComponentFactory\";\nimport { _ } from \"../../utils\";\n\nexport class CellComp extends Component implements TooltipParentComp {\n\n    private eCellWrapper: HTMLElement | null;\n    private eCellValue: HTMLElement;\n\n    private beans: Beans;\n    private column: Column;\n    private rowNode: RowNode;\n    private eRow: HTMLElement;\n\n    private includeSelection: boolean;\n    private includeRowDrag: boolean;\n    private includeDndSource: boolean;\n\n    private forceWrapper: boolean;\n\n    private checkboxSelectionComp: CheckboxSelectionComponent | undefined;\n    private dndSourceComp: DndSourceComp | undefined;\n    private rowDraggingComp: RowDragComp | undefined;\n\n    private hideEditorPopup: Function | null | undefined;\n    private cellEditorPopupWrapper: PopupEditorWrapper | undefined;\n    private cellEditor: ICellEditorComp | null | undefined;\n    private cellEditorGui: HTMLElement | null;\n\n    private cellRenderer: ICellRendererComp | null | undefined;\n    private cellRendererGui: HTMLElement | null;\n    private cellRendererClass: any;\n\n    private autoHeightCell: boolean;\n\n    private rowCtrl: RowCtrl | null;\n\n    private scope: any = null;\n\n    private cellCtrl: CellCtrl;\n\n    private firstRender: boolean;\n\n    // for angular 1 only\n    private angularCompiledElement: any;\n\n    // every time we go into edit mode, or back again, this gets incremented.\n    // it's the components way of dealing with the async nature of framework components,\n    // so if a framework component takes a while to be created, we know if the object\n    // is still relevant when creating is finished. eg we could click edit / un-edit 20\n    // times before the first React edit component comes back - we should discard\n    // the first 19.\n    private rendererVersion = 0;\n    private editorVersion = 0;\n\n    constructor(scope: any, beans: Beans, cellCtrl: CellCtrl,\n        autoHeightCell: boolean, printLayout: boolean, eRow: HTMLElement, editingRow: boolean) {\n        super();\n        this.scope = scope;\n        this.beans = beans;\n        this.column = cellCtrl.getColumn();\n        this.rowNode = cellCtrl.getRowNode();\n        this.rowCtrl = cellCtrl.getRowCtrl();\n        this.autoHeightCell = autoHeightCell;\n        this.eRow = eRow;\n\n        this.setTemplate(/* html */`<div comp-id=\"${this.getCompId()}\"/>`);\n\n        const eGui = this.getGui();\n        const style = eGui.style;\n\n        this.eCellValue = eGui;\n\n        const setAttribute = (name: string, value: string | null | undefined, element?: HTMLElement) => {\n            const actualElement = element ? element : eGui;\n            if (value != null && value != '') {\n                actualElement.setAttribute(name, value);\n            } else {\n                actualElement.removeAttribute(name);\n            }\n        };\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n            setUserStyles: styles => addStylesToElement(eGui, styles),\n            setAriaSelected: selected => setAriaSelected(eGui, selected),\n            setAriaExpanded: selected => setAriaExpanded(eGui, selected),\n            getFocusableElement: () => this.getFocusableElement(),\n            setLeft: left => style.left = left,\n            setWidth: width => style.width = width,\n            setAriaColIndex: index => setAriaColIndex(this.getGui(), index),\n            setHeight: height => style.height = height,\n            setZIndex: zIndex => style.zIndex = zIndex,\n            setTabIndex: tabIndex => setAttribute('tabindex', tabIndex.toString()),\n            setRole: role => setAriaRole(eGui, role),\n            setColId: colId => setAttribute('col-id', colId),\n            setTitle: title => setAttribute('title', title),\n            setUnselectable: value => setAttribute('unselectable', value, this.eCellValue),\n            setTransition: transition => style.transition = transition ? transition : '',\n\n            setIncludeSelection: include => this.includeSelection = include,\n            setIncludeRowDrag: include => this.includeRowDrag = include,\n            setIncludeDndSource: include => this.includeDndSource = include,\n            setForceWrapper: force => this.forceWrapper = force,\n\n            setRenderDetails: (compDetails, valueToDisplay, force) =>\n                this.setRenderDetails(compDetails, valueToDisplay, force),\n            setEditDetails: (compDetails, popup, position) =>\n                this.setEditDetails(compDetails, popup, position),\n\n            getCellEditor: () => this.cellEditor || null,\n            getCellRenderer: () => this.cellRenderer || null,\n            getParentOfValue: () => this.eCellValue\n        };\n\n        this.cellCtrl = cellCtrl;\n        cellCtrl.setComp(compProxy, this.scope, this.getGui(), printLayout, editingRow);\n    }\n\n    private setRenderDetails(compDetails: UserCompDetails | undefined, valueToDisplay: any, forceNewCellRendererInstance: boolean): void {\n        // this can happen if the users asks for the cell to refresh, but we are not showing the vale as we are editing\n        const isInlineEditing = this.cellEditor && !this.cellEditorPopupWrapper;\n        if (isInlineEditing) { return; }\n\n        // this means firstRender will be true for one pass only, as it's initialised to undefined\n        this.firstRender = this.firstRender == null;\n\n        const usingAngular1Template = this.isUsingAngular1Template();\n\n        // if display template has changed, means any previous Cell Renderer is in the wrong location\n        const controlWrapperChanged = this.setupControlsWrapper();\n\n        // all of these have dependencies on the eGui, so only do them after eGui is set\n        if (compDetails) {\n            const neverRefresh = forceNewCellRendererInstance || controlWrapperChanged;\n            const cellRendererRefreshSuccessful = neverRefresh ? false : this.refreshCellRenderer(compDetails);\n            if (!cellRendererRefreshSuccessful) {\n                this.destroyRenderer();\n                this.createCellRendererInstance(compDetails);\n            }\n        } else {\n            this.destroyRenderer();\n            if (usingAngular1Template) {\n                this.insertValueUsingAngular1Template();\n            } else {\n                this.insertValueWithoutCellRenderer(valueToDisplay);\n            }\n        }\n    }\n\n    private setEditDetails(compDetails: UserCompDetails | undefined, popup?: boolean, position?: string): void {\n        if (compDetails) {\n            this.createCellEditorInstance(compDetails, popup, position);\n        } else {\n            this.destroyEditor();\n        }\n    }\n\n    private removeControlsWrapper(): void {\n        this.eCellValue = this.getGui();\n        this.eCellWrapper = null;\n\n        this.checkboxSelectionComp = this.beans.context.destroyBean(this.checkboxSelectionComp);\n        this.dndSourceComp = this.beans.context.destroyBean(this.dndSourceComp);\n        this.rowDraggingComp = this.beans.context.destroyBean(this.rowDraggingComp);\n    }\n\n    // returns true if wrapper was changed\n    private setupControlsWrapper(): boolean {\n        const usingWrapper = this.includeRowDrag || this.includeDndSource || this.includeSelection || this.forceWrapper;\n\n        const changed = true;\n        const notChanged = false;\n\n        this.addOrRemoveCssClass('ag-cell-value', !usingWrapper);\n\n        // turn wrapper on\n        if (usingWrapper && !this.eCellWrapper) {\n            this.addControlsWrapper();\n            return changed;\n        }\n\n        // turn wrapper off\n        if (!usingWrapper && this.eCellWrapper) {\n            this.removeControlsWrapper();\n            return changed;\n        }\n\n        return notChanged;\n    }\n\n    private addControlsWrapper(): void {\n        const eGui = this.getGui();\n\n        eGui.innerHTML = /* html */\n            `<div ref=\"eCellWrapper\" class=\"ag-cell-wrapper\" role=\"presentation\">\n                <span ref=\"eCellValue\" class=\"ag-cell-value\" role=\"presentation\"></span>\n            </div>`;\n\n        this.eCellValue = this.getRefElement('eCellValue');\n        this.eCellWrapper = this.getRefElement('eCellWrapper');\n\n        if (!this.forceWrapper) {\n            this.eCellValue.setAttribute('unselectable', 'on');\n        }\n\n        const id = this.eCellValue.id = `cell-${this.getCompId()}`;\n        const describedByIds: string[] = [];\n\n        if (this.includeRowDrag) {\n            this.rowDraggingComp = this.cellCtrl.createRowDragComp();\n            if (this.rowDraggingComp) {\n                // put the checkbox in before the value\n                this.eCellWrapper!.insertBefore(this.rowDraggingComp.getGui(), this.eCellValue);\n            }\n        }\n\n        if (this.includeDndSource) {\n            this.dndSourceComp = this.cellCtrl.createDndSource();\n            // put the checkbox in before the value\n            this.eCellWrapper!.insertBefore(this.dndSourceComp.getGui(), this.eCellValue);\n        }\n\n        if (this.includeSelection) {\n            this.checkboxSelectionComp = this.cellCtrl.createSelectionCheckbox();\n            this.eCellWrapper!.insertBefore(this.checkboxSelectionComp.getGui(), this.eCellValue);\n            describedByIds.push(this.checkboxSelectionComp.getCheckboxId());\n        }\n\n        describedByIds.push(id);\n\n        setAriaDescribedBy(this.getGui(), describedByIds.join(' '));\n    }\n\n    private createCellEditorInstance(compDetails: UserCompDetails, popup?: boolean, position?: string): void {\n        const versionCopy = this.editorVersion;\n\n        const cellEditorPromise = compDetails.newAgStackInstance();\n        if (!cellEditorPromise) { return; } // if empty, userComponentFactory already did a console message\n\n        const { params } = compDetails;\n        cellEditorPromise.then(c => this.afterCellEditorCreated(versionCopy, c!, params, popup, position));\n\n        // if we don't do this, and editor component is async, then there will be a period\n        // when the component isn't present and keyboard navigation won't work - so example\n        // of user hitting tab quickly (more quickly than renderers getting created) won't work\n        const cellEditorAsync = missing(this.cellEditor);\n        if (cellEditorAsync && params.cellStartedEdit) {\n            this.cellCtrl.focusCell(true);\n        }\n    }\n\n    private insertValueWithoutCellRenderer(valueToDisplay: any): void {\n        const escapedValue = valueToDisplay != null ? escapeString(valueToDisplay) : null;\n        if (escapedValue != null) {\n            this.eCellValue.innerHTML = escapedValue;\n        } else {\n            clearElement(this.eCellValue);\n        }\n    }\n\n    private insertValueUsingAngular1Template(): void {\n        const { template, templateUrl } = this.column.getColDef();\n\n        let templateToInsert: string | undefined;\n\n        if (template != null) {\n            templateToInsert = template;\n        } else if (templateUrl != null) {\n            // first time this happens it will return nothing, as the template will still be loading async,\n            // however once loaded it will refresh the cell and second time around it will be returned sync\n            // as in cache.\n            templateToInsert = this.beans.templateService.getTemplate(templateUrl,\n                () => this.cellCtrl.refreshCell({forceRefresh: true}));\n        } else {\n            // should never happen, as we only enter this method when template or templateUrl exist\n        }\n\n        if (templateToInsert != null) {\n            this.eCellValue.innerHTML = templateToInsert;\n            this.updateAngular1ScopeAndCompile();\n        }\n    }\n\n    private destroyEditorAndRenderer(): void {\n        this.destroyRenderer();\n        this.destroyEditor();\n    }\n\n    private destroyRenderer(): void {\n        const {context} = this.beans;\n        this.cellRenderer = context.destroyBean(this.cellRenderer);\n        removeFromParent(this.cellRendererGui);\n        this.cellRendererGui = null;\n        this.rendererVersion++;\n    }\n\n    private destroyEditor(): void {\n        const {context} = this.beans;\n\n        if (this.hideEditorPopup) { this.hideEditorPopup(); }\n        this.hideEditorPopup = undefined;\n\n        this.cellEditor = context.destroyBean(this.cellEditor);\n        this.cellEditorPopupWrapper = context.destroyBean(this.cellEditorPopupWrapper);\n\n        removeFromParent(this.cellEditorGui);\n        this.cellEditorGui = null;\n\n        this.editorVersion++;\n    }\n\n    private refreshCellRenderer(compClassAndParams: UserCompDetails): boolean {\n        if (this.cellRenderer == null || this.cellRenderer.refresh == null) { return false; }\n\n        // if different Cell Renderer configured this time (eg user is using selector, and\n        // returns different component) then don't refresh, force recreate of Cell Renderer\n        if (this.cellRendererClass !== compClassAndParams.componentClass) { return false; }\n\n        // take any custom params off of the user\n        const result = this.cellRenderer.refresh(compClassAndParams.params);\n\n        // NOTE on undefined: previous version of the cellRenderer.refresh() interface\n        // returned nothing, if the method existed, we assumed it refreshed. so for\n        // backwards compatibility, we assume if method exists and returns nothing,\n        // that it was successful.\n        return result === true || result === undefined;\n    }\n\n    private createCellRendererInstance(compDetails: UserCompDetails): void {\n        // never use task service if angularCompileRows=true, as that assume the cell renderers\n        // are finished when the row is created. also we never use it if animation frame service\n        // is turned off.\n        // and lastly we never use it if doing auto-height, as the auto-height service checks the\n        // row height directly after the cell is created, it doesn't wait around for the tasks to complete\n        const angularCompileRows = this.beans.gridOptionsWrapper.isAngularCompileRows();\n        const suppressAnimationFrame = this.beans.gridOptionsWrapper.isSuppressAnimationFrame();\n        const useTaskService = !angularCompileRows && !suppressAnimationFrame && !this.autoHeightCell;\n\n        const displayComponentVersionCopy = this.rendererVersion;\n\n        const {componentClass} = compDetails;\n\n        const createCellRendererFunc = () => {\n            const staleTask = this.rendererVersion !== displayComponentVersionCopy || !this.isAlive();\n            if (staleTask) { return; }\n\n            // this can return null in the event that the user has switched from a renderer component to nothing, for example\n            // when using a cellRendererSelect to return a component or null depending on row data etc\n            const componentPromise = compDetails.newAgStackInstance();\n            const callback = this.afterCellRendererCreated.bind(this, displayComponentVersionCopy, componentClass);\n            if (componentPromise) {\n                componentPromise.then(callback);\n            }\n        };\n\n        // we only use task service when rendering for first time, which means it is not used when doing edits.\n        // if we changed this (always use task service) would make sense, however it would break tests, possibly\n        // test of users.\n        if (useTaskService && this.firstRender) {\n            this.beans.animationFrameService.createTask(createCellRendererFunc, this.rowNode.rowIndex!, 'createTasksP2');\n        } else {\n            createCellRendererFunc();\n        }\n    }\n\n    private isUsingAngular1Template(): boolean {\n        const colDef = this.column.getColDef();\n        const res = colDef.template != null || colDef.templateUrl != null;\n        return res;\n    }\n\n    public getCtrl(): CellCtrl {\n        return this.cellCtrl;\n    }\n\n    public getRowCtrl(): RowCtrl | null {\n        return this.rowCtrl;\n    }\n\n    public getCellRenderer(): ICellRendererComp | null | undefined {\n        return this.cellRenderer;\n    }\n\n    public getCellEditor(): ICellEditorComp | null | undefined {\n        return this.cellEditor;\n    }\n\n    private afterCellRendererCreated(cellRendererVersion: number, cellRendererClass: any, cellRenderer: ICellRendererComp): void {\n        const staleTask = !this.isAlive() || cellRendererVersion !== this.rendererVersion;\n\n        if (staleTask) {\n            this.beans.context.destroyBean(cellRenderer);\n            return;\n        }\n\n        this.cellRenderer = cellRenderer;\n        this.cellRendererClass = cellRendererClass;\n        this.cellRendererGui = this.cellRenderer.getGui();\n\n        if (this.cellRendererGui != null) {\n            clearElement(this.eCellValue);\n            this.eCellValue.appendChild(this.cellRendererGui);\n            this.updateAngular1ScopeAndCompile();\n        }\n    }\n\n    private afterCellEditorCreated(requestVersion: number, cellEditor: ICellEditorComp, params: ICellEditorParams, popup?: boolean, position?: string): void {\n\n        // if editingCell=false, means user cancelled the editor before component was ready.\n        // if versionMismatch, then user cancelled the edit, then started the edit again, and this\n        //   is the first editor which is now stale.\n        const staleComp = requestVersion !== this.editorVersion;\n\n        if (staleComp) {\n            this.beans.context.destroyBean(cellEditor);\n            return;\n        }\n\n        const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n        if (editingCancelledByUserComp) {\n            this.beans.context.destroyBean(cellEditor);\n            this.cellCtrl.stopEditing();\n            return;\n        }\n\n        if (!cellEditor.getGui) {\n            console.warn(`AG Grid: cellEditor for column ${this.column.getId()} is missing getGui() method`);\n            this.beans.context.destroyBean(cellEditor);\n            return;\n        }\n\n        this.cellEditor = cellEditor;\n        this.cellEditorGui = cellEditor.getGui();\n\n        const cellEditorInPopup = popup || (cellEditor.isPopup !== undefined && cellEditor.isPopup());\n        if (cellEditorInPopup) {\n            if (!popup) {\n                this.cellCtrl.hackSayEditingInPopup();\n            }\n            this.addPopupCellEditor(params, position);\n        } else {\n            this.addInCellEditor();\n        }\n\n        if (cellEditor.afterGuiAttached) {\n            cellEditor.afterGuiAttached();\n        }\n    }\n\n    private addInCellEditor(): void {\n        const eGui = this.getGui();\n\n        // if focus is inside the cell, we move focus to the cell itself\n        // before removing it's contents, otherwise errors could be thrown.\n        if (eGui.contains(document.activeElement)) {\n            eGui.focus();\n        }\n\n        this.destroyRenderer();\n        this.removeControlsWrapper();\n        this.clearCellElement();\n        if (this.cellEditorGui) {\n            eGui.appendChild(this.cellEditorGui);\n        }\n    }\n\n    private addPopupCellEditor(params: ICellEditorParams, position?: string): void {\n        if (this.beans.gridOptionsWrapper.isFullRowEdit()) {\n            console.warn('AG Grid: popup cellEditor does not work with fullRowEdit - you cannot use them both ' +\n                '- either turn off fullRowEdit, or stop using popup editors.');\n        }\n\n        const cellEditor = this.cellEditor!;\n\n        // if a popup, then we wrap in a popup editor and return the popup\n        this.cellEditorPopupWrapper = this.beans.context.createBean(new PopupEditorWrapper(params));\n        const ePopupGui = this.cellEditorPopupWrapper.getGui();\n        if (this.cellEditorGui) {\n            ePopupGui.appendChild(this.cellEditorGui);\n        }\n\n        const popupService = this.beans.popupService;\n\n        const useModelPopup = this.beans.gridOptionsWrapper.isStopEditingWhenCellsLoseFocus();\n\n        // see if position provided by colDef, if not then check old way of method on cellComp\n        const positionToUse = position != null ? position : cellEditor.getPopupPosition ? cellEditor.getPopupPosition() : 'over';\n\n        const positionParams = {\n            column: this.column,\n            rowNode: this.rowNode,\n            type: 'popupCellEditor',\n            eventSource: this.getGui(),\n            ePopup: ePopupGui,\n            keepWithinBounds: true\n        };\n\n        const positionCallback = position === 'under' ?\n            popupService.positionPopupUnderComponent.bind(popupService, positionParams)\n            : popupService.positionPopupOverComponent.bind(popupService, positionParams);\n\n        const translate = this.beans.gridOptionsWrapper.getLocaleTextFunc();\n\n        const addPopupRes = popupService.addPopup({\n            modal: useModelPopup,\n            eChild: ePopupGui,\n            closeOnEsc: true,\n            closedCallback: () => { this.cellCtrl.onPopupEditorClosed(); },\n            anchorToElement: this.getGui(),\n            positionCallback,\n            ariaLabel: translate('ariaLabelCellEditor', 'Cell Editor')\n        });\n        if (addPopupRes) {\n            this.hideEditorPopup = addPopupRes.hideFunc;\n        }\n    }\n\n    public detach(): void {\n        this.eRow.removeChild(this.getGui());\n    }\n\n    // if the row is also getting destroyed, then we don't need to remove from dom,\n    // as the row will also get removed, so no need to take out the cells from the row\n    // if the row is going (removing is an expensive operation, so only need to remove\n    // the top part)\n    //\n    // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n    public destroy(): void {\n        this.cellCtrl.stopEditing();\n\n        this.destroyEditorAndRenderer();\n        this.removeControlsWrapper();\n\n        if (this.angularCompiledElement) {\n            this.angularCompiledElement.remove();\n            this.angularCompiledElement = undefined;\n        }\n\n        super.destroy();\n    }\n\n    private clearCellElement(): void {\n        const eGui = this.getGui();\n\n        // if focus is inside the cell, we move focus to the cell itself\n        // before removing it's contents, otherwise errors could be thrown.\n        if (eGui.contains(document.activeElement) && !isBrowserIE()) {\n            eGui.focus({\n                preventScroll: true\n            });\n        }\n\n        clearElement(eGui);\n    }\n\n    private updateAngular1ScopeAndCompile() {\n        if (this.beans.gridOptionsWrapper.isAngularCompileRows() && this.scope) {\n            this.scope.data = { ...this.rowNode.data };\n\n            if (this.angularCompiledElement) {\n                this.angularCompiledElement.remove();\n            }\n\n            this.angularCompiledElement = this.beans.$compile(this.eCellValue.children)(this.scope);\n\n            // because this.scope is set, we are guaranteed GridBodyComp is vanilla JS, ie it's GridBodyComp.ts from AG Stack and and not react\n            this.beans.ctrlsService.getGridBodyCtrl().requestAngularApply();\n        }\n    }\n}\n"]}