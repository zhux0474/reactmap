{"version":3,"sources":["../../src/ts/rendering/cell/cellMouseListenerFeature.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA,uCAAuH;AACvH,+CAAiF;AACjF,uCAA8E;AAC9E,2CAAiF;AACjF,kCAAiC;AAGjC;IAA8C,4CAAK;IAQ/C,kCAAY,IAAc,EAAE,KAAY,EAAE,MAAc;QAAxD,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACzB,CAAC;IAEM,+CAAY,GAAnB,UAAoB,SAAiB,EAAE,UAAsB;QACzD,IAAI,kCAA0B,CAAC,UAAU,CAAC,EAAE;YAAE,OAAO;SAAE;QAEvD,QAAQ,SAAS,EAAE;YACf,KAAK,OAAO;gBACR,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;gBAC/B,MAAM;YACV,KAAK,WAAW,CAAC;YACjB,KAAK,YAAY;gBACb,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBAC7B,MAAM;YACV,KAAK,UAAU;gBACX,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;gBACrC,MAAM;YACV,KAAK,UAAU;gBACX,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC5B,MAAM;YACV,KAAK,WAAW;gBACZ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBAC7B,MAAM;SACb;IACL,CAAC;IAEO,gDAAa,GAArB,UAAsB,UAAsB;QACxC,sFAAsF;QACtF,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE;YAC5B,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;YACrC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,0CAA0C;YAEvE,OAAO;SACV;QAEK,IAAA,eAAiD,EAA/C,8BAAY,EAAE,0CAAiC,CAAC;QAExD,IAAM,gBAAgB,GAAqB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,eAAM,CAAC,kBAAkB,CAAC,CAAC;QAC5G,YAAY,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;QAE7C,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;QAEvC,IAAI,MAAM,CAAC,aAAa,EAAE;YACtB,0CAA0C;YAC1C,MAAM,CAAC,UAAU,CAAC,cAAM,OAAA,MAAM,CAAC,aAAc,CAAC,gBAAgB,CAAC,EAAvC,CAAuC,EAAE,CAAC,CAAC,CAAC;SACvE;QAED,IAAM,iBAAiB,GAAG,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,IAAI,MAAM,CAAC,eAAe,CAAC;eACrF,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;QAEjD,IAAI,iBAAiB,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;SACtC;IACL,CAAC;IAED,oEAAoE;IAC5D,sDAAmB,GAA3B;QACI,IAAI,CAAC,wBAAc,EAAE,IAAI,wBAAgB,CAAC,UAAU,CAAC,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QAExE,IAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,IAAM,GAAG,GAAG,SAAS,GAAG,IAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;QAC3D,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;QAEzC,OAAO,GAAG,CAAC;IACf,CAAC;IAEO,sDAAmB,GAA3B,UAA4B,UAAsB;QAC9C,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;QACvC,wCAAwC;QACxC,IAAM,sBAAsB,GAA2B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,eAAM,CAAC,yBAAyB,CAAC,CAAC;QAC/H,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;QAE9D,6CAA6C;QAC7C,IAAI,OAAO,MAAM,CAAC,mBAAmB,KAAK,UAAU,EAAE;YAClD,8CAA8C;YAC9C,MAAM,CAAC,UAAU,CAAC,cAAM,OAAC,MAAM,CAAC,mBAA2B,CAAC,sBAAsB,CAAC,EAA3D,CAA2D,EAAE,CAAC,CAAC,CAAC;SAC3F;QAED,IAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,iBAAiB,EAAE;eACrE,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;QAC5D,IAAI,iBAAiB,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;SACtC;IACL,CAAC;IAEO,8CAAW,GAAnB,UAAoB,UAAsB;QAC9B,IAAA,4BAAO,EAAE,4BAAO,EAAE,8BAAQ,CAAgB;QAClD,IAAM,MAAM,GAAG,UAAU,CAAC,MAAqB,CAAC;QAC1C,IAAA,eAA2C,EAAzC,8BAAY,EAAE,8BAA2B,CAAC;QAElD,oEAAoE;QACpE,IAAI,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAE;YAC9C,OAAO;SACV;QAED,IAAM,MAAM,GAAG,YAAY,IAAI,YAAY,CAAC,aAAa,EAAE,CAAC,MAAM,IAAE,CAAC,CAAC;QAEtE,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,EAAE;YACtB,uFAAuF;YACvF,qFAAqF;YACrF,+CAA+C;YAC/C,IAAM,iBAAiB,GAAG,CAAC,qBAAW,EAAE,IAAI,uBAAa,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,0BAAoB,CAAC,MAAM,CAAC,CAAC;YAE5H,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;SAC9C;QAED,wFAAwF;QACxF,sDAAsD;QACtD,IAAI,QAAQ,IAAI,MAAM,EAAE;YACpB,2CAA2C;YAC3C,UAAU,CAAC,cAAc,EAAE,CAAC;SAC/B;QAED,yFAAyF;QACzF,8EAA8E;QAC9E,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;YAAE,OAAO;SAAE;QAE5C,IAAI,YAAY,EAAE;YACd,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;YAEjD,IAAI,QAAQ,EAAE;gBACV,YAAY,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;aAClD;iBAAM;gBACH,IAAM,cAAc,GAAG,OAAO,IAAI,OAAO,CAAC;gBAC1C,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;aACzD;SACJ;QAED,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,eAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACpG,CAAC;IAEO,8DAA2B,GAAnC,UAAoC,UAAsB;QAC9C,IAAA,sCAAY,CAAgB;QAEpC,IAAI,YAAY,EAAE;YACd,IAAM,WAAW,GAAG,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC;YAEnF,IAAI,WAAW,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxC,OAAO,IAAI,CAAC;aACf;SACJ;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,iDAAc,GAAtB,UAAuB,MAAmB;QACtC,OAAO,2BAAqB,CAAC,MAAM,EAAE,uBAAuB,EAAE,CAAC,CAAC,CAAC;IACrE,CAAC;IAEO,6CAAU,GAAlB,UAAmB,UAAsB;QACrC,IAAI,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,EAAE;YAAE,OAAO;SAAE;QACxD,IAAM,iBAAiB,GAAsB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,eAAM,CAAC,oBAAoB,CAAC,CAAC;QAChH,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QACzD,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;IACnD,CAAC;IAEO,8CAAW,GAAnB,UAAoB,UAAsB;QACtC,IAAI,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,EAAE;YAAE,OAAO;SAAE;QACxD,IAAM,kBAAkB,GAAuB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,eAAM,CAAC,qBAAqB,CAAC,CAAC;QACnH,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;QAC1D,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9D,CAAC;IAEO,yDAAsB,GAA9B,UAA+B,CAAa;QACxC,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,aAAa,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QACpD,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpC,IAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAc,CAAC,CAAC;QAC3D,IAAM,yBAAyB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAqB,CAAC,CAAC;QACzE,OAAO,kBAAkB,IAAI,yBAAyB,CAAC;IAC3D,CAAC;IAEM,0CAAO,GAAd;IACA,CAAC;IACL,+BAAC;AAAD,CAzLA,AAyLC,CAzL6C,aAAK,GAyLlD;AAzLY,4DAAwB","file":"cellMouseListenerFeature.js","sourcesContent":["import { Column } from \"../../entities/column\";\nimport { CellClickedEvent, CellDoubleClickedEvent, CellMouseOutEvent, CellMouseOverEvent, Events } from \"../../events\";\nimport { isBrowserEdge, isBrowserIE, isIOSUserAgent } from \"../../utils/browser\";\nimport { isElementChildOfClass, isFocusableFormField } from \"../../utils/dom\";\nimport { isEventSupported, isStopPropagationForAgGrid } from \"../../utils/event\";\nimport { Beans } from \"../beans\";\nimport { CellCtrl } from \"./cellCtrl\";\n\nexport class CellMouseListenerFeature extends Beans {\n\n    private readonly cellCtrl: CellCtrl;\n    private readonly beans: Beans;\n    private readonly column: Column;\n\n    private lastIPadMouseClickEvent: number;\n\n    constructor(ctrl: CellCtrl, beans: Beans, column: Column) {\n        super();\n        this.cellCtrl = ctrl;\n        this.beans = beans;\n        this.column = column;\n    }\n\n    public onMouseEvent(eventName: string, mouseEvent: MouseEvent): void {\n        if (isStopPropagationForAgGrid(mouseEvent)) { return; }\n\n        switch (eventName) {\n            case 'click':\n                this.onCellClicked(mouseEvent);\n                break;\n            case 'mousedown':\n            case 'touchstart':\n                this.onMouseDown(mouseEvent);\n                break;\n            case 'dblclick':\n                this.onCellDoubleClicked(mouseEvent);\n                break;\n            case 'mouseout':\n                this.onMouseOut(mouseEvent);\n                break;\n            case 'mouseover':\n                this.onMouseOver(mouseEvent);\n                break;\n        }\n    }\n\n    private onCellClicked(mouseEvent: MouseEvent): void {\n        // iPad doesn't have double click - so we need to mimic it to enable editing for iPad.\n        if (this.isDoubleClickOnIPad()) {\n            this.onCellDoubleClicked(mouseEvent);\n            mouseEvent.preventDefault(); // if we don't do this, then iPad zooms in\n\n            return;\n        }\n\n        const { eventService, gridOptionsWrapper } = this.beans;\n\n        const cellClickedEvent: CellClickedEvent = this.cellCtrl.createEvent(mouseEvent, Events.EVENT_CELL_CLICKED);\n        eventService.dispatchEvent(cellClickedEvent);\n\n        const colDef = this.column.getColDef();\n\n        if (colDef.onCellClicked) {\n            // to make callback async, do in a timeout\n            window.setTimeout(() => colDef.onCellClicked!(cellClickedEvent), 0);\n        }\n\n        const editOnSingleClick = (gridOptionsWrapper.isSingleClickEdit() || colDef.singleClickEdit)\n            && !gridOptionsWrapper.isSuppressClickEdit();\n\n        if (editOnSingleClick) {\n            this.cellCtrl.startRowOrCellEdit();\n        }\n    }\n\n    // returns true if on iPad and this is second 'click' event in 200ms\n    private isDoubleClickOnIPad(): boolean {\n        if (!isIOSUserAgent() || isEventSupported('dblclick')) { return false; }\n\n        const nowMillis = new Date().getTime();\n        const res = nowMillis - this.lastIPadMouseClickEvent < 200;\n        this.lastIPadMouseClickEvent = nowMillis;\n\n        return res;\n    }\n\n    private onCellDoubleClicked(mouseEvent: MouseEvent) {\n        const colDef = this.column.getColDef();\n        // always dispatch event to eventService\n        const cellDoubleClickedEvent: CellDoubleClickedEvent = this.cellCtrl.createEvent(mouseEvent, Events.EVENT_CELL_DOUBLE_CLICKED);\n        this.beans.eventService.dispatchEvent(cellDoubleClickedEvent);\n\n        // check if colDef also wants to handle event\n        if (typeof colDef.onCellDoubleClicked === 'function') {\n            // to make the callback async, do in a timeout\n            window.setTimeout(() => (colDef.onCellDoubleClicked as any)(cellDoubleClickedEvent), 0);\n        }\n\n        const editOnDoubleClick = !this.beans.gridOptionsWrapper.isSingleClickEdit()\n            && !this.beans.gridOptionsWrapper.isSuppressClickEdit();\n        if (editOnDoubleClick) {\n            this.cellCtrl.startRowOrCellEdit();\n        }\n    }\n\n    private onMouseDown(mouseEvent: MouseEvent): void {\n        const { ctrlKey, metaKey, shiftKey } = mouseEvent;\n        const target = mouseEvent.target as HTMLElement;\n        const { eventService, rangeService } = this.beans;\n\n        // do not change the range for right-clicks inside an existing range\n        if (this.isRightClickInExistingRange(mouseEvent)) {\n            return;\n        }\n\n        const ranges = rangeService && rangeService.getCellRanges().length!=0;\n\n        if (!shiftKey || !ranges) {\n            // We only need to pass true to focusCell when the browser is IE/Edge and we are trying\n            // to focus the cell itself. This should never be true if the mousedown was triggered\n            // due to a click on a cell editor for example.\n            const forceBrowserFocus = (isBrowserIE() || isBrowserEdge()) && !this.cellCtrl.isEditing() && !isFocusableFormField(target);\n\n            this.cellCtrl.focusCell(forceBrowserFocus);\n        }\n\n        // if shift clicking, and a range exists, we keep the focus on the cell that started the\n        // range as the user then changes the range selection.\n        if (shiftKey && ranges) {\n            // this stops the cell from getting focused\n            mouseEvent.preventDefault();\n        }\n\n        // if we are clicking on a checkbox, we need to make sure the cell wrapping that checkbox\n        // is focused but we don't want to change the range selection, so return here.\n        if (this.containsWidget(target)) { return; }\n\n        if (rangeService) {\n            const thisCell = this.cellCtrl.getCellPosition();\n\n            if (shiftKey) {\n                rangeService.extendLatestRangeToCell(thisCell);\n            } else {\n                const ctrlKeyPressed = ctrlKey || metaKey;\n                rangeService.setRangeToCell(thisCell, ctrlKeyPressed);\n            }\n        }\n\n        eventService.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, Events.EVENT_CELL_MOUSE_DOWN));\n    }\n\n    private isRightClickInExistingRange(mouseEvent: MouseEvent): boolean {\n        const { rangeService } = this.beans;\n\n        if (rangeService) {\n            const cellInRange = rangeService.isCellInAnyRange(this.cellCtrl.getCellPosition());\n\n            if (cellInRange && mouseEvent.button === 2) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private containsWidget(target: HTMLElement): boolean {\n        return isElementChildOfClass(target, 'ag-selection-checkbox', 3);\n    }\n\n    private onMouseOut(mouseEvent: MouseEvent): void {\n        if (this.mouseStayingInsideCell(mouseEvent)) { return; }\n        const cellMouseOutEvent: CellMouseOutEvent = this.cellCtrl.createEvent(mouseEvent, Events.EVENT_CELL_MOUSE_OUT);\n        this.beans.eventService.dispatchEvent(cellMouseOutEvent);\n        this.beans.columnHoverService.clearMouseOver();\n    }\n\n    private onMouseOver(mouseEvent: MouseEvent): void {\n        if (this.mouseStayingInsideCell(mouseEvent)) { return; }\n        const cellMouseOverEvent: CellMouseOverEvent = this.cellCtrl.createEvent(mouseEvent, Events.EVENT_CELL_MOUSE_OVER);\n        this.beans.eventService.dispatchEvent(cellMouseOverEvent);\n        this.beans.columnHoverService.setMouseOver([this.column]);\n    }\n\n    private mouseStayingInsideCell(e: MouseEvent): boolean {\n        if (!e.target || !e.relatedTarget) { return false; }\n        const eGui = this.cellCtrl.getGui();\n        const cellContainsTarget = eGui.contains(e.target as Node);\n        const cellContainsRelatedTarget = eGui.contains(e.relatedTarget as Node);\n        return cellContainsTarget && cellContainsRelatedTarget;\n    }\n\n    public destroy(): void {\n    }\n}"]}