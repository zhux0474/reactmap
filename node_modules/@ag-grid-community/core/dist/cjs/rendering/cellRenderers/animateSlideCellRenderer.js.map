{"version":3,"sources":["../../src/ts/rendering/cellRenderers/animateSlideCellRenderer.ts"],"names":[],"mappings":"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","file":"animateSlideCellRenderer.js","sourcesContent":["import { Autowired } from \"../../context/context\";\nimport { ICellRenderer } from \"./iCellRenderer\";\nimport { Component } from \"../../widgets/component\";\nimport { FilterManager } from \"../../filter/filterManager\";\nimport { loadTemplate, addCssClass, clearElement } from \"../../utils/dom\";\nimport { missing, exists } from \"../../utils/generic\";\n\nexport class AnimateSlideCellRenderer extends Component implements ICellRenderer {\n\n    private static TEMPLATE = /* html */\n        `<span>\n            <span class=\"ag-value-slide-current\"></span>\n        </span>`;\n\n    private eCurrent: HTMLElement;\n    private ePrevious: HTMLElement | null;\n\n    private lastValue: any;\n\n    private refreshCount = 0;\n\n    @Autowired('filterManager') private filterManager: FilterManager;\n\n    constructor() {\n        super(AnimateSlideCellRenderer.TEMPLATE);\n        this.eCurrent = this.queryForHtmlElement('.ag-value-slide-current');\n    }\n\n    public init(params: any): void {\n        this.refresh(params);\n    }\n\n    public addSlideAnimation(): void {\n        this.refreshCount++;\n\n        // below we keep checking this, and stop working on the animation\n        // if it no longer matches - this means another animation has started\n        // and this one is stale.\n        const refreshCountCopy = this.refreshCount;\n\n        // if old animation, remove it\n        if (this.ePrevious) {\n            this.getGui().removeChild(this.ePrevious);\n        }\n\n        this.ePrevious = loadTemplate('<span class=\"ag-value-slide-previous ag-value-slide-out\"></span>');\n        this.ePrevious.innerHTML = this.eCurrent.innerHTML;\n        this.getGui().insertBefore(this.ePrevious, this.eCurrent);\n\n        // having timeout of 0 allows use to skip to the next css turn,\n        // so we know the previous css classes have been applied. so the\n        // complex set of setTimeout below creates the animation\n        window.setTimeout(() => {\n            if (refreshCountCopy !== this.refreshCount) { return; }\n            addCssClass(this.ePrevious!, 'ag-value-slide-out-end');\n        }, 50);\n\n        window.setTimeout(() => {\n            if (refreshCountCopy !== this.refreshCount) { return; }\n            this.getGui().removeChild(this.ePrevious!);\n            this.ePrevious = null;\n        }, 3000);\n    }\n\n    public refresh(params: any): boolean {\n        let value = params.value;\n\n        if (missing(value)) {\n            value = '';\n        }\n\n        if (value === this.lastValue) {\n            return false;\n        }\n\n        // we don't show the delta if we are in the middle of a filter. see comment on FilterManager\n        // with regards processingFilterChange\n        if (this.filterManager.isSuppressFlashingCellsBecauseFiltering()) {\n            return false;\n        }\n\n        this.addSlideAnimation();\n\n        this.lastValue = value;\n\n        if (exists(params.valueFormatted)) {\n            this.eCurrent.innerHTML = params.valueFormatted;\n        } else if (exists(params.value)) {\n            this.eCurrent.innerHTML = value;\n        } else {\n            clearElement(this.eCurrent);\n        }\n\n        return true;\n    }\n}\n"]}