{"version":3,"sources":["../../src/ts/rendering/row/rowCtrl.ts"],"names":[],"mappings":"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","file":"rowCtrl.js","sourcesContent":["import { UserCompDetails } from \"../../components/framework/userComponentFactory\";\nimport { Constants } from \"../../constants/constants\";\nimport { BeanStub } from \"../../context/beanStub\";\nimport { CellPosition } from \"../../entities/cellPosition\";\nimport { Column } from \"../../entities/column\";\nimport { ProcessRowParams, RowClassParams } from \"../../entities/gridOptions\";\nimport { DataChangedEvent, RowHighlightPosition, RowNode } from \"../../entities/rowNode\";\nimport { RowPosition } from \"../../entities/rowPosition\";\nimport { CellFocusedEvent, Events, RowClickedEvent, RowDoubleClickedEvent, RowEditingStartedEvent, RowEditingStoppedEvent, RowEvent, RowValueChangedEvent, VirtualRowRemovedEvent } from \"../../events\";\nimport { IFrameworkOverrides } from \"../../interfaces/iFrameworkOverrides\";\nimport { ModuleNames } from \"../../modules/moduleNames\";\nimport { ModuleRegistry } from \"../../modules/moduleRegistry\";\nimport { addCssClass, addOrRemoveCssClass, isElementChildOfClass, removeCssClass } from \"../../utils/dom\";\nimport { isStopPropagationForAgGrid } from \"../../utils/event\";\nimport { doOnce, executeNextVMTurn } from \"../../utils/function\";\nimport { exists, find } from \"../../utils/generic\";\nimport { convertToMap } from \"../../utils/map\";\nimport { assign } from \"../../utils/object\";\nimport { escapeString } from \"../../utils/string\";\nimport { Beans } from \"../beans\";\nimport { CellCtrl } from \"../cell/cellCtrl\";\nimport { ICellRenderer, ICellRendererParams } from \"../cellRenderers/iCellRenderer\";\nimport { AngularRowUtils } from \"./angularRowUtils\";\nimport { RowCssClassCalculatorParams } from \"./rowCssClassCalculator\";\nimport { RowDragComp } from \"./rowDragComp\";\n\n\nexport enum RowType {\n    Normal = 'Normal',\n    FullWidth = 'FullWidth',\n    FullWidthLoading = 'FullWidthLoading',\n    FullWidthGroup = 'FullWidthGroup',\n    FullWidthDetail = 'FullWidthDetail'\n}\n\nexport const FullWidthRenderers: Map<RowType, string> = convertToMap([\n    [RowType.FullWidthLoading, 'agLoadingCellRenderer'],\n    [RowType.FullWidthGroup, 'agGroupRowRenderer'],\n    [RowType.FullWidthDetail, 'agDetailCellRenderer']\n]);\n\nexport const FullWidthKeys: Map<RowType, string> = convertToMap([\n    [RowType.FullWidth, 'fullWidthCellRenderer'],\n    [RowType.FullWidthLoading, 'loadingCellRenderer'],\n    [RowType.FullWidthGroup, 'groupRowRenderer'],\n    [RowType.FullWidthDetail, 'detailCellRenderer']\n]);\n\nlet instanceIdSequence = 0;\n\nexport interface IRowComp {\n    setDisplay(value?: string): void;\n    setDomOrder(domOrder: boolean): void;\n    addOrRemoveCssClass(cssClassName: string, on: boolean): void;\n    setCellCtrls(cellCtrls: CellCtrl[]): void;\n    showFullWidth(compDetails: UserCompDetails): void;\n    getFullWidthCellRenderer(): ICellRenderer | null | undefined;\n    setAriaExpanded(on: boolean): void;\n    setAriaSelected(selected: boolean | undefined): void;\n    setHeight(height: string): void;\n    setTop(top: string): void;\n    setTransform(transform: string): void;\n    setRowIndex(rowIndex: string): void;\n    setAriaRowIndex(rowIndex: number): void;\n    setRowId(rowId: string): void;\n    setRowBusinessKey(businessKey: string): void;\n    setTabIndex(tabIndex: number): void;\n    setAriaLabel(label: string | undefined): void;\n    setUserStyles(styles: any): void;\n    setRole(role: string): void;\n}\n\ninterface RowGui {\n    rowComp: IRowComp;\n    element: HTMLElement;\n    pinned: string | null;\n}\n\ninterface CellCtrlListAndMap {\n    list: CellCtrl[];\n    map: {[key: string]: CellCtrl};\n}\n\nexport class RowCtrl extends BeanStub {\n\n    public static DOM_DATA_KEY_ROW_CTRL = 'renderedRow';\n\n    private instanceId: string;\n\n    private readonly rowNode: RowNode;\n\n    private readonly beans: Beans;\n\n    private rowType: RowType;\n\n    private leftGui: RowGui;\n    private centerGui: RowGui;\n    private rightGui: RowGui;\n    private fullWidthGui: RowGui;\n\n    private allRowGuis: RowGui[] = [];\n\n    private firstRowOnPage: boolean;\n    private lastRowOnPage: boolean;\n\n    private active = true;\n\n    private editingRow: boolean;\n    private rowFocused: boolean;\n\n    private centerCellCtrls: CellCtrlListAndMap = {list: [], map: {}};\n    private leftCellCtrls: CellCtrlListAndMap = {list: [], map: {}};\n    private rightCellCtrls: CellCtrlListAndMap = {list: [], map: {}};\n\n    private fadeRowIn: boolean;\n    private slideRowIn: boolean;\n    private readonly useAnimationFrameForCreate: boolean;\n\n    private paginationPage: number;\n\n    private parentScope: any;\n    private scope: any;\n\n    private lastMouseDownOnDragger = false;\n\n    private rowLevel: number;\n\n    private readonly printLayout: boolean;\n\n    private updateColumnListsPending = false;\n\n    // the top needs to be set into the DOM element when the element is created, not updated afterwards.\n    // otherwise the transition would not work, as it would be transitioning from zero (the unset value).\n    // for example, suppose a row that is outside the viewport, then user does a filter to remove other rows\n    // and this row now appears in the viewport, and the row moves up (ie it was under the viewport and not rendered,\n    // but now is in the viewport) then a new RowComp is created, however it should have it's position initialised\n    // to below the viewport, so the row will appear to animate up. if we didn't set the initial position at creation\n    // time, the row would animate down (ie from position zero).\n    private initialTop: string;\n    private initialTransform: string;\n\n    constructor(\n        parentScope: any,\n        rowNode: RowNode,\n        beans: Beans,\n        animateIn: boolean,\n        useAnimationFrameForCreate: boolean,\n        printLayout: boolean\n    ) {\n        super();\n        this.parentScope = parentScope;\n        this.beans = beans;\n        this.rowNode = rowNode;\n        this.paginationPage = this.beans.paginationProxy.getCurrentPage();\n        this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n        this.printLayout = printLayout;\n\n        this.instanceId = rowNode.id + '-' + instanceIdSequence++;\n\n        this.setAnimateFlags(animateIn);\n\n        this.rowFocused = this.beans.focusService.isRowFocused(this.rowNode.rowIndex!, this.rowNode.rowPinned);\n        this.setupAngular1Scope();\n        this.rowLevel = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n\n        this.setRowType();\n\n        this.addListeners();\n\n        this.setInitialRowTop();\n    }\n\n    public getBeans(): Beans {\n        return this.beans;\n    }\n\n    public getInstanceId(): string {\n        return this.instanceId;\n    }\n\n    public setComp(rowComp: IRowComp, element: HTMLElement, pinned: string | null): void {\n        const gui: RowGui = {rowComp: rowComp, element: element, pinned: pinned};\n        this.allRowGuis.push(gui);\n\n        if (pinned === Constants.PINNED_LEFT) {\n            this.leftGui = gui;\n        } else if (pinned === Constants.PINNED_RIGHT) {\n            this.rightGui = gui;\n        } else if (this.isFullWidth() && !this.beans.gridOptionsWrapper.isEmbedFullWidthRows()) {\n            this.fullWidthGui = gui;\n        } else {\n            this.centerGui = gui;\n        }\n\n        const allNormalPresent = this.leftGui != null && this.rightGui != null && this.centerGui != null;\n        const fullWidthPresent = this.fullWidthGui != null;\n        if (allNormalPresent || fullWidthPresent) {\n            this.initialiseRowComps();\n        }\n    }\n\n    public isCacheable(): boolean {\n        return this.rowType === RowType.FullWidthDetail \n                && this.beans.gridOptionsWrapper.isKeepDetailRows();\n    }\n\n    public setCached(cached: boolean): void {\n        const displayValue = cached ? 'none' : undefined;\n        this.allRowGuis.forEach(rg => rg.rowComp.setDisplay(displayValue));\n    }\n\n    private initialiseRowComps(): void {\n        const gow = this.beans.gridOptionsWrapper;\n\n        this.onRowHeightChanged();\n        this.updateRowIndexes();\n        this.setFocusedClasses();\n        this.setStylesFromGridOptions();\n\n        if (gow.isRowSelection() && this.rowNode.selectable) {\n            this.onRowSelected();\n        }\n\n        this.updateColumnLists(!this.useAnimationFrameForCreate);\n\n        if (this.slideRowIn) {\n            executeNextVMTurn(this.onTopChanged.bind(this));\n        }\n        if (this.fadeRowIn) {\n            executeNextVMTurn(() => {\n                this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass('ag-opacity-zero', false));\n            });\n        }\n\n        const businessKey = this.getRowBusinessKey();\n        const rowIdSanitised = escapeString(this.rowNode.id!);\n        const businessKeySanitised = escapeString(businessKey!);\n\n        this.allRowGuis.forEach(gui => {\n            const comp = gui.rowComp;\n\n            comp.setRole('row');\n\n            const initialRowClasses = this.getInitialRowClasses(gui.pinned);\n            initialRowClasses.forEach(name => comp.addOrRemoveCssClass(name, true));\n\n            if (this.rowNode.group) {\n                comp.setAriaExpanded(this.rowNode.expanded == true);\n            }\n\n            if (rowIdSanitised != null) {\n                comp.setRowId(rowIdSanitised);\n            }\n            if (businessKeySanitised != null) {\n                comp.setRowBusinessKey(businessKeySanitised);\n            }\n\n            if (this.isFullWidth()) {\n                comp.setTabIndex(-1);\n            }\n\n            // DOM DATA\n            gow.setDomData(gui.element, RowCtrl.DOM_DATA_KEY_ROW_CTRL, this);\n            this.addDestroyFunc(\n                () => gow.setDomData(gui.element, RowCtrl.DOM_DATA_KEY_ROW_CTRL, null)\n            );\n\n            // adding hover functionality adds listener to this row, so we\n            // do it lazily in an animation frame\n            if (this.useAnimationFrameForCreate) {\n                this.beans.animationFrameService.createTask(\n                    this.addHoverFunctionality.bind(this, gui.element),\n                    this.rowNode.rowIndex!,\n                    'createTasksP2'\n                );\n            } else {\n                this.addHoverFunctionality(gui.element);\n            }\n\n            if (this.isFullWidth()) {\n                this.setupFullWidth(gui);\n            }\n\n            if (gow.isRowDragEntireRow()) {\n                this.addRowDraggerToRow(gui);\n            }\n\n            // the height animation we only want active after the row is alive for 1 second.\n            // this stops the row animation working when rows are initially crated. otherwise\n            // auto-height rows get inserted into the dom and resized immediately, which gives\n            // very bad UX (eg 10 rows get inserted, then all 10 expand, look particularly bad\n            // when scrolling). so this makes sure when rows are shown for the first time, they\n            // are resized immediately without animation.\n            this.beans.animationFrameService.addDestroyTask( ()=> {\n                if (this.isAlive()) {                    \n                    gui.rowComp.addOrRemoveCssClass('ag-after-created', true);\n                }\n            });\n        });\n\n        this.executeProcessRowPostCreateFunc();\n    }\n\n    private addRowDraggerToRow(gui: RowGui) {\n        const gow = this.beans.gridOptionsWrapper;\n\n        if (gow.isEnableRangeSelection()) {\n            doOnce(() => {\n                console.warn('AG Grid: Setting `rowDragEntireRow: true` in the gridOptions doesn\\'t work with `enableRangeSelection: true`');\n            }, 'rowDragAndRangeSelectionEnabled');\n            return;\n        }\n\n        const rowDragComp = new RowDragComp(() => '1 row', this.rowNode, undefined, gui.element, undefined, true);\n        this.createManagedBean(rowDragComp, this.beans.context);\n    }\n\n    public getFullWidthCellRendererType(): string {\n        return FullWidthKeys.get(this.rowType)!;\n    }\n\n    private getFullWidthCellRendererName(): string {\n        return FullWidthRenderers.get(this.rowType)!;\n    }\n\n    private setupFullWidth(gui: RowGui): void {\n\n        const params = this.createFullWidthParams(gui.element, gui.pinned);\n        const cellRendererType = this.getFullWidthCellRendererType();\n        const cellRendererName = this.getFullWidthCellRendererName();\n        const compDetails = this.beans.userComponentFactory.getFullWidthCellRendererDetails(params, cellRendererType, cellRendererName);\n\n        if (compDetails) {\n            gui.rowComp.showFullWidth(compDetails);\n        } else {\n            const masterDetailModuleLoaded = ModuleRegistry.isRegistered(ModuleNames.MasterDetailModule);\n            if (cellRendererName === 'agDetailCellRenderer' && !masterDetailModuleLoaded) {\n                console.warn(`AG Grid: cell renderer agDetailCellRenderer (for master detail) not found. Did you forget to include the master detail module?`);\n            } else {\n                console.error(`AG Grid: fullWidthCellRenderer ${cellRendererName} not found`);\n            }\n        }\n    }\n\n    public getScope(): any {\n        return this.scope;\n    }\n\n    public isPrintLayout(): boolean {\n        return this.printLayout;\n    }\n\n    private setupAngular1Scope(): void {\n        const scopeResult = AngularRowUtils.createChildScopeOrNull(this.rowNode, this.parentScope, this.beans.gridOptionsWrapper);\n        if (scopeResult) {\n            this.scope = scopeResult.scope;\n            this.addDestroyFunc(scopeResult.scopeDestroyFunc);\n        }\n    }\n\n    // use by autoWidthCalculator, as it clones the elements\n    public getCellElement(column: Column): HTMLElement | null {\n        const cellCtrl = this.getCellCtrl(column);\n        return cellCtrl ? cellCtrl.getGui() : null;\n    }\n\n    public executeProcessRowPostCreateFunc(): void {\n        const func = this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();\n        if (!func) { return; }\n\n        const params: ProcessRowParams = {\n            eRow: this.centerGui ? this.centerGui.element : undefined!,\n            ePinnedLeftRow: this.leftGui ? this.leftGui.element : undefined!,\n            ePinnedRightRow: this.rightGui ? this.rightGui.element : undefined!,\n            node: this.rowNode,\n            api: this.beans.gridOptionsWrapper.getApi()!,\n            rowIndex: this.rowNode.rowIndex!,\n            addRenderedRowListener: this.addEventListener.bind(this),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi()!,\n            context: this.beans.gridOptionsWrapper.getContext()\n        };\n        func(params);\n    }\n\n    private setRowType(): void {\n        const isStub = this.rowNode.stub;\n        const isFullWidthCell = this.rowNode.isFullWidthCell();\n        const isDetailCell = this.beans.doingMasterDetail && this.rowNode.detail;\n        const pivotMode = this.beans.columnModel.isPivotMode();\n        // we only use full width for groups, not footers. it wouldn't make sense to include footers if not looking\n        // for totals. if users complain about this, then we should introduce a new property 'footerUseEntireRow'\n        // so each can be set independently (as a customer complained about footers getting full width, hence\n        // introducing this logic)\n        const isGroupRow = !!this.rowNode.group && !this.rowNode.footer;\n        const isFullWidthGroup = isGroupRow && this.beans.gridOptionsWrapper.isGroupUseEntireRow(pivotMode);\n\n        if (isStub) {\n            this.rowType = RowType.FullWidthLoading;\n        } else if (isDetailCell) {\n            this.rowType = RowType.FullWidthDetail;\n        } else if (isFullWidthCell) {\n            this.rowType = RowType.FullWidth;\n        } else if (isFullWidthGroup) {\n            this.rowType = RowType.FullWidthGroup;\n        } else {\n            this.rowType = RowType.Normal;\n        }\n    }\n\n    private updateColumnLists(suppressAnimationFrame = false): void {\n\n        if (this.isFullWidth()) { return; }\n\n        const noAnimation = suppressAnimationFrame\n            || this.beans.gridOptionsWrapper.isSuppressAnimationFrame()\n            || this.printLayout;\n\n        if (noAnimation) {\n            this.updateColumnListsImpl();\n            return;\n        }\n\n        if (this.updateColumnListsPending) { return; }\n        this.beans.animationFrameService.createTask(\n            () => {\n                if (!this.active) { return; }\n                this.updateColumnListsImpl();\n            },\n            this.rowNode.rowIndex!,\n            'createTasksP1'\n        );\n        this.updateColumnListsPending = true;\n    }\n\n    private createCellCtrls(prev: CellCtrlListAndMap, cols: Column[], pinned: string | null = null): CellCtrlListAndMap {\n        const res: CellCtrlListAndMap = {\n            list: [],\n            map: {}\n        };\n        \n        const addCell = (colInstanceId: number, cellCtrl: CellCtrl) => {\n            res.list.push(cellCtrl);\n            res.map[colInstanceId] = cellCtrl;\n        };\n\n        cols.forEach(col => {\n            // we use instanceId's rather than colId as it's possible there is a Column with same Id,\n            // but it's referring to a different column instance. Happens a lot with pivot, as pivot col id's are\n            // reused eg pivot_0, pivot_1 etc\n            const colInstanceId = col.getInstanceId();\n            let cellCtrl = prev.map[colInstanceId];\n            if (!cellCtrl) {\n                cellCtrl = new CellCtrl(col, this.rowNode, this.beans, this);\n            }\n            addCell(colInstanceId, cellCtrl);\n        });\n\n        prev.list.forEach(prevCellCtrl => {\n            const cellInResult = res.map[prevCellCtrl.getColumn().getInstanceId()]!=null;\n            if (cellInResult) { return; }\n\n            const keepCell = !this.isCellEligibleToBeRemoved(prevCellCtrl, pinned);\n            if (keepCell) { \n                addCell(prevCellCtrl.getColumn().getInstanceId(), prevCellCtrl);\n                return; \n            }\n\n            prevCellCtrl.destroy();\n        });\n\n        return res;\n    }\n\n    private updateColumnListsImpl(): void {\n        this.updateColumnListsPending = false;\n        const columnModel = this.beans.columnModel;\n        if (this.printLayout) {\n            this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, columnModel.getAllDisplayedColumns());\n            this.leftCellCtrls = {list: [], map: {}};\n            this.rightCellCtrls = {list: [], map: {}};\n        } else {\n            const centerCols = columnModel.getViewportCenterColumnsForRow(this.rowNode);\n            this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, centerCols);\n\n            const leftCols = columnModel.getDisplayedLeftColumnsForRow(this.rowNode);\n            this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, leftCols, Constants.PINNED_LEFT);\n\n            const rightCols = columnModel.getDisplayedRightColumnsForRow(this.rowNode);\n            this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, rightCols, Constants.PINNED_RIGHT);\n        }\n\n        this.allRowGuis.forEach(item => {\n            const cellControls = item.pinned === Constants.PINNED_LEFT ? this.leftCellCtrls :\n                        item.pinned === Constants.PINNED_RIGHT ? this.rightCellCtrls : this.centerCellCtrls;\n            item.rowComp.setCellCtrls(cellControls.list);\n        });\n    }\n\n    private isCellEligibleToBeRemoved(cellCtrl: CellCtrl, nextContainerPinned: string | null): boolean {\n        const REMOVE_CELL = true;\n        const KEEP_CELL = false;\n\n        // always remove the cell if it's not rendered or if it's in the wrong pinned location\n        const column = cellCtrl.getColumn();\n        if (column.getPinned() != nextContainerPinned) { return REMOVE_CELL; }\n\n        // we want to try and keep editing and focused cells\n        const editing = cellCtrl.isEditing();\n        const focused = this.beans.focusService.isCellFocused(cellCtrl.getCellPosition());\n\n        const mightWantToKeepCell = editing || focused;\n\n        if (mightWantToKeepCell) {\n            const column = cellCtrl.getColumn();\n            const displayedColumns = this.beans.columnModel.getAllDisplayedColumns();\n            const cellStillDisplayed = displayedColumns.indexOf(column) >= 0;\n            return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n        }\n\n        return REMOVE_CELL;\n    }\n\n    private setAnimateFlags(animateIn: boolean): void {\n        if (animateIn) {\n            const oldRowTopExists = exists(this.rowNode.oldRowTop);\n            // if the row had a previous position, we slide it in (animate row top)\n            this.slideRowIn = oldRowTopExists;\n            // if the row had no previous position, we fade it in (animate\n            this.fadeRowIn = !oldRowTopExists;\n        } else {\n            this.slideRowIn = false;\n            this.fadeRowIn = false;\n        }\n    }\n\n    public isEditing(): boolean {\n        return this.editingRow;\n    }\n\n    public stopRowEditing(cancel: boolean): void {\n        this.stopEditing(cancel);\n    }\n\n    public isFullWidth(): boolean {\n        return this.rowType !== RowType.Normal;\n    }\n\n    public getRowType(): RowType {\n        return this.rowType;\n    }\n\n    public refreshFullWidth(): boolean {\n        // returns 'true' if refresh succeeded\n        const tryRefresh = (gui: RowGui, pinned: string | null): boolean => {\n            if (!gui) { return true; } // no refresh needed\n\n            const cellRenderer = gui.rowComp.getFullWidthCellRenderer();\n\n            // no cell renderer, either means comp not yet ready, or comp ready but now reference\n            // to it (happens in react when comp is stateless). if comp not ready, we don't need to\n            // refresh, however we don't know which one, so we refresh to cover the case where it's\n            // react comp without reference so need to force a refresh\n            if (!cellRenderer) { return false; } \n\n            // no refresh method present, so can't refresh, hard refresh needed\n            if (!cellRenderer.refresh) { return false; }\n\n            const params = this.createFullWidthParams(gui.element, pinned);\n            const refreshSucceeded = cellRenderer.refresh(params);\n\n            return refreshSucceeded;\n        };\n\n        const fullWidthSuccess = tryRefresh(this.fullWidthGui, null);\n        const centerSuccess = tryRefresh(this.centerGui, null);\n        const leftSuccess = tryRefresh(this.leftGui, Constants.PINNED_LEFT);\n        const rightSuccess = tryRefresh(this.rightGui, Constants.PINNED_RIGHT);\n\n        const allFullWidthRowsRefreshed = fullWidthSuccess && centerSuccess && leftSuccess && rightSuccess;\n\n        return allFullWidthRowsRefreshed;\n    }\n\n    private addListeners(): void {\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_TOP_CHANGED, this.onTopChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_EXPANDED_CHANGED, this.updateExpandedCss.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HAS_CHILDREN_CHANGED, this.updateExpandedCss.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HIGHLIGHT_CHANGED, this.onRowNodeHighlightChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_UI_LEVEL_CHANGED, this.onUiLevelChanged.bind(this));\n\n        const eventService = this.beans.eventService;\n        this.addManagedListener(eventService, Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED, this.onPaginationPixelOffsetChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n\n        this.addManagedListener(eventService, Events.EVENT_COLUMN_MOVED, this.onColumnMoved.bind(this));\n\n        this.addListenersForCellComps();\n    }\n\n    private onColumnMoved(): void {\n        this.updateColumnLists();\n    }\n\n    private addListenersForCellComps(): void {\n\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, () => {\n            this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onRowIndexChanged());\n        });\n        this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, event => {\n            this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.onCellChanged(event));\n        });\n\n    }\n\n    private onRowNodeDataChanged(event: DataChangedEvent): void {\n        // if this is an update, we want to refresh, as this will allow the user to put in a transition\n        // into the cellRenderer refresh method. otherwise this might be completely new data, in which case\n        // we will want to completely replace the cells\n        this.getAllCellCtrls().forEach(cellCtrl =>\n            cellCtrl.refreshCell({\n                suppressFlash: !event.update,\n                newData: !event.update\n            })\n        );\n\n        // check for selected also, as this could be after lazy loading of the row data, in which case\n        // the id might of just gotten set inside the row and the row selected state may of changed\n        // as a result. this is what happens when selected rows are loaded in virtual pagination.\n        // - niall note - since moving to the stub component, this may no longer be true, as replacing\n        // the stub component now replaces the entire row\n        this.onRowSelected();\n\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    }\n\n    private onRowNodeCellChanged(): void {\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    }\n\n    private postProcessCss(): void {\n        this.setStylesFromGridOptions();\n        this.postProcessClassesFromGridOptions();\n        this.postProcessRowClassRules();\n        this.postProcessRowDragging();\n    }\n\n    private onRowNodeHighlightChanged(): void {\n        const highlighted = this.rowNode.highlighted;\n\n        this.allRowGuis.forEach(gui => {\n            const aboveOn = highlighted === RowHighlightPosition.Above;\n            const belowOn = highlighted === RowHighlightPosition.Below;\n            gui.rowComp.addOrRemoveCssClass('ag-row-highlight-above', aboveOn);\n            gui.rowComp.addOrRemoveCssClass('ag-row-highlight-below', belowOn);\n        });\n    }\n\n    private onRowNodeDraggingChanged(): void {\n        this.postProcessRowDragging();\n    }\n\n    private postProcessRowDragging(): void {\n        const dragging = this.rowNode.dragging;\n        this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass('ag-row-dragging', dragging));\n    }\n\n    private updateExpandedCss(): void {\n\n        const expandable = this.rowNode.isExpandable();\n        const expanded = this.rowNode.expanded == true;\n\n        this.allRowGuis.forEach(gui => {\n            gui.rowComp.addOrRemoveCssClass('ag-row-group', expandable);\n            gui.rowComp.addOrRemoveCssClass('ag-row-group-expanded', expandable && expanded);\n            gui.rowComp.addOrRemoveCssClass('ag-row-group-contracted', expandable && !expanded);\n            gui.rowComp.setAriaExpanded(expandable && expanded);\n        });\n    }\n\n    private onDisplayedColumnsChanged(): void {\n        // we skip animations for onDisplayedColumnChanged, as otherwise the client could remove columns and\n        // then set data, and any old valueGetter's (ie from cols that were removed) would still get called.\n        this.updateColumnLists(true);\n\n        if (this.beans.columnModel.wasAutoRowHeightEverActive()) {\n            this.rowNode.checkAutoHeights();\n        }\n    }\n\n    private onVirtualColumnsChanged(): void {\n        this.updateColumnLists();\n    }\n\n    public getRowPosition(): RowPosition {\n        return {\n            rowPinned: this.rowNode.rowPinned,\n            rowIndex: this.rowNode.rowIndex as number\n        };\n    }\n\n    public onKeyboardNavigate(keyboardEvent: KeyboardEvent) {\n        const currentFullWidthComp = find(this.allRowGuis, c => c.element.contains(keyboardEvent.target as HTMLElement));\n        const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n        const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n\n        if (!isFullWidthContainerFocused) { return; }\n\n        const node = this.rowNode;\n        const lastFocusedCell = this.beans.focusService.getFocusedCell();\n        const cellPosition: CellPosition = {\n            rowIndex: node.rowIndex!,\n            rowPinned: node.rowPinned,\n            column: (lastFocusedCell && lastFocusedCell.column) as Column\n        };\n\n        this.beans.navigationService.navigateToNextCell(keyboardEvent, keyboardEvent.keyCode, cellPosition, true);\n        keyboardEvent.preventDefault();\n    }\n\n    public onTabKeyDown(keyboardEvent: KeyboardEvent) {\n        if (keyboardEvent.defaultPrevented || isStopPropagationForAgGrid(keyboardEvent)) { return; }\n        const currentFullWidthComp = find(this.allRowGuis, c => c.element.contains(keyboardEvent.target as HTMLElement));\n        const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n        const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n        let nextEl: HTMLElement | null = null;\n\n        if (!isFullWidthContainerFocused) {\n            nextEl = this.beans.focusService.findNextFocusableElement(currentFullWidthContainer!, false, keyboardEvent.shiftKey);\n        }\n\n        if ((this.isFullWidth() && isFullWidthContainerFocused) || !nextEl) {\n            this.beans.navigationService.onTabKeyDown(this, keyboardEvent);\n        }\n    }\n\n    public onFullWidthRowFocused(event: CellFocusedEvent) {\n        const node = this.rowNode;\n        const isFocused = this.isFullWidth() && event.rowIndex === node.rowIndex && event.rowPinned == node.rowPinned;\n\n        const element = this.fullWidthGui ? this.fullWidthGui.element : this.centerGui.element;\n\n        addOrRemoveCssClass(element, 'ag-full-width-focus', isFocused);\n        if (isFocused) {\n            // we don't scroll normal rows into view when we focus them, so we don't want\n            // to scroll Full Width rows either.\n            element.focus({preventScroll: true});\n        }\n    }\n\n    public refreshCell(cellCtrl: CellCtrl) {\n        this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, cellCtrl);\n        this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, cellCtrl);\n        this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, cellCtrl);\n        this.updateColumnLists();\n    }\n\n    private removeCellCtrl(prev: CellCtrlListAndMap, cellCtrlToRemove: CellCtrl): CellCtrlListAndMap {\n        const res: CellCtrlListAndMap = {\n            list: [],\n            map: {}\n        };\n        prev.list.forEach(cellCtrl => {\n            if (cellCtrl === cellCtrlToRemove) { return; }\n            res.list.push(cellCtrl);\n            res.map[cellCtrl.getInstanceId()] = cellCtrl;\n        });\n        return res;\n    }\n\n    public onMouseEvent(eventName: string, mouseEvent: MouseEvent): void {\n        switch (eventName) {\n            case 'dblclick': this.onRowDblClick(mouseEvent); break;\n            case 'click': this.onRowClick(mouseEvent); break;\n            case 'touchstart':\n            case 'mousedown': \n                this.onRowMouseDown(mouseEvent); \n                break;\n        }\n    }\n\n    public createRowEvent(type: string, domEvent?: Event): RowEvent {\n        return {\n            type: type,\n            node: this.rowNode,\n            data: this.rowNode.data,\n            rowIndex: this.rowNode.rowIndex!,\n            rowPinned: this.rowNode.rowPinned,\n            context: this.beans.gridOptionsWrapper.getContext(),\n            api: this.beans.gridOptionsWrapper.getApi()!,\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi()!,\n            event: domEvent\n        };\n    }\n\n    private createRowEventWithSource(type: string, domEvent: Event): RowEvent {\n        const event = this.createRowEvent(type, domEvent);\n        // when first developing this, we included the rowComp in the event.\n        // this seems very weird. so when introducing the event types, i left the 'source'\n        // out of the type, and just include the source in the two places where this event\n        // was fired (rowClicked and rowDoubleClicked). it doesn't make sense for any\n        // users to be using this, as the rowComp isn't an object we expose, so would be\n        // very surprising if a user was using it.\n        (event as any).source = this;\n        return event;\n    }\n\n    private onRowDblClick(mouseEvent: MouseEvent): void {\n        if (isStopPropagationForAgGrid(mouseEvent)) { return; }\n\n        const agEvent: RowDoubleClickedEvent = this.createRowEventWithSource(Events.EVENT_ROW_DOUBLE_CLICKED, mouseEvent);\n\n        this.beans.eventService.dispatchEvent(agEvent);\n    }\n\n    private onRowMouseDown(mouseEvent: MouseEvent) {\n        this.lastMouseDownOnDragger = isElementChildOfClass(mouseEvent.target as HTMLElement, 'ag-row-drag', 3);\n\n        if (!this.isFullWidth()) { return; }\n\n        const node = this.rowNode;\n        const columnModel = this.beans.columnModel;\n\n        this.beans.focusService.setFocusedCell(\n            node.rowIndex!,\n            columnModel.getAllDisplayedColumns()[0],\n            node.rowPinned, true\n        );\n\n    }\n\n    public onRowClick(mouseEvent: MouseEvent) {\n        const stop = isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n\n        if (stop) { return; }\n\n        const agEvent: RowClickedEvent = this.createRowEventWithSource(Events.EVENT_ROW_CLICKED, mouseEvent);\n\n        this.beans.eventService.dispatchEvent(agEvent);\n\n        // ctrlKey for windows, metaKey for Apple\n        const multiSelectKeyPressed = mouseEvent.ctrlKey || mouseEvent.metaKey;\n        const shiftKeyPressed = mouseEvent.shiftKey;\n\n        // we do not allow selecting the group by clicking, when groupSelectChildren, as the logic to\n        // handle this is broken. to observe, change the logic below and allow groups to be selected.\n        // you will see the group gets selected, then all children get selected, then the grid unselects\n        // the children (as the default behaviour when clicking is to unselect other rows) which results\n        // in the group getting unselected (as all children are unselected). the correct thing would be\n        // to change this, so that children of the selected group are not then subsequenly un-selected.\n        const groupSelectsChildren = this.beans.gridOptionsWrapper.isGroupSelectsChildren();\n\n        if (\n            // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n            // so return if it's a group row\n            (groupSelectsChildren && this.rowNode.group) ||\n            // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,\n            // and we click it, the selection should not change (ie any currently selected row should stay selected)\n            !this.rowNode.selectable ||\n            // we also don't allow selection of pinned rows\n            this.rowNode.rowPinned ||\n            // if no selection method enabled, do nothing\n            !this.beans.gridOptionsWrapper.isRowSelection() ||\n            // if click selection suppressed, do nothing\n            this.beans.gridOptionsWrapper.isSuppressRowClickSelection()\n        ) {\n            return;\n        }\n\n        const multiSelectOnClick = this.beans.gridOptionsWrapper.isRowMultiSelectWithClick();\n        const rowDeselectionWithCtrl = !this.beans.gridOptionsWrapper.isSuppressRowDeselection();\n\n        if (this.rowNode.isSelected()) {\n            if (multiSelectOnClick) {\n                this.rowNode.setSelectedParams({ newValue: false });\n            } else if (multiSelectKeyPressed) {\n                if (rowDeselectionWithCtrl) {\n                    this.rowNode.setSelectedParams({ newValue: false });\n                }\n            } else {\n                // selected with no multi key, must make sure anything else is unselected\n                this.rowNode.setSelectedParams({ newValue: !shiftKeyPressed, clearSelection: !shiftKeyPressed, rangeSelect: shiftKeyPressed });\n            }\n        } else {\n            const clearSelection = multiSelectOnClick ? false : !multiSelectKeyPressed;\n            this.rowNode.setSelectedParams({ newValue: true, clearSelection: clearSelection, rangeSelect: shiftKeyPressed });\n        }\n    }\n\n    public setupDetailRowAutoHeight(eDetailGui: HTMLElement): void {\n\n        if (!this.beans.gridOptionsWrapper.isDetailRowAutoHeight()) { return; }\n\n        const checkRowSizeFunc = () => {\n            const clientHeight = eDetailGui.clientHeight;\n\n            // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n            // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n            // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n            // empty detail grid would still have some styling around it giving at least a few pixels.\n            if (clientHeight != null && clientHeight > 0) {\n                // we do the update in a timeout, to make sure we are not calling from inside the grid\n                // doing another update\n                const updateRowHeightFunc = () => {\n                    this.rowNode.setRowHeight(clientHeight);\n                    if (this.beans.clientSideRowModel) {\n                        this.beans.clientSideRowModel.onRowHeightChanged();\n                    } else if (this.beans.serverSideRowModel) {\n                        this.beans.serverSideRowModel.onRowHeightChanged();\n                    }\n                };\n                this.beans.frameworkOverrides.setTimeout(updateRowHeightFunc, 0);\n            }\n        };\n\n        const resizeObserverDestroyFunc = this.beans.resizeObserverService.observeResize(eDetailGui, checkRowSizeFunc);\n\n        this.addDestroyFunc(resizeObserverDestroyFunc);\n\n        checkRowSizeFunc();\n    }\n\n    public createFullWidthParams(eRow: HTMLElement, pinned: string | null): ICellRendererParams {\n        const params = {\n            fullWidth: true,\n            data: this.rowNode.data,\n            node: this.rowNode,\n            value: this.rowNode.key,\n            valueFormatted: this.rowNode.key,\n            $scope: this.scope ? this.scope : this.parentScope,\n            $compile: this.beans.$compile,\n            rowIndex: this.rowNode.rowIndex!,\n            api: this.beans.gridOptionsWrapper.getApi()!,\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi()!,\n            context: this.beans.gridOptionsWrapper.getContext(),\n            // these need to be taken out, as part of 'afterAttached' now\n            eGridCell: eRow,\n            eParentOfValue: eRow,\n            pinned: pinned,\n            addRenderedRowListener: this.addEventListener.bind(this),\n            registerRowDragger: (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) => this.addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value, suppressVisibilityChange)\n        } as ICellRendererParams;\n\n        return params;\n    }\n\n    private addFullWidthRowDragging(\n        rowDraggerElement?: HTMLElement,\n        dragStartPixels?: number,\n        value: string = '',\n        suppressVisibilityChange?: boolean\n    ): void {\n        if (!this.isFullWidth()) { return; }\n\n        const rowDragComp = new RowDragComp(() => value, this.rowNode, undefined, rowDraggerElement, dragStartPixels, suppressVisibilityChange);\n        this.createManagedBean(rowDragComp, this.beans.context);\n    }\n\n    private onUiLevelChanged(): void {\n        const newLevel = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n        if (this.rowLevel != newLevel) {\n            const classToAdd = 'ag-row-level-' + newLevel;\n            const classToRemove = 'ag-row-level-' + this.rowLevel;\n            this.allRowGuis.forEach(gui => {\n                gui.rowComp.addOrRemoveCssClass(classToAdd, true);\n                gui.rowComp.addOrRemoveCssClass(classToRemove, false);\n            });\n        }\n        this.rowLevel = newLevel;\n    }\n\n    private isFirstRowOnPage(): boolean {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();\n    }\n\n    private isLastRowOnPage(): boolean {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();\n    }\n\n    private onModelUpdated(): void {\n        const newFirst = this.isFirstRowOnPage();\n        const newLast = this.isLastRowOnPage();\n\n        if (this.firstRowOnPage !== newFirst) {\n            this.firstRowOnPage = newFirst;\n            this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass('ag-row-first', newFirst));\n        }\n        if (this.lastRowOnPage !== newLast) {\n            this.lastRowOnPage = newLast;\n            this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass('ag-row-last', newLast));\n        }\n    }\n\n    public stopEditing(cancel = false): void {\n        this.getAllCellCtrls().forEach(cellCtrl => cellCtrl.stopEditing(cancel));\n\n        if (!this.editingRow) { return; }\n\n        if (!cancel) {\n            const event: RowValueChangedEvent = this.createRowEvent(Events.EVENT_ROW_VALUE_CHANGED);\n            this.beans.eventService.dispatchEvent(event);\n        }\n        this.setEditingRow(false);\n    }\n\n    public setInlineEditingCss(editing: boolean): void {\n        this.allRowGuis.forEach(gui => {\n            gui.rowComp.addOrRemoveCssClass(\"ag-row-inline-editing\", editing);\n            gui.rowComp.addOrRemoveCssClass(\"ag-row-not-inline-editing\", !editing);\n        });\n    }\n\n    private setEditingRow(value: boolean): void {\n        this.editingRow = value;\n        this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass('ag-row-editing', value));\n\n        const event: RowEvent = value ?\n            this.createRowEvent(Events.EVENT_ROW_EDITING_STARTED) as RowEditingStartedEvent\n            : this.createRowEvent(Events.EVENT_ROW_EDITING_STOPPED) as RowEditingStoppedEvent;\n\n        this.beans.eventService.dispatchEvent(event);\n    }\n\n    public startRowEditing(keyPress: number | null = null, charPress: string | null = null, sourceRenderedCell: CellCtrl | null = null): void {\n        // don't do it if already editing\n        if (this.editingRow) { return; }\n\n        this.getAllCellCtrls().forEach(cellCtrl => {\n            const cellStartedEdit = cellCtrl === sourceRenderedCell;\n            if (cellStartedEdit) {\n                cellCtrl.startEditing(keyPress, charPress, cellStartedEdit);\n            } else {\n                cellCtrl.startEditing(null, null, cellStartedEdit);\n            }\n        });\n        this.setEditingRow(true);\n    }\n\n    public getAllCellCtrls(): CellCtrl[] {\n        const res = [...this.centerCellCtrls.list, ...this.leftCellCtrls.list, ...this.rightCellCtrls.list];\n        return res;\n    }\n\n    private postProcessClassesFromGridOptions(): void {\n        const cssClasses = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode, this.scope);\n        if (!cssClasses || !cssClasses.length) { return; }\n\n        cssClasses.forEach(classStr => {\n            this.allRowGuis.forEach(c => c.rowComp.addOrRemoveCssClass(classStr, true));\n        });\n    }\n\n    private postProcessRowClassRules(): void {\n        this.beans.rowCssClassCalculator.processRowClassRules(\n            this.rowNode, this.scope,\n            (className: string) => {\n                this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass(className, true));\n            },\n            (className: string) => {\n                this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass(className, false));\n            }\n        );\n    }\n\n    private setStylesFromGridOptions(): void {\n        const rowStyles = this.processStylesFromGridOptions();\n        this.allRowGuis.forEach(gui => gui.rowComp.setUserStyles(rowStyles));\n    }\n\n    public getRowBusinessKey(): string | undefined {\n        const businessKeyForNodeFunc = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();\n        if (typeof businessKeyForNodeFunc !== 'function') { return; }\n\n        return businessKeyForNodeFunc(this.rowNode);\n    }\n\n    public getInitialRowClasses(pinned: string | null): string[] {\n        const params: RowCssClassCalculatorParams = {\n            rowNode: this.rowNode,\n            rowFocused: this.rowFocused,\n            fadeRowIn: this.fadeRowIn,\n            rowIsEven: this.rowNode.rowIndex! % 2 === 0,\n            rowLevel: this.rowLevel,\n            fullWidthRow: this.isFullWidth(),\n            firstRowOnPage: this.isFirstRowOnPage(),\n            lastRowOnPage: this.isLastRowOnPage(),\n            printLayout: this.printLayout,\n            expandable: this.rowNode.isExpandable(),\n            scope: this.scope,\n            pinned: pinned\n        };\n        return this.beans.rowCssClassCalculator.getInitialRowClasses(params);\n    }\n\n    public processStylesFromGridOptions(): any {\n        // part 1 - rowStyle\n        const rowStyle = this.beans.gridOptionsWrapper.getRowStyle();\n\n        if (rowStyle && typeof rowStyle === 'function') {\n            console.warn('AG Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead');\n            return;\n        }\n\n        // part 1 - rowStyleFunc\n        const rowStyleFunc = this.beans.gridOptionsWrapper.getRowStyleFunc();\n        let rowStyleFuncResult: any;\n\n        if (rowStyleFunc) {\n            const params: RowClassParams = {\n                data: this.rowNode.data,\n                node: this.rowNode,\n                rowIndex: this.rowNode.rowIndex!,\n                $scope: this.scope,\n                api: this.beans.gridOptionsWrapper.getApi()!,\n                columnApi: this.beans.gridOptionsWrapper.getColumnApi()!,\n                context: this.beans.gridOptionsWrapper.getContext()\n            };\n            rowStyleFuncResult = rowStyleFunc(params);\n        }\n\n        return assign({}, rowStyle, rowStyleFuncResult);\n    }\n\n    private onRowSelected(): void {\n        const selected = this.rowNode.isSelected()!;\n        this.allRowGuis.forEach(gui => {\n            gui.rowComp.setAriaSelected(selected ? true : undefined);\n            gui.rowComp.addOrRemoveCssClass('ag-row-selected', selected);\n            gui.rowComp.setAriaLabel(this.createAriaLabel());\n        });\n    }\n\n    private createAriaLabel(): string | undefined {\n        const selected = this.rowNode.isSelected()!;\n        if (selected && this.beans.gridOptionsWrapper.isSuppressRowDeselection()) {\n            return undefined;\n        }\n\n        const translate = this.beans.gridOptionsWrapper.getLocaleTextFunc();\n        const label = translate(\n            selected ? 'ariaRowDeselect' : 'ariaRowSelect',\n            `Press SPACE to ${selected ? 'deselect' : 'select'} this row.`\n        );\n\n        return label;\n    }\n\n    public isUseAnimationFrameForCreate(): boolean {\n        return this.useAnimationFrameForCreate;\n    }\n\n    public addHoverFunctionality(eRow: HTMLElement): void {\n        // because we use animation frames to do this, it's possible the row no longer exists\n        // by the time we get to add it\n        if (!this.active) { return; }\n\n        // because mouseenter and mouseleave do not propagate, we cannot listen on the gridPanel\n        // like we do for all the other mouse events.\n\n        // because of the pinning, we cannot simply add / remove the class based on the eRow. we\n        // have to check all eRow's (body & pinned). so the trick is if any of the rows gets a\n        // mouse hover, it sets such in the rowNode, and then all three reflect the change as\n        // all are listening for event on the row node.\n\n        // step 1 - add listener, to set flag on row node\n        this.addManagedListener(eRow, 'mouseenter', () => this.rowNode.onMouseEnter());\n        this.addManagedListener(eRow, 'mouseleave', () => this.rowNode.onMouseLeave());\n\n        // step 2 - listen for changes on row node (which any eRow can trigger)\n        this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_ENTER, () => {\n            // if hover turned off, we don't add the class. we do this here so that if the application\n            // toggles this property mid way, we remove the hover form the last row, but we stop\n            // adding hovers from that point onwards.\n            if (!this.beans.gridOptionsWrapper.isSuppressRowHoverHighlight()) {\n                addCssClass(eRow, 'ag-row-hover');\n            }\n        });\n\n        this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_LEAVE, () => {\n            removeCssClass(eRow, 'ag-row-hover');\n        });\n    }\n\n    // for animation, we don't want to animate entry or exit to a very far away pixel,\n    // otherwise the row would move so fast, it would appear to disappear. so this method\n    // moves the row closer to the viewport if it is far away, so the row slide in / out\n    // at a speed the user can see.\n    public roundRowTopToBounds(rowTop: number): number {\n        const gridBodyCon = this.beans.ctrlsService.getGridBodyCtrl();\n        const range = gridBodyCon.getScrollFeature().getVScrollPosition();\n        const minPixel = this.applyPaginationOffset(range.top, true) - 100;\n        const maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n\n        return Math.min(Math.max(minPixel, rowTop), maxPixel);\n    }\n\n    protected getFrameworkOverrides(): IFrameworkOverrides {\n        return this.beans.frameworkOverrides;\n    }\n\n    private onRowHeightChanged(): void {\n        // check for exists first - if the user is resetting the row height, then\n        // it will be null (or undefined) momentarily until the next time the flatten\n        // stage is called where the row will then update again with a new height\n        if (exists(this.rowNode.rowHeight)) {\n            const heightPx = `${this.rowNode.rowHeight}px`;\n\n            this.allRowGuis.forEach(gui => gui.rowComp.setHeight(heightPx));\n        }\n    }\n\n    public addEventListener(eventType: string, listener: Function): void {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('AG Grid: Since version 11, event renderedRowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        super.addEventListener(eventType, listener);\n    }\n\n    public removeEventListener(eventType: string, listener: Function): void {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('AG Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        super.removeEventListener(eventType, listener);\n    }\n\n    // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n    public destroyFirstPass(): void {\n        this.active = false;\n\n        // why do we have this method? shouldn't everything below be added as a destroy func beside\n        // the corresponding create logic?\n\n        this.setupRemoveAnimation();\n\n        const event: VirtualRowRemovedEvent = this.createRowEvent(Events.EVENT_VIRTUAL_ROW_REMOVED);\n\n        this.dispatchEvent(event);\n        this.beans.eventService.dispatchEvent(event);\n        super.destroy();\n    }\n\n    private setupRemoveAnimation(): void {\n        const rowStillVisibleJustNotInViewport = this.rowNode.rowTop != null;\n        if (rowStillVisibleJustNotInViewport) {\n            // if the row is not rendered, but in viewport, it means it has moved,\n            // so we animate the row out. if the new location is very far away,\n            // the animation will be so fast the row will look like it's just disappeared,\n            // so instead we animate to a position just outside the viewport.\n            const rowTop = this.roundRowTopToBounds(this.rowNode.rowTop!);\n            this.setRowTop(rowTop);\n        } else {\n            this.allRowGuis.forEach(gui => gui.rowComp.addOrRemoveCssClass('ag-opacity-zero', true));\n        }\n    }\n\n    public destroySecondPass(): void {\n        this.allRowGuis.length = 0;\n\n        const destroyCellCtrls = (ctrls: CellCtrlListAndMap): CellCtrlListAndMap => {\n            ctrls.list.forEach(c => c.destroy());\n            return {list: [], map: {}};\n        };\n\n        this.centerCellCtrls = destroyCellCtrls(this.centerCellCtrls);\n        this.leftCellCtrls = destroyCellCtrls(this.leftCellCtrls);\n        this.rightCellCtrls = destroyCellCtrls(this.rightCellCtrls);\n    }\n\n    private setFocusedClasses(): void {\n        this.allRowGuis.forEach(gui => {\n            gui.rowComp.addOrRemoveCssClass('ag-row-focus', this.rowFocused);\n            gui.rowComp.addOrRemoveCssClass('ag-row-no-focus', !this.rowFocused);\n        });\n    }\n\n    private onCellFocusChanged(): void {\n        const rowFocused = this.beans.focusService.isRowFocused(this.rowNode.rowIndex!, this.rowNode.rowPinned);\n\n        if (rowFocused !== this.rowFocused) {\n            this.rowFocused = rowFocused;\n            this.setFocusedClasses();\n        }\n\n        // if we are editing, then moving the focus out of a row will stop editing\n        if (!rowFocused && this.editingRow) {\n            this.stopEditing(false);\n        }\n    }\n\n    private onPaginationChanged(): void {\n        const currentPage = this.beans.paginationProxy.getCurrentPage();\n        // it is possible this row is in the new page, but the page number has changed, which means\n        // it needs to reposition itself relative to the new page\n        if (this.paginationPage !== currentPage) {\n            this.paginationPage = currentPage;\n            this.onTopChanged();\n        }\n    }\n\n    private onTopChanged(): void {\n        this.setRowTop(this.rowNode.rowTop!);\n    }\n\n    private onPaginationPixelOffsetChanged(): void {\n        // the pixel offset is used when calculating rowTop to set on the row DIV\n        this.onTopChanged();\n    }\n\n    // applies pagination offset, eg if on second page, and page height is 500px, then removes\n    // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n    // reverse will take the offset away rather than add.\n    private applyPaginationOffset(topPx: number, reverse = false): number {\n        if (this.rowNode.isRowPinned()) {\n            return topPx;\n        }\n\n        const pixelOffset = this.beans.paginationProxy.getPixelOffset();\n        const multiplier = reverse ? 1 : -1;\n\n        return topPx + (pixelOffset * multiplier);\n    }\n\n    public setRowTop(pixels: number): void {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) { return; }\n\n        // need to make sure rowTop is not null, as this can happen if the node was once\n        // visible (ie parent group was expanded) but is now not visible\n        if (exists(pixels)) {\n            const afterPaginationPixels = this.applyPaginationOffset(pixels);\n            const afterScalingPixels = this.rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n            const topPx = `${afterScalingPixels}px`;\n            this.setRowTopStyle(topPx);\n        }\n    }\n\n    public getInitialRowTop(): string | undefined {\n        return this.initialTop;\n    }\n\n    public getInitialTransform(): string | undefined {\n        return this.initialTransform;\n    }\n\n    private setInitialRowTop() {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) { return ''; }\n\n        // if sliding in, we take the old row top. otherwise we just set the current row top.\n        const pixels = this.slideRowIn ? this.roundRowTopToBounds(this.rowNode.oldRowTop!) : this.rowNode.rowTop;\n        const afterPaginationPixels = this.applyPaginationOffset(pixels!);\n        // we don't apply scaling if row is pinned\n        const afterScalingPixels = this.rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n\n        const res = afterScalingPixels + 'px';\n\n        const suppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n        if (suppressRowTransform) {\n            this.initialTop = res;\n        } else {\n            this.initialTransform = `translateY(${res})`;\n        }\n    }\n\n    private setRowTopStyle(topPx: string): void {\n        const suppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n        this.allRowGuis.forEach(\n            gui => suppressRowTransform ?\n                gui.rowComp.setTop(topPx) :\n                gui.rowComp.setTransform(`translateY(${topPx})`)\n        );\n    }\n\n    public getRowNode(): RowNode {\n        return this.rowNode;\n    }\n\n    public getCellCtrl(column: Column): CellCtrl | null {\n        // first up, check for cell directly linked to this column\n        let res: CellCtrl | null = null;\n        this.getAllCellCtrls().forEach(cellCtrl => {\n            if (cellCtrl.getColumn() == column) {\n                res = cellCtrl;\n            }\n        });\n\n        if (res != null) { return res; }\n\n        // second up, if not found, then check for spanned cols.\n        // we do this second (and not at the same time) as this is\n        // more expensive, as spanning cols is a\n        // infrequently used feature so we don't need to do this most\n        // of the time\n        this.getAllCellCtrls().forEach(cellCtrl => {\n            if (cellCtrl.getColSpanningList().indexOf(column) >= 0) {\n                res = cellCtrl;\n            }\n        });\n\n        return res;\n    }\n\n    private onRowIndexChanged(): void {\n        // we only bother updating if the rowIndex is present. if it is not present, it means this row\n        // is child of a group node, and the group node was closed, it's the only way to have no row index.\n        // when this happens, row is about to be de-rendered, so we don't care, rowComp is about to die!\n        if (this.rowNode.rowIndex != null) {\n            this.onCellFocusChanged();\n            this.updateRowIndexes();\n        }\n    }\n\n    private updateRowIndexes(): void {\n        const rowIndexStr = this.rowNode.getRowIndexString();\n        const headerRowCount = this.beans.headerNavigationService.getHeaderRowCount();\n        const rowIsEven = this.rowNode.rowIndex! % 2 === 0;\n\n        this.allRowGuis.forEach(c => {\n            c.rowComp.setRowIndex(rowIndexStr);\n            c.rowComp.setAriaRowIndex(headerRowCount + this.rowNode.rowIndex! + 1);\n            c.rowComp.addOrRemoveCssClass('ag-row-even', rowIsEven);\n            c.rowComp.addOrRemoveCssClass('ag-row-odd', !rowIsEven);\n        });\n    }\n\n    // returns the pinned left container, either the normal one, or the embedded full with one if exists\n    public getPinnedLeftRowElement(): HTMLElement {\n        return this.leftGui ? this.leftGui.element : undefined!;\n    }\n\n    // returns the pinned right container, either the normal one, or the embedded full with one if exists\n    public getPinnedRightRowElement(): HTMLElement {\n        return this.rightGui ? this.rightGui.element : undefined!;\n    }\n\n    // returns the body container, either the normal one, or the embedded full with one if exists\n    public getBodyRowElement(): HTMLElement {\n        return this.centerGui ? this.centerGui.element : undefined!;\n    }\n\n    // returns the full width container\n    public getFullWidthRowElement(): HTMLElement {\n        return this.fullWidthGui ? this.fullWidthGui.element : undefined!;\n    }\n\n}"]}