{"version":3,"sources":["../../src/ts/rendering/row/rowCssClassCalculator.ts"],"names":[],"mappings":"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","file":"rowCssClassCalculator.js","sourcesContent":["import { exists } from \"../../utils/generic\";\nimport { RowNode } from \"../../entities/rowNode\";\nimport { pushAll } from \"../../utils/array\";\nimport { GridOptionsWrapper } from \"../../gridOptionsWrapper\";\nimport { Autowired, Bean } from \"../../context/context\";\nimport { StylingService } from \"../../styling/stylingService\";\nimport { RowClassParams } from \"../../entities/gridOptions\";\nimport { Constants } from \"../../constants/constants\";\nexport interface RowCssClassCalculatorParams {\n    rowNode: RowNode;\n    rowIsEven: boolean;\n    rowLevel: number;\n    fullWidthRow?: boolean;\n    firstRowOnPage: boolean;\n    lastRowOnPage: boolean;\n    printLayout: boolean;\n    expandable: boolean;\n\n    pinned?: string | null;\n    extraCssClass?: string;\n    rowFocused?: boolean;\n    fadeRowIn?: boolean;\n    scope?: any;\n}\n\n@Bean('rowCssClassCalculator')\nexport class RowCssClassCalculator {\n\n    @Autowired('stylingService') public stylingService: StylingService;\n    @Autowired('gridOptionsWrapper') public gridOptionsWrapper: GridOptionsWrapper;\n\n    public getInitialRowClasses(params: RowCssClassCalculatorParams): string[] {\n\n        const classes: string[] = [];\n\n        if (exists(params.extraCssClass)) {\n            classes.push(params.extraCssClass);\n        }\n\n        classes.push('ag-row');\n        classes.push(params.rowFocused ? 'ag-row-focus' : 'ag-row-no-focus');\n\n        if (params.fadeRowIn) {\n            classes.push('ag-opacity-zero');\n        }\n\n        classes.push(params.rowIsEven ? 'ag-row-even' : 'ag-row-odd');\n\n        if (params.rowNode.isRowPinned()) {\n            classes.push('ag-row-pinned');\n        }\n\n        if (params.rowNode.isSelected()) {\n            classes.push('ag-row-selected');\n        }\n\n        if (params.rowNode.footer) {\n            classes.push('ag-row-footer');\n        }\n\n        classes.push('ag-row-level-' + params.rowLevel);\n\n        if (params.rowNode.stub) {\n            classes.push('ag-row-loading');\n        }\n\n        if (params.fullWidthRow) {\n            classes.push('ag-full-width-row');\n        }\n\n        if (params.expandable) {\n            classes.push('ag-row-group');\n            classes.push(params.rowNode.expanded ? 'ag-row-group-expanded' : 'ag-row-group-contracted');\n        }\n\n        if (params.rowNode.dragging) {\n            classes.push('ag-row-dragging');\n        }\n\n        pushAll(classes, this.processClassesFromGridOptions(params.rowNode, params.scope));\n        pushAll(classes, this.preProcessRowClassRules(params.rowNode, params.scope));\n\n        // we use absolute position unless we are doing print layout\n        classes.push(params.printLayout ? 'ag-row-position-relative' : 'ag-row-position-absolute');\n\n        if (params.firstRowOnPage) {\n            classes.push('ag-row-first');\n        }\n\n        if (params.lastRowOnPage) {\n            classes.push('ag-row-last');\n        }\n\n        if (params.fullWidthRow) {\n            if (params.pinned === Constants.PINNED_LEFT) {\n                classes.push('ag-cell-last-left-pinned');\n            }\n            if (params.pinned === Constants.PINNED_RIGHT) {\n                classes.push('ag-cell-first-right-pinned');\n            }\n        }\n\n        return classes;\n    }\n\n    public processClassesFromGridOptions(rowNode: RowNode, scope: any): string[] {\n        const res: string[] = [];\n\n        const process = (rowCls: string | string[] | undefined) => {\n            if (typeof rowCls === 'string') {\n                res.push(rowCls);\n            } else if (Array.isArray(rowCls)) {\n                rowCls.forEach(e => res.push(e));\n            }\n        };\n\n        // part 1 - rowClass\n        const rowClass = this.gridOptionsWrapper.getRowClass();\n        if (rowClass) {\n            if (typeof rowClass === 'function') {\n                console.warn('AG Grid: rowClass should not be a function, please use getRowClass instead');\n                return [];\n            }\n            process(rowClass);\n        }\n\n        // part 2 - rowClassFunc\n        const rowClassFunc = this.gridOptionsWrapper.getRowClassFunc();\n\n        if (rowClassFunc) {\n            const params: RowClassParams = {\n                data: rowNode.data,\n                node: rowNode,\n                rowIndex: rowNode.rowIndex!,\n                $scope: scope,\n                api: this.gridOptionsWrapper.getApi()!,\n                columnApi: this.gridOptionsWrapper.getColumnApi()!,\n                context: this.gridOptionsWrapper.getContext()\n            };\n            const rowClassFuncResult = rowClassFunc(params);\n            process(rowClassFuncResult);\n        }\n\n        return res;\n    }\n\n    private preProcessRowClassRules(rowNode: RowNode, scope: any): string[] {\n        const res: string[] = [];\n\n        this.processRowClassRules(rowNode, scope,\n            (className: string) => {\n                res.push(className);\n            },\n            (className: string) => {\n                // not catered for, if creating, no need\n                // to remove class as it was never there\n            }\n        );\n\n        return res;\n    }\n\n    public processRowClassRules(rowNode: RowNode, scope: any, onApplicableClass: (className: string) => void, onNotApplicableClass?: (className: string) => void): void {\n        const rowClassParams: RowClassParams = {\n            data: rowNode.data,\n            node: rowNode,\n            rowIndex: rowNode.rowIndex!,\n            api: this.gridOptionsWrapper.getApi()!,\n            columnApi: this.gridOptionsWrapper.getColumnApi()!,\n            $scope: scope,\n            context: this.gridOptionsWrapper.getContext()\n        };\n\n        this.stylingService.processClassRules(\n            this.gridOptionsWrapper.rowClassRules(),\n            rowClassParams,\n            onApplicableClass,\n            onNotApplicableClass\n        );\n    }\n\n    public calculateRowLevel(rowNode: RowNode): number {\n        if (rowNode.group) {\n            return rowNode.level;\n        }\n\n        // if a leaf, and a parent exists, put a level of the parent, else put level of 0 for top level item\n        return rowNode.parent ? (rowNode.parent.level + 1) : 0;\n    }\n\n}\n"]}