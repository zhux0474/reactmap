{"version":3,"sources":["../../src/ts/rendering/cellEditors/largeTextCellEditor.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,+DAA8D;AAC9D,2EAAiE;AACjE,+CAA6C;AAC7C,mDAAkD;AAQlD;IAAyC,uCAAc;IAUnD;eACI,kBAAM,mBAAmB,CAAC,QAAQ,CAAC;IACvC,CAAC;IAEM,kCAAI,GAAX,UAAY,MAA8B;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,eAAe,CAAC;QAEjD,IAAI,CAAC,SAAS;aACT,YAAY,CAAC,MAAM,CAAC,SAAS,IAAI,GAAG,CAAC;aACrC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;aAC1B,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAEhC,IAAI,gBAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACnE,CAAC;IAEO,uCAAS,GAAjB,UAAkB,KAAoB;QAClC,IAAM,GAAG,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC;QAEzC,IAAI,GAAG,KAAK,iBAAO,CAAC,IAAI;YACpB,GAAG,KAAK,iBAAO,CAAC,EAAE;YAClB,GAAG,KAAK,iBAAO,CAAC,KAAK;YACrB,GAAG,KAAK,iBAAO,CAAC,IAAI;YACpB,CAAC,KAAK,CAAC,QAAQ,IAAI,GAAG,KAAK,iBAAO,CAAC,KAAK,CAAC,EAAE,EAAE,kCAAkC;YAC/E,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;IACL,CAAC;IAEM,8CAAgB,GAAvB;QACI,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;QAE9D,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC,CAAC;QAE/E,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,KAAK,EAAE,CAAC;SAChD;IACL,CAAC;IAEM,sCAAQ,GAAf;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC7D,CAAC;IAtDc,4BAAQ,GACnB,qKAEO,CAAC;IAGc;QAAzB,kCAAW,CAAC,WAAW,CAAC;0DAAoC;IAiDjE,0BAAC;CAxDD,AAwDC,CAxDwC,+BAAc,GAwDtD;AAxDY,kDAAmB","file":"largeTextCellEditor.js","sourcesContent":["import { AgInputTextArea } from \"../../widgets/agInputTextArea\";\nimport { ICellEditorComp, ICellEditorParams } from \"../../interfaces/iCellEditor\";\nimport { PopupComponent } from \"../../widgets/popupComponent\";\nimport { RefSelector } from \"../../widgets/componentAnnotations\";\nimport { exists } from \"../../utils/generic\";\nimport { KeyCode } from '../../constants/keyCode';\n\nexport interface ILargeTextEditorParams extends ICellEditorParams {\n    maxLength: number;\n    rows: number;\n    cols: number;\n}\n\nexport class LargeTextCellEditor extends PopupComponent implements ICellEditorComp {\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-large-text\" tabindex=\"0\">\n            <ag-input-text-area ref=\"eTextArea\" class=\"ag-large-text-input\"></ag-input-text-area>\n        </div>`;\n\n    private params: ILargeTextEditorParams;\n    @RefSelector(\"eTextArea\") private eTextArea: AgInputTextArea;\n    private focusAfterAttached: boolean;\n\n    constructor() {\n        super(LargeTextCellEditor.TEMPLATE);\n    }\n\n    public init(params: ILargeTextEditorParams): void {\n        this.params = params;\n\n        this.focusAfterAttached = params.cellStartedEdit;\n\n        this.eTextArea\n            .setMaxLength(params.maxLength || 200)\n            .setCols(params.cols || 60)\n            .setRows(params.rows || 10);\n\n        if (exists(params.value)) {\n            this.eTextArea.setValue(params.value.toString(), true);\n        }\n\n        this.addGuiEventListener('keydown', this.onKeyDown.bind(this));\n    }\n\n    private onKeyDown(event: KeyboardEvent): void {\n        const key = event.which || event.keyCode;\n\n        if (key === KeyCode.LEFT ||\n            key === KeyCode.UP ||\n            key === KeyCode.RIGHT ||\n            key === KeyCode.DOWN ||\n            (event.shiftKey && key === KeyCode.ENTER)) { // shift+enter allows for newlines\n            event.stopPropagation();\n        }\n    }\n\n    public afterGuiAttached(): void {\n        const translate = this.gridOptionsWrapper.getLocaleTextFunc();\n\n        this.eTextArea.setInputAriaLabel(translate('ariaInputEditor', 'Input Editor'));\n\n        if (this.focusAfterAttached) {\n            this.eTextArea.getFocusableElement().focus();\n        }\n    }\n\n    public getValue(): any {\n        return this.params.parseValue(this.eTextArea.getValue());\n    }\n}\n"]}