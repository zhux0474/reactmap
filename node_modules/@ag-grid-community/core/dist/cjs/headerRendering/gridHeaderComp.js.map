{"version":3,"sources":["../../src/ts/headerRendering/gridHeaderComp.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAAmD;AACnD,8CAAmD;AACnD,kDAAiD;AACjD,mDAAmE;AACnE,gFAA+E;AAE/E;IAAoC,kCAAS;IAKzC;eACI,kBAAM,cAAc,CAAC,QAAQ,CAAC;IAClC,CAAC;IAGO,sCAAa,GAArB;QADA,iBAsBC;QAnBG,IAAM,SAAS,GAAoB;YAC/B,mBAAmB,EAAE,UAAC,YAAY,EAAE,EAAE,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,EAAE,CAAC,EAA1C,CAA0C;YACrF,qBAAqB,EAAE,UAAA,MAAM;gBACzB,KAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBACpC,KAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;YAC3C,CAAC;SACJ,CAAC;QAEF,IAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,+BAAc,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;QAEnE,IAAM,YAAY,GAAG,UAAC,SAAiC;YACnD,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAClC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAChC,CAAC,CAAC;QAEF,YAAY,CAAC,IAAI,+CAAsB,CAAC,qBAAS,CAAC,WAAW,CAAC,CAAC,CAAC;QAChE,YAAY,CAAC,IAAI,+CAAsB,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/C,YAAY,CAAC,IAAI,+CAAsB,CAAC,qBAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IACrE,CAAC;IA7Bc,uBAAQ,GACnB,sEAAgE,CAAC;IAOrE;QADC,uBAAa;uDAsBb;IACL,qBAAC;CAhCD,AAgCC,CAhCmC,qBAAS,GAgC5C;AAhCY,wCAAc","file":"gridHeaderComp.js","sourcesContent":["import { Constants } from '../constants/constants';\nimport { PostConstruct } from '../context/context';\nimport { Component } from '../widgets/component';\nimport { GridHeaderCtrl, IGridHeaderComp } from './gridHeaderCtrl';\nimport { HeaderRowContainerComp } from './rowContainer/headerRowContainerComp';\n\nexport class GridHeaderComp extends Component {\n\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-header\" role=\"presentation\" unselectable=\"on\"/>`;\n\n    constructor() {\n        super(GridHeaderComp.TEMPLATE);\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n\n        const compProxy: IGridHeaderComp = {\n            addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n            setHeightAndMinHeight: height => {\n                this.getGui().style.height = height;\n                this.getGui().style.minHeight = height;\n            }\n        };\n\n        const ctrl = this.createManagedBean(new GridHeaderCtrl());\n        ctrl.setComp(compProxy, this.getGui(), this.getFocusableElement());\n\n        const addContainer = (container: HeaderRowContainerComp) => {\n            this.createManagedBean(container);\n            this.appendChild(container);\n        };\n\n        addContainer(new HeaderRowContainerComp(Constants.PINNED_LEFT));\n        addContainer(new HeaderRowContainerComp(null));\n        addContainer(new HeaderRowContainerComp(Constants.PINNED_RIGHT));\n    }\n}\n"]}