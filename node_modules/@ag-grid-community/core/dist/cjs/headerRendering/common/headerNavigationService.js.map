{"version":3,"sources":["../../src/ts/headerRendering/common/headerNavigationService.ts"],"names":[],"mappings":"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","file":"headerNavigationService.js","sourcesContent":["import { BeanStub } from \"../../context/beanStub\";\nimport { Autowired, Bean, PostConstruct } from \"../../context/context\";\nimport { CtrlsService } from \"../../ctrlsService\";\nimport { Column } from \"../../entities/column\";\nimport { ColumnGroup } from \"../../entities/columnGroup\";\nimport { FocusService } from \"../../focusService\";\nimport { GridBodyCtrl } from \"../../gridBodyComp/gridBodyCtrl\";\nimport { AnimationFrameService } from \"../../misc/animationFrameService\";\nimport { last } from \"../../utils/array\";\nimport { HeaderRowType } from \"../row/headerRowComp\";\nimport { HeaderPosition, HeaderPositionUtils } from \"./headerPosition\";\n\nexport enum HeaderNavigationDirection {\n    UP,\n    DOWN,\n    LEFT,\n    RIGHT\n}\n\n@Bean('headerNavigationService')\nexport class HeaderNavigationService extends BeanStub {\n\n    @Autowired('focusService') private focusService: FocusService;\n    @Autowired('headerPositionUtils') private headerPositionUtils: HeaderPositionUtils;\n    @Autowired('animationFrameService') private animationFrameService: AnimationFrameService;\n    @Autowired('ctrlsService') private ctrlsService: CtrlsService;\n\n    private gridBodyCon: GridBodyCtrl;\n\n    @PostConstruct\n    private postConstruct(): void {\n        this.ctrlsService.whenReady(p => {\n            this.gridBodyCon = p.gridBodyCtrl;\n        });\n    }\n\n    public getHeaderRowCount(): number {\n        const centerHeaderContainer = this.ctrlsService.getHeaderRowContainerCtrl();\n        return centerHeaderContainer ? centerHeaderContainer.getRowCount() : 0;\n    }\n\n    public getHeaderRowType(rowIndex: number): HeaderRowType | undefined {\n        const centerHeaderContainer = this.ctrlsService.getHeaderRowContainerCtrl();\n        if (centerHeaderContainer) {\n            return centerHeaderContainer.getRowType(rowIndex);\n        }\n    }\n\n    /*\n     * This method navigates grid header vertically\n     * @return {boolean} true to preventDefault on the event that caused this navigation.\n     */\n    public navigateVertically(direction: HeaderNavigationDirection, fromHeader: HeaderPosition | null, event: KeyboardEvent): boolean {\n        if (!fromHeader) {\n            fromHeader = this.focusService.getFocusedHeader();\n        }\n\n        if (!fromHeader) { return false; }\n\n        const { headerRowIndex, column } = fromHeader;\n        const rowLen = this.getHeaderRowCount();\n        const isUp = direction === HeaderNavigationDirection.UP ;\n        let nextRow = isUp ?  headerRowIndex - 1 : headerRowIndex + 1;\n        let nextFocusColumn: ColumnGroup | Column | null = null;\n        let skipColumn = false;\n\n        if (nextRow < 0) {\n            nextRow = 0;\n            nextFocusColumn = column;\n            skipColumn = true;\n        }\n\n        if (nextRow >= rowLen) {\n            nextRow = -1; // -1 indicates the focus should move to grid rows.\n        }\n\n        const currentRowType = this.getHeaderRowType(headerRowIndex);\n\n        if (!skipColumn) {\n            if (currentRowType === HeaderRowType.COLUMN_GROUP) {\n                const currentColumn = column as ColumnGroup;\n                nextFocusColumn = isUp ? column.getParent() : currentColumn.getDisplayedChildren()![0] as ColumnGroup;\n            } else if (currentRowType === HeaderRowType.FLOATING_FILTER) {\n                nextFocusColumn = column;\n            } else {\n                const currentColumn = column as Column;\n                nextFocusColumn = isUp ? currentColumn.getParent() : currentColumn;\n            }\n\n            if (!nextFocusColumn) { return false; }\n        }\n\n        return this.focusService.focusHeaderPosition({\n            headerPosition: { headerRowIndex: nextRow, column: nextFocusColumn! },\n            allowUserOverride:  true,\n            event\n        });\n    }\n\n    /*\n     * This method navigates grid header horizontally\n     * @return {boolean} true to preventDefault on the event that caused this navigation.\n     */\n    public navigateHorizontally(direction: HeaderNavigationDirection, fromTab: boolean = false, event: KeyboardEvent): boolean {\n        const focusedHeader = this.focusService.getFocusedHeader()!;\n        const isLeft = direction === HeaderNavigationDirection.LEFT;\n        const isRtl = this.gridOptionsWrapper.isEnableRtl();\n        let nextHeader: HeaderPosition;\n        let normalisedDirection: 'Before' |  'After';\n\n        // either navigating to the left or isRtl (cannot be both)\n        if (isLeft !== isRtl) {\n            normalisedDirection = 'Before';\n            nextHeader = this.headerPositionUtils.findHeader(focusedHeader, normalisedDirection)!;\n        } else {\n            normalisedDirection = 'After';\n            nextHeader = this.headerPositionUtils.findHeader(focusedHeader, normalisedDirection)!;\n        }\n\n        if (nextHeader) {\n            return this.focusService.focusHeaderPosition({\n                headerPosition: nextHeader,\n                direction: normalisedDirection,\n                fromTab,\n                allowUserOverride: true,\n                event\n            });\n        }\n\n        if (!fromTab) { return true; }\n\n        return this.focusNextHeaderRow(focusedHeader, normalisedDirection, event);\n    }\n\n    private focusNextHeaderRow(focusedHeader: HeaderPosition, direction: 'Before' | 'After', event: KeyboardEvent): boolean {\n        const currentIndex = focusedHeader.headerRowIndex;\n        let nextPosition: HeaderPosition | null = null;\n        let nextRowIndex: number;\n\n        if (direction === 'Before') {\n            if (currentIndex > 0) {\n                nextRowIndex = currentIndex - 1;\n                nextPosition = this.headerPositionUtils.findColAtEdgeForHeaderRow(nextRowIndex, 'end')!;\n            }\n        } else {\n            nextRowIndex = currentIndex + 1;\n            nextPosition = this.headerPositionUtils.findColAtEdgeForHeaderRow(nextRowIndex, 'start')!;\n        }\n\n        return this.focusService.focusHeaderPosition({\n            headerPosition: nextPosition,\n            direction,\n            fromTab: true,\n            allowUserOverride: true,\n            event\n        });\n    }\n\n    public scrollToColumn(column: Column | ColumnGroup, direction: 'Before' | 'After' | null = 'After'): void {\n        if (column.getPinned()) { return; }\n\n        let columnToScrollTo: Column;\n\n        if (column instanceof ColumnGroup) {\n            const columns = column.getDisplayedLeafColumns();\n            columnToScrollTo = direction === 'Before' ? last(columns) : columns[0];\n        } else {\n            columnToScrollTo = column;\n        }\n\n        this.gridBodyCon.getScrollFeature().ensureColumnVisible(columnToScrollTo);\n\n        // need to nudge the scrolls for the floating items. otherwise when we set focus on a non-visible\n        // floating cell, the scrolls get out of sync\n        this.gridBodyCon.getScrollFeature().horizontallyScrollHeaderCenterAndFloatingCenter();\n\n        // need to flush frames, to make sure the correct cells are rendered\n        this.animationFrameService.flushAllFrames();\n    }\n}\n"]}