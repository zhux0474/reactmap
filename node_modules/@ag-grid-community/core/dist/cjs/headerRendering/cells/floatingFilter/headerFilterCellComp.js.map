{"version":3,"sources":["../../src/ts/headerRendering/cells/floatingFilter/headerFilterCellComp.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,oDAAyD;AAGzD,0CAAuE;AACvE,8EAAoE;AACpE,iFAAgF;AAGhF;IAA0C,wCAA4C;IAgBlF,8BAAY,IAA0B;eAClC,kBAAM,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC;IAC9C,CAAC;IAGO,4CAAa,GAArB;QADA,iBAgBC;QAbG,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAE3B,IAAM,SAAS,GAA0B;YACrC,mBAAmB,EAAE,UAAC,YAAY,EAAE,EAAE,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,EAAE,CAAC,EAA1C,CAA0C;YACrF,uBAAuB,EAAE,UAAC,YAAY,EAAE,EAAE,IAAK,OAAA,yBAAmB,CAAC,KAAI,CAAC,mBAAmB,EAAE,YAAY,EAAE,EAAE,CAAC,EAA/D,CAA+D;YAC9G,gCAAgC,EAAE,UAAC,YAAY,EAAE,EAAE,IAAK,OAAA,yBAAmB,CAAC,KAAI,CAAC,cAAc,EAAE,YAAY,EAAE,EAAE,CAAC,EAA1D,CAA0D;YAClH,cAAc,EAAE,UAAA,WAAW,IAAI,OAAA,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAhC,CAAgC;YAC/D,qBAAqB,EAAE,cAAK,OAAA,KAAI,CAAC,WAAW,EAAhB,CAAgB;YAC5C,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,EAAxB,CAAwB;YAC3C,WAAW,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,KAAK,CAAC,EAA7C,CAA6C;SACtE,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC7F,CAAC;IAEO,6CAAc,GAAtB,UAAuB,WAA4B;QAAnD,iBAIC;QAHG,0FAA0F;QAC1F,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,kBAAkB,EAAE,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAA3B,CAA2B,CAAC,CAAC;IAChE,CAAC;IAEO,+CAAgB,GAAxB,UAAyB,IAAgC;QAAzD,iBAWC;QAVG,IAAI,CAAC,IAAI,EAAE;YAAE,OAAO;SAAE;QAEtB,IAAI,CAAC,cAAc,CAAE,cAAK,OAAA,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,EAA9B,CAA8B,CAAE,CAAC;QAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YAAE,OAAO;SAAE;QAEhC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAEpD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;IACL,CAAC;IArDc,6BAAQ,GACnB,8dAKO,CAAC;IAEwB;QAAnC,kCAAW,CAAC,qBAAqB,CAAC;qEAAmD;IACvD;QAA9B,kCAAW,CAAC,gBAAgB,CAAC;gEAA8C;IACtC;QAArC,kCAAW,CAAC,uBAAuB,CAAC;uEAAqD;IAS1F;QADC,uBAAa;6DAgBb;IAoBL,2BAAC;CAxDD,AAwDC,CAxDyC,+CAAsB,GAwD/D;AAxDY,oDAAoB","file":"headerFilterCellComp.js","sourcesContent":["import { UserCompDetails } from \"../../../components/framework/userComponentFactory\";\nimport { PostConstruct } from '../../../context/context';\nimport { IFloatingFilterComp } from '../../../filter/floating/floatingFilter';\nimport { AgPromise } from '../../../utils';\nimport { addOrRemoveCssClass, setDisplayed } from '../../../utils/dom';\nimport { RefSelector } from '../../../widgets/componentAnnotations';\nimport { AbstractHeaderCellComp } from '../abstractCell/abstractHeaderCellComp';\nimport { HeaderFilterCellCtrl, IHeaderFilterCellComp } from './headerFilterCellCtrl';\n\nexport class HeaderFilterCellComp extends AbstractHeaderCellComp<HeaderFilterCellCtrl> {\n\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-header-cell ag-floating-filter\" role=\"gridcell\" tabindex=\"-1\">\n            <div ref=\"eFloatingFilterBody\" role=\"presentation\"></div>\n            <div class=\"ag-floating-filter-button ag-hidden\" ref=\"eButtonWrapper\" role=\"presentation\">\n                <button type=\"button\" aria-label=\"Open Filter Menu\" class=\"ag-floating-filter-button-button\" ref=\"eButtonShowMainFilter\" tabindex=\"-1\"></button>\n            </div>\n        </div>`;\n\n    @RefSelector('eFloatingFilterBody') private readonly eFloatingFilterBody: HTMLElement;\n    @RefSelector('eButtonWrapper') private readonly eButtonWrapper: HTMLElement;\n    @RefSelector('eButtonShowMainFilter') private readonly eButtonShowMainFilter: HTMLElement;\n\n    private compPromise: AgPromise<IFloatingFilterComp> | null;\n\n    constructor(ctrl: HeaderFilterCellCtrl) {\n        super(HeaderFilterCellComp.TEMPLATE, ctrl);\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n\n        const eGui = this.getGui();\n\n        const compProxy: IHeaderFilterCellComp = {\n            addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n            addOrRemoveBodyCssClass: (cssClassName, on) => addOrRemoveCssClass(this.eFloatingFilterBody, cssClassName, on),\n            addOrRemoveButtonWrapperCssClass: (cssClassName, on) => addOrRemoveCssClass(this.eButtonWrapper, cssClassName, on),\n            setCompDetails: compDetails => this.setCompDetails(compDetails),\n            getFloatingFilterComp: ()=> this.compPromise,\n            setWidth: width => eGui.style.width = width,\n            setMenuIcon: eIcon => this.eButtonShowMainFilter.appendChild(eIcon)\n        };\n\n        this.ctrl.setComp(compProxy, eGui, this.eButtonShowMainFilter, this.eFloatingFilterBody);\n    }\n\n    private setCompDetails(compDetails: UserCompDetails): void {\n        // because we are providing defaultFloatingFilterType, we know it will never be undefined;\n        this.compPromise = compDetails.newAgStackInstance();\n        this.compPromise.then( comp => this.afterCompCreated(comp));\n    }\n\n    private afterCompCreated(comp: IFloatingFilterComp | null): void {\n        if (!comp) { return; }\n\n        this.addDestroyFunc( ()=> this.context.destroyBean(comp) );\n        if (!this.isAlive()) { return; }\n\n        this.eFloatingFilterBody.appendChild(comp.getGui());\n\n        if (comp.afterGuiAttached) {\n            comp.afterGuiAttached();\n        }\n    }\n}\n"]}