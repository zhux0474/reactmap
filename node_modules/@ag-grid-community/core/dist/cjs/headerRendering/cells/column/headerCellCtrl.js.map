{"version":3,"sources":["../../src/ts/headerRendering/cells/column/headerCellCtrl.ts"],"names":[],"mappings":"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","file":"headerCellCtrl.js","sourcesContent":["import { ColumnApi } from \"../../../columns/columnApi\";\nimport { ColumnModel } from \"../../../columns/columnModel\";\nimport { UserCompDetails, UserComponentFactory } from \"../../../components/framework/userComponentFactory\";\nimport { KeyCode } from '../../../constants/keyCode';\nimport { Autowired, PreDestroy } from \"../../../context/context\";\nimport { DragAndDropService, DragItem, DragSource, DragSourceType } from \"../../../dragAndDrop/dragAndDropService\";\nimport { Column } from \"../../../entities/column\";\nimport { Events } from \"../../../eventKeys\";\nimport { GridApi } from \"../../../gridApi\";\nimport { IMenuFactory } from \"../../../interfaces/iMenuFactory\";\nimport { Beans } from \"../../../rendering/beans\";\nimport { ColumnHoverService } from \"../../../rendering/columnHoverService\";\nimport { SetLeftFeature } from \"../../../rendering/features/setLeftFeature\";\nimport { SortController } from \"../../../sortController\";\nimport { ColumnSortState, getAriaSortState } from \"../../../utils/aria\";\nimport { ManagedFocusFeature } from \"../../../widgets/managedFocusFeature\";\nimport { ITooltipFeatureComp, ITooltipFeatureCtrl, TooltipFeature } from \"../../../widgets/tooltipFeature\";\nimport { HeaderRowCtrl } from \"../../row/headerRowCtrl\";\nimport { AbstractHeaderCellCtrl, IAbstractHeaderCellComp } from \"../abstractCell/abstractHeaderCellCtrl\";\nimport { CssClassApplier } from \"../cssClassApplier\";\nimport { HoverFeature } from \"../hoverFeature\";\nimport { HeaderComp, IHeader, IHeaderParams } from \"./headerComp\";\nimport { ResizeFeature } from \"./resizeFeature\";\nimport { SelectAllFeature } from \"./selectAllFeature\";\n\nexport interface IHeaderCellComp extends IAbstractHeaderCellComp, ITooltipFeatureComp {\n    setWidth(width: string): void;\n    addOrRemoveCssClass(cssClassName: string, on: boolean): void;\n    setAriaSort(sort: ColumnSortState | undefined): void;\n    setColId(id: string): void;\n    setAriaDescribedBy(id: string | undefined): void;\n\n    setUserCompDetails(compDetails: UserCompDetails): void;\n    getUserCompInstance(): IHeader | undefined;\n}\n\nexport class HeaderCellCtrl extends AbstractHeaderCellCtrl {\n\n    @Autowired('columnModel') private columnModel: ColumnModel;\n    @Autowired('columnHoverService') private columnHoverService: ColumnHoverService;\n    @Autowired('beans') protected beans: Beans;\n    @Autowired('sortController') private sortController: SortController;\n    @Autowired('menuFactory') private menuFactory: IMenuFactory;\n    @Autowired('dragAndDropService') private dragAndDropService: DragAndDropService;\n    @Autowired('gridApi') private gridApi: GridApi;\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('userComponentFactory') private userComponentFactory: UserComponentFactory;\n\n    private colDefVersion: number;\n\n    private comp: IHeaderCellComp;\n\n    private column: Column;\n\n    private refreshFunctions: (() => void)[] = [];\n\n    private selectAllFeature: SelectAllFeature;\n\n    private moveDragSource: DragSource | undefined;\n\n    private sortable: boolean | null | undefined;\n    private displayName: string | null;\n    private draggable: boolean;\n    private menuEnabled: boolean;\n    private dragSourceElement: HTMLElement | undefined;\n\n    private userCompDetails: UserCompDetails;\n\n    private userHeaderClasses: Set<string> = new Set();\n\n    constructor(column: Column, parentRowCtrl: HeaderRowCtrl) {\n        super(column, parentRowCtrl);\n        this.column = column;\n    }\n\n    public setComp(comp: IHeaderCellComp, eGui: HTMLElement, eResize: HTMLElement): void {\n        super.setGui(eGui);\n        this.comp = comp;\n\n        this.colDefVersion = this.columnModel.getColDefVersion();\n\n        this.updateState();\n        this.setupWidth();\n        this.setupMovingCss();\n        this.setupMenuClass();\n        this.setupSortableClass();\n        this.addColumnHoverListener();\n        this.setupFilterCss();\n        this.setupColId();\n        this.setupClassesFromColDef();\n        this.setupTooltip();\n        this.addActiveHeaderMouseListeners();\n        this.setupSelectAll();\n        this.setupUserComp();\n\n        this.createManagedBean(new ResizeFeature(this.getPinned(), this.column, eResize, comp, this));\n        this.createManagedBean(new HoverFeature([this.column], eGui));\n        this.createManagedBean(new SetLeftFeature(this.column, eGui, this.beans));\n        this.createManagedBean(new ManagedFocusFeature(\n            eGui,\n            {\n                shouldStopEventPropagation: e => this.shouldStopEventPropagation(e),\n                onTabKeyDown: () => null,\n                handleKeyDown: this.handleKeyDown.bind(this),\n                onFocusIn: this.onFocusIn.bind(this),\n                onFocusOut: this.onFocusOut.bind(this)\n            }\n        ));\n\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_CHANGED, this.onColumnPivotChanged.bind(this));\n    }\n\n    private setupUserComp(): void {\n        const compDetails = this.lookupUserCompDetails();\n        this.setCompDetails(compDetails);\n    }\n\n    private setCompDetails(compDetails: UserCompDetails): void {\n        this.userCompDetails = compDetails;\n        this.comp.setUserCompDetails(compDetails);\n    }\n\n    private lookupUserCompDetails(): UserCompDetails {\n        const params = this.createParams();\n        const colDef = this.column.getColDef();\n        return this.userComponentFactory.getHeaderCompDetails(colDef, params)!;\n    }\n\n    private createParams(): IHeaderParams {\n\n        const colDef = this.column.getColDef();\n\n        const params = {\n            column: this.column,\n            displayName: this.displayName,\n            enableSorting: colDef.sortable,\n            enableMenu: this.menuEnabled,\n            showColumnMenu: (source: HTMLElement) => {\n                this.gridApi.showColumnMenuAfterButtonClick(this.column, source);\n            },\n            progressSort: (multiSort?: boolean) => {\n                this.sortController.progressSort(this.column, !!multiSort, \"uiColumnSorted\");\n            },\n            setSort: (sort: string, multiSort?: boolean) => {\n                this.sortController.setSortForColumn(this.column, sort, !!multiSort, \"uiColumnSorted\");\n            },\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            context: this.gridOptionsWrapper.getContext(),\n            eGridHeader: this.getGui()\n        } as IHeaderParams;\n\n        return params;\n    }\n\n    private setupSelectAll(): void {\n        this.selectAllFeature = this.createManagedBean(new SelectAllFeature(this.column));\n        this.selectAllFeature.setComp(this.comp);\n    }\n\n    public getSelectAllGui(): HTMLElement {\n        return this.selectAllFeature.getCheckboxGui();\n    }\n\n    protected handleKeyDown(e: KeyboardEvent): void {\n        if (e.keyCode === KeyCode.SPACE) {\n            this.selectAllFeature.onSpaceKeyPressed(e);\n        }\n        if (e.keyCode === KeyCode.ENTER) {\n            this.onEnterKeyPressed(e);\n        }\n    }\n\n    private onEnterKeyPressed(e: KeyboardEvent): void {\n        /// THIS IS BAD - we are assuming the header is not a user provided comp\n        const headerComp = this.comp.getUserCompInstance() as HeaderComp;\n        if (!headerComp) { return; }\n\n        if (e.ctrlKey || e.metaKey) {\n            if (this.menuEnabled && headerComp.showMenu) {\n                e.preventDefault();\n                headerComp.showMenu();\n            }\n        } else if (this.sortable) {\n            const multiSort = e.shiftKey;\n            this.sortController.progressSort(this.column, multiSort, \"uiColumnSorted\");\n        }\n    }\n\n    public isMenuEnabled(): boolean {\n        return this.menuEnabled;\n    }\n\n    protected onFocusIn(e: FocusEvent) {\n        if (!this.getGui().contains(e.relatedTarget as HTMLElement)) {\n            const rowIndex = this.getRowIndex();\n            this.focusService.setFocusedHeader(rowIndex, this.column);\n        }\n\n        this.setActiveHeader(true);\n    }\n\n    protected onFocusOut(e: FocusEvent) {\n        if (\n            this.getGui().contains(e.relatedTarget as HTMLElement)\n        ) { return; }\n\n        this.setActiveHeader(false);\n    }\n\n    private setupTooltip(): void {\n\n        const tooltipCtrl: ITooltipFeatureCtrl = {\n            getColumn: () => this.column,\n            getColDef: () => this.column.getColDef(),\n            getGui: () => this.eGui,\n            getLocation: () => 'header',\n            getTooltipValue: () => {\n                const res = this.column.getColDef().headerTooltip;\n                return res;\n            },\n        };\n\n        const tooltipFeature = this.createManagedBean(new TooltipFeature(tooltipCtrl, this.beans));\n\n        tooltipFeature.setComp(this.comp);\n\n        this.refreshFunctions.push(() => tooltipFeature.refreshToolTip());\n    }\n\n    private setupClassesFromColDef(): void {\n        const refreshHeaderClasses = () => {\n            const colDef = this.column.getColDef();\n            const goa = this.gridOptionsWrapper;\n            const classes = CssClassApplier.getHeaderClassesFromColDef(colDef, goa, this.column, null);\n\n            const oldClasses = this.userHeaderClasses;\n            this.userHeaderClasses = new Set(classes);\n\n            classes.forEach(c => {\n                if (oldClasses.has(c)) {\n                    // class already added, no need to apply it, but remove from old set\n                    oldClasses.delete(c);\n                } else {\n                    // class new since last time, so apply it\n                    this.comp.addOrRemoveCssClass(c, true);\n                }\n            });\n\n            // now old set only has classes that were applied last time, but not this time, so remove them\n            oldClasses.forEach(c => this.comp.addOrRemoveCssClass(c, false));\n        };\n\n        this.refreshFunctions.push(refreshHeaderClasses);\n        refreshHeaderClasses();\n    }\n\n    public getGui(): HTMLElement {\n        return this.eGui;\n    }\n\n    public setDragSource(eSource: HTMLElement | undefined): void {\n        this.dragSourceElement = eSource;\n        this.removeDragSource();\n\n        if (!eSource) { return; }\n\n        if (!this.draggable) { return; }\n\n        this.moveDragSource = {\n            type: DragSourceType.HeaderCell,\n            eElement: eSource,\n            defaultIconName: DragAndDropService.ICON_HIDE,\n            getDragItem: () => this.createDragItem(),\n            dragItemName: this.displayName,\n            onDragStarted: () => this.column.setMoving(true, \"uiColumnMoved\"),\n            onDragStopped: () => this.column.setMoving(false, \"uiColumnMoved\")\n        };\n\n        this.dragAndDropService.addDragSource(this.moveDragSource, true);\n    }\n\n    private createDragItem(): DragItem {\n        const visibleState: { [key: string]: boolean; } = {};\n        visibleState[this.column.getId()] = this.column.isVisible();\n\n        return {\n            columns: [this.column],\n            visibleState: visibleState\n        };\n    }\n\n    @PreDestroy\n    public removeDragSource(): void {\n        if (this.moveDragSource) {\n            this.dragAndDropService.removeDragSource(this.moveDragSource);\n            this.moveDragSource = undefined;\n        }\n    }\n\n    private onNewColumnsLoaded(): void {\n        const colDefVersionNow = this.columnModel.getColDefVersion();\n        if (colDefVersionNow != this.colDefVersion) {\n            this.colDefVersion = colDefVersionNow;\n            this.refresh();\n        }\n    }\n\n    private updateState(): void {\n        const colDef = this.column.getColDef();\n        this.menuEnabled = this.menuFactory.isMenuEnabled(this.column) && !colDef.suppressMenu;\n        this.sortable = colDef.sortable;\n        this.displayName = this.calculateDisplayName();\n        this.draggable = this.workOutDraggable();\n    }\n\n    public addRefreshFunction(func: () => void): void {\n        this.refreshFunctions.push(func);\n    }\n\n    private refresh(): void {\n        this.updateState();\n        this.refreshHeaderComp();\n        this.refreshFunctions.forEach(f => f());\n    }\n\n    private refreshHeaderComp(): void {\n        const newCompDetails = this.lookupUserCompDetails();\n\n        const compInstance = this.comp.getUserCompInstance();\n\n        // only try refresh if old comp exists adn it is the correct type\n        const attemptRefresh = compInstance != null && this.userCompDetails.componentClass == newCompDetails.componentClass;\n\n        const headerCompRefreshed = attemptRefresh ? this.attemptHeaderCompRefresh(newCompDetails.params) : false;\n\n        if (headerCompRefreshed) {\n            // we do this as a refresh happens after colDefs change, and it's possible the column has had it's\n            // draggable property toggled. no need to call this if not refreshing, as setDragSource is done\n            // as part of appendHeaderComp\n            this.setDragSource(this.dragSourceElement);\n        } else {\n            this.setCompDetails(newCompDetails);\n        }\n    }\n\n    public attemptHeaderCompRefresh(params: IHeaderParams): boolean {\n        const headerComp = this.comp.getUserCompInstance();\n        if (!headerComp) { return false; }\n\n        // if no refresh method, then we want to replace the headerComp\n        if (!headerComp.refresh) { return false; }\n\n        const res = headerComp.refresh(params);\n\n        return res;\n    }\n\n    private calculateDisplayName(): string | null {\n        return this.columnModel.getDisplayNameForColumn(this.column, 'header', true);\n    }\n\n    private checkDisplayName(): void {\n        // display name can change if aggFunc different, eg sum(Gold) is now max(Gold)\n        if (this.displayName !== this.calculateDisplayName()) {\n            this.refresh();\n        }\n    }\n\n    private workOutDraggable(): boolean {\n        const colDef = this.column.getColDef();\n        const isSuppressMovableColumns = this.gridOptionsWrapper.isSuppressMovableColumns();\n\n        const colCanMove = !isSuppressMovableColumns && !colDef.suppressMovable && !colDef.lockPosition;\n\n        // we should still be allowed drag the column, even if it can't be moved, if the column\n        // can be dragged to a rowGroup or pivot drop zone\n        return !!colCanMove || !!colDef.enableRowGroup || !!colDef.enablePivot;\n    }\n\n    private onColumnRowGroupChanged(): void {\n        this.checkDisplayName();\n    }\n\n    private onColumnPivotChanged(): void {\n        this.checkDisplayName();\n    }\n\n    private onColumnValueChanged(): void {\n        this.checkDisplayName();\n    }\n\n    private setupWidth(): void {\n        const listener = () => {\n            this.comp.setWidth(this.column.getActualWidth() + 'px');\n        };\n\n        this.addManagedListener(this.column, Column.EVENT_WIDTH_CHANGED, listener);\n        listener();\n    }\n\n    private setupMovingCss(): void {\n        const listener = () => {\n            // this is what makes the header go dark when it is been moved (gives impression to\n            // user that the column was picked up).\n            this.comp.addOrRemoveCssClass('ag-header-cell-moving', this.column.isMoving());\n        };\n\n        this.addManagedListener(this.column, Column.EVENT_MOVING_CHANGED, listener);\n        listener();\n    }\n\n    private setupMenuClass(): void {\n        const listener = () => {\n            this.comp.addOrRemoveCssClass('ag-column-menu-visible', this.column.isMenuVisible());\n        };\n\n        this.addManagedListener(this.column, Column.EVENT_MENU_VISIBLE_CHANGED, listener);\n        listener();\n    }\n\n    private setupSortableClass(): void {\n\n        const updateSortableCssClass = () => {\n            this.comp.addOrRemoveCssClass('ag-header-cell-sortable', !!this.sortable);\n        };\n\n        const updateAriaSort = () => {\n            if (this.sortable) {\n                this.comp.setAriaSort(getAriaSortState(this.column));\n            } else {\n                this.comp.setAriaSort(undefined);\n            }\n        };\n\n        updateSortableCssClass();\n        updateAriaSort();\n\n        this.addRefreshFunction(updateSortableCssClass);\n        this.addRefreshFunction(updateAriaSort);\n\n        this.addManagedListener(this.column, Column.EVENT_SORT_CHANGED, updateAriaSort);\n    }\n\n    private addColumnHoverListener(): void {\n        const listener = () => {\n            if (!this.gridOptionsWrapper.isColumnHoverHighlight()) { return; }\n            const isHovered = this.columnHoverService.isHovered(this.column);\n            this.comp.addOrRemoveCssClass('ag-column-hover', isHovered);\n        };\n\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_HOVER_CHANGED, listener);\n        listener();\n    }\n\n    private setupFilterCss(): void {\n        const listener = () => {\n            this.comp.addOrRemoveCssClass('ag-header-cell-filtered', this.column.isFilterActive());\n        };\n\n        this.addManagedListener(this.column, Column.EVENT_FILTER_ACTIVE_CHANGED, listener);\n        listener();\n    }\n\n    private setupColId(): void {\n        this.comp.setColId(this.column.getColId());\n    }\n\n    private addActiveHeaderMouseListeners(): void {\n        const listener = (e: MouseEvent) => this.setActiveHeader(e.type === 'mouseenter');\n        this.addManagedListener(this.getGui(), 'mouseenter', listener);\n        this.addManagedListener(this.getGui(), 'mouseleave', listener);\n    }\n\n    private setActiveHeader(active: boolean): void {\n        this.comp.addOrRemoveCssClass('ag-header-active', active);\n    }\n}\n"]}