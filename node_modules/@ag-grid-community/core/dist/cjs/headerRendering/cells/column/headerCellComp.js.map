{"version":3,"sources":["../../src/ts/headerRendering/cells/column/headerCellComp.ts"],"names":[],"mappings":"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","file":"headerCellComp.js","sourcesContent":["import { UserCompDetails, UserComponentFactory } from \"../../../components/framework/userComponentFactory\";\nimport { Autowired, PostConstruct, PreDestroy } from \"../../../context/context\";\nimport { Column } from \"../../../entities/column\";\nimport { Beans } from \"../../../rendering/beans\";\nimport { removeAriaSort, setAriaDescribedBy, setAriaSort } from \"../../../utils/aria\";\nimport { RefSelector } from \"../../../widgets/componentAnnotations\";\nimport { AbstractHeaderCellComp } from \"../abstractCell/abstractHeaderCellComp\";\nimport { HeaderCellCtrl, IHeaderCellComp } from \"./headerCellCtrl\";\nimport { IHeaderComp } from \"./headerComp\";\n\nexport class HeaderCellComp extends AbstractHeaderCellComp<HeaderCellCtrl> {\n\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-header-cell\" role=\"columnheader\" unselectable=\"on\" tabindex=\"-1\">\n            <div ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n        </div>`;\n\n    @RefSelector('eResize') private eResize: HTMLElement;\n\n    protected readonly column: Column;\n    protected readonly pinned: string | null;\n\n    private headerComp: IHeaderComp | undefined;\n    private headerCompGui: HTMLElement | undefined;\n    private headerCompVersion = 0;\n\n    constructor(ctrl: HeaderCellCtrl) {\n        super(HeaderCellComp.TEMPLATE, ctrl);\n        this.column = ctrl.getColumnGroupChild() as Column;\n        this.pinned = ctrl.getPinned();\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n\n        const eGui = this.getGui();\n\n        const setAttribute = (name: string, value: string | null | undefined, element?: HTMLElement) => {\n            const actualElement = element ? element : eGui;\n            if (value != null && value != '') {\n                actualElement.setAttribute(name, value);\n            } else {\n                actualElement.removeAttribute(name);\n            }\n        };\n\n        const compProxy: IHeaderCellComp = {\n            setWidth: width => eGui.style.width = width,\n            addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n            setAriaSort: sort => sort ? setAriaSort(eGui, sort) : removeAriaSort(eGui),\n            setColId: id => setAttribute('col-id', id),\n            setTitle: title => setAttribute('title', title),\n            setAriaDescribedBy: value => setAriaDescribedBy(eGui, value),\n            setUserCompDetails: compDetails => this.setUserCompDetails(compDetails),\n            getUserCompInstance: ()=> this.headerComp\n        };\n\n        this.ctrl.setComp(compProxy, this.getGui(), this.eResize);\n\n        const selectAllGui = this.ctrl.getSelectAllGui();\n        this.eResize.insertAdjacentElement('afterend', selectAllGui);\n    }\n\n    @PreDestroy\n    private destroyHeaderComp(): void {\n        if (this.headerComp) {\n            this.getGui().removeChild(this.headerCompGui!);\n            this.headerComp = this.destroyBean(this.headerComp);\n            this.headerCompGui = undefined;\n        }\n    }\n\n    private setUserCompDetails(compDetails: UserCompDetails): void {\n        this.headerCompVersion++;\n\n        const versionCopy = this.headerCompVersion;\n\n        compDetails.newAgStackInstance()!.then( comp => this.afterCompCreated(versionCopy, comp) );\n    }\n\n    private afterCompCreated(version: number, headerComp: IHeaderComp): void {\n\n        if (version != this.headerCompVersion || !this.isAlive()) {\n            this.destroyBean(headerComp);\n            return;\n        }\n\n        this.destroyHeaderComp();\n\n        this.headerComp = headerComp;\n        this.headerCompGui = headerComp.getGui();\n        this.getGui().appendChild(this.headerCompGui);\n        this.ctrl.setDragSource(this.headerCompGui!);\n    }\n}\n"]}