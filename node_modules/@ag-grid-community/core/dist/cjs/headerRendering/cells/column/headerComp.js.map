{"version":3,"sources":["../../src/ts/headerRendering/cells/column/headerComp.ts"],"names":[],"mappings":"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","file":"headerComp.js","sourcesContent":["import { ColumnApi } from \"../../../columns/columnApi\";\nimport { Autowired } from \"../../../context/context\";\nimport { Column } from \"../../../entities/column\";\nimport { Events } from \"../../../events\";\nimport { GridApi } from \"../../../gridApi\";\nimport { IComponent } from \"../../../interfaces/iComponent\";\nimport { IMenuFactory } from \"../../../interfaces/iMenuFactory\";\nimport { SortController } from \"../../../sortController\";\nimport { firstExistingValue } from \"../../../utils/array\";\nimport { isIOSUserAgent } from \"../../../utils/browser\";\nimport { addOrRemoveCssClass, clearElement, removeFromParent, setDisplayed } from \"../../../utils/dom\";\nimport { exists } from \"../../../utils/generic\";\nimport { createIconNoSpan } from \"../../../utils/icon\";\nimport { escapeString } from \"../../../utils/string\";\nimport { Component } from \"../../../widgets/component\";\nimport { RefSelector } from \"../../../widgets/componentAnnotations\";\nimport { LongTapEvent, TapEvent, TouchListener } from \"../../../widgets/touchListener\";\n\nexport interface IHeaderParams {\n    /** The column the header is for. */\n    column: Column;\n    /** \n     * The name to display for the column. \n     * If the column is using a headerValueGetter, the displayName will take this into account. \n     */\n    displayName: string;\n    /**\n     * Whether sorting is enabled for the column. \n     * Only put sort logic into your header if this is true.\n     */\n    enableSorting: boolean;\n    /**\n     * Whether menu is enabled for the column.\n     * Only display a menu button in your header if this is true.\n     */\n    enableMenu: boolean;\n    /**\n     * Callback to request the grid to show the column menu.\n     * Pass in the html element of the column menu to have the\n     *  grid position the menu over the button.\n     */\n    showColumnMenu: (source: HTMLElement) => void;\n    /**\n     * Callback to progress the sort for this column.\n     * The grid will decide the next sort direction eg ascending, descending or 'no sort'.\n     * Pass `multiSort=true` if you want to do a multi sort (eg user has Shift held down when they click).\n     */\n    progressSort: (multiSort?: boolean) => void;\n    /**\n     * Callback to set the sort for this column.\n     * Pass the sort direction to use ignoring the current sort eg one of 'asc', 'desc' or null (for no sort).\n     * Pass `multiSort=true` if you want to do a multi sort (eg user has Shift held down when they click)\n     */\n    setSort: (sort: string, multiSort?: boolean) => void;\n    template: string;\n    /**\n     * The header the grid provides. \n     * The custom header component is a child of the grid provided header.\n     * The grid's header component is what contains the grid managed functionality such as resizing, keyboard navigation etc.\n     * This is provided should you want to make changes to this cell,\n     * eg add ARIA tags, or add keyboard event listener (as focus goes here when navigating to the header).\n     */\n    eGridHeader: HTMLElement;\n    api: GridApi;\n    columnApi: ColumnApi;\n    /** The context as provided on `gridOptions.context` */\n    context: any;\n}\n\nexport interface IHeader {\n    /** Get the header to refresh. Gets called whenever Column Defs are updated. */\n    refresh(params: IHeaderParams): boolean;\n}\n\nexport interface IHeaderComp extends IHeader, IComponent<IHeaderParams> { }\n\nexport class HeaderComp extends Component implements IHeaderComp {\n\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-cell-label-container\" role=\"presentation\">\n            <span ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\" aria-hidden=\"true\"></span>\n            <div ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\" unselectable=\"on\">\n                <span ref=\"eText\" class=\"ag-header-cell-text\" unselectable=\"on\"></span>\n                <span ref=\"eFilter\" class=\"ag-header-icon ag-header-label-icon ag-filter-icon\" aria-hidden=\"true\"></span>\n                <span ref=\"eSortOrder\" class=\"ag-header-icon ag-header-label-icon ag-sort-order\" aria-hidden=\"true\"></span>\n                <span ref=\"eSortAsc\" class=\"ag-header-icon ag-header-label-icon ag-sort-ascending-icon\" aria-hidden=\"true\"></span>\n                <span ref=\"eSortDesc\" class=\"ag-header-icon ag-header-label-icon ag-sort-descending-icon\" aria-hidden=\"true\"></span>\n                <span ref=\"eSortNone\" class=\"ag-header-icon ag-header-label-icon ag-sort-none-icon\" aria-hidden=\"true\"></span>\n            </div>\n        </div>`;\n\n    @Autowired('sortController') private sortController: SortController;\n    @Autowired('menuFactory') private menuFactory: IMenuFactory;\n\n    @RefSelector('eFilter') private eFilter: HTMLElement;\n    @RefSelector('eSortAsc') private eSortAsc: HTMLElement;\n\n    @RefSelector('eSortDesc') private eSortDesc: HTMLElement;\n    @RefSelector('eSortNone') private eSortNone: HTMLElement;\n    @RefSelector('eSortOrder') private eSortOrder: HTMLElement;\n    @RefSelector('eMenu') private eMenu: HTMLElement;\n    @RefSelector('eLabel') private eLabel: HTMLElement;\n    @RefSelector('eText') private eText: HTMLElement;\n\n    private params: IHeaderParams;\n\n    private lastMovingChanged = 0;\n\n    private currentDisplayName: string;\n    private currentTemplate: string | null;\n    private currentShowMenu: boolean;\n    private currentSort: boolean;\n\n    // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n    // so we need to override destroy() just to make the method public.\n    public destroy(): void {\n        super.destroy();\n    }\n\n    public refresh(params: IHeaderParams): boolean {\n\n        this.params = params;\n\n        // if template changed, then recreate the whole comp, the code required to manage\n        // a changing template is to difficult for what it's worth.\n        if (this.workOutTemplate() != this.currentTemplate) { return false; }\n        if (this.workOutShowMenu() != this.currentShowMenu) { return false; }\n        if (this.workOutSort() != this.currentSort) { return false; }\n\n        this.setDisplayName(params);\n\n        return true;\n    }\n\n    private workOutTemplate(): string | null {\n        let template: string | null = firstExistingValue(\n            this.params.template,\n            HeaderComp.TEMPLATE\n        );\n\n        // take account of any newlines & whitespace before/after the actual template\n        template = template && template.trim ? template.trim() : template;\n        return template;\n    }\n\n    public init(params: IHeaderParams): void {\n        this.params = params;\n\n        this.currentTemplate = this.workOutTemplate();\n        this.setTemplate(this.currentTemplate);\n        this.setupTap();\n        this.setupIcons(params.column);\n        this.setMenu();\n        this.setupSort();\n        this.setupFilterIcon();\n        this.setDisplayName(params);\n    }\n\n    private setDisplayName(params: IHeaderParams): void {\n        if (this.currentDisplayName != params.displayName) {\n            this.currentDisplayName = params.displayName;\n            const displayNameSanitised = escapeString(this.currentDisplayName);\n            if (this.eText) {\n                this.eText.innerHTML = displayNameSanitised!;\n            }\n        }\n    }\n\n    private setupIcons(column: Column): void {\n        this.addInIcon('sortAscending', this.eSortAsc, column);\n        this.addInIcon('sortDescending', this.eSortDesc, column);\n        this.addInIcon('sortUnSort', this.eSortNone, column);\n        this.addInIcon('menu', this.eMenu, column);\n        this.addInIcon('filter', this.eFilter, column);\n    }\n\n    private addInIcon(iconName: string, eParent: HTMLElement, column: Column): void {\n        if (eParent == null) { return; }\n\n        const eIcon = createIconNoSpan(iconName, this.gridOptionsWrapper, column);\n        if (eIcon) {\n            eParent.appendChild(eIcon);\n        }\n    }\n\n    private setupTap(): void {\n        const { gridOptionsWrapper: options } = this;\n\n        if (options.isSuppressTouch()) { return; }\n\n        const touchListener = new TouchListener(this.getGui(), true);\n        const suppressMenuHide = options.isSuppressMenuHide();\n        const tapMenuButton = suppressMenuHide && exists(this.eMenu);\n        const menuTouchListener = tapMenuButton ? new TouchListener(this.eMenu, true) : touchListener;\n\n        if (this.params.enableMenu) {\n            const eventType = tapMenuButton ? 'EVENT_TAP' : 'EVENT_LONG_TAP';\n            const showMenuFn = (event: TapEvent | LongTapEvent) => {\n                options.getApi()!.showColumnMenuAfterMouseClick(this.params.column, event.touchStart);\n            };\n            this.addManagedListener(menuTouchListener, TouchListener[eventType], showMenuFn);\n        }\n\n        if (this.params.enableSorting) {\n            const tapListener = (event: TapEvent) => {\n                const target = event.touchStart.target as HTMLElement;\n                // When suppressMenuHide is true, a tap on the menu icon will bubble up\n                // to the header container, in that case we should not sort\n                if (suppressMenuHide && this.eMenu.contains(target)) { return; }\n\n                this.sortController.progressSort(this.params.column, false, \"uiColumnSorted\");\n            };\n\n            this.addManagedListener(touchListener, TouchListener.EVENT_TAP, tapListener);\n        }\n\n        // if tapMenuButton is true `touchListener` and `menuTouchListener` are different\n        // so we need to make sure to destroy both listeners here\n        this.addDestroyFunc(() => touchListener.destroy());\n\n        if (tapMenuButton) {\n            this.addDestroyFunc(() => menuTouchListener.destroy());\n        }\n    }\n\n    private workOutShowMenu(): boolean {\n        // we don't show the menu if on an iPad/iPhone, as the user cannot have a pointer device/\n        // However if suppressMenuHide is set to true the menu will be displayed alwasys, so it's ok\n        // to show it on iPad in this case (as hover isn't needed). If suppressMenuHide\n        // is false (default) user will need to use longpress to display the menu.\n        const menuHides = !this.gridOptionsWrapper.isSuppressMenuHide();\n\n        const onIpadAndMenuHides = isIOSUserAgent() && menuHides;\n        const showMenu = this.params.enableMenu && !onIpadAndMenuHides;\n\n        return showMenu;\n    }\n\n    private setMenu(): void {\n        // if no menu provided in template, do nothing\n        if (!this.eMenu) {\n            return;\n        }\n\n        this.currentShowMenu = this.workOutShowMenu();\n        if (!this.currentShowMenu) {\n            removeFromParent(this.eMenu);\n            return;\n        }\n\n        const suppressMenuHide = this.gridOptionsWrapper.isSuppressMenuHide();\n        this.addManagedListener(this.eMenu, 'click', () => this.showMenu(this.eMenu));\n        addOrRemoveCssClass(this.eMenu, 'ag-header-menu-always-show', suppressMenuHide);\n    }\n\n    public showMenu(eventSource?: HTMLElement) {\n        if (!eventSource) {\n            eventSource = this.eMenu;\n        }\n\n        this.menuFactory.showMenuAfterButtonClick(this.params.column, eventSource, 'columnMenu');\n    }\n\n    private removeSortIcons(): void {\n        removeFromParent(this.eSortAsc);\n        removeFromParent(this.eSortDesc);\n        removeFromParent(this.eSortNone);\n        removeFromParent(this.eSortOrder);\n    }\n\n    private workOutSort(): boolean {\n        return this.params.enableSorting;\n    }\n\n    public setupSort(): void {\n        this.currentSort = this.params.enableSorting;\n\n        if (!this.currentSort) {\n            this.removeSortIcons();\n            return;\n        }\n\n        const sortUsingCtrl = this.gridOptionsWrapper.isMultiSortKeyCtrl();\n\n        // keep track of last time the moving changed flag was set\n        this.addManagedListener(this.params.column, Column.EVENT_MOVING_CHANGED, () => {\n            this.lastMovingChanged = new Date().getTime();\n        });\n\n        // add the event on the header, so when clicked, we do sorting\n        if (this.eLabel) {\n            this.addManagedListener(this.eLabel, 'click', (event: MouseEvent) => {\n\n                // sometimes when moving a column via dragging, this was also firing a clicked event.\n                // here is issue raised by user: https://ag-grid.zendesk.com/agent/tickets/1076\n                // this check stops sort if a) column is moving or b) column moved less than 200ms ago (so caters for race condition)\n                const moving = this.params.column.isMoving();\n                const nowTime = new Date().getTime();\n                // typically there is <2ms if moving flag was set recently, as it would be done in same VM turn\n                const movedRecently = (nowTime - this.lastMovingChanged) < 50;\n                const columnMoving = moving || movedRecently;\n\n                if (!columnMoving) {\n                    const multiSort = sortUsingCtrl ? (event.ctrlKey || event.metaKey) : event.shiftKey;\n                    this.params.progressSort(multiSort);\n                }\n            });\n        }\n\n        this.addManagedListener(this.params.column, Column.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n        this.onSortChanged();\n\n        this.addManagedListener(this.eventService, Events.EVENT_SORT_CHANGED, this.setMultiSortOrder.bind(this));\n        this.setMultiSortOrder();\n    }\n\n    private onSortChanged(): void {\n\n        addOrRemoveCssClass(this.getGui(), 'ag-header-cell-sorted-asc', this.params.column.isSortAscending());\n        addOrRemoveCssClass(this.getGui(), 'ag-header-cell-sorted-desc', this.params.column.isSortDescending());\n        addOrRemoveCssClass(this.getGui(), 'ag-header-cell-sorted-none', this.params.column.isSortNone());\n\n        if (this.eSortAsc) {\n            addOrRemoveCssClass(this.eSortAsc, 'ag-hidden', !this.params.column.isSortAscending());\n        }\n\n        if (this.eSortDesc) {\n            addOrRemoveCssClass(this.eSortDesc, 'ag-hidden', !this.params.column.isSortDescending());\n        }\n\n        if (this.eSortNone) {\n            const alwaysHideNoSort = !this.params.column.getColDef().unSortIcon && !this.gridOptionsWrapper.isUnSortIcon();\n            addOrRemoveCssClass(this.eSortNone, 'ag-hidden', alwaysHideNoSort || !this.params.column.isSortNone());\n        }\n    }\n\n    // we listen here for global sort events, NOT column sort events, as we want to do this\n    // when sorting has been set on all column (if we listened just for our col (where we\n    // set the asc / desc icons) then it's possible other cols are yet to get their sorting state.\n    private setMultiSortOrder(): void {\n\n        if (!this.eSortOrder) { return; }\n\n        const col = this.params.column;\n        const allColumnsWithSorting = this.sortController.getColumnsWithSortingOrdered();\n        const indexThisCol = allColumnsWithSorting.indexOf(col);\n        const moreThanOneColSorting = allColumnsWithSorting.length > 1;\n        const showIndex = col.isSorting() && moreThanOneColSorting;\n\n        setDisplayed(this.eSortOrder, showIndex);\n\n        if (indexThisCol >= 0) {\n            this.eSortOrder.innerHTML = (indexThisCol + 1).toString();\n        } else {\n            clearElement(this.eSortOrder);\n        }\n    }\n\n    private setupFilterIcon(): void {\n\n        if (!this.eFilter) { return; }\n\n        this.addManagedListener(this.params.column, Column.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n        this.onFilterChanged();\n    }\n\n    private onFilterChanged(): void {\n        const filterPresent = this.params.column.isFilterActive();\n        addOrRemoveCssClass(this.eFilter, 'ag-hidden', !filterPresent);\n    }\n}\n"]}