{"version":3,"sources":["../../src/ts/headerRendering/rowContainer/headerRowContainerComp.ts"],"names":[],"mappings":"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","file":"headerRowContainerComp.js","sourcesContent":["import { Constants } from '../../constants/constants';\nimport { PostConstruct, PreDestroy } from '../../context/context';\nimport { ensureDomOrder } from '../../utils/dom';\nimport { getAllValuesInObject } from '../../utils/object';\nimport { Component } from '../../widgets/component';\nimport { RefSelector } from '../../widgets/componentAnnotations';\nimport { HeaderRowComp } from '../row/headerRowComp';\nimport { HeaderRowCtrl } from '../row/headerRowCtrl';\nimport { HeaderRowContainerCtrl, IHeaderRowContainerComp } from './headerRowContainerCtrl';\n\nexport class HeaderRowContainerComp extends Component {\n\n    private static PINNED_LEFT_TEMPLATE =  /* html */ `<div class=\"ag-pinned-left-header\" role=\"presentation\"/>`;\n\n    private static PINNED_RIGHT_TEMPLATE =  /* html */ `<div class=\"ag-pinned-right-header\" role=\"presentation\"/>`;\n\n    private static CENTER_TEMPLATE =  /* html */ \n        `<div class=\"ag-header-viewport\" role=\"presentation\">\n            <div class=\"ag-header-container\" ref=\"eCenterContainer\" role=\"rowgroup\"></div>\n        </div>`;\n\n    @RefSelector('eCenterContainer') private eCenterContainer: HTMLElement;\n\n    private eRowContainer: HTMLElement;\n\n    private pinned: string | null;\n\n    private headerRowComps: {[ctrlId: string]: HeaderRowComp} = {};\n    private rowCompsList: HeaderRowComp[] = [];\n\n    constructor(pinned: string | null) {\n        super();\n        this.pinned = pinned;\n    }\n\n    @PostConstruct\n    private init(): void {\n        this.selectAndSetTemplate();\n\n        const compProxy: IHeaderRowContainerComp = {\n            addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n            setCtrls: ctrls => this.setCtrls(ctrls),\n            \n            // only gets called for center section\n            setCenterWidth: width => this.eCenterContainer.style.width = width,\n            setContainerTransform: transform => this.eCenterContainer.style.transform = transform,\n\n            // only gets called for pinned sections\n            setPinnedContainerWidth: width => {\n                const eGui = this.getGui();\n                eGui.style.width = width;\n                eGui.style.maxWidth = width;\n                eGui.style.minWidth = width;\n            }\n        };\n\n        const ctrl = this.createManagedBean(new HeaderRowContainerCtrl(this.pinned));\n        ctrl.setComp(compProxy, this.getGui());\n    }\n\n    private selectAndSetTemplate(): void {\n        const pinnedLeft = this.pinned == Constants.PINNED_LEFT;\n        const pinnedRight = this.pinned == Constants.PINNED_RIGHT;\n\n        const template = pinnedLeft ? HeaderRowContainerComp.PINNED_LEFT_TEMPLATE : \n                         pinnedRight ? HeaderRowContainerComp.PINNED_RIGHT_TEMPLATE : HeaderRowContainerComp.CENTER_TEMPLATE;\n\n        this.setTemplate(template);\n\n        // for left and right, we add rows directly to the root element,\n        // but for center container we add elements to the child container.\n        this.eRowContainer = this.eCenterContainer ? this.eCenterContainer : this.getGui();\n    }\n\n    @PreDestroy\n    private destroyRowComps(): void {\n        this.setCtrls([]);\n    }\n\n    private destroyRowComp(rowComp: HeaderRowComp): void {\n        this.destroyBean(rowComp);\n        this.eRowContainer.removeChild(rowComp.getGui());\n    }\n\n    private setCtrls(ctrls: HeaderRowCtrl[]): void {\n\n        const oldRowComps = this.headerRowComps;\n        this.headerRowComps = {};\n        this.rowCompsList = [];\n\n        let prevGui: HTMLElement;\n\n        const appendEnsuringDomOrder = (rowComp: HeaderRowComp) => {\n            const eGui = rowComp.getGui();\n\n            const notAlreadyIn = eGui.parentElement!=this.eRowContainer;\n            if (notAlreadyIn) {\n                this.eRowContainer.appendChild(eGui);\n            }\n            if (prevGui) {\n                ensureDomOrder(this.eRowContainer, eGui, prevGui);\n            }\n\n            prevGui = eGui;\n        };\n\n        ctrls.forEach(ctrl => {\n            const ctrlId = ctrl.getInstanceId();\n            const existingComp =  oldRowComps[ctrlId];\n            delete oldRowComps[ctrlId];\n\n            const rowComp = existingComp ? existingComp : this.createBean(new HeaderRowComp(ctrl));\n            this.headerRowComps[ctrlId] = rowComp;\n            this.rowCompsList.push(rowComp);\n\n            appendEnsuringDomOrder(rowComp);\n        });\n\n        getAllValuesInObject(oldRowComps).forEach(c => this.destroyRowComp(c));\n    }\n}\n"]}