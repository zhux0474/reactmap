{"version":3,"sources":["../../src/ts/headerRendering/gridHeaderCtrl.ts"],"names":[],"mappings":"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","file":"gridHeaderCtrl.js","sourcesContent":["import { ColumnModel } from \"../columns/columnModel\";\nimport { KeyCode } from \"../constants/keyCode\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { Autowired } from \"../context/context\";\nimport { CtrlsService } from \"../ctrlsService\";\nimport { Events } from \"../eventKeys\";\nimport { FocusService } from \"../focusService\";\nimport { GridOptionsWrapper } from \"../gridOptionsWrapper\";\nimport { exists } from \"../utils/generic\";\nimport { ManagedFocusFeature } from \"../widgets/managedFocusFeature\";\nimport { HeaderNavigationDirection, HeaderNavigationService } from \"./common/headerNavigationService\";\n\nexport interface IGridHeaderComp {\n    addOrRemoveCssClass(cssClassName: string, on: boolean): void;\n    setHeightAndMinHeight(height: string): void;\n}\n\nexport class GridHeaderCtrl extends BeanStub {\n\n    @Autowired('headerNavigationService') private headerNavigationService: HeaderNavigationService;\n    @Autowired('focusService') private focusService: FocusService;\n    @Autowired('columnModel') private columnModel: ColumnModel;\n    @Autowired('ctrlsService') private ctrlsService: CtrlsService;\n\n    private comp: IGridHeaderComp;\n    private eGui: HTMLElement;\n\n    public setComp(comp: IGridHeaderComp, eGui: HTMLElement, eFocusableElement: HTMLElement): void {\n        this.comp = comp;\n        this.eGui = eGui;\n\n        this.createManagedBean(new ManagedFocusFeature(\n            eFocusableElement,\n            {\n                onTabKeyDown: this.onTabKeyDown.bind(this),\n                handleKeyDown: this.handleKeyDown.bind(this),\n                onFocusOut: this.onFocusOut.bind(this)\n            }\n        ));\n\n        // for setting ag-pivot-on / ag-pivot-off CSS classes\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onPivotModeChanged.bind(this));\n\n        this.onPivotModeChanged();\n        this.setupHeaderHeight();\n\n        this.ctrlsService.registerGridHeaderCtrl(this);\n    }\n\n    private setupHeaderHeight(): void {\n        const listener = this.setHeaderHeight.bind(this);\n        listener();\n\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_HEADER_HEIGHT, listener);\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, listener);\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, listener);\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, listener);\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, listener);\n\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n    }\n\n\n    private setHeaderHeight(): void {\n        const {columnModel, gridOptionsWrapper} = this;\n\n        let numberOfFloating = 0;\n        let headerRowCount = columnModel.getHeaderRowCount();\n        let totalHeaderHeight: number;\n        let groupHeight: number | null | undefined;\n        let headerHeight: number | null | undefined;\n\n        if (columnModel.isPivotMode()) {\n            groupHeight = gridOptionsWrapper.getPivotGroupHeaderHeight();\n            headerHeight = gridOptionsWrapper.getPivotHeaderHeight();\n        } else {\n            const hasFloatingFilters = columnModel.hasFloatingFilters();\n\n            if (hasFloatingFilters) {\n                headerRowCount++;\n                numberOfFloating = 1;\n            }\n\n            groupHeight = gridOptionsWrapper.getGroupHeaderHeight();\n            headerHeight = gridOptionsWrapper.getHeaderHeight();\n        }\n\n        const numberOfNonGroups = 1 + numberOfFloating;\n        const numberOfGroups = headerRowCount - numberOfNonGroups;\n\n        totalHeaderHeight = numberOfFloating * gridOptionsWrapper.getFloatingFiltersHeight()!;\n        totalHeaderHeight += numberOfGroups * groupHeight!;\n        totalHeaderHeight += headerHeight!;\n\n        // one extra pixel is needed here to account for the\n        // height of the border\n        const px = `${totalHeaderHeight + 1}px`;\n        this.comp.setHeightAndMinHeight(px);\n    }\n\n    private onPivotModeChanged(): void {\n        const pivotMode = this.columnModel.isPivotMode();\n\n        this.comp.addOrRemoveCssClass('ag-pivot-on', pivotMode);\n        this.comp.addOrRemoveCssClass('ag-pivot-off', !pivotMode);\n    }\n\n    protected onTabKeyDown(e: KeyboardEvent): void {\n        const isRtl = this.gridOptionsWrapper.isEnableRtl();\n        const direction = e.shiftKey !== isRtl\n            ? HeaderNavigationDirection.LEFT\n            : HeaderNavigationDirection.RIGHT;\n\n        if (this.headerNavigationService.navigateHorizontally(direction, true, e) ||\n            this.focusService.focusNextGridCoreContainer(e.shiftKey)\n        ) {\n            e.preventDefault();\n        }\n     }\n\n    protected handleKeyDown(e: KeyboardEvent): void {\n        let direction: HeaderNavigationDirection | null = null;\n\n        switch (e.keyCode) {\n            case KeyCode.LEFT:\n                direction = HeaderNavigationDirection.LEFT;\n            case KeyCode.RIGHT:\n                if (!exists(direction)) {\n                    direction = HeaderNavigationDirection.RIGHT;\n                }\n                this.headerNavigationService.navigateHorizontally(direction, false, e);\n                break;\n            case KeyCode.UP:\n                direction = HeaderNavigationDirection.UP;\n            case KeyCode.DOWN:\n                if (!exists(direction)) {\n                    direction = HeaderNavigationDirection.DOWN;\n                }\n                if (this.headerNavigationService.navigateVertically(direction, null, e)) {\n                    e.preventDefault();\n                }\n                break;\n            default:\n                return;\n        }\n    }\n\n    protected onFocusOut(e: FocusEvent): void {\n        const { relatedTarget } = e;\n\n        if (!relatedTarget && this.eGui.contains(document.activeElement)) { return; }\n\n        if (!this.eGui.contains(relatedTarget as HTMLElement)) {\n            this.focusService.clearFocusedHeader();\n        }\n    }\n}\n"]}