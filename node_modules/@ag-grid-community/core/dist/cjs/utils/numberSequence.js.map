{"version":3,"sources":["../../src/ts/utils/numberSequence.ts"],"names":[],"mappings":";;;;;;;;AAAA;IAII,wBAAY,SAAa,EAAE,IAAQ;QAAvB,0BAAA,EAAA,aAAa;QAAE,qBAAA,EAAA,QAAQ;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,6BAAI,GAAX;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC;QAC5B,OAAO,WAAW,CAAC;IACvB,CAAC;IAEM,6BAAI,GAAX;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEM,6BAAI,GAAX,UAAY,KAAa;QACrB,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC;IAC5B,CAAC;IACL,qBAAC;AAAD,CAtBA,AAsBC,IAAA;AAtBY,wCAAc","file":"numberSequence.js","sourcesContent":["export class NumberSequence {\n    private nextValue: number;\n    private step: number;\n\n    constructor(initValue = 0, step = 1) {\n        this.nextValue = initValue;\n        this.step = step;\n    }\n\n    public next(): number {\n        const valToReturn = this.nextValue;\n        this.nextValue += this.step;\n        return valToReturn;\n    }\n\n    public peek(): number {\n        return this.nextValue;\n    }\n\n    public skip(count: number): void {\n        this.nextValue += count;\n    }\n}\n"]}