{"version":3,"sources":["../../src/ts/utils/array.ts"],"names":[],"mappings":"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","file":"array.js","sourcesContent":["import { exists, toStringOrNull } from './generic';\n\nexport function firstExistingValue<A>(...values: A[]): A | null {\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n\n        if (exists(value)) {\n            return value;\n        }\n    }\n\n    return null;\n}\n\n/** @deprecated */\nexport function anyExists(values: any[]): boolean {\n    return values && firstExistingValue(values) != null;\n}\n\nexport function existsAndNotEmpty<T>(value?: T[]): boolean {\n    return value != null && value.length > 0;\n}\n\nexport function last<T>(arr: T[]): T;\nexport function last<T extends Node>(arr: NodeListOf<T>): T;\nexport function last(arr: any): any {\n    if (!arr || !arr.length) { return; }\n\n    return arr[arr.length - 1];\n}\n\nexport function areEqual<T>(a?: T[] | null, b?: T[] | null, comparator?: (a: T, b: T) => boolean): boolean {\n    if (a == null && b == null) {\n        return true;\n    }\n\n    return a != null &&\n        b != null &&\n        a.length === b.length &&\n        every(a, (value, index) => comparator ? comparator(value, b[index]) : b[index] === value);\n}\n\n/** @deprecated */\nexport function compareArrays(array1?: any[], array2?: any[]): boolean {\n    return areEqual(array1, array2);\n}\n\n/** @deprecated */\nexport function shallowCompare(arr1: any[], arr2: any[]): boolean {\n    return areEqual(arr1, arr2);\n}\n\nexport function sortNumerically(array: number[]): number[] {\n    return array.sort((a, b) => a - b);\n}\n\nexport function removeRepeatsFromArray<T>(array: T[], object: T) {\n    if (!array) { return; }\n\n    for (let index = array.length - 2; index >= 0; index--) {\n        const thisOneMatches = array[index] === object;\n        const nextOneMatches = array[index + 1] === object;\n\n        if (thisOneMatches && nextOneMatches) {\n            array.splice(index + 1, 1);\n        }\n    }\n}\n\nexport function removeFromArray<T>(array: T[], object: T) {\n    const index = array.indexOf(object);\n\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n\nexport function removeAllFromArray<T>(array: T[], toRemove: T[]) {\n    forEach(toRemove, item => removeFromArray(array, item));\n}\n\nexport function insertIntoArray<T>(array: T[], object: T, toIndex: number) {\n    array.splice(toIndex, 0, object);\n}\n\nexport function insertArrayIntoArray<T>(dest: T[], src: T[], toIndex: number) {\n    if (dest == null || src == null) { return; }\n\n    // put items in backwards, otherwise inserted items end up in reverse order\n    for (let i = src.length - 1; i >= 0; i--) {\n        const item = src[i];\n        insertIntoArray(dest, item, toIndex);\n    }\n}\n\nexport function moveInArray<T>(array: T[], objectsToMove: T[], toIndex: number) {\n    // first take out items from the array\n    removeAllFromArray(array, objectsToMove);\n\n    // now add the objects, in same order as provided to us, that means we start at the end\n    // as the objects will be pushed to the right as they are inserted\n    forEach(objectsToMove.slice().reverse(), obj => insertIntoArray(array, obj, toIndex));\n}\n\nexport function includes<T>(array: T[], value: T): boolean {\n    return array.indexOf(value) > -1;\n}\n\nexport function flatten(arrayOfArrays: any[]): any[] {\n    return [].concat.apply([], arrayOfArrays);\n}\n\nexport function pushAll<T>(target: T[], source: T[]): void {\n    if (source == null || target == null) { return; }\n\n    forEach(source, value => target.push(value));\n}\n\nexport function toStrings<T>(array: T[]): ((string | null)[]) | null {\n    return map(array, toStringOrNull);\n}\n\nexport function findIndex<T>(collection: T[], predicate: (item: T, idx: number, collection: T[]) => boolean): number {\n    for (let i = 0; i < collection.length; i++) {\n        if (predicate(collection[i], i, collection)) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nexport function fill(collection: any[], value: any = null, start: number = 0, end: number = collection.length): any[] {\n    for (let i = start; i < end; i++) {\n        collection[i] = value;\n    }\n\n    return collection;\n}\n\n/**\n * The implementation of Array.prototype.every in browsers is always slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/bek91dtit8/\n */\nexport function every<T>(list: T[], predicate: (value: T, index: number) => boolean): boolean {\n    if (list == null) {\n        return true;\n    }\n\n    for (let i = 0; i < list.length; i++) {\n        if (!predicate(list[i], i)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * The implementation of Array.prototype.some in browsers is always slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/5dk91e4tmt/\n */\nexport function some<T>(list: T[], predicate: (value: T, index: number) => boolean): boolean {\n    if (list == null) {\n        return false;\n    }\n\n    for (let i = 0; i < list.length; i++) {\n        if (predicate(list[i], i)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * The implementation of Array.prototype.forEach in browsers is often slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/apk91elt8a/\n */\nexport function forEach<T>(list: T[], action: (value: T, index: number) => void): void {\n    if (list == null) {\n        return;\n    }\n\n    for (let i = 0; i < list.length; i++) {\n        action(list[i], i);\n    }\n}\n\nexport function forEachReverse<T>(list: T[], action: (value: T, index: number) => void): void {\n    if (list == null) {\n        return;\n    }\n\n    for (let i = list.length - 1; i >= 0; i--) {\n        action(list[i], i);\n    }\n}\n\n/**\n * The implementation of Array.prototype.map in browsers is generally the same as just using a simple for loop. However,\n * Firefox does exhibit some difference, and this performs no worse in other browsers, so use this if you want improved\n * performance.\n * https://jsbench.me/njk91ez8pc/\n */\nexport function map<T, V>(list: T[], process: (value: T, index: number) => V): V[] | null {\n    if (list == null) {\n        return null;\n    }\n\n    const mapped: V[] = [];\n\n    for (let i = 0; i < list.length; i++) {\n        mapped.push(process(list[i], i));\n    }\n\n    return mapped;\n}\n\n/**\n * The implementation of Array.prototype.filter in browsers is always slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/7bk91fk08c/\n */\n\nexport function filter<T>(list: T[], predicate: (value: T, index: number) => boolean): T[] | null {\n    if (list == null) {\n        return null;\n    }\n\n    const filtered: T[] = [];\n\n    for (let i = 0; i < list.length; i++) {\n        if (predicate(list[i], i)) {\n            filtered.push(list[i]);\n        }\n    }\n\n    return filtered;\n}\n\n/**\n * The implementation of Array.prototype.reduce in browsers is generally the same as just using a simple for loop. However,\n * Chrome does exhibit some difference, and this performs no worse in other browsers, so use this if you want improved\n * performance.\n * https://jsbench.me/7vk92n6u1f/\n */\nexport function reduce<T, V>(list: T[], step: (acc: V, value: T, index: number) => V, initial: V): V | null {\n    if (list == null || initial == null) {\n        return null;\n    }\n\n    let result = initial;\n\n    for (let i = 0; i < list.length; i++) {\n        result = step(result, list[i], i);\n    }\n\n    return result;\n}\n\n/** @deprecated */\nexport function forEachSnapshotFirst<T>(list: T[], callback: (item: T) => void): void {\n    if (!list) { return; }\n\n    const arrayCopy = list.slice(0);\n    arrayCopy.forEach(callback);\n}\n"]}