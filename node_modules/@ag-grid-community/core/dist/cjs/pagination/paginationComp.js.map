{"version":3,"sources":["../../src/ts/pagination/paginationComp.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAAiD;AACjD,8CAA8D;AAC9D,wEAA8D;AAC9D,oCAAmC;AAEnC,sCAAiD;AACjD,0CAAqD;AACrD,oCAAmD;AACnD,sCAAgD;AAChD,gDAA+C;AAG/C;IAAoC,kCAAS;IAoBzC;QAAA,YACI,iBAAO,SACV;QANO,qCAA+B,GAAG,KAAK,CAAC;QACxC,wBAAkB,GAAG,KAAK,CAAC;QAC3B,wBAAkB,GAAG,KAAK,CAAC;;IAInC,CAAC;IAGS,sCAAa,GAAvB;QADA,iBAoCC;QAlCG,IAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,YAAY,EAAE,uBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAE,CAAC,CAAC;QACvH,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,YAAY,EAAE,uBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAE,CAAC,CAAC;QAC7H,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,YAAY,EAAE,uBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAE,CAAC,CAAC;QACzH,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,YAAY,EAAE,uBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAE,CAAC,CAAC;QAEtH,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QACxD,IAAM,sBAAsB,GAAG,QAAQ,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,EAAE,CAAC;QAEhG,IAAI,CAAC,sBAAsB,EAAE;YACzB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzB,OAAO;SACV;QAED,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,EAAE,eAAM,CAAC,wBAAwB,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEjH;YACI,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACnD,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACzD,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACjD,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;SACpD,CAAC,OAAO,CAAC,UAAA,IAAI;YACF,IAAA,YAAE,EAAE,YAAE,CAAU;YACxB,KAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;YACzC,KAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,SAAS,EAAE,UAAC,CAAgB;gBACpD,IAAI,CAAC,CAAC,OAAO,KAAK,iBAAO,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,KAAK,iBAAO,CAAC,KAAK,EAAE;oBAC5D,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,EAAE,EAAE,CAAC;iBACR;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAEO,4CAAmB,GAA3B;QACI,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,kCAAS,GAAjB;QACI,IAAI,CAAC,IAAI,CAAC,+BAA+B,EAAE;YACvC,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;SACxC;IACL,CAAC;IAEO,4CAAmB,GAA3B;QACI,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QAC5D,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;QAC1D,IAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnD,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAC5D,CAAC;IAEO,qCAAY,GAApB,UAAqB,KAAa;QAC9B,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,gCAAgC,EAAE,CAAC;QAE5E,IAAI,QAAQ,EAAE;YAAE,OAAO,QAAQ,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;SAAE;QAEpD,OAAO,2BAAkB,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAEO,oCAAW,GAAnB;QACI,IAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;QAEnE,IAAM,OAAO,GAAG,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC/C,IAAM,KAAK,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACzC,IAAM,KAAK,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACzC,IAAM,QAAQ,GAAG,cAAc,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QAC3D,IAAM,WAAW,GAAG,cAAc,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;QACpE,IAAM,OAAO,GAAG,cAAc,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QACxD,IAAM,OAAO,GAAG,cAAc,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QACxD,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAEhC,OAAO,UAAU,CAAA,4DAAuD,MAAM,6HAEnD,MAAM,sIACN,MAAM,cAAQ,KAAK,mDACnB,MAAM,oIACN,MAAM,cAAQ,KAAK,mDACnB,MAAM,gTAGmD,QAAQ,sIACL,WAAW,oJAEnE,MAAM,sBAAgB,OAAO,uDAC7B,MAAM,yHACN,MAAM,mBAAa,KAAK,uDACxB,MAAM,2MAE8C,OAAO,kIACP,OAAO,0EAE/E,CAAC;IAChB,CAAC;IAEO,iCAAQ,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC1B,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;SACvC;IACL,CAAC;IAEO,qCAAY,GAApB;QACI,IAAI,CAAC,IAAI,CAAC,+BAA+B,EAAE;YACvC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;SAC3C;IACL,CAAC;IAEO,iCAAQ,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC1B,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;SACvC;IACL,CAAC;IAEO,+CAAsB,GAA9B;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;QAC1D,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;QAC3D,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;QAExD,IAAI,CAAC,+BAA+B,GAAG,WAAW,KAAK,CAAC,CAAC;QACzD,yBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC,+BAA+B,CAAC,CAAC;QACvF,sBAAe,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAEpE,yBAAmB,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,EAAE,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAC1F,sBAAe,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAEvE,IAAM,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACvD,IAAM,UAAU,GAAG,WAAW,IAAI,WAAW,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,kBAAkB,GAAG,UAAU,IAAI,kBAAkB,CAAC;QAC3D,yBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACzE,sBAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAEtD,IAAI,CAAC,kBAAkB,GAAG,CAAC,WAAW,IAAI,kBAAkB,IAAI,WAAW,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;QACjG,yBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACzE,sBAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC1D,CAAC;IAEO,wCAAe,GAAvB;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;QAC1D,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACpD,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;QAC3D,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,CAAC;YACrD,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAEpD,IAAI,QAAa,CAAC;QAClB,IAAI,MAAW,CAAC;QAEhB,IAAI,IAAI,CAAC,oBAAoB,EAAE,EAAE;YAC7B,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC;SACzB;aAAM;YACH,QAAQ,GAAG,CAAC,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;YACxC,MAAM,GAAG,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC;YACjC,IAAI,WAAW,IAAI,MAAM,GAAG,QAAS,EAAE;gBACnC,MAAM,GAAG,QAAQ,CAAC;aACrB;SACJ;QAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAI,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,EAAE;YACrC,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,GAAG,CAAC;SACxC;aAAM;YACH,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SAC9D;IACL,CAAC;IAEO,6CAAoB,GAA5B;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;QAC3D,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;QACxD,OAAO,WAAW,IAAI,UAAU,KAAK,CAAC,CAAC;IAC3C,CAAC;IAEO,uCAAc,GAAtB;QACI,IAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;QAC7D,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;QACxD,IAAM,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAEjF,8GAA8G;QAC9G,6GAA6G;QAC7G,wGAAwG;QACxG,IAAI,QAAQ,KAAK,CAAC,EAAE;YAChB,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAEhD,sEAAsE;YACtE,IAAM,cAAc,GAAG,QAAQ,IAAI,QAAQ,CAAC,KAAK,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC/F,IAAI,cAAc,EAAE;gBAChB,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,OAAO;aACV;SACJ;QAED,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAS,CAAC,CAAC;SAC/D;aAAM;YACH,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC7E,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC3C;IACL,CAAC;IAEO,6CAAoB,GAA5B;QACI,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IA3O6B;QAA7B,mBAAS,CAAC,iBAAiB,CAAC;2DAA0C;IACtC;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;8DAAgD;IAExD;QAAvB,kCAAW,CAAC,SAAS,CAAC;mDAA8B;IAC1B;QAA1B,kCAAW,CAAC,YAAY,CAAC;sDAAiC;IACpC;QAAtB,kCAAW,CAAC,QAAQ,CAAC;kDAA6B;IAC5B;QAAtB,kCAAW,CAAC,QAAQ,CAAC;kDAA6B;IAErB;QAA7B,kCAAW,CAAC,eAAe,CAAC;yDAA4B;IACxB;QAAhC,kCAAW,CAAC,kBAAkB,CAAC;4DAA+B;IAC/B;QAA/B,kCAAW,CAAC,iBAAiB,CAAC;2DAA8B;IACnC;QAAzB,kCAAW,CAAC,WAAW,CAAC;qDAAwB;IACzB;QAAvB,kCAAW,CAAC,SAAS,CAAC;mDAAsB;IAW7C;QADC,uBAAa;uDAoCb;IAkLL,qBAAC;CA9OD,AA8OC,CA9OmC,qBAAS,GA8O5C;AA9OY,wCAAc","file":"paginationComp.js","sourcesContent":["import { Component } from \"../widgets/component\";\nimport { Autowired, PostConstruct } from \"../context/context\";\nimport { RefSelector } from \"../widgets/componentAnnotations\";\nimport { Events } from \"../events\";\nimport { PaginationProxy } from \"./paginationProxy\";\nimport { createIconNoSpan } from \"../utils/icon\";\nimport { formatNumberCommas } from \"../utils/number\";\nimport { addOrRemoveCssClass } from \"../utils/dom\";\nimport { setAriaDisabled } from \"../utils/aria\";\nimport { KeyCode } from '../constants/keyCode';\nimport { RowNodeBlockLoader } from \"../rowNodeCache/rowNodeBlockLoader\";\n\nexport class PaginationComp extends Component {\n\n    @Autowired('paginationProxy') private paginationProxy: PaginationProxy;\n    @Autowired('rowNodeBlockLoader') private rowNodeBlockLoader: RowNodeBlockLoader;\n\n    @RefSelector('btFirst') private btFirst: HTMLElement;\n    @RefSelector('btPrevious') private btPrevious: HTMLElement;\n    @RefSelector('btNext') private btNext: HTMLElement;\n    @RefSelector('btLast') private btLast: HTMLElement;\n\n    @RefSelector('lbRecordCount') private lbRecordCount: any;\n    @RefSelector('lbFirstRowOnPage') private lbFirstRowOnPage: any;\n    @RefSelector('lbLastRowOnPage') private lbLastRowOnPage: any;\n    @RefSelector('lbCurrent') private lbCurrent: any;\n    @RefSelector('lbTotal') private lbTotal: any;\n\n    private previousAndFirstButtonsDisabled = false;\n    private nextButtonDisabled = false;\n    private lastButtonDisabled = false;\n\n    constructor() {\n        super();\n    }\n\n    @PostConstruct\n    protected postConstruct(): void {\n        const isRtl = this.gridOptionsWrapper.isEnableRtl();\n        this.setTemplate(this.getTemplate());\n        this.btFirst.insertAdjacentElement('afterbegin', createIconNoSpan(isRtl ? 'last' : 'first', this.gridOptionsWrapper)!);\n        this.btPrevious.insertAdjacentElement('afterbegin', createIconNoSpan(isRtl ? 'next' : 'previous', this.gridOptionsWrapper)!);\n        this.btNext.insertAdjacentElement('afterbegin', createIconNoSpan(isRtl ? 'previous' : 'next', this.gridOptionsWrapper)!);\n        this.btLast.insertAdjacentElement('afterbegin', createIconNoSpan(isRtl ? 'first' : 'last', this.gridOptionsWrapper)!);\n\n        const isPaging = this.gridOptionsWrapper.isPagination();\n        const paginationPanelEnabled = isPaging && !this.gridOptionsWrapper.isSuppressPaginationPanel();\n\n        if (!paginationPanelEnabled) {\n            this.setDisplayed(false);\n            return;\n        }\n\n        this.addManagedListener(this.eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n\n        [\n            { el: this.btFirst, fn: this.onBtFirst.bind(this) },\n            { el: this.btPrevious, fn: this.onBtPrevious.bind(this) },\n            { el: this.btNext, fn: this.onBtNext.bind(this) },\n            { el: this.btLast, fn: this.onBtLast.bind(this) }\n        ].forEach(item => {\n            const { el, fn } = item;\n            this.addManagedListener(el, 'click', fn);\n            this.addManagedListener(el, 'keydown', (e: KeyboardEvent) => {\n                if (e.keyCode === KeyCode.ENTER || e.keyCode === KeyCode.SPACE) {\n                    e.preventDefault();\n                    fn();\n                }\n            });\n        });\n\n        this.onPaginationChanged();\n    }\n\n    private onPaginationChanged(): void {\n        this.enableOrDisableButtons();\n        this.updateRowLabels();\n        this.setCurrentPageLabel();\n        this.setTotalLabels();\n    }\n\n    private onBtFirst() {\n        if (!this.previousAndFirstButtonsDisabled) {\n            this.paginationProxy.goToFirstPage();\n        }\n    }\n\n    private setCurrentPageLabel(): void {\n        const pagesExist = this.paginationProxy.getTotalPages() > 0;\n        const currentPage = this.paginationProxy.getCurrentPage();\n        const toDisplay = pagesExist ? currentPage + 1 : 0;\n\n        this.lbCurrent.innerHTML = this.formatNumber(toDisplay);\n    }\n\n    private formatNumber(value: number): string {\n        const userFunc = this.gridOptionsWrapper.getPaginationNumberFormatterFunc();\n\n        if (userFunc) { return userFunc({ value: value }); }\n\n        return formatNumberCommas(value);\n    }\n\n    private getTemplate(): string {\n        const localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n\n        const strPage = localeTextFunc('page', 'Page');\n        const strTo = localeTextFunc('to', 'to');\n        const strOf = localeTextFunc('of', 'of');\n        const strFirst = localeTextFunc('firstPage', 'First Page');\n        const strPrevious = localeTextFunc('previousPage', 'Previous Page');\n        const strNext = localeTextFunc('nextPage', 'Next Page');\n        const strLast = localeTextFunc('lastPage', 'Last Page');\n        const compId = this.getCompId();\n\n        return /* html */`<div class=\"ag-paging-panel ag-unselectable\" id=\"ag-${compId}\">\n                <span class=\"ag-paging-row-summary-panel\" role=\"status\">\n                    <span id=\"ag-${compId}-first-row\" ref=\"lbFirstRowOnPage\" class=\"ag-paging-row-summary-panel-number\"></span>\n                    <span id=\"ag-${compId}-to\">${strTo}</span>\n                    <span id=\"ag-${compId}-last-row\" ref=\"lbLastRowOnPage\" class=\"ag-paging-row-summary-panel-number\"></span>\n                    <span id=\"ag-${compId}-of\">${strOf}</span>\n                    <span id=\"ag-${compId}-row-count\" ref=\"lbRecordCount\" class=\"ag-paging-row-summary-panel-number\"></span>\n                </span>\n                <span class=\"ag-paging-page-summary-panel\" role=\"presentation\">\n                    <div ref=\"btFirst\" class=\"ag-paging-button\" role=\"button\" aria-label=\"${strFirst}\" tabindex=\"0\"></div>\n                    <div ref=\"btPrevious\" class=\"ag-paging-button\" role=\"button\" aria-label=\"${strPrevious}\" tabindex=\"0\"></div>\n                    <span class=\"ag-paging-description\" role=\"status\">\n                        <span id=\"ag-${compId}-start-page\">${strPage}</span>\n                        <span id=\"ag-${compId}-start-page-number\" ref=\"lbCurrent\" class=\"ag-paging-number\"></span>\n                        <span id=\"ag-${compId}-of-page\">${strOf}</span>\n                        <span id=\"ag-${compId}-of-page-number\" ref=\"lbTotal\" class=\"ag-paging-number\"></span>\n                    </span>\n                    <div ref=\"btNext\" class=\"ag-paging-button\" role=\"button\" aria-label=\"${strNext}\" tabindex=\"0\"></div>\n                    <div ref=\"btLast\" class=\"ag-paging-button\" role=\"button\" aria-label=\"${strLast}\" tabindex=\"0\"></div>\n                </span>\n            </div>`;\n    }\n\n    private onBtNext() {\n        if (!this.nextButtonDisabled) {\n            this.paginationProxy.goToNextPage();\n        }\n    }\n\n    private onBtPrevious() {\n        if (!this.previousAndFirstButtonsDisabled) {\n            this.paginationProxy.goToPreviousPage();\n        }\n    }\n\n    private onBtLast() {\n        if (!this.lastButtonDisabled) {\n            this.paginationProxy.goToLastPage();\n        }\n    }\n\n    private enableOrDisableButtons() {\n        const currentPage = this.paginationProxy.getCurrentPage();\n        const maxRowFound = this.paginationProxy.isLastPageFound();\n        const totalPages = this.paginationProxy.getTotalPages();\n\n        this.previousAndFirstButtonsDisabled = currentPage === 0;\n        addOrRemoveCssClass(this.btFirst, 'ag-disabled', this.previousAndFirstButtonsDisabled);\n        setAriaDisabled(this.btFirst, this.previousAndFirstButtonsDisabled);\n\n        addOrRemoveCssClass(this.btPrevious, 'ag-disabled', this.previousAndFirstButtonsDisabled);\n        setAriaDisabled(this.btPrevious, this.previousAndFirstButtonsDisabled);\n\n        const zeroPagesToDisplay = this.isZeroPagesToDisplay();\n        const onLastPage = maxRowFound && currentPage === (totalPages - 1);\n\n        this.nextButtonDisabled = onLastPage || zeroPagesToDisplay;\n        addOrRemoveCssClass(this.btNext, 'ag-disabled', this.nextButtonDisabled);\n        setAriaDisabled(this.btNext, this.nextButtonDisabled);\n\n        this.lastButtonDisabled = !maxRowFound || zeroPagesToDisplay || currentPage === (totalPages - 1);\n        addOrRemoveCssClass(this.btLast, 'ag-disabled', this.lastButtonDisabled);\n        setAriaDisabled(this.btLast, this.lastButtonDisabled);\n    }\n\n    private updateRowLabels() {\n        const currentPage = this.paginationProxy.getCurrentPage();\n        const pageSize = this.paginationProxy.getPageSize();\n        const maxRowFound = this.paginationProxy.isLastPageFound();\n        const rowCount = this.paginationProxy.isLastPageFound() ?\n            this.paginationProxy.getMasterRowCount() : null;\n\n        let startRow: any;\n        let endRow: any;\n\n        if (this.isZeroPagesToDisplay()) {\n            startRow = endRow = 0;\n        } else {\n            startRow = (pageSize * currentPage) + 1;\n            endRow = startRow + pageSize - 1;\n            if (maxRowFound && endRow > rowCount!) {\n                endRow = rowCount;\n            }\n        }\n\n        this.lbFirstRowOnPage.innerHTML = this.formatNumber(startRow);\n        if (this.rowNodeBlockLoader.isLoading()) {\n            this.lbLastRowOnPage.innerHTML = '?';\n        } else {\n            this.lbLastRowOnPage.innerHTML = this.formatNumber(endRow);\n        }\n    }\n\n    private isZeroPagesToDisplay() {\n        const maxRowFound = this.paginationProxy.isLastPageFound();\n        const totalPages = this.paginationProxy.getTotalPages();\n        return maxRowFound && totalPages === 0;\n    }\n\n    private setTotalLabels() {\n        const lastPageFound = this.paginationProxy.isLastPageFound();\n        const totalPages = this.paginationProxy.getTotalPages();\n        const rowCount = lastPageFound ? this.paginationProxy.getMasterRowCount() : null;\n\n        // When `pivotMode=true` and no grouping or value columns exist, a single 'hidden' group row (root node) is in\n        // the grid and the pagination totals will correctly display total = 1. However this is confusing to users as\n        // they can't see it. To address this UX issue we simply set the totals to zero in the pagination panel.\n        if (rowCount === 1) {\n            const firstRow = this.paginationProxy.getRow(0);\n\n            // a group node with no group or agg data will not be visible to users\n            const hiddenGroupRow = firstRow && firstRow.group && !(firstRow.groupData || firstRow.aggData);\n            if (hiddenGroupRow) {\n                this.setTotalLabelsToZero();\n                return;\n            }\n        }\n\n        if (lastPageFound) {\n            this.lbTotal.innerHTML = this.formatNumber(totalPages);\n            this.lbRecordCount.innerHTML = this.formatNumber(rowCount!);\n        } else {\n            const moreText = this.gridOptionsWrapper.getLocaleTextFunc()('more', 'more');\n            this.lbTotal.innerHTML = moreText;\n            this.lbRecordCount.innerHTML = moreText;\n        }\n    }\n\n    private setTotalLabelsToZero() {\n        this.lbFirstRowOnPage.innerHTML = this.formatNumber(0);\n        this.lbCurrent.innerHTML = this.formatNumber(0);\n        this.lbLastRowOnPage.innerHTML = this.formatNumber(0);\n        this.lbTotal.innerHTML = this.formatNumber(0);\n        this.lbRecordCount.innerHTML = this.formatNumber(0);\n    }\n}\n"]}