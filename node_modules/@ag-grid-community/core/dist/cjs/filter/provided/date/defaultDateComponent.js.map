{"version":3,"sources":["../../src/ts/filter/provided/date/defaultDateComponent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,wDAAuD;AAEvD,8EAAoE;AACpE,4CAA6E;AAC7E,kDAAwF;AAIxF;IAA0C,wCAAS;IAG/C;eACI,kBAAM,UAAU,CAAA,6KAGL,CACV;IACL,CAAC;IAED,4FAA4F;IAC5F,mEAAmE;IAC5D,sCAAO,GAAd;QACI,iBAAM,OAAO,WAAE,CAAC;IACpB,CAAC;IAEM,mCAAI,GAAX,UAAY,MAAmB;QAA/B,iBA+BC;QA9BG,IAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC;QAEvD,IAAI,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,qBAAW,EAAE,EAAE;gBACf,OAAO,CAAC,IAAI,CAAC,kHAAkH,CAAC,CAAC;aACpI;iBAAM;gBACH,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC;aAC9B;SACJ;QAED,4EAA4E;QAC5E,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,WAAW,EAAE;YAC/C,IAAI,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE;gBAAE,OAAO;aAAE;YAC7C,YAAY,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,OAAO,EAAE,UAAA,CAAC;YAC5C,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,aAAa,EAAE;gBAAE,OAAO;aAAE;YACpD,IAAI,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE;gBAAE,OAAO;aAAE;YAE7C,MAAM,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEG,IAAA,8BAA0D,EAAxD,8BAAY,EAAE,8BAA0C,CAAC;QACjE,IAAI,YAAY,EAAE;YACd,YAAY,CAAC,GAAG,GAAM,YAAY,WAAQ,CAAC;SAC9C;QACD,IAAI,YAAY,EAAE;YACd,YAAY,CAAC,GAAG,GAAM,YAAY,WAAQ,CAAC;SAC9C;IACL,CAAC;IAEM,sCAAO,GAAd;QACI,OAAO,8BAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/D,CAAC;IAEM,sCAAO,GAAd,UAAe,IAAU;QACrB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,oBAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACzD,CAAC;IAEM,kDAAmB,GAA1B,UAA2B,WAAmB;QAC1C,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;IACrD,CAAC;IAEM,0CAAW,GAAlB,UAAmB,QAAiB;QAChC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAEM,+CAAgB,GAAvB,UAAwB,MAAgC;QACpD,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,CAAC;SAC7C;IACL,CAAC;IAEO,yDAA0B,GAAlC,UAAmC,MAAmB;QAClD,IAAI,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,iBAAiB,IAAI,IAAI,EAAE;YACtE,OAAO,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC;SAChD;QAED,OAAO,yBAAe,EAAE,IAAI,0BAAgB,EAAE,CAAC;IACnD,CAAC;IA7E0B;QAA1B,kCAAW,CAAC,YAAY,CAAC;4DAA+C;IA8E7E,2BAAC;CA/ED,AA+EC,CA/EyC,qBAAS,GA+ElD;AA/EY,oDAAoB","file":"defaultDateComponent.js","sourcesContent":["import { AgInputTextField } from '../../../widgets/agInputTextField';\nimport { Component } from '../../../widgets/component';\nimport { IDateComp, IDateParams } from '../../../rendering/dateComponent';\nimport { RefSelector } from '../../../widgets/componentAnnotations';\nimport { serialiseDate, parseDateTimeFromString } from '../../../utils/date';\nimport { isBrowserChrome, isBrowserFirefox, isBrowserIE } from '../../../utils/browser';\nimport { IAfterGuiAttachedParams } from '../../../interfaces/iAfterGuiAttachedParams';\nimport { setDisplayed } from '../../../utils/dom';\n\nexport class DefaultDateComponent extends Component implements IDateComp {\n    @RefSelector('eDateInput') private readonly eDateInput: AgInputTextField;\n\n    constructor() {\n        super(/* html */`\n            <div class=\"ag-filter-filter\">\n                <ag-input-text-field class=\"ag-date-filter\" ref=\"eDateInput\"></ag-input-text-field>\n            </div>`\n        );\n    }\n\n    // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n    // so we need to override destroy() just to make the method public.\n    public destroy(): void {\n        super.destroy();\n    }\n\n    public init(params: IDateParams): void {\n        const inputElement = this.eDateInput.getInputElement();\n\n        if (this.shouldUseBrowserDatePicker(params)) {\n            if (isBrowserIE()) {\n                console.warn('ag-grid: browserDatePicker is specified to true, but it is not supported in IE 11; reverting to text date picker');\n            } else {\n                inputElement.type = 'date';\n            }\n        }\n\n        // ensures that the input element is focussed when a clear button is clicked\n        this.addManagedListener(inputElement, 'mousedown', () => {\n            if (this.eDateInput.isDisabled()) { return; }\n            inputElement.focus();\n        });\n\n        this.addManagedListener(inputElement, 'input', e => {\n            if (e.target !== document.activeElement) { return; }\n            if (this.eDateInput.isDisabled()) { return; }\n\n            params.onDateChanged();\n        });\n\n        const { minValidYear, maxValidYear } = params.filterParams || {};\n        if (minValidYear) {\n            inputElement.min = `${minValidYear}-01-01`;\n        }\n        if (maxValidYear) {\n            inputElement.max = `${maxValidYear}-12-31`;\n        }\n    }\n\n    public getDate(): Date | null {\n        return parseDateTimeFromString(this.eDateInput.getValue());\n    }\n\n    public setDate(date: Date): void {\n        this.eDateInput.setValue(serialiseDate(date, false));\n    }\n\n    public setInputPlaceholder(placeholder: string): void {\n        this.eDateInput.setInputPlaceholder(placeholder);\n    }\n\n    public setDisabled(disabled: boolean): void {\n        this.eDateInput.setDisabled(disabled);\n    }\n\n    public afterGuiAttached(params?: IAfterGuiAttachedParams): void {\n        if (!params || !params.suppressFocus) {\n            this.eDateInput.getInputElement().focus();\n        }\n    }\n\n    private shouldUseBrowserDatePicker(params: IDateParams): boolean {\n        if (params.filterParams && params.filterParams.browserDatePicker != null) {\n            return params.filterParams.browserDatePicker;\n        }\n\n        return isBrowserChrome() || isBrowserFirefox();\n    }\n}\n"]}