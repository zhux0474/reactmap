{"version":3,"sources":["../../src/ts/components/framework/userComponentFactory.ts"],"names":[],"mappings":"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","file":"userComponentFactory.js","sourcesContent":["import { BeanStub } from \"../../context/beanStub\";\nimport { Autowired, Bean, Optional } from \"../../context/context\";\nimport { CellEditorSelectorFunc, CellRendererSelectorFunc, ColDef, ColGroupDef } from \"../../entities/colDef\";\nimport { GridOptions } from \"../../entities/gridOptions\";\nimport { ToolPanelDef } from \"../../entities/sideBar\";\nimport { IFloatingFilterParams } from \"../../filter/floating/floatingFilter\";\nimport { IHeaderParams } from \"../../headerRendering/cells/column/headerComp\";\nimport { IHeaderGroupParams } from \"../../headerRendering/cells/columnGroup/headerGroupComp\";\nimport { ICellEditorParams } from \"../../interfaces/iCellEditor\";\nimport { IFilterDef, IFilterParams } from \"../../interfaces/iFilter\";\nimport { IRichCellEditorParams } from \"../../interfaces/iRichCellEditorParams\";\nimport { ISetFilterParams } from \"../../interfaces/iSetFilterParams\";\nimport { IStatusPanelParams, StatusPanelDef } from \"../../interfaces/iStatusPanel\";\nimport { IToolPanelParams } from \"../../interfaces/iToolPanel\";\nimport { GroupCellRendererParams } from \"../../rendering/cellRenderers/groupCellRendererCtrl\";\nimport { ICellRendererParams, ISetFilterCellRendererParams } from \"../../rendering/cellRenderers/iCellRenderer\";\nimport { IDateParams } from \"../../rendering/dateComponent\";\nimport { ILoadingOverlayParams } from \"../../rendering/overlays/loadingOverlayComponent\";\nimport { INoRowsOverlayParams } from \"../../rendering/overlays/noRowsOverlayComponent\";\nimport { ITooltipParams } from \"../../rendering/tooltipComponent\";\nimport { AgPromise } from \"../../utils\";\nimport { mergeDeep } from '../../utils/object';\nimport { AgComponentUtils } from \"./agComponentUtils\";\nimport { ComponentMetadata, ComponentMetadataProvider } from \"./componentMetadataProvider\";\nimport {\n    CellEditorComponent,\n    CellRendererComponent,\n    ComponentType,\n    DateComponent,\n    FilterComponent,\n    FloatingFilterComponent,\n    HeaderComponent,\n    HeaderGroupComponent,\n    InnerRendererComponent,\n    LoadingOverlayComponent,\n    NoRowsOverlayComponent,\n    StatusPanelComponent,\n    ToolPanelComponent,\n    TooltipComponent\n} from \"./componentTypes\";\nimport { FrameworkComponentWrapper } from \"./frameworkComponentWrapper\";\nimport { UserComponentRegistry } from \"./userComponentRegistry\";\n\nexport type DefinitionObject =\n    GridOptions\n    | ColDef\n    | ColGroupDef\n    | IFilterDef\n    | ISetFilterParams\n    | IRichCellEditorParams\n    | ToolPanelDef\n    | StatusPanelDef;\n\nexport interface UserCompDetails {\n    componentClass: any;\n    componentFromFramework: boolean;\n    params: any;\n    type: ComponentType;\n    newAgStackInstance: (defaultComponentName?: string | null)=> AgPromise<any>;\n}\n\n@Bean('userComponentFactory')\nexport class UserComponentFactory extends BeanStub {\n\n    @Autowired('gridOptions') private readonly gridOptions: GridOptions;\n    @Autowired('agComponentUtils') private readonly agComponentUtils: AgComponentUtils;\n    @Autowired('componentMetadataProvider') private readonly componentMetadataProvider: ComponentMetadataProvider;\n    @Autowired('userComponentRegistry') private readonly userComponentRegistry: UserComponentRegistry;\n    @Optional('frameworkComponentWrapper') private readonly frameworkComponentWrapper: FrameworkComponentWrapper;\n\n    public getHeaderCompDetails(colDef: ColDef, params: IHeaderParams): UserCompDetails | undefined {\n        return this.getCompDetails(colDef, HeaderComponent, 'agColumnHeader', params);\n    }\n\n    public getHeaderGroupCompDetails(params: IHeaderGroupParams): UserCompDetails | undefined {\n        const colGroupDef = params.columnGroup.getColGroupDef()!;\n        return this.getCompDetails(colGroupDef, HeaderGroupComponent, 'agColumnGroupHeader', params);\n    }\n\n    // this one is unusual, as it can be LoadingCellRenderer, DetailCellRenderer, FullWidthCellRenderer or GroupRowRenderer.\n    // so we have to pass the type in.\n    public getFullWidthCellRendererDetails(params: ICellRendererParams, cellRendererType: string, cellRendererName: string): UserCompDetails | undefined {\n        return this.getCompDetails(this.gridOptions, { propertyName: cellRendererType, isCellRenderer: () => true }, cellRendererName, params);\n    }\n\n    // CELL RENDERER\n    public getInnerRendererDetails(def: GroupCellRendererParams, params: ICellRendererParams): UserCompDetails | undefined {\n        return this.getCompDetails(def, InnerRendererComponent, null, params);\n    }\n    public getFullWidthGroupRowInnerCellRenderer(def: any, params: ICellRendererParams): UserCompDetails | undefined {\n        return this.getCompDetails(def, InnerRendererComponent, null, params);\n    }\n    public getCellRendererDetails(def: ColDef | IRichCellEditorParams, params: ICellRendererParams): UserCompDetails | undefined {\n        return this.getCompDetails(def, CellRendererComponent, null, params);\n    }\n\n    // CELL EDITOR\n    public getCellEditorDetails(def: ColDef, params: ICellEditorParams): UserCompDetails | undefined {\n        return this.getCompDetails(def, CellEditorComponent, 'agCellEditor', params, true);\n    }\n\n    // FILTER\n    public getFilterDetails(def: IFilterDef, params: IFilterParams, defaultFilter: string): UserCompDetails | undefined {\n        return this.getCompDetails(def, FilterComponent, defaultFilter, params, true);\n    }\n\n    public getDateCompDetails(params: IDateParams): UserCompDetails {\n        return this.getCompDetails(this.gridOptions, DateComponent, 'agDateInput', params, true)!;\n    }\n\n    public getLoadingOverlayCompDetails(params: ILoadingOverlayParams): UserCompDetails {\n        return this.getCompDetails(this.gridOptions, LoadingOverlayComponent, 'agLoadingOverlay', params, true)!;\n    }\n\n    public getNoRowsOverlayCompDetails(params: INoRowsOverlayParams): UserCompDetails {\n        return this.getCompDetails(this.gridOptions, NoRowsOverlayComponent, 'agNoRowsOverlay', params, true)!;\n    }\n\n    public getTooltipCompDetails(params: ITooltipParams): UserCompDetails {\n        return this.getCompDetails(params.colDef!, TooltipComponent, 'agTooltipComponent', params, true)!;\n    }\n\n    public getSetFilterCellRendererDetails(def: ISetFilterParams, params: ISetFilterCellRendererParams): UserCompDetails | undefined {\n        return this.getCompDetails(def, CellRendererComponent, null, params);\n    }\n\n    public getFloatingFilterCompDetails(def: IFilterDef, params: IFloatingFilterParams, defaultFloatingFilter: string | null):  UserCompDetails | undefined {\n        return this.getCompDetails(def, FloatingFilterComponent, defaultFloatingFilter, params);\n    }\n\n    public getToolPanelCompDetails(toolPanelDef: ToolPanelDef, params: IToolPanelParams):  UserCompDetails {\n        return this.getCompDetails(toolPanelDef, ToolPanelComponent, null, params, true)!;\n    }\n\n    public getStatusPanelCompDetails(def: StatusPanelDef, params: IStatusPanelParams):  UserCompDetails {\n        return this.getCompDetails(def, StatusPanelComponent, null, params, true)!;\n    }\n\n    private getCompDetails(defObject: DefinitionObject, type: ComponentType, defaultName: string | null | undefined, params: any, mandatory = false): UserCompDetails | undefined {\n\n        const propertyName = type.propertyName;\n\n        let comp: any;\n        let frameworkComp: any;\n        let paramsFromSelector: any;\n\n        // pull from defObject if available\n        if (defObject) {\n            let defObjectAny = defObject as any;\n\n            // if selector, use this\n            const selectorFunc: CellEditorSelectorFunc | CellRendererSelectorFunc = defObjectAny[propertyName + 'Selector'];\n            const selectorRes = selectorFunc ? selectorFunc(params) : null;\n            if (selectorRes) {\n                comp = selectorRes.component;\n                frameworkComp = selectorRes.frameworkComponent;\n                paramsFromSelector = selectorRes.params;\n            } else {\n                // if no selector, or result of selector is empty, take from defObject\n                comp = defObjectAny[propertyName];\n                frameworkComp = defObjectAny[propertyName + 'Framework'];\n            }\n\n            // for filters only, we allow 'true' for the component, which means default filter to be used\n            if (comp === true) {\n                comp = undefined;\n            }\n        }\n\n        const lookupFromRegistry = (key: string) => {\n            const item = this.userComponentRegistry.retrieve(key);\n            if (item) {\n                comp = !item.componentFromFramework ? item.component : undefined;\n                frameworkComp = item.componentFromFramework ? item.component : undefined;\n            } else {\n                comp = undefined;\n                frameworkComp = undefined;\n            }\n        };\n\n        // if compOption is a string, means we need to look the item up\n        if (typeof comp === 'string') {\n            lookupFromRegistry(comp);\n        }\n\n        // if lookup brought nothing back, and we have a default, lookup the default\n        if (comp == null && frameworkComp == null && defaultName != null) {\n            lookupFromRegistry(defaultName);\n        }\n\n        // if we have a comp option, and it's a function, replace it with an object equivalent adaptor\n        if (comp && !this.agComponentUtils.doesImplementIComponent(comp)) {\n            comp = this.agComponentUtils.adaptFunction(propertyName, comp);\n        }\n\n        if (!comp && !frameworkComp) {\n            if (mandatory) {\n                const overrideName = defObject ? (defObject as any)[propertyName] : defaultName;\n                const nameToReport = overrideName ? overrideName : defaultName;\n                console.error(`Could not find component ${nameToReport}, did you forget to configure this component?`);\n            }\n            return;\n        }\n\n        const paramsMerged = this.mergeParamsWithApplicationProvidedParams(defObject, propertyName, params, paramsFromSelector);\n\n        const componentFromFramework = comp == null;\n        const componentClass = comp ? comp : frameworkComp;\n\n        return {\n            componentFromFramework,\n            componentClass,\n            params: paramsMerged,\n            type: type,\n            newAgStackInstance: (defaultCompName?: string) => this.newAgStackInstance(componentClass, componentFromFramework, paramsMerged, type, defaultCompName)\n        };\n    }\n\n    private newAgStackInstance(ComponentClass: any, componentFromFramework: boolean, params: any, \n        type: ComponentType, defaultComponentName: string | null | undefined): AgPromise<any> {\n\n        const propertyName = type.propertyName;\n\n        // using javascript component\n        let instance: any;\n        const jsComponent = !componentFromFramework;\n\n        if (jsComponent) {\n            instance = new ComponentClass();\n        } else {\n            // Using framework component\n            const thisComponentConfig: ComponentMetadata = this.componentMetadataProvider.retrieve(propertyName);\n            instance = this.frameworkComponentWrapper.wrap(\n                ComponentClass,\n                thisComponentConfig.mandatoryMethodList,\n                thisComponentConfig.optionalMethodList,\n                type,\n                defaultComponentName\n            );\n        }\n\n        const deferredInit = this.initComponent(instance, params);\n\n        if (deferredInit == null) {\n            return AgPromise.resolve(instance);\n        }\n        return (deferredInit as AgPromise<void>).then(() => instance);\n    }\n\n    // used by Floating Filter\n    public mergeParamsWithApplicationProvidedParams(\n        defObject: DefinitionObject,\n        propertyName: string,\n        paramsFromGrid: any,\n        paramsFromSelector: any = null): any {\n            \n        const params = {} as any;\n\n        mergeDeep(params, paramsFromGrid);\n\n        const userParams = defObject ? (defObject as any)[propertyName + \"Params\"] : null;\n\n        if (userParams != null) {\n            if (typeof userParams === 'function') {\n                const userParamsFromFunc = userParams(paramsFromGrid);\n                mergeDeep(params, userParamsFromFunc);\n            } else if (typeof userParams === 'object') {\n                mergeDeep(params, userParams);\n            }\n        }\n\n        mergeDeep(params, paramsFromSelector);\n\n        return params;\n    }\n\n    private initComponent(component: any, params: any): AgPromise<void> | void {\n        this.context.createBean(component);\n        if (component.init == null) { return; }\n        return component.init(params);\n    }\n}\n"]}