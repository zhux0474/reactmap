{"version":3,"sources":["../../src/ts/misc/simpleHttpRequest.ts"],"names":[],"mappings":";;;;;;;;AAAA,kCAAqC;AAMrC,gBAAgB;AAChB,SAAgB,iBAAiB,CAAC,MAA+B;IAC7D,OAAO,IAAI,iBAAS,CAAM,UAAA,OAAO;QAC7B,IAAM,WAAW,GAAG,IAAI,cAAc,EAAE,CAAC;QACzC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;QACpC,WAAW,CAAC,IAAI,EAAE,CAAC;QACnB,WAAW,CAAC,kBAAkB,GAAG;YAC7B,IAAI,WAAW,CAAC,UAAU,KAAK,CAAC,IAAI,WAAW,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC5D,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;aACjD;QACL,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC;AAXD,8CAWC","file":"simpleHttpRequest.js","sourcesContent":["import { AgPromise } from \"../utils\";\n\nexport interface SimpleHttpRequestParams {\n    url: string;\n}\n\n/* deprecated */\nexport function simpleHttpRequest(params: SimpleHttpRequestParams): AgPromise<any> {\n    return new AgPromise<any>(resolve => {\n        const httpRequest = new XMLHttpRequest();\n        httpRequest.open('GET', params.url);\n        httpRequest.send();\n        httpRequest.onreadystatechange = function() {\n            if (httpRequest.readyState === 4 && httpRequest.status === 200) {\n                resolve(JSON.parse(httpRequest.responseText));\n            }\n        };\n    });\n}\n"]}