{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { BeanStub } from \"../context/beanStub\";\nimport { Autowired, Bean, PostConstruct, Qualifier } from \"../context/context\";\nimport { Events } from \"../eventKeys\";\nimport { getMaxDivHeight } from \"../utils/browser\";\n/**\n * This class solves the 'max height' problem, where the user might want to show more data than\n * the max div height actually allows.\n */\n\nvar RowContainerHeightService =\n/** @class */\nfunction (_super) {\n  __extends(RowContainerHeightService, _super);\n\n  function RowContainerHeightService() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // the scrollY position\n\n\n    _this.scrollY = 0; // how tall the body is\n\n    _this.uiBodyHeight = 0;\n    return _this;\n  }\n\n  RowContainerHeightService.prototype.agWire = function (loggerFactory) {\n    this.logger = loggerFactory.create(\"RowContainerHeightService\");\n  };\n\n  RowContainerHeightService.prototype.postConstruct = function () {\n    this.addManagedListener(this.eventService, Events.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this));\n    this.maxDivHeight = getMaxDivHeight();\n    this.logger.log('maxDivHeight = ' + this.maxDivHeight);\n  };\n\n  RowContainerHeightService.prototype.isStretching = function () {\n    return this.stretching;\n  };\n\n  RowContainerHeightService.prototype.getDivStretchOffset = function () {\n    return this.divStretchOffset;\n  };\n\n  RowContainerHeightService.prototype.updateOffset = function () {\n    if (!this.stretching) {\n      return;\n    }\n\n    var gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    var newScrollY = gridBodyCon.getScrollFeature().getVScrollPosition().top;\n    var newBodyHeight = this.getUiBodyHeight();\n    var atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n\n    if (atLeastOneChanged) {\n      this.scrollY = newScrollY;\n      this.uiBodyHeight = newBodyHeight;\n      this.calculateOffset();\n    }\n  };\n\n  RowContainerHeightService.prototype.calculateOffset = function () {\n    this.setUiContainerHeight(this.maxDivHeight);\n    this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n    this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n    var scrollPercent = this.scrollY / this.maxScrollY;\n    var divStretchOffset = scrollPercent * this.pixelsToShave;\n    this.logger.log(\"Div Stretch Offset = \" + divStretchOffset + \" (\" + this.pixelsToShave + \" * \" + scrollPercent + \")\");\n    this.setDivStretchOffset(divStretchOffset);\n  };\n\n  RowContainerHeightService.prototype.setUiContainerHeight = function (height) {\n    if (height !== this.uiContainerHeight) {\n      this.uiContainerHeight = height;\n      this.eventService.dispatchEvent({\n        type: Events.EVENT_ROW_CONTAINER_HEIGHT_CHANGED\n      });\n    }\n  };\n\n  RowContainerHeightService.prototype.clearOffset = function () {\n    this.setUiContainerHeight(this.modelHeight);\n    this.pixelsToShave = 0;\n    this.setDivStretchOffset(0);\n  };\n\n  RowContainerHeightService.prototype.setDivStretchOffset = function (newOffset) {\n    // because we are talking pixels, no point in confusing things with half numbers\n    var newOffsetFloor = typeof newOffset === 'number' ? Math.floor(newOffset) : null;\n\n    if (this.divStretchOffset === newOffsetFloor) {\n      return;\n    }\n\n    this.divStretchOffset = newOffsetFloor;\n    this.eventService.dispatchEvent({\n      type: Events.EVENT_HEIGHT_SCALE_CHANGED\n    });\n  };\n\n  RowContainerHeightService.prototype.setModelHeight = function (modelHeight) {\n    this.modelHeight = modelHeight;\n    this.stretching = modelHeight != null // null happens when in print layout\n    && this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n\n    if (this.stretching) {\n      this.calculateOffset();\n    } else {\n      this.clearOffset();\n    }\n  };\n\n  RowContainerHeightService.prototype.getUiContainerHeight = function () {\n    return this.uiContainerHeight;\n  };\n\n  RowContainerHeightService.prototype.getRealPixelPosition = function (modelPixel) {\n    return modelPixel - this.divStretchOffset;\n  };\n\n  RowContainerHeightService.prototype.getUiBodyHeight = function () {\n    var gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    var pos = gridBodyCon.getScrollFeature().getVScrollPosition();\n    return pos.bottom - pos.top;\n  };\n\n  RowContainerHeightService.prototype.getScrollPositionForPixel = function (rowTop) {\n    if (this.pixelsToShave <= 0) {\n      return rowTop;\n    }\n\n    var modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n    var scrollPercent = rowTop / modelMaxScroll;\n    var scrollPixel = this.maxScrollY * scrollPercent;\n    return scrollPixel;\n  };\n\n  __decorate([Autowired('ctrlsService')], RowContainerHeightService.prototype, \"ctrlsService\", void 0);\n\n  __decorate([__param(0, Qualifier(\"loggerFactory\"))], RowContainerHeightService.prototype, \"agWire\", null);\n\n  __decorate([PostConstruct], RowContainerHeightService.prototype, \"postConstruct\", null);\n\n  RowContainerHeightService = __decorate([Bean('rowContainerHeightService')], RowContainerHeightService);\n  return RowContainerHeightService;\n}(BeanStub);\n\nexport { RowContainerHeightService };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/rendering/rowContainerHeightService.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","BeanStub","Autowired","Bean","PostConstruct","Qualifier","Events","getMaxDivHeight","RowContainerHeightService","_super","_this","apply","scrollY","uiBodyHeight","agWire","loggerFactory","logger","postConstruct","addManagedListener","eventService","EVENT_BODY_HEIGHT_CHANGED","updateOffset","bind","maxDivHeight","log","isStretching","stretching","getDivStretchOffset","divStretchOffset","gridBodyCon","ctrlsService","getGridBodyCtrl","newScrollY","getScrollFeature","getVScrollPosition","top","newBodyHeight","getUiBodyHeight","atLeastOneChanged","calculateOffset","setUiContainerHeight","pixelsToShave","modelHeight","uiContainerHeight","maxScrollY","scrollPercent","setDivStretchOffset","height","dispatchEvent","type","EVENT_ROW_CONTAINER_HEIGHT_CHANGED","clearOffset","newOffset","newOffsetFloor","Math","floor","EVENT_HEIGHT_SCALE_CHANGED","setModelHeight","getUiContainerHeight","getRealPixelPosition","modelPixel","pos","bottom","getScrollPositionForPixel","rowTop","modelMaxScroll","scrollPixel"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIM,OAAO,GAAI,QAAQ,KAAKA,OAAd,IAA0B,UAAUC,UAAV,EAAsBC,SAAtB,EAAiC;AACrE,SAAO,UAAUd,MAAV,EAAkBC,GAAlB,EAAuB;AAAEa,IAAAA,SAAS,CAACd,MAAD,EAASC,GAAT,EAAcY,UAAd,CAAT;AAAqC,GAArE;AACH,CAFD;;AAGA,SAASE,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,oBAA1D;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA;AACA;AACA;AACA;;AACA,IAAIC,yBAAyB;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC7DvC,EAAAA,SAAS,CAACsC,yBAAD,EAA4BC,MAA5B,CAAT;;AACA,WAASD,yBAAT,GAAqC;AACjC,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBrB,SAAnB,CAAnB,IAAoD,IAAhE,CADiC,CAEjC;;;AACAoB,IAAAA,KAAK,CAACE,OAAN,GAAgB,CAAhB,CAHiC,CAIjC;;AACAF,IAAAA,KAAK,CAACG,YAAN,GAAqB,CAArB;AACA,WAAOH,KAAP;AACH;;AACDF,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoCgC,MAApC,GAA6C,UAAUC,aAAV,EAAyB;AAClE,SAAKC,MAAL,GAAcD,aAAa,CAAChC,MAAd,CAAqB,2BAArB,CAAd;AACH,GAFD;;AAGAyB,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoCmC,aAApC,GAAoD,YAAY;AAC5D,SAAKC,kBAAL,CAAwB,KAAKC,YAA7B,EAA2Cb,MAAM,CAACc,yBAAlD,EAA6E,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAA7E;AACA,SAAKC,YAAL,GAAoBhB,eAAe,EAAnC;AACA,SAAKS,MAAL,CAAYQ,GAAZ,CAAgB,oBAAoB,KAAKD,YAAzC;AACH,GAJD;;AAKAf,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoC2C,YAApC,GAAmD,YAAY;AAC3D,WAAO,KAAKC,UAAZ;AACH,GAFD;;AAGAlB,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoC6C,mBAApC,GAA0D,YAAY;AAClE,WAAO,KAAKC,gBAAZ;AACH,GAFD;;AAGApB,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoCuC,YAApC,GAAmD,YAAY;AAC3D,QAAI,CAAC,KAAKK,UAAV,EAAsB;AAClB;AACH;;AACD,QAAIG,WAAW,GAAG,KAAKC,YAAL,CAAkBC,eAAlB,EAAlB;AACA,QAAIC,UAAU,GAAGH,WAAW,CAACI,gBAAZ,GAA+BC,kBAA/B,GAAoDC,GAArE;AACA,QAAIC,aAAa,GAAG,KAAKC,eAAL,EAApB;AACA,QAAIC,iBAAiB,GAAGN,UAAU,KAAK,KAAKpB,OAApB,IAA+BwB,aAAa,KAAK,KAAKvB,YAA9E;;AACA,QAAIyB,iBAAJ,EAAuB;AACnB,WAAK1B,OAAL,GAAeoB,UAAf;AACA,WAAKnB,YAAL,GAAoBuB,aAApB;AACA,WAAKG,eAAL;AACH;AACJ,GAbD;;AAcA/B,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoCyD,eAApC,GAAsD,YAAY;AAC9D,SAAKC,oBAAL,CAA0B,KAAKjB,YAA/B;AACA,SAAKkB,aAAL,GAAqB,KAAKC,WAAL,GAAmB,KAAKC,iBAA7C;AACA,SAAKC,UAAL,GAAkB,KAAKD,iBAAL,GAAyB,KAAK9B,YAAhD;AACA,QAAIgC,aAAa,GAAG,KAAKjC,OAAL,GAAe,KAAKgC,UAAxC;AACA,QAAIhB,gBAAgB,GAAGiB,aAAa,GAAG,KAAKJ,aAA5C;AACA,SAAKzB,MAAL,CAAYQ,GAAZ,CAAgB,0BAA0BI,gBAA1B,GAA6C,IAA7C,GAAoD,KAAKa,aAAzD,GAAyE,KAAzE,GAAiFI,aAAjF,GAAiG,GAAjH;AACA,SAAKC,mBAAL,CAAyBlB,gBAAzB;AACH,GARD;;AASApB,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoC0D,oBAApC,GAA2D,UAAUO,MAAV,EAAkB;AACzE,QAAIA,MAAM,KAAK,KAAKJ,iBAApB,EAAuC;AACnC,WAAKA,iBAAL,GAAyBI,MAAzB;AACA,WAAK5B,YAAL,CAAkB6B,aAAlB,CAAgC;AAAEC,QAAAA,IAAI,EAAE3C,MAAM,CAAC4C;AAAf,OAAhC;AACH;AACJ,GALD;;AAMA1C,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoCqE,WAApC,GAAkD,YAAY;AAC1D,SAAKX,oBAAL,CAA0B,KAAKE,WAA/B;AACA,SAAKD,aAAL,GAAqB,CAArB;AACA,SAAKK,mBAAL,CAAyB,CAAzB;AACH,GAJD;;AAKAtC,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoCgE,mBAApC,GAA0D,UAAUM,SAAV,EAAqB;AAC3E;AACA,QAAIC,cAAc,GAAG,OAAOD,SAAP,KAAqB,QAArB,GAAgCE,IAAI,CAACC,KAAL,CAAWH,SAAX,CAAhC,GAAwD,IAA7E;;AACA,QAAI,KAAKxB,gBAAL,KAA0ByB,cAA9B,EAA8C;AAC1C;AACH;;AACD,SAAKzB,gBAAL,GAAwByB,cAAxB;AACA,SAAKlC,YAAL,CAAkB6B,aAAlB,CAAgC;AAAEC,MAAAA,IAAI,EAAE3C,MAAM,CAACkD;AAAf,KAAhC;AACH,GARD;;AASAhD,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoC2E,cAApC,GAAqD,UAAUf,WAAV,EAAuB;AACxE,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKhB,UAAL,GAAkBgB,WAAW,IAAI,IAAf,CAAoB;AAApB,OACX,KAAKnB,YAAL,GAAoB,CADT,IAEXmB,WAAW,GAAG,KAAKnB,YAF1B;;AAGA,QAAI,KAAKG,UAAT,EAAqB;AACjB,WAAKa,eAAL;AACH,KAFD,MAGK;AACD,WAAKY,WAAL;AACH;AACJ,GAXD;;AAYA3C,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoC4E,oBAApC,GAA2D,YAAY;AACnE,WAAO,KAAKf,iBAAZ;AACH,GAFD;;AAGAnC,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoC6E,oBAApC,GAA2D,UAAUC,UAAV,EAAsB;AAC7E,WAAOA,UAAU,GAAG,KAAKhC,gBAAzB;AACH,GAFD;;AAGApB,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoCuD,eAApC,GAAsD,YAAY;AAC9D,QAAIR,WAAW,GAAG,KAAKC,YAAL,CAAkBC,eAAlB,EAAlB;AACA,QAAI8B,GAAG,GAAGhC,WAAW,CAACI,gBAAZ,GAA+BC,kBAA/B,EAAV;AACA,WAAO2B,GAAG,CAACC,MAAJ,GAAaD,GAAG,CAAC1B,GAAxB;AACH,GAJD;;AAKA3B,EAAAA,yBAAyB,CAAC1B,SAA1B,CAAoCiF,yBAApC,GAAgE,UAAUC,MAAV,EAAkB;AAC9E,QAAI,KAAKvB,aAAL,IAAsB,CAA1B,EAA6B;AACzB,aAAOuB,MAAP;AACH;;AACD,QAAIC,cAAc,GAAG,KAAKvB,WAAL,GAAmB,KAAKL,eAAL,EAAxC;AACA,QAAIQ,aAAa,GAAGmB,MAAM,GAAGC,cAA7B;AACA,QAAIC,WAAW,GAAG,KAAKtB,UAAL,GAAkBC,aAApC;AACA,WAAOqB,WAAP;AACH,GARD;;AASAlF,EAAAA,UAAU,CAAC,CACPkB,SAAS,CAAC,cAAD,CADF,CAAD,EAEPM,yBAAyB,CAAC1B,SAFnB,EAE8B,cAF9B,EAE8C,KAAK,CAFnD,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPc,OAAO,CAAC,CAAD,EAAIO,SAAS,CAAC,eAAD,CAAb,CADA,CAAD,EAEPG,yBAAyB,CAAC1B,SAFnB,EAE8B,QAF9B,EAEwC,IAFxC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPoB,aADO,CAAD,EAEPI,yBAAyB,CAAC1B,SAFnB,EAE8B,eAF9B,EAE+C,IAF/C,CAAV;;AAGA0B,EAAAA,yBAAyB,GAAGxB,UAAU,CAAC,CACnCmB,IAAI,CAAC,2BAAD,CAD+B,CAAD,EAEnCK,yBAFmC,CAAtC;AAGA,SAAOA,yBAAP;AACH,CAhH8C,CAgH7CP,QAhH6C,CAA/C;;AAiHA,SAASO,yBAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { BeanStub } from \"../context/beanStub\";\nimport { Autowired, Bean, PostConstruct, Qualifier } from \"../context/context\";\nimport { Events } from \"../eventKeys\";\nimport { getMaxDivHeight } from \"../utils/browser\";\n/**\n * This class solves the 'max height' problem, where the user might want to show more data than\n * the max div height actually allows.\n */\nvar RowContainerHeightService = /** @class */ (function (_super) {\n    __extends(RowContainerHeightService, _super);\n    function RowContainerHeightService() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // the scrollY position\n        _this.scrollY = 0;\n        // how tall the body is\n        _this.uiBodyHeight = 0;\n        return _this;\n    }\n    RowContainerHeightService.prototype.agWire = function (loggerFactory) {\n        this.logger = loggerFactory.create(\"RowContainerHeightService\");\n    };\n    RowContainerHeightService.prototype.postConstruct = function () {\n        this.addManagedListener(this.eventService, Events.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this));\n        this.maxDivHeight = getMaxDivHeight();\n        this.logger.log('maxDivHeight = ' + this.maxDivHeight);\n    };\n    RowContainerHeightService.prototype.isStretching = function () {\n        return this.stretching;\n    };\n    RowContainerHeightService.prototype.getDivStretchOffset = function () {\n        return this.divStretchOffset;\n    };\n    RowContainerHeightService.prototype.updateOffset = function () {\n        if (!this.stretching) {\n            return;\n        }\n        var gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n        var newScrollY = gridBodyCon.getScrollFeature().getVScrollPosition().top;\n        var newBodyHeight = this.getUiBodyHeight();\n        var atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n        if (atLeastOneChanged) {\n            this.scrollY = newScrollY;\n            this.uiBodyHeight = newBodyHeight;\n            this.calculateOffset();\n        }\n    };\n    RowContainerHeightService.prototype.calculateOffset = function () {\n        this.setUiContainerHeight(this.maxDivHeight);\n        this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n        this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n        var scrollPercent = this.scrollY / this.maxScrollY;\n        var divStretchOffset = scrollPercent * this.pixelsToShave;\n        this.logger.log(\"Div Stretch Offset = \" + divStretchOffset + \" (\" + this.pixelsToShave + \" * \" + scrollPercent + \")\");\n        this.setDivStretchOffset(divStretchOffset);\n    };\n    RowContainerHeightService.prototype.setUiContainerHeight = function (height) {\n        if (height !== this.uiContainerHeight) {\n            this.uiContainerHeight = height;\n            this.eventService.dispatchEvent({ type: Events.EVENT_ROW_CONTAINER_HEIGHT_CHANGED });\n        }\n    };\n    RowContainerHeightService.prototype.clearOffset = function () {\n        this.setUiContainerHeight(this.modelHeight);\n        this.pixelsToShave = 0;\n        this.setDivStretchOffset(0);\n    };\n    RowContainerHeightService.prototype.setDivStretchOffset = function (newOffset) {\n        // because we are talking pixels, no point in confusing things with half numbers\n        var newOffsetFloor = typeof newOffset === 'number' ? Math.floor(newOffset) : null;\n        if (this.divStretchOffset === newOffsetFloor) {\n            return;\n        }\n        this.divStretchOffset = newOffsetFloor;\n        this.eventService.dispatchEvent({ type: Events.EVENT_HEIGHT_SCALE_CHANGED });\n    };\n    RowContainerHeightService.prototype.setModelHeight = function (modelHeight) {\n        this.modelHeight = modelHeight;\n        this.stretching = modelHeight != null // null happens when in print layout\n            && this.maxDivHeight > 0\n            && modelHeight > this.maxDivHeight;\n        if (this.stretching) {\n            this.calculateOffset();\n        }\n        else {\n            this.clearOffset();\n        }\n    };\n    RowContainerHeightService.prototype.getUiContainerHeight = function () {\n        return this.uiContainerHeight;\n    };\n    RowContainerHeightService.prototype.getRealPixelPosition = function (modelPixel) {\n        return modelPixel - this.divStretchOffset;\n    };\n    RowContainerHeightService.prototype.getUiBodyHeight = function () {\n        var gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n        var pos = gridBodyCon.getScrollFeature().getVScrollPosition();\n        return pos.bottom - pos.top;\n    };\n    RowContainerHeightService.prototype.getScrollPositionForPixel = function (rowTop) {\n        if (this.pixelsToShave <= 0) {\n            return rowTop;\n        }\n        var modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n        var scrollPercent = rowTop / modelMaxScroll;\n        var scrollPixel = this.maxScrollY * scrollPercent;\n        return scrollPixel;\n    };\n    __decorate([\n        Autowired('ctrlsService')\n    ], RowContainerHeightService.prototype, \"ctrlsService\", void 0);\n    __decorate([\n        __param(0, Qualifier(\"loggerFactory\"))\n    ], RowContainerHeightService.prototype, \"agWire\", null);\n    __decorate([\n        PostConstruct\n    ], RowContainerHeightService.prototype, \"postConstruct\", null);\n    RowContainerHeightService = __decorate([\n        Bean('rowContainerHeightService')\n    ], RowContainerHeightService);\n    return RowContainerHeightService;\n}(BeanStub));\nexport { RowContainerHeightService };\n"]},"metadata":{},"sourceType":"module"}