{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { EventService } from \"../eventService\";\nimport { Autowired, PostConstruct } from \"../context/context\";\nimport { Constants } from \"../constants/constants\";\nimport { ModuleNames } from \"../modules/moduleNames\";\nimport { ModuleRegistry } from \"../modules/moduleRegistry\";\nimport { attrToNumber, attrToBoolean, exists, missing } from \"../utils/generic\";\nimport { doOnce } from \"../utils/function\";\nimport { mergeDeep } from \"../utils/object\";\nvar instanceIdSequence = 0; // Wrapper around a user provide column definition. The grid treats the column definition as ready only.\n// This class contains all the runtime information about a column, plus some logic (the definition has no logic).\n// This class implements both interfaces ColumnGroupChild and OriginalColumnGroupChild as the class can\n// appear as a child of either the original tree or the displayed tree. However the relevant group classes\n// for each type only implements one, as each group can only appear in it's associated tree (eg OriginalColumnGroup\n// can only appear in OriginalColumn tree).\n\nvar Column =\n/** @class */\nfunction () {\n  function Column(colDef, userProvidedColDef, colId, primary) {\n    // used by React (and possibly other frameworks) as key for rendering\n    this.instanceId = instanceIdSequence++;\n    this.moving = false;\n    this.menuVisible = false;\n    this.filterActive = false;\n    this.eventService = new EventService();\n    this.rowGroupActive = false;\n    this.pivotActive = false;\n    this.aggregationActive = false;\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.colId = colId;\n    this.primary = primary;\n    this.setState(colDef);\n  }\n\n  Column.prototype.getInstanceId = function () {\n    return this.instanceId;\n  };\n\n  Column.prototype.setState = function (colDef) {\n    // sort\n    if (colDef.sort !== undefined) {\n      if (colDef.sort === Constants.SORT_ASC || colDef.sort === Constants.SORT_DESC) {\n        this.sort = colDef.sort;\n      }\n    } else {\n      if (colDef.initialSort === Constants.SORT_ASC || colDef.initialSort === Constants.SORT_DESC) {\n        this.sort = colDef.initialSort;\n      }\n    } // sortIndex\n\n\n    var sortIndex = attrToNumber(colDef.sortIndex);\n    var initialSortIndex = attrToNumber(colDef.initialSortIndex);\n\n    if (sortIndex !== undefined) {\n      if (sortIndex !== null) {\n        this.sortIndex = sortIndex;\n      }\n    } else {\n      if (initialSortIndex !== null) {\n        this.sortIndex = initialSortIndex;\n      }\n    } // hide\n\n\n    var hide = attrToBoolean(colDef.hide);\n    var initialHide = attrToBoolean(colDef.initialHide);\n\n    if (hide !== undefined) {\n      this.visible = !hide;\n    } else {\n      this.visible = !initialHide;\n    } // pinned\n\n\n    if (colDef.pinned !== undefined) {\n      this.setPinned(colDef.pinned);\n    } else {\n      this.setPinned(colDef.initialPinned);\n    } // flex\n\n\n    var flex = attrToNumber(colDef.flex);\n    var initialFlex = attrToNumber(colDef.initialFlex);\n\n    if (flex !== undefined) {\n      this.flex = flex;\n    } else if (initialFlex !== undefined) {\n      this.flex = initialFlex;\n    }\n  }; // gets called when user provides an alternative colDef, eg\n\n\n  Column.prototype.setColDef = function (colDef, userProvidedColDef) {\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.initMinAndMaxWidths();\n    this.initDotNotation();\n  };\n  /**\n   * Returns the column definition provided by the application.\n   * This may not be correct, as items can be superseded by default column options.\n   * However it's useful for comparison, eg to know which application column definition matches that column.\n   */\n\n\n  Column.prototype.getUserProvidedColDef = function () {\n    return this.userProvidedColDef;\n  };\n\n  Column.prototype.setParent = function (parent) {\n    this.parent = parent;\n  };\n  /** Returns the parent column group, if column grouping is active. */\n\n\n  Column.prototype.getParent = function () {\n    return this.parent;\n  };\n\n  Column.prototype.setOriginalParent = function (originalParent) {\n    this.originalParent = originalParent;\n  };\n\n  Column.prototype.getOriginalParent = function () {\n    return this.originalParent;\n  }; // this is done after constructor as it uses gridOptionsWrapper\n\n\n  Column.prototype.initialise = function () {\n    this.initMinAndMaxWidths();\n    this.resetActualWidth('gridInitializing');\n    this.initDotNotation();\n    this.validate();\n  };\n\n  Column.prototype.initDotNotation = function () {\n    var suppressDotNotation = this.gridOptionsWrapper.isSuppressFieldDotNotation();\n    this.fieldContainsDots = exists(this.colDef.field) && this.colDef.field.indexOf('.') >= 0 && !suppressDotNotation;\n    this.tooltipFieldContainsDots = exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf('.') >= 0 && !suppressDotNotation;\n  };\n\n  Column.prototype.initMinAndMaxWidths = function () {\n    var colDef = this.colDef;\n    this.minWidth = this.columnUtils.calculateColMinWidth(colDef);\n    this.maxWidth = this.columnUtils.calculateColMaxWidth(colDef);\n  };\n\n  Column.prototype.resetActualWidth = function (source) {\n    if (source === void 0) {\n      source = 'api';\n    }\n\n    var initialWidth = this.columnUtils.calculateColInitialWidth(this.colDef);\n    this.setActualWidth(initialWidth, source, true);\n  };\n\n  Column.prototype.isEmptyGroup = function () {\n    return false;\n  };\n\n  Column.prototype.isRowGroupDisplayed = function (colId) {\n    if (missing(this.colDef) || missing(this.colDef.showRowGroup)) {\n      return false;\n    }\n\n    var showingAllGroups = this.colDef.showRowGroup === true;\n    var showingThisGroup = this.colDef.showRowGroup === colId;\n    return showingAllGroups || showingThisGroup;\n  };\n  /** Returns `true` if column is a primary column, `false` if secondary. Secondary columns are used for pivoting. */\n\n\n  Column.prototype.isPrimary = function () {\n    return this.primary;\n  };\n  /** Returns `true` if column filtering is allowed. */\n\n\n  Column.prototype.isFilterAllowed = function () {\n    // filter defined means it's a string, class or true.\n    // if its false, null or undefined then it's false.\n    var filterDefined = !!this.colDef.filter || !!this.colDef.filterFramework;\n    return this.primary && filterDefined;\n  };\n\n  Column.prototype.isFieldContainsDots = function () {\n    return this.fieldContainsDots;\n  };\n\n  Column.prototype.isTooltipFieldContainsDots = function () {\n    return this.tooltipFieldContainsDots;\n  };\n\n  Column.prototype.validate = function () {\n    var colDefAny = this.colDef;\n\n    function warnOnce(msg, key, obj) {\n      doOnce(function () {\n        if (obj) {\n          console.warn(msg, obj);\n        } else {\n          doOnce(function () {\n            return console.warn(msg);\n          }, key);\n        }\n      }, key);\n    }\n\n    var usingCSRM = this.gridOptionsWrapper.isRowModelDefault();\n\n    if (usingCSRM && !ModuleRegistry.isRegistered(ModuleNames.RowGroupingModule)) {\n      var rowGroupingItems = ['enableRowGroup', 'rowGroup', 'rowGroupIndex', 'enablePivot', 'enableValue', 'pivot', 'pivotIndex', 'aggFunc'];\n      rowGroupingItems.forEach(function (item) {\n        if (exists(colDefAny[item])) {\n          if (ModuleRegistry.isPackageBased()) {\n            warnOnce(\"AG Grid: \" + item + \" is only valid in ag-grid-enterprise, your column definition should not have \" + item, 'ColumnRowGroupingMissing' + item);\n          } else {\n            warnOnce(\"AG Grid: \" + item + \" is only valid with AG Grid Enterprise Module \" + ModuleNames.RowGroupingModule + \" - your column definition should not have \" + item, 'ColumnRowGroupingMissing' + item);\n          }\n        }\n      });\n    }\n\n    if (!ModuleRegistry.isRegistered(ModuleNames.RichSelectModule)) {\n      if (this.colDef.cellEditor === 'agRichSelect') {\n        if (ModuleRegistry.isPackageBased()) {\n          warnOnce(\"AG Grid: \" + this.colDef.cellEditor + \" can only be used with ag-grid-enterprise\", 'ColumnRichSelectMissing');\n        } else {\n          warnOnce(\"AG Grid: \" + this.colDef.cellEditor + \" can only be used with AG Grid Enterprise Module \" + ModuleNames.RichSelectModule, 'ColumnRichSelectMissing');\n        }\n      }\n    }\n\n    if (this.gridOptionsWrapper.isTreeData()) {\n      var itemsNotAllowedWithTreeData = ['rowGroup', 'rowGroupIndex', 'pivot', 'pivotIndex'];\n      itemsNotAllowedWithTreeData.forEach(function (item) {\n        if (exists(colDefAny[item])) {\n          warnOnce(\"AG Grid: \" + item + \" is not possible when doing tree data, your column definition should not have \" + item, 'TreeDataCannotRowGroup');\n        }\n      });\n    }\n\n    if (exists(this.colDef.width) && typeof this.colDef.width !== 'number') {\n      warnOnce('AG Grid: colDef.width should be a number, not ' + typeof this.colDef.width, 'ColumnCheck_asdfawef');\n    }\n\n    if (colDefAny.pinnedRowCellRenderer) {\n      warnOnce('AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column', 'colDef.pinnedRowCellRenderer-deprecated');\n    }\n\n    if (colDefAny.pinnedRowCellRendererParams) {\n      warnOnce('AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column', 'colDef.pinnedRowCellRenderer-deprecated');\n    }\n\n    if (colDefAny.pinnedRowCellRendererFramework) {\n      warnOnce('AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column', 'colDef.pinnedRowCellRenderer-deprecated');\n    }\n\n    if (colDefAny.pinnedRowValueGetter) {\n      warnOnce('AG Grid: pinnedRowCellRenderer is deprecated, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue.', 'colDef.pinnedRowCellRenderer-deprecated');\n    }\n  };\n  /** Add an event listener to the column. */\n\n\n  Column.prototype.addEventListener = function (eventType, listener) {\n    this.eventService.addEventListener(eventType, listener);\n  };\n  /** Remove event listener from the column. */\n\n\n  Column.prototype.removeEventListener = function (eventType, listener) {\n    this.eventService.removeEventListener(eventType, listener);\n  };\n\n  Column.prototype.createColumnFunctionCallbackParams = function (rowNode) {\n    return {\n      node: rowNode,\n      data: rowNode.data,\n      column: this,\n      colDef: this.colDef,\n      context: this.gridOptionsWrapper.getContext(),\n      api: this.gridOptionsWrapper.getApi(),\n      columnApi: this.gridOptionsWrapper.getColumnApi()\n    };\n  };\n\n  Column.prototype.isSuppressNavigable = function (rowNode) {\n    // if boolean set, then just use it\n    if (typeof this.colDef.suppressNavigable === 'boolean') {\n      return this.colDef.suppressNavigable;\n    } // if function, then call the function to find out\n\n\n    if (typeof this.colDef.suppressNavigable === 'function') {\n      var params = this.createColumnFunctionCallbackParams(rowNode);\n      var userFunc = this.colDef.suppressNavigable;\n      return userFunc(params);\n    }\n\n    return false;\n  };\n\n  Column.prototype.isCellEditable = function (rowNode) {\n    // only allow editing of groups if the user has this option enabled\n    if (rowNode.group && !this.gridOptionsWrapper.isEnableGroupEdit()) {\n      return false;\n    }\n\n    return this.isColumnFunc(rowNode, this.colDef.editable);\n  };\n\n  Column.prototype.isSuppressFillHandle = function () {\n    return !!this.colDef.suppressFillHandle;\n  };\n\n  Column.prototype.isRowDrag = function (rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n  };\n\n  Column.prototype.isDndSource = function (rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.dndSource);\n  };\n\n  Column.prototype.isCellCheckboxSelection = function (rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n  };\n\n  Column.prototype.isSuppressPaste = function (rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n  };\n\n  Column.prototype.isResizable = function () {\n    return this.colDef.resizable === true;\n  };\n\n  Column.prototype.isColumnFunc = function (rowNode, value) {\n    // if boolean set, then just use it\n    if (typeof value === 'boolean') {\n      return value;\n    } // if function, then call the function to find out\n\n\n    if (typeof value === 'function') {\n      var params = this.createColumnFunctionCallbackParams(rowNode);\n      var editableFunc = value;\n      return editableFunc(params);\n    }\n\n    return false;\n  };\n\n  Column.prototype.setMoving = function (moving, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    this.moving = moving;\n    this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MOVING_CHANGED, source));\n  };\n\n  Column.prototype.createColumnEvent = function (type, source) {\n    return {\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      type: type,\n      column: this,\n      columns: [this],\n      source: source\n    };\n  };\n\n  Column.prototype.isMoving = function () {\n    return this.moving;\n  };\n  /** If sorting is active, returns the sort direction e.g. `'asc'` or `'desc'`. */\n\n\n  Column.prototype.getSort = function () {\n    return this.sort;\n  };\n\n  Column.prototype.setSort = function (sort, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.sort !== sort) {\n      this.sort = sort;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_SORT_CHANGED, source));\n    }\n  };\n\n  Column.prototype.setMenuVisible = function (visible, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.menuVisible !== visible) {\n      this.menuVisible = visible;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MENU_VISIBLE_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isMenuVisible = function () {\n    return this.menuVisible;\n  };\n\n  Column.prototype.isSortAscending = function () {\n    return this.sort === Constants.SORT_ASC;\n  };\n\n  Column.prototype.isSortDescending = function () {\n    return this.sort === Constants.SORT_DESC;\n  };\n\n  Column.prototype.isSortNone = function () {\n    return missing(this.sort);\n  };\n\n  Column.prototype.isSorting = function () {\n    return exists(this.sort);\n  };\n\n  Column.prototype.getSortIndex = function () {\n    return this.sortIndex;\n  };\n\n  Column.prototype.setSortIndex = function (sortOrder) {\n    this.sortIndex = sortOrder;\n  };\n\n  Column.prototype.setAggFunc = function (aggFunc) {\n    this.aggFunc = aggFunc;\n  };\n  /** If aggregation is set for the column, returns the aggregation function. */\n\n\n  Column.prototype.getAggFunc = function () {\n    return this.aggFunc;\n  };\n\n  Column.prototype.getLeft = function () {\n    return this.left;\n  };\n\n  Column.prototype.getOldLeft = function () {\n    return this.oldLeft;\n  };\n\n  Column.prototype.getRight = function () {\n    return this.left + this.actualWidth;\n  };\n\n  Column.prototype.setLeft = function (left, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    this.oldLeft = this.left;\n\n    if (this.left !== left) {\n      this.left = left;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LEFT_CHANGED, source));\n    }\n  };\n  /** Returns `true` if filter is active on the column. */\n\n\n  Column.prototype.isFilterActive = function () {\n    return this.filterActive;\n  }; // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n\n\n  Column.prototype.setFilterActive = function (active, source, additionalEventAttributes) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.filterActive !== active) {\n      this.filterActive = active;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FILTER_ACTIVE_CHANGED, source));\n    }\n\n    var filterChangedEvent = this.createColumnEvent(Column.EVENT_FILTER_CHANGED, source);\n\n    if (additionalEventAttributes) {\n      mergeDeep(filterChangedEvent, additionalEventAttributes);\n    }\n\n    this.eventService.dispatchEvent(filterChangedEvent);\n  };\n\n  Column.prototype.setPinned = function (pinned) {\n    if (pinned === true || pinned === Constants.PINNED_LEFT) {\n      this.pinned = Constants.PINNED_LEFT;\n    } else if (pinned === Constants.PINNED_RIGHT) {\n      this.pinned = Constants.PINNED_RIGHT;\n    } else {\n      this.pinned = null;\n    }\n  };\n\n  Column.prototype.setFirstRightPinned = function (firstRightPinned, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.firstRightPinned !== firstRightPinned) {\n      this.firstRightPinned = firstRightPinned;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FIRST_RIGHT_PINNED_CHANGED, source));\n    }\n  };\n\n  Column.prototype.setLastLeftPinned = function (lastLeftPinned, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.lastLeftPinned !== lastLeftPinned) {\n      this.lastLeftPinned = lastLeftPinned;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LAST_LEFT_PINNED_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isFirstRightPinned = function () {\n    return this.firstRightPinned;\n  };\n\n  Column.prototype.isLastLeftPinned = function () {\n    return this.lastLeftPinned;\n  };\n\n  Column.prototype.isPinned = function () {\n    return this.pinned === Constants.PINNED_LEFT || this.pinned === Constants.PINNED_RIGHT;\n  };\n\n  Column.prototype.isPinnedLeft = function () {\n    return this.pinned === Constants.PINNED_LEFT;\n  };\n\n  Column.prototype.isPinnedRight = function () {\n    return this.pinned === Constants.PINNED_RIGHT;\n  };\n\n  Column.prototype.getPinned = function () {\n    return this.pinned;\n  };\n\n  Column.prototype.setVisible = function (visible, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    var newValue = visible === true;\n\n    if (this.visible !== newValue) {\n      this.visible = newValue;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VISIBLE_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isVisible = function () {\n    return this.visible;\n  };\n  /** Returns the column definition for this column.\n   * The column definition will be the result of merging the application provided column definition with any provided defaults\n   * (e.g. `defaultColDef` grid option, or column types.\n   *\n   * Equivalent: `getDefinition` */\n\n\n  Column.prototype.getColDef = function () {\n    return this.colDef;\n  };\n\n  Column.prototype.getColumnGroupShow = function () {\n    return this.colDef.columnGroupShow;\n  };\n  /**\n   * Returns the unique ID for the column.\n   *\n   * Equivalent: `getId`, `getUniqueId` */\n\n\n  Column.prototype.getColId = function () {\n    return this.colId;\n  };\n  /**\n   * Returns the unique ID for the column.\n   *\n   * Equivalent: `getColId`, `getUniqueId` */\n\n\n  Column.prototype.getId = function () {\n    return this.getColId();\n  };\n  /**\n   * Returns the unique ID for the column.\n   *\n   * Equivalent: `getColId`, `getId` */\n\n\n  Column.prototype.getUniqueId = function () {\n    return this.getId();\n  };\n\n  Column.prototype.getDefinition = function () {\n    return this.colDef;\n  };\n  /** Returns the current width of the column. If the column is resized, the actual width is the new size. */\n\n\n  Column.prototype.getActualWidth = function () {\n    return this.actualWidth;\n  };\n\n  Column.prototype.createBaseColDefParams = function (rowNode) {\n    var params = {\n      node: rowNode,\n      data: rowNode.data,\n      colDef: this.colDef,\n      column: this,\n      api: this.gridOptionsWrapper.getApi(),\n      columnApi: this.gridOptionsWrapper.getColumnApi(),\n      context: this.gridOptionsWrapper.getContext()\n    };\n    return params;\n  };\n\n  Column.prototype.getColSpan = function (rowNode) {\n    if (missing(this.colDef.colSpan)) {\n      return 1;\n    }\n\n    var params = this.createBaseColDefParams(rowNode);\n    var colSpan = this.colDef.colSpan(params); // colSpan must be number equal to or greater than 1\n\n    return Math.max(colSpan, 1);\n  };\n\n  Column.prototype.getRowSpan = function (rowNode) {\n    if (missing(this.colDef.rowSpan)) {\n      return 1;\n    }\n\n    var params = this.createBaseColDefParams(rowNode);\n    var rowSpan = this.colDef.rowSpan(params); // rowSpan must be number equal to or greater than 1\n\n    return Math.max(rowSpan, 1);\n  };\n\n  Column.prototype.setActualWidth = function (actualWidth, source, silent) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (silent === void 0) {\n      silent = false;\n    }\n\n    if (this.minWidth != null) {\n      actualWidth = Math.max(actualWidth, this.minWidth);\n    }\n\n    if (this.maxWidth != null) {\n      actualWidth = Math.min(actualWidth, this.maxWidth);\n    }\n\n    if (this.actualWidth !== actualWidth) {\n      // disable flex for this column if it was manually resized.\n      this.actualWidth = actualWidth;\n\n      if (this.flex && source !== 'flex' && source !== 'gridInitializing') {\n        this.flex = null;\n      }\n\n      if (!silent) {\n        this.fireColumnWidthChangedEvent(source);\n      }\n    }\n  };\n\n  Column.prototype.fireColumnWidthChangedEvent = function (source) {\n    this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_WIDTH_CHANGED, source));\n  };\n\n  Column.prototype.isGreaterThanMax = function (width) {\n    if (this.maxWidth != null) {\n      return width > this.maxWidth;\n    }\n\n    return false;\n  };\n\n  Column.prototype.getMinWidth = function () {\n    return this.minWidth;\n  };\n\n  Column.prototype.getMaxWidth = function () {\n    return this.maxWidth;\n  };\n\n  Column.prototype.getFlex = function () {\n    return this.flex || 0;\n  }; // this method should only be used by the columnModel to\n  // change flex when required by the setColumnState method.\n\n\n  Column.prototype.setFlex = function (flex) {\n    if (this.flex !== flex) {\n      this.flex = flex;\n    }\n  };\n\n  Column.prototype.setMinimum = function (source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (exists(this.minWidth)) {\n      this.setActualWidth(this.minWidth, source);\n    }\n  };\n\n  Column.prototype.setRowGroupActive = function (rowGroup, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.rowGroupActive !== rowGroup) {\n      this.rowGroupActive = rowGroup;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_ROW_GROUP_CHANGED, source));\n    }\n  };\n  /** Returns `true` if row group is currently active for this column. */\n\n\n  Column.prototype.isRowGroupActive = function () {\n    return this.rowGroupActive;\n  };\n\n  Column.prototype.setPivotActive = function (pivot, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.pivotActive !== pivot) {\n      this.pivotActive = pivot;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_PIVOT_CHANGED, source));\n    }\n  };\n  /** Returns `true` if pivot is currently active for this column. */\n\n\n  Column.prototype.isPivotActive = function () {\n    return this.pivotActive;\n  };\n\n  Column.prototype.isAnyFunctionActive = function () {\n    return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n  };\n\n  Column.prototype.isAnyFunctionAllowed = function () {\n    return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n  };\n\n  Column.prototype.setValueActive = function (value, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.aggregationActive !== value) {\n      this.aggregationActive = value;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VALUE_CHANGED, source));\n    }\n  };\n  /** Returns `true` if value (aggregation) is currently active for this column. */\n\n\n  Column.prototype.isValueActive = function () {\n    return this.aggregationActive;\n  };\n\n  Column.prototype.isAllowPivot = function () {\n    return this.colDef.enablePivot === true;\n  };\n\n  Column.prototype.isAllowValue = function () {\n    return this.colDef.enableValue === true;\n  };\n\n  Column.prototype.isAllowRowGroup = function () {\n    return this.colDef.enableRowGroup === true;\n  };\n\n  Column.prototype.getMenuTabs = function (defaultValues) {\n    var menuTabs = this.getColDef().menuTabs;\n\n    if (menuTabs == null) {\n      menuTabs = defaultValues;\n    }\n\n    return menuTabs;\n  }; // this used to be needed, as previous version of ag-grid had lockPosition as column state,\n  // so couldn't depend on colDef version.\n\n\n  Column.prototype.isLockPosition = function () {\n    console.warn('AG Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead.');\n    return this.colDef ? !!this.colDef.lockPosition : false;\n  }; // this used to be needed, as previous version of ag-grid had lockVisible as column state,\n  // so couldn't depend on colDef version.\n\n\n  Column.prototype.isLockVisible = function () {\n    console.warn('AG Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead.');\n    return this.colDef ? !!this.colDef.lockVisible : false;\n  }; // this used to be needed, as previous version of ag-grid had lockPinned as column state,\n  // so couldn't depend on colDef version.\n\n\n  Column.prototype.isLockPinned = function () {\n    console.warn('AG Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead.');\n    return this.colDef ? !!this.colDef.lockPinned : false;\n  }; // + renderedHeaderCell - for making header cell transparent when moving\n\n\n  Column.EVENT_MOVING_CHANGED = 'movingChanged'; // + renderedCell - changing left position\n\n  Column.EVENT_LEFT_CHANGED = 'leftChanged'; // + renderedCell - changing width\n\n  Column.EVENT_WIDTH_CHANGED = 'widthChanged'; // + renderedCell - for changing pinned classes\n\n  Column.EVENT_LAST_LEFT_PINNED_CHANGED = 'lastLeftPinnedChanged';\n  Column.EVENT_FIRST_RIGHT_PINNED_CHANGED = 'firstRightPinnedChanged'; // + renderedColumn - for changing visibility icon\n\n  Column.EVENT_VISIBLE_CHANGED = 'visibleChanged'; // + every time the filter changes, used in the floating filters\n\n  Column.EVENT_FILTER_CHANGED = 'filterChanged'; // + renderedHeaderCell - marks the header with filter icon\n\n  Column.EVENT_FILTER_ACTIVE_CHANGED = 'filterActiveChanged'; // + renderedHeaderCell - marks the header with sort icon\n\n  Column.EVENT_SORT_CHANGED = 'sortChanged';\n  Column.EVENT_MENU_VISIBLE_CHANGED = 'menuVisibleChanged'; // + toolpanel, for gui updates\n\n  Column.EVENT_ROW_GROUP_CHANGED = 'columnRowGroupChanged'; // + toolpanel, for gui updates\n\n  Column.EVENT_PIVOT_CHANGED = 'columnPivotChanged'; // + toolpanel, for gui updates\n\n  Column.EVENT_VALUE_CHANGED = 'columnValueChanged';\n\n  __decorate([Autowired('gridOptionsWrapper')], Column.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('columnUtils')], Column.prototype, \"columnUtils\", void 0);\n\n  __decorate([Autowired('columnApi')], Column.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], Column.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('context')], Column.prototype, \"context\", void 0);\n\n  __decorate([PostConstruct], Column.prototype, \"initialise\", null);\n\n  return Column;\n}();\n\nexport { Column };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/entities/column.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","EventService","Autowired","PostConstruct","Constants","ModuleNames","ModuleRegistry","attrToNumber","attrToBoolean","exists","missing","doOnce","mergeDeep","instanceIdSequence","Column","colDef","userProvidedColDef","colId","primary","instanceId","moving","menuVisible","filterActive","eventService","rowGroupActive","pivotActive","aggregationActive","setState","prototype","getInstanceId","sort","undefined","SORT_ASC","SORT_DESC","initialSort","sortIndex","initialSortIndex","hide","initialHide","visible","pinned","setPinned","initialPinned","flex","initialFlex","setColDef","initMinAndMaxWidths","initDotNotation","getUserProvidedColDef","setParent","parent","getParent","setOriginalParent","originalParent","getOriginalParent","initialise","resetActualWidth","validate","suppressDotNotation","gridOptionsWrapper","isSuppressFieldDotNotation","fieldContainsDots","field","indexOf","tooltipFieldContainsDots","tooltipField","minWidth","columnUtils","calculateColMinWidth","maxWidth","calculateColMaxWidth","source","initialWidth","calculateColInitialWidth","setActualWidth","isEmptyGroup","isRowGroupDisplayed","showRowGroup","showingAllGroups","showingThisGroup","isPrimary","isFilterAllowed","filterDefined","filter","filterFramework","isFieldContainsDots","isTooltipFieldContainsDots","colDefAny","warnOnce","msg","obj","console","warn","usingCSRM","isRowModelDefault","isRegistered","RowGroupingModule","rowGroupingItems","forEach","item","isPackageBased","RichSelectModule","cellEditor","isTreeData","itemsNotAllowedWithTreeData","width","pinnedRowCellRenderer","pinnedRowCellRendererParams","pinnedRowCellRendererFramework","pinnedRowValueGetter","addEventListener","eventType","listener","removeEventListener","createColumnFunctionCallbackParams","rowNode","node","data","column","context","getContext","api","getApi","columnApi","getColumnApi","isSuppressNavigable","suppressNavigable","params","userFunc","isCellEditable","group","isEnableGroupEdit","isColumnFunc","editable","isSuppressFillHandle","suppressFillHandle","isRowDrag","rowDrag","isDndSource","dndSource","isCellCheckboxSelection","checkboxSelection","isSuppressPaste","suppressPaste","isResizable","resizable","value","editableFunc","setMoving","dispatchEvent","createColumnEvent","EVENT_MOVING_CHANGED","type","gridApi","columns","isMoving","getSort","setSort","EVENT_SORT_CHANGED","setMenuVisible","EVENT_MENU_VISIBLE_CHANGED","isMenuVisible","isSortAscending","isSortDescending","isSortNone","isSorting","getSortIndex","setSortIndex","sortOrder","setAggFunc","aggFunc","getAggFunc","getLeft","left","getOldLeft","oldLeft","getRight","actualWidth","setLeft","EVENT_LEFT_CHANGED","isFilterActive","setFilterActive","active","additionalEventAttributes","EVENT_FILTER_ACTIVE_CHANGED","filterChangedEvent","EVENT_FILTER_CHANGED","PINNED_LEFT","PINNED_RIGHT","setFirstRightPinned","firstRightPinned","EVENT_FIRST_RIGHT_PINNED_CHANGED","setLastLeftPinned","lastLeftPinned","EVENT_LAST_LEFT_PINNED_CHANGED","isFirstRightPinned","isLastLeftPinned","isPinned","isPinnedLeft","isPinnedRight","getPinned","setVisible","newValue","EVENT_VISIBLE_CHANGED","isVisible","getColDef","getColumnGroupShow","columnGroupShow","getColId","getId","getUniqueId","getDefinition","getActualWidth","createBaseColDefParams","getColSpan","colSpan","Math","max","getRowSpan","rowSpan","silent","min","fireColumnWidthChangedEvent","EVENT_WIDTH_CHANGED","isGreaterThanMax","getMinWidth","getMaxWidth","getFlex","setFlex","setMinimum","setRowGroupActive","rowGroup","EVENT_ROW_GROUP_CHANGED","isRowGroupActive","setPivotActive","pivot","EVENT_PIVOT_CHANGED","isPivotActive","isAnyFunctionActive","isValueActive","isAnyFunctionAllowed","isAllowPivot","isAllowRowGroup","isAllowValue","setValueActive","EVENT_VALUE_CHANGED","enablePivot","enableValue","enableRowGroup","getMenuTabs","defaultValues","menuTabs","isLockPosition","lockPosition","isLockVisible","lockVisible","isLockPinned","lockPinned"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { EventService } from \"../eventService\";\nimport { Autowired, PostConstruct } from \"../context/context\";\nimport { Constants } from \"../constants/constants\";\nimport { ModuleNames } from \"../modules/moduleNames\";\nimport { ModuleRegistry } from \"../modules/moduleRegistry\";\nimport { attrToNumber, attrToBoolean, exists, missing } from \"../utils/generic\";\nimport { doOnce } from \"../utils/function\";\nimport { mergeDeep } from \"../utils/object\";\nvar instanceIdSequence = 0;\n// Wrapper around a user provide column definition. The grid treats the column definition as ready only.\n// This class contains all the runtime information about a column, plus some logic (the definition has no logic).\n// This class implements both interfaces ColumnGroupChild and OriginalColumnGroupChild as the class can\n// appear as a child of either the original tree or the displayed tree. However the relevant group classes\n// for each type only implements one, as each group can only appear in it's associated tree (eg OriginalColumnGroup\n// can only appear in OriginalColumn tree).\nvar Column = /** @class */ (function () {\n    function Column(colDef, userProvidedColDef, colId, primary) {\n        // used by React (and possibly other frameworks) as key for rendering\n        this.instanceId = instanceIdSequence++;\n        this.moving = false;\n        this.menuVisible = false;\n        this.filterActive = false;\n        this.eventService = new EventService();\n        this.rowGroupActive = false;\n        this.pivotActive = false;\n        this.aggregationActive = false;\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n        this.colId = colId;\n        this.primary = primary;\n        this.setState(colDef);\n    }\n    Column.prototype.getInstanceId = function () {\n        return this.instanceId;\n    };\n    Column.prototype.setState = function (colDef) {\n        // sort\n        if (colDef.sort !== undefined) {\n            if (colDef.sort === Constants.SORT_ASC || colDef.sort === Constants.SORT_DESC) {\n                this.sort = colDef.sort;\n            }\n        }\n        else {\n            if (colDef.initialSort === Constants.SORT_ASC || colDef.initialSort === Constants.SORT_DESC) {\n                this.sort = colDef.initialSort;\n            }\n        }\n        // sortIndex\n        var sortIndex = attrToNumber(colDef.sortIndex);\n        var initialSortIndex = attrToNumber(colDef.initialSortIndex);\n        if (sortIndex !== undefined) {\n            if (sortIndex !== null) {\n                this.sortIndex = sortIndex;\n            }\n        }\n        else {\n            if (initialSortIndex !== null) {\n                this.sortIndex = initialSortIndex;\n            }\n        }\n        // hide\n        var hide = attrToBoolean(colDef.hide);\n        var initialHide = attrToBoolean(colDef.initialHide);\n        if (hide !== undefined) {\n            this.visible = !hide;\n        }\n        else {\n            this.visible = !initialHide;\n        }\n        // pinned\n        if (colDef.pinned !== undefined) {\n            this.setPinned(colDef.pinned);\n        }\n        else {\n            this.setPinned(colDef.initialPinned);\n        }\n        // flex\n        var flex = attrToNumber(colDef.flex);\n        var initialFlex = attrToNumber(colDef.initialFlex);\n        if (flex !== undefined) {\n            this.flex = flex;\n        }\n        else if (initialFlex !== undefined) {\n            this.flex = initialFlex;\n        }\n    };\n    // gets called when user provides an alternative colDef, eg\n    Column.prototype.setColDef = function (colDef, userProvidedColDef) {\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n        this.initMinAndMaxWidths();\n        this.initDotNotation();\n    };\n    /**\n     * Returns the column definition provided by the application.\n     * This may not be correct, as items can be superseded by default column options.\n     * However it's useful for comparison, eg to know which application column definition matches that column.\n     */\n    Column.prototype.getUserProvidedColDef = function () {\n        return this.userProvidedColDef;\n    };\n    Column.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    /** Returns the parent column group, if column grouping is active. */\n    Column.prototype.getParent = function () {\n        return this.parent;\n    };\n    Column.prototype.setOriginalParent = function (originalParent) {\n        this.originalParent = originalParent;\n    };\n    Column.prototype.getOriginalParent = function () {\n        return this.originalParent;\n    };\n    // this is done after constructor as it uses gridOptionsWrapper\n    Column.prototype.initialise = function () {\n        this.initMinAndMaxWidths();\n        this.resetActualWidth('gridInitializing');\n        this.initDotNotation();\n        this.validate();\n    };\n    Column.prototype.initDotNotation = function () {\n        var suppressDotNotation = this.gridOptionsWrapper.isSuppressFieldDotNotation();\n        this.fieldContainsDots = exists(this.colDef.field) && this.colDef.field.indexOf('.') >= 0 && !suppressDotNotation;\n        this.tooltipFieldContainsDots = exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf('.') >= 0 && !suppressDotNotation;\n    };\n    Column.prototype.initMinAndMaxWidths = function () {\n        var colDef = this.colDef;\n        this.minWidth = this.columnUtils.calculateColMinWidth(colDef);\n        this.maxWidth = this.columnUtils.calculateColMaxWidth(colDef);\n    };\n    Column.prototype.resetActualWidth = function (source) {\n        if (source === void 0) { source = 'api'; }\n        var initialWidth = this.columnUtils.calculateColInitialWidth(this.colDef);\n        this.setActualWidth(initialWidth, source, true);\n    };\n    Column.prototype.isEmptyGroup = function () {\n        return false;\n    };\n    Column.prototype.isRowGroupDisplayed = function (colId) {\n        if (missing(this.colDef) || missing(this.colDef.showRowGroup)) {\n            return false;\n        }\n        var showingAllGroups = this.colDef.showRowGroup === true;\n        var showingThisGroup = this.colDef.showRowGroup === colId;\n        return showingAllGroups || showingThisGroup;\n    };\n    /** Returns `true` if column is a primary column, `false` if secondary. Secondary columns are used for pivoting. */\n    Column.prototype.isPrimary = function () {\n        return this.primary;\n    };\n    /** Returns `true` if column filtering is allowed. */\n    Column.prototype.isFilterAllowed = function () {\n        // filter defined means it's a string, class or true.\n        // if its false, null or undefined then it's false.\n        var filterDefined = !!this.colDef.filter || !!this.colDef.filterFramework;\n        return this.primary && filterDefined;\n    };\n    Column.prototype.isFieldContainsDots = function () {\n        return this.fieldContainsDots;\n    };\n    Column.prototype.isTooltipFieldContainsDots = function () {\n        return this.tooltipFieldContainsDots;\n    };\n    Column.prototype.validate = function () {\n        var colDefAny = this.colDef;\n        function warnOnce(msg, key, obj) {\n            doOnce(function () {\n                if (obj) {\n                    console.warn(msg, obj);\n                }\n                else {\n                    doOnce(function () { return console.warn(msg); }, key);\n                }\n            }, key);\n        }\n        var usingCSRM = this.gridOptionsWrapper.isRowModelDefault();\n        if (usingCSRM && !ModuleRegistry.isRegistered(ModuleNames.RowGroupingModule)) {\n            var rowGroupingItems = ['enableRowGroup', 'rowGroup', 'rowGroupIndex', 'enablePivot', 'enableValue', 'pivot', 'pivotIndex', 'aggFunc'];\n            rowGroupingItems.forEach(function (item) {\n                if (exists(colDefAny[item])) {\n                    if (ModuleRegistry.isPackageBased()) {\n                        warnOnce(\"AG Grid: \" + item + \" is only valid in ag-grid-enterprise, your column definition should not have \" + item, 'ColumnRowGroupingMissing' + item);\n                    }\n                    else {\n                        warnOnce(\"AG Grid: \" + item + \" is only valid with AG Grid Enterprise Module \" + ModuleNames.RowGroupingModule + \" - your column definition should not have \" + item, 'ColumnRowGroupingMissing' + item);\n                    }\n                }\n            });\n        }\n        if (!ModuleRegistry.isRegistered(ModuleNames.RichSelectModule)) {\n            if (this.colDef.cellEditor === 'agRichSelect') {\n                if (ModuleRegistry.isPackageBased()) {\n                    warnOnce(\"AG Grid: \" + this.colDef.cellEditor + \" can only be used with ag-grid-enterprise\", 'ColumnRichSelectMissing');\n                }\n                else {\n                    warnOnce(\"AG Grid: \" + this.colDef.cellEditor + \" can only be used with AG Grid Enterprise Module \" + ModuleNames.RichSelectModule, 'ColumnRichSelectMissing');\n                }\n            }\n        }\n        if (this.gridOptionsWrapper.isTreeData()) {\n            var itemsNotAllowedWithTreeData = ['rowGroup', 'rowGroupIndex', 'pivot', 'pivotIndex'];\n            itemsNotAllowedWithTreeData.forEach(function (item) {\n                if (exists(colDefAny[item])) {\n                    warnOnce(\"AG Grid: \" + item + \" is not possible when doing tree data, your column definition should not have \" + item, 'TreeDataCannotRowGroup');\n                }\n            });\n        }\n        if (exists(this.colDef.width) && typeof this.colDef.width !== 'number') {\n            warnOnce('AG Grid: colDef.width should be a number, not ' + typeof this.colDef.width, 'ColumnCheck_asdfawef');\n        }\n        if (colDefAny.pinnedRowCellRenderer) {\n            warnOnce('AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column', 'colDef.pinnedRowCellRenderer-deprecated');\n        }\n        if (colDefAny.pinnedRowCellRendererParams) {\n            warnOnce('AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column', 'colDef.pinnedRowCellRenderer-deprecated');\n        }\n        if (colDefAny.pinnedRowCellRendererFramework) {\n            warnOnce('AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column', 'colDef.pinnedRowCellRenderer-deprecated');\n        }\n        if (colDefAny.pinnedRowValueGetter) {\n            warnOnce('AG Grid: pinnedRowCellRenderer is deprecated, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue.', 'colDef.pinnedRowCellRenderer-deprecated');\n        }\n    };\n    /** Add an event listener to the column. */\n    Column.prototype.addEventListener = function (eventType, listener) {\n        this.eventService.addEventListener(eventType, listener);\n    };\n    /** Remove event listener from the column. */\n    Column.prototype.removeEventListener = function (eventType, listener) {\n        this.eventService.removeEventListener(eventType, listener);\n    };\n    Column.prototype.createColumnFunctionCallbackParams = function (rowNode) {\n        return {\n            node: rowNode,\n            data: rowNode.data,\n            column: this,\n            colDef: this.colDef,\n            context: this.gridOptionsWrapper.getContext(),\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi()\n        };\n    };\n    Column.prototype.isSuppressNavigable = function (rowNode) {\n        // if boolean set, then just use it\n        if (typeof this.colDef.suppressNavigable === 'boolean') {\n            return this.colDef.suppressNavigable;\n        }\n        // if function, then call the function to find out\n        if (typeof this.colDef.suppressNavigable === 'function') {\n            var params = this.createColumnFunctionCallbackParams(rowNode);\n            var userFunc = this.colDef.suppressNavigable;\n            return userFunc(params);\n        }\n        return false;\n    };\n    Column.prototype.isCellEditable = function (rowNode) {\n        // only allow editing of groups if the user has this option enabled\n        if (rowNode.group && !this.gridOptionsWrapper.isEnableGroupEdit()) {\n            return false;\n        }\n        return this.isColumnFunc(rowNode, this.colDef.editable);\n    };\n    Column.prototype.isSuppressFillHandle = function () {\n        return !!this.colDef.suppressFillHandle;\n    };\n    Column.prototype.isRowDrag = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n    };\n    Column.prototype.isDndSource = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.dndSource);\n    };\n    Column.prototype.isCellCheckboxSelection = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n    };\n    Column.prototype.isSuppressPaste = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n    };\n    Column.prototype.isResizable = function () {\n        return this.colDef.resizable === true;\n    };\n    Column.prototype.isColumnFunc = function (rowNode, value) {\n        // if boolean set, then just use it\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        // if function, then call the function to find out\n        if (typeof value === 'function') {\n            var params = this.createColumnFunctionCallbackParams(rowNode);\n            var editableFunc = value;\n            return editableFunc(params);\n        }\n        return false;\n    };\n    Column.prototype.setMoving = function (moving, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.moving = moving;\n        this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MOVING_CHANGED, source));\n    };\n    Column.prototype.createColumnEvent = function (type, source) {\n        return {\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            type: type,\n            column: this,\n            columns: [this],\n            source: source\n        };\n    };\n    Column.prototype.isMoving = function () {\n        return this.moving;\n    };\n    /** If sorting is active, returns the sort direction e.g. `'asc'` or `'desc'`. */\n    Column.prototype.getSort = function () {\n        return this.sort;\n    };\n    Column.prototype.setSort = function (sort, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.sort !== sort) {\n            this.sort = sort;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_SORT_CHANGED, source));\n        }\n    };\n    Column.prototype.setMenuVisible = function (visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.menuVisible !== visible) {\n            this.menuVisible = visible;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MENU_VISIBLE_CHANGED, source));\n        }\n    };\n    Column.prototype.isMenuVisible = function () {\n        return this.menuVisible;\n    };\n    Column.prototype.isSortAscending = function () {\n        return this.sort === Constants.SORT_ASC;\n    };\n    Column.prototype.isSortDescending = function () {\n        return this.sort === Constants.SORT_DESC;\n    };\n    Column.prototype.isSortNone = function () {\n        return missing(this.sort);\n    };\n    Column.prototype.isSorting = function () {\n        return exists(this.sort);\n    };\n    Column.prototype.getSortIndex = function () {\n        return this.sortIndex;\n    };\n    Column.prototype.setSortIndex = function (sortOrder) {\n        this.sortIndex = sortOrder;\n    };\n    Column.prototype.setAggFunc = function (aggFunc) {\n        this.aggFunc = aggFunc;\n    };\n    /** If aggregation is set for the column, returns the aggregation function. */\n    Column.prototype.getAggFunc = function () {\n        return this.aggFunc;\n    };\n    Column.prototype.getLeft = function () {\n        return this.left;\n    };\n    Column.prototype.getOldLeft = function () {\n        return this.oldLeft;\n    };\n    Column.prototype.getRight = function () {\n        return this.left + this.actualWidth;\n    };\n    Column.prototype.setLeft = function (left, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.oldLeft = this.left;\n        if (this.left !== left) {\n            this.left = left;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LEFT_CHANGED, source));\n        }\n    };\n    /** Returns `true` if filter is active on the column. */\n    Column.prototype.isFilterActive = function () {\n        return this.filterActive;\n    };\n    // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n    Column.prototype.setFilterActive = function (active, source, additionalEventAttributes) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.filterActive !== active) {\n            this.filterActive = active;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FILTER_ACTIVE_CHANGED, source));\n        }\n        var filterChangedEvent = this.createColumnEvent(Column.EVENT_FILTER_CHANGED, source);\n        if (additionalEventAttributes) {\n            mergeDeep(filterChangedEvent, additionalEventAttributes);\n        }\n        this.eventService.dispatchEvent(filterChangedEvent);\n    };\n    Column.prototype.setPinned = function (pinned) {\n        if (pinned === true || pinned === Constants.PINNED_LEFT) {\n            this.pinned = Constants.PINNED_LEFT;\n        }\n        else if (pinned === Constants.PINNED_RIGHT) {\n            this.pinned = Constants.PINNED_RIGHT;\n        }\n        else {\n            this.pinned = null;\n        }\n    };\n    Column.prototype.setFirstRightPinned = function (firstRightPinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.firstRightPinned !== firstRightPinned) {\n            this.firstRightPinned = firstRightPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FIRST_RIGHT_PINNED_CHANGED, source));\n        }\n    };\n    Column.prototype.setLastLeftPinned = function (lastLeftPinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.lastLeftPinned !== lastLeftPinned) {\n            this.lastLeftPinned = lastLeftPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LAST_LEFT_PINNED_CHANGED, source));\n        }\n    };\n    Column.prototype.isFirstRightPinned = function () {\n        return this.firstRightPinned;\n    };\n    Column.prototype.isLastLeftPinned = function () {\n        return this.lastLeftPinned;\n    };\n    Column.prototype.isPinned = function () {\n        return this.pinned === Constants.PINNED_LEFT || this.pinned === Constants.PINNED_RIGHT;\n    };\n    Column.prototype.isPinnedLeft = function () {\n        return this.pinned === Constants.PINNED_LEFT;\n    };\n    Column.prototype.isPinnedRight = function () {\n        return this.pinned === Constants.PINNED_RIGHT;\n    };\n    Column.prototype.getPinned = function () {\n        return this.pinned;\n    };\n    Column.prototype.setVisible = function (visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        var newValue = visible === true;\n        if (this.visible !== newValue) {\n            this.visible = newValue;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VISIBLE_CHANGED, source));\n        }\n    };\n    Column.prototype.isVisible = function () {\n        return this.visible;\n    };\n    /** Returns the column definition for this column.\n     * The column definition will be the result of merging the application provided column definition with any provided defaults\n     * (e.g. `defaultColDef` grid option, or column types.\n     *\n     * Equivalent: `getDefinition` */\n    Column.prototype.getColDef = function () {\n        return this.colDef;\n    };\n    Column.prototype.getColumnGroupShow = function () {\n        return this.colDef.columnGroupShow;\n    };\n    /**\n     * Returns the unique ID for the column.\n     *\n     * Equivalent: `getId`, `getUniqueId` */\n    Column.prototype.getColId = function () {\n        return this.colId;\n    };\n    /**\n     * Returns the unique ID for the column.\n     *\n     * Equivalent: `getColId`, `getUniqueId` */\n    Column.prototype.getId = function () {\n        return this.getColId();\n    };\n    /**\n     * Returns the unique ID for the column.\n     *\n     * Equivalent: `getColId`, `getId` */\n    Column.prototype.getUniqueId = function () {\n        return this.getId();\n    };\n    Column.prototype.getDefinition = function () {\n        return this.colDef;\n    };\n    /** Returns the current width of the column. If the column is resized, the actual width is the new size. */\n    Column.prototype.getActualWidth = function () {\n        return this.actualWidth;\n    };\n    Column.prototype.createBaseColDefParams = function (rowNode) {\n        var params = {\n            node: rowNode,\n            data: rowNode.data,\n            colDef: this.colDef,\n            column: this,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            context: this.gridOptionsWrapper.getContext()\n        };\n        return params;\n    };\n    Column.prototype.getColSpan = function (rowNode) {\n        if (missing(this.colDef.colSpan)) {\n            return 1;\n        }\n        var params = this.createBaseColDefParams(rowNode);\n        var colSpan = this.colDef.colSpan(params);\n        // colSpan must be number equal to or greater than 1\n        return Math.max(colSpan, 1);\n    };\n    Column.prototype.getRowSpan = function (rowNode) {\n        if (missing(this.colDef.rowSpan)) {\n            return 1;\n        }\n        var params = this.createBaseColDefParams(rowNode);\n        var rowSpan = this.colDef.rowSpan(params);\n        // rowSpan must be number equal to or greater than 1\n        return Math.max(rowSpan, 1);\n    };\n    Column.prototype.setActualWidth = function (actualWidth, source, silent) {\n        if (source === void 0) { source = \"api\"; }\n        if (silent === void 0) { silent = false; }\n        if (this.minWidth != null) {\n            actualWidth = Math.max(actualWidth, this.minWidth);\n        }\n        if (this.maxWidth != null) {\n            actualWidth = Math.min(actualWidth, this.maxWidth);\n        }\n        if (this.actualWidth !== actualWidth) {\n            // disable flex for this column if it was manually resized.\n            this.actualWidth = actualWidth;\n            if (this.flex && source !== 'flex' && source !== 'gridInitializing') {\n                this.flex = null;\n            }\n            if (!silent) {\n                this.fireColumnWidthChangedEvent(source);\n            }\n        }\n    };\n    Column.prototype.fireColumnWidthChangedEvent = function (source) {\n        this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_WIDTH_CHANGED, source));\n    };\n    Column.prototype.isGreaterThanMax = function (width) {\n        if (this.maxWidth != null) {\n            return width > this.maxWidth;\n        }\n        return false;\n    };\n    Column.prototype.getMinWidth = function () {\n        return this.minWidth;\n    };\n    Column.prototype.getMaxWidth = function () {\n        return this.maxWidth;\n    };\n    Column.prototype.getFlex = function () {\n        return this.flex || 0;\n    };\n    // this method should only be used by the columnModel to\n    // change flex when required by the setColumnState method.\n    Column.prototype.setFlex = function (flex) {\n        if (this.flex !== flex) {\n            this.flex = flex;\n        }\n    };\n    Column.prototype.setMinimum = function (source) {\n        if (source === void 0) { source = \"api\"; }\n        if (exists(this.minWidth)) {\n            this.setActualWidth(this.minWidth, source);\n        }\n    };\n    Column.prototype.setRowGroupActive = function (rowGroup, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.rowGroupActive !== rowGroup) {\n            this.rowGroupActive = rowGroup;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_ROW_GROUP_CHANGED, source));\n        }\n    };\n    /** Returns `true` if row group is currently active for this column. */\n    Column.prototype.isRowGroupActive = function () {\n        return this.rowGroupActive;\n    };\n    Column.prototype.setPivotActive = function (pivot, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.pivotActive !== pivot) {\n            this.pivotActive = pivot;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_PIVOT_CHANGED, source));\n        }\n    };\n    /** Returns `true` if pivot is currently active for this column. */\n    Column.prototype.isPivotActive = function () {\n        return this.pivotActive;\n    };\n    Column.prototype.isAnyFunctionActive = function () {\n        return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n    };\n    Column.prototype.isAnyFunctionAllowed = function () {\n        return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n    };\n    Column.prototype.setValueActive = function (value, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.aggregationActive !== value) {\n            this.aggregationActive = value;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VALUE_CHANGED, source));\n        }\n    };\n    /** Returns `true` if value (aggregation) is currently active for this column. */\n    Column.prototype.isValueActive = function () {\n        return this.aggregationActive;\n    };\n    Column.prototype.isAllowPivot = function () {\n        return this.colDef.enablePivot === true;\n    };\n    Column.prototype.isAllowValue = function () {\n        return this.colDef.enableValue === true;\n    };\n    Column.prototype.isAllowRowGroup = function () {\n        return this.colDef.enableRowGroup === true;\n    };\n    Column.prototype.getMenuTabs = function (defaultValues) {\n        var menuTabs = this.getColDef().menuTabs;\n        if (menuTabs == null) {\n            menuTabs = defaultValues;\n        }\n        return menuTabs;\n    };\n    // this used to be needed, as previous version of ag-grid had lockPosition as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockPosition = function () {\n        console.warn('AG Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead.');\n        return this.colDef ? !!this.colDef.lockPosition : false;\n    };\n    // this used to be needed, as previous version of ag-grid had lockVisible as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockVisible = function () {\n        console.warn('AG Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead.');\n        return this.colDef ? !!this.colDef.lockVisible : false;\n    };\n    // this used to be needed, as previous version of ag-grid had lockPinned as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockPinned = function () {\n        console.warn('AG Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead.');\n        return this.colDef ? !!this.colDef.lockPinned : false;\n    };\n    // + renderedHeaderCell - for making header cell transparent when moving\n    Column.EVENT_MOVING_CHANGED = 'movingChanged';\n    // + renderedCell - changing left position\n    Column.EVENT_LEFT_CHANGED = 'leftChanged';\n    // + renderedCell - changing width\n    Column.EVENT_WIDTH_CHANGED = 'widthChanged';\n    // + renderedCell - for changing pinned classes\n    Column.EVENT_LAST_LEFT_PINNED_CHANGED = 'lastLeftPinnedChanged';\n    Column.EVENT_FIRST_RIGHT_PINNED_CHANGED = 'firstRightPinnedChanged';\n    // + renderedColumn - for changing visibility icon\n    Column.EVENT_VISIBLE_CHANGED = 'visibleChanged';\n    // + every time the filter changes, used in the floating filters\n    Column.EVENT_FILTER_CHANGED = 'filterChanged';\n    // + renderedHeaderCell - marks the header with filter icon\n    Column.EVENT_FILTER_ACTIVE_CHANGED = 'filterActiveChanged';\n    // + renderedHeaderCell - marks the header with sort icon\n    Column.EVENT_SORT_CHANGED = 'sortChanged';\n    Column.EVENT_MENU_VISIBLE_CHANGED = 'menuVisibleChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_ROW_GROUP_CHANGED = 'columnRowGroupChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_PIVOT_CHANGED = 'columnPivotChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_VALUE_CHANGED = 'columnValueChanged';\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], Column.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('columnUtils')\n    ], Column.prototype, \"columnUtils\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], Column.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], Column.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('context')\n    ], Column.prototype, \"context\", void 0);\n    __decorate([\n        PostConstruct\n    ], Column.prototype, \"initialise\", null);\n    return Column;\n}());\nexport { Column };\n"]},"metadata":{},"sourceType":"module"}