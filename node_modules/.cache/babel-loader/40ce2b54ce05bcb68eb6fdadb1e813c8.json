{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { ColumnGroup } from \"../entities/columnGroup\";\nimport { ProvidedColumnGroup } from \"../entities/providedColumnGroup\";\nimport { Bean } from \"../context/context\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { getMaxSafeInteger } from \"../utils/number\";\nimport { attrToNumber } from \"../utils/generic\"; // takes in a list of columns, as specified by the column definitions, and returns column groups\n\nvar ColumnUtils =\n/** @class */\nfunction (_super) {\n  __extends(ColumnUtils, _super);\n\n  function ColumnUtils() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ColumnUtils.prototype.calculateColMinWidth = function (colDef) {\n    return colDef.minWidth != null ? colDef.minWidth : this.gridOptionsWrapper.getMinColWidth();\n  };\n\n  ColumnUtils.prototype.calculateColMaxWidth = function (colDef) {\n    return colDef.maxWidth != null ? colDef.maxWidth : this.gridOptionsWrapper.getMaxColWidth() || getMaxSafeInteger();\n  };\n\n  ColumnUtils.prototype.calculateColInitialWidth = function (colDef) {\n    var minColWidth = this.calculateColMinWidth(colDef);\n    var maxColWidth = this.calculateColMaxWidth(colDef);\n    var width;\n    var colDefWidth = attrToNumber(colDef.width);\n    var colDefInitialWidth = attrToNumber(colDef.initialWidth);\n\n    if (colDefWidth != null) {\n      width = colDefWidth;\n    } else if (colDefInitialWidth != null) {\n      width = colDefInitialWidth;\n    } else {\n      width = this.gridOptionsWrapper.getColWidth();\n    }\n\n    return Math.max(Math.min(width, maxColWidth), minColWidth);\n  };\n\n  ColumnUtils.prototype.getOriginalPathForColumn = function (column, originalBalancedTree) {\n    var result = [];\n    var found = false;\n\n    var recursePath = function (balancedColumnTree, dept) {\n      for (var i = 0; i < balancedColumnTree.length; i++) {\n        if (found) {\n          return;\n        } // quit the search, so 'result' is kept with the found result\n\n\n        var node = balancedColumnTree[i];\n\n        if (node instanceof ProvidedColumnGroup) {\n          var nextNode = node;\n          recursePath(nextNode.getChildren(), dept + 1);\n          result[dept] = node;\n        } else if (node === column) {\n          found = true;\n        }\n      }\n    };\n\n    recursePath(originalBalancedTree, 0); // we should always find the path, but in case there is a bug somewhere, returning null\n    // will make it fail rather than provide a 'hard to track down' bug\n\n    return found ? result : null;\n  };\n\n  ColumnUtils.prototype.depthFirstOriginalTreeSearch = function (parent, tree, callback) {\n    var _this = this;\n\n    if (!tree) {\n      return;\n    }\n\n    tree.forEach(function (child) {\n      if (child instanceof ProvidedColumnGroup) {\n        _this.depthFirstOriginalTreeSearch(child, child.getChildren(), callback);\n      }\n\n      callback(child, parent);\n    });\n  };\n\n  ColumnUtils.prototype.depthFirstAllColumnTreeSearch = function (tree, callback) {\n    var _this = this;\n\n    if (!tree) {\n      return;\n    }\n\n    tree.forEach(function (child) {\n      if (child instanceof ColumnGroup) {\n        _this.depthFirstAllColumnTreeSearch(child.getChildren(), callback);\n      }\n\n      callback(child);\n    });\n  };\n\n  ColumnUtils.prototype.depthFirstDisplayedColumnTreeSearch = function (tree, callback) {\n    var _this = this;\n\n    if (!tree) {\n      return;\n    }\n\n    tree.forEach(function (child) {\n      if (child instanceof ColumnGroup) {\n        _this.depthFirstDisplayedColumnTreeSearch(child.getDisplayedChildren(), callback);\n      }\n\n      callback(child);\n    });\n  };\n\n  ColumnUtils = __decorate([Bean('columnUtils')], ColumnUtils);\n  return ColumnUtils;\n}(BeanStub);\n\nexport { ColumnUtils };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/columns/columnUtils.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ColumnGroup","ProvidedColumnGroup","Bean","BeanStub","getMaxSafeInteger","attrToNumber","ColumnUtils","_super","apply","calculateColMinWidth","colDef","minWidth","gridOptionsWrapper","getMinColWidth","calculateColMaxWidth","maxWidth","getMaxColWidth","calculateColInitialWidth","minColWidth","maxColWidth","width","colDefWidth","colDefInitialWidth","initialWidth","getColWidth","Math","max","min","getOriginalPathForColumn","column","originalBalancedTree","result","found","recursePath","balancedColumnTree","dept","node","nextNode","getChildren","depthFirstOriginalTreeSearch","parent","tree","callback","_this","forEach","child","depthFirstAllColumnTreeSearch","depthFirstDisplayedColumnTreeSearch","getDisplayedChildren"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASM,WAAT,QAA4B,yBAA5B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,YAAT,QAA6B,kBAA7B,C,CACA;;AACA,IAAIC,WAAW;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC/CnC,EAAAA,SAAS,CAACkC,WAAD,EAAcC,MAAd,CAAT;;AACA,WAASD,WAAT,GAAuB;AACnB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhB,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDc,EAAAA,WAAW,CAACtB,SAAZ,CAAsByB,oBAAtB,GAA6C,UAAUC,MAAV,EAAkB;AAC3D,WAAOA,MAAM,CAACC,QAAP,IAAmB,IAAnB,GAA0BD,MAAM,CAACC,QAAjC,GAA4C,KAAKC,kBAAL,CAAwBC,cAAxB,EAAnD;AACH,GAFD;;AAGAP,EAAAA,WAAW,CAACtB,SAAZ,CAAsB8B,oBAAtB,GAA6C,UAAUJ,MAAV,EAAkB;AAC3D,WAAOA,MAAM,CAACK,QAAP,IAAmB,IAAnB,GAA0BL,MAAM,CAACK,QAAjC,GAA6C,KAAKH,kBAAL,CAAwBI,cAAxB,MAA4CZ,iBAAiB,EAAjH;AACH,GAFD;;AAGAE,EAAAA,WAAW,CAACtB,SAAZ,CAAsBiC,wBAAtB,GAAiD,UAAUP,MAAV,EAAkB;AAC/D,QAAIQ,WAAW,GAAG,KAAKT,oBAAL,CAA0BC,MAA1B,CAAlB;AACA,QAAIS,WAAW,GAAG,KAAKL,oBAAL,CAA0BJ,MAA1B,CAAlB;AACA,QAAIU,KAAJ;AACA,QAAIC,WAAW,GAAGhB,YAAY,CAACK,MAAM,CAACU,KAAR,CAA9B;AACA,QAAIE,kBAAkB,GAAGjB,YAAY,CAACK,MAAM,CAACa,YAAR,CAArC;;AACA,QAAIF,WAAW,IAAI,IAAnB,EAAyB;AACrBD,MAAAA,KAAK,GAAGC,WAAR;AACH,KAFD,MAGK,IAAIC,kBAAkB,IAAI,IAA1B,EAAgC;AACjCF,MAAAA,KAAK,GAAGE,kBAAR;AACH,KAFI,MAGA;AACDF,MAAAA,KAAK,GAAG,KAAKR,kBAAL,CAAwBY,WAAxB,EAAR;AACH;;AACD,WAAOC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASP,KAAT,EAAgBD,WAAhB,CAAT,EAAuCD,WAAvC,CAAP;AACH,GAhBD;;AAiBAZ,EAAAA,WAAW,CAACtB,SAAZ,CAAsB4C,wBAAtB,GAAiD,UAAUC,MAAV,EAAkBC,oBAAlB,EAAwC;AACrF,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,KAAK,GAAG,KAAZ;;AACA,QAAIC,WAAW,GAAG,UAAUC,kBAAV,EAA8BC,IAA9B,EAAoC;AAClD,WAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoC,kBAAkB,CAACzC,MAAvC,EAA+CK,CAAC,EAAhD,EAAoD;AAChD,YAAIkC,KAAJ,EAAW;AACP;AACH,SAH+C,CAIhD;;;AACA,YAAII,IAAI,GAAGF,kBAAkB,CAACpC,CAAD,CAA7B;;AACA,YAAIsC,IAAI,YAAYnC,mBAApB,EAAyC;AACrC,cAAIoC,QAAQ,GAAGD,IAAf;AACAH,UAAAA,WAAW,CAACI,QAAQ,CAACC,WAAT,EAAD,EAAyBH,IAAI,GAAG,CAAhC,CAAX;AACAJ,UAAAA,MAAM,CAACI,IAAD,CAAN,GAAeC,IAAf;AACH,SAJD,MAKK,IAAIA,IAAI,KAAKP,MAAb,EAAqB;AACtBG,UAAAA,KAAK,GAAG,IAAR;AACH;AACJ;AACJ,KAhBD;;AAiBAC,IAAAA,WAAW,CAACH,oBAAD,EAAuB,CAAvB,CAAX,CApBqF,CAqBrF;AACA;;AACA,WAAOE,KAAK,GAAGD,MAAH,GAAY,IAAxB;AACH,GAxBD;;AAyBAzB,EAAAA,WAAW,CAACtB,SAAZ,CAAsBuD,4BAAtB,GAAqD,UAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;AACnF,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI,CAACF,IAAL,EAAW;AACP;AACH;;AACDA,IAAAA,IAAI,CAACG,OAAL,CAAa,UAAUC,KAAV,EAAiB;AAC1B,UAAIA,KAAK,YAAY5C,mBAArB,EAA0C;AACtC0C,QAAAA,KAAK,CAACJ,4BAAN,CAAmCM,KAAnC,EAA0CA,KAAK,CAACP,WAAN,EAA1C,EAA+DI,QAA/D;AACH;;AACDA,MAAAA,QAAQ,CAACG,KAAD,EAAQL,MAAR,CAAR;AACH,KALD;AAMH,GAXD;;AAYAlC,EAAAA,WAAW,CAACtB,SAAZ,CAAsB8D,6BAAtB,GAAsD,UAAUL,IAAV,EAAgBC,QAAhB,EAA0B;AAC5E,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI,CAACF,IAAL,EAAW;AACP;AACH;;AACDA,IAAAA,IAAI,CAACG,OAAL,CAAa,UAAUC,KAAV,EAAiB;AAC1B,UAAIA,KAAK,YAAY7C,WAArB,EAAkC;AAC9B2C,QAAAA,KAAK,CAACG,6BAAN,CAAoCD,KAAK,CAACP,WAAN,EAApC,EAAyDI,QAAzD;AACH;;AACDA,MAAAA,QAAQ,CAACG,KAAD,CAAR;AACH,KALD;AAMH,GAXD;;AAYAvC,EAAAA,WAAW,CAACtB,SAAZ,CAAsB+D,mCAAtB,GAA4D,UAAUN,IAAV,EAAgBC,QAAhB,EAA0B;AAClF,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI,CAACF,IAAL,EAAW;AACP;AACH;;AACDA,IAAAA,IAAI,CAACG,OAAL,CAAa,UAAUC,KAAV,EAAiB;AAC1B,UAAIA,KAAK,YAAY7C,WAArB,EAAkC;AAC9B2C,QAAAA,KAAK,CAACI,mCAAN,CAA0CF,KAAK,CAACG,oBAAN,EAA1C,EAAwEN,QAAxE;AACH;;AACDA,MAAAA,QAAQ,CAACG,KAAD,CAAR;AACH,KALD;AAMH,GAXD;;AAYAvC,EAAAA,WAAW,GAAGpB,UAAU,CAAC,CACrBgB,IAAI,CAAC,aAAD,CADiB,CAAD,EAErBI,WAFqB,CAAxB;AAGA,SAAOA,WAAP;AACH,CA7FgC,CA6F/BH,QA7F+B,CAAjC;;AA8FA,SAASG,WAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ColumnGroup } from \"../entities/columnGroup\";\nimport { ProvidedColumnGroup } from \"../entities/providedColumnGroup\";\nimport { Bean } from \"../context/context\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { getMaxSafeInteger } from \"../utils/number\";\nimport { attrToNumber } from \"../utils/generic\";\n// takes in a list of columns, as specified by the column definitions, and returns column groups\nvar ColumnUtils = /** @class */ (function (_super) {\n    __extends(ColumnUtils, _super);\n    function ColumnUtils() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColumnUtils.prototype.calculateColMinWidth = function (colDef) {\n        return colDef.minWidth != null ? colDef.minWidth : this.gridOptionsWrapper.getMinColWidth();\n    };\n    ColumnUtils.prototype.calculateColMaxWidth = function (colDef) {\n        return colDef.maxWidth != null ? colDef.maxWidth : (this.gridOptionsWrapper.getMaxColWidth() || getMaxSafeInteger());\n    };\n    ColumnUtils.prototype.calculateColInitialWidth = function (colDef) {\n        var minColWidth = this.calculateColMinWidth(colDef);\n        var maxColWidth = this.calculateColMaxWidth(colDef);\n        var width;\n        var colDefWidth = attrToNumber(colDef.width);\n        var colDefInitialWidth = attrToNumber(colDef.initialWidth);\n        if (colDefWidth != null) {\n            width = colDefWidth;\n        }\n        else if (colDefInitialWidth != null) {\n            width = colDefInitialWidth;\n        }\n        else {\n            width = this.gridOptionsWrapper.getColWidth();\n        }\n        return Math.max(Math.min(width, maxColWidth), minColWidth);\n    };\n    ColumnUtils.prototype.getOriginalPathForColumn = function (column, originalBalancedTree) {\n        var result = [];\n        var found = false;\n        var recursePath = function (balancedColumnTree, dept) {\n            for (var i = 0; i < balancedColumnTree.length; i++) {\n                if (found) {\n                    return;\n                }\n                // quit the search, so 'result' is kept with the found result\n                var node = balancedColumnTree[i];\n                if (node instanceof ProvidedColumnGroup) {\n                    var nextNode = node;\n                    recursePath(nextNode.getChildren(), dept + 1);\n                    result[dept] = node;\n                }\n                else if (node === column) {\n                    found = true;\n                }\n            }\n        };\n        recursePath(originalBalancedTree, 0);\n        // we should always find the path, but in case there is a bug somewhere, returning null\n        // will make it fail rather than provide a 'hard to track down' bug\n        return found ? result : null;\n    };\n    ColumnUtils.prototype.depthFirstOriginalTreeSearch = function (parent, tree, callback) {\n        var _this = this;\n        if (!tree) {\n            return;\n        }\n        tree.forEach(function (child) {\n            if (child instanceof ProvidedColumnGroup) {\n                _this.depthFirstOriginalTreeSearch(child, child.getChildren(), callback);\n            }\n            callback(child, parent);\n        });\n    };\n    ColumnUtils.prototype.depthFirstAllColumnTreeSearch = function (tree, callback) {\n        var _this = this;\n        if (!tree) {\n            return;\n        }\n        tree.forEach(function (child) {\n            if (child instanceof ColumnGroup) {\n                _this.depthFirstAllColumnTreeSearch(child.getChildren(), callback);\n            }\n            callback(child);\n        });\n    };\n    ColumnUtils.prototype.depthFirstDisplayedColumnTreeSearch = function (tree, callback) {\n        var _this = this;\n        if (!tree) {\n            return;\n        }\n        tree.forEach(function (child) {\n            if (child instanceof ColumnGroup) {\n                _this.depthFirstDisplayedColumnTreeSearch(child.getDisplayedChildren(), callback);\n            }\n            callback(child);\n        });\n    };\n    ColumnUtils = __decorate([\n        Bean('columnUtils')\n    ], ColumnUtils);\n    return ColumnUtils;\n}(BeanStub));\nexport { ColumnUtils };\n"]},"metadata":{},"sourceType":"module"}