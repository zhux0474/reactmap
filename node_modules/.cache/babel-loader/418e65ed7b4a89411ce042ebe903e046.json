{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/reactmap/reactmap/src/components/dropdown.js\",\n    _s = $RefreshSig$();\n\n/*import React, { useState } from \"react\";\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form } from \"react-bootstrap\";\nimport {metadata} from './metadata.js';\n\nconst options = [\n    { name: \"Total Smoker\", id: 1 },\n    { name: \"Black Smoker\", id: 2 },\n    { name: \"White Smoker\", id: 3 },\n    \n];\n  \n  export default function App() {\n    const [val, setVal] = useState();\n    console.log(val);\n  \n    return (\n      <Form.Select value={val} onChange={(e) => setVal(e.target.value)}>\n        {options.map((o) => {\n          const { name, id } = o;\n          return <option value={id}>{name}</option>;\n        })}\n      </Form.Select>\n    );\n  }\n*/\nimport React, { useState } from 'react'; //import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Array of objects containing our fruit data\n  let attributes = [{\n    label: \"Total Smoker\",\n    value: \"🍎\"\n  }, {\n    label: \"Black Smoker\",\n    value: \"🍌\"\n  }, {\n    label: \"White Smoker\",\n    value: \"🍊\"\n  }]; // Using state to keep track of what the selected fruit is\n\n  let [attribute, setAttribute] = useState(\"Select an attribute\"); // Using this function to update the state of fruit\n  // whenever a new option is selected from the dropdown\n\n  let handleAttributeChange = e => {\n    setAttribute(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [attribute, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleAttributeChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \" Select an attribute to display\",\n        children: \" -- Select a fruit -- \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: attribute.value,\n        children: attribute.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6kzKkGDaXqM1jQvpmj1VKbp8TkE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/src/components/dropdown.js"],"names":["React","useState","App","attributes","label","value","attribute","setAttribute","handleAttributeChange","e","target","map"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,MAAIC,UAAU,GAAG,CACf;AAAEC,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GADe,EAEf;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAFe,EAGf;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAHe,CAAjB,CAFa,CAQf;;AACA,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,qBAAD,CAAxC,CATe,CAWf;AACA;;AACA,MAAIO,qBAAqB,GAAIC,CAAD,IAAO;AACjCF,IAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASL,KAAV,CAAZ;AACD,GAFD;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eAECC,SAFD,eAGA;AAAA;AAAA;AAAA;AAAA,YAHA,eAKA;AAAQ,MAAA,QAAQ,EAAEE,qBAAlB;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGL,UAAU,CAACQ,GAAX,CAAgBL,SAAD,iBAAe;AAAQ,QAAA,KAAK,EAAEA,SAAS,CAACD,KAAzB;AAAA,kBAAiCC,SAAS,CAACF;AAA3C;AAAA;AAAA;AAAA;AAAA,cAA9B,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhCQF,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["/*import React, { useState } from \"react\";\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form } from \"react-bootstrap\";\nimport {metadata} from './metadata.js';\n\nconst options = [\n    { name: \"Total Smoker\", id: 1 },\n    { name: \"Black Smoker\", id: 2 },\n    { name: \"White Smoker\", id: 3 },\n    \n];\n  \n  export default function App() {\n    const [val, setVal] = useState();\n    console.log(val);\n  \n    return (\n      <Form.Select value={val} onChange={(e) => setVal(e.target.value)}>\n        {options.map((o) => {\n          const { name, id } = o;\n          return <option value={id}>{name}</option>;\n        })}\n      </Form.Select>\n    );\n  }\n*/\n\nimport React, {useState} from 'react';\n//import './App.css';\n\nfunction App() {\n  // Array of objects containing our fruit data\n  let attributes = [\n    { label: \"Total Smoker\", value: \"🍎\" },\n    { label: \"Black Smoker\", value: \"🍌\" },\n    { label: \"White Smoker\", value: \"🍊\" }\n]\n\n// Using state to keep track of what the selected fruit is\nlet [attribute, setAttribute] = useState(\"Select an attribute\")\n\n// Using this function to update the state of fruit\n// whenever a new option is selected from the dropdown\nlet handleAttributeChange = (e) => {\n  setAttribute(e.target.value)\n}\n\n  return (\n    <div className=\"App\">\n    {/* Displaying the value of fruit */}\n    {attribute}\n    <br />\n\n    <select onChange={handleAttributeChange}> \n      <option value=\" Select an attribute to display\"> -- Select a fruit -- </option>\n            {/* Mapping through each fruit object in our fruits array\n          and returning an option element with the appropriate attributes / values.\n         */}\n      {attributes.map((attribute) => <option value={attribute.value}>{attribute.label}</option>)}\n    </select>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}