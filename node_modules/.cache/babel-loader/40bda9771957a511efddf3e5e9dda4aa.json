{"ast":null,"code":"// @ag-grid-community/react v26.2.0\n\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@ag-grid-community/core\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar react_dom_1 = require(\"react-dom\");\n\nvar beansContext_1 = require(\"../beansContext\");\n\nvar PopupEditorComp = function (props) {\n  var _a = react_1.useState(),\n      popupEditorWrapper = _a[0],\n      setPopupEditorWrapper = _a[1];\n\n  var _b = react_1.useContext(beansContext_1.BeansContext),\n      context = _b.context,\n      popupService = _b.popupService,\n      gridOptionsWrapper = _b.gridOptionsWrapper;\n\n  react_1.useEffect(function () {\n    var editDetails = props.editDetails,\n        cellCtrl = props.cellCtrl,\n        eParentCell = props.eParentCell;\n    var compDetails = editDetails.compDetails;\n    var useModelPopup = gridOptionsWrapper.isStopEditingWhenCellsLoseFocus();\n    var wrapper = new core_1.PopupEditorWrapper(compDetails.params);\n    var ePopupGui = wrapper.getGui();\n\n    if (props.jsChildComp) {\n      var eChildGui = props.jsChildComp.getGui();\n\n      if (eChildGui) {\n        ePopupGui.appendChild(eChildGui);\n      }\n    }\n\n    var positionParams = {\n      column: cellCtrl.getColumn(),\n      rowNode: cellCtrl.getRowNode(),\n      type: 'popupCellEditor',\n      eventSource: eParentCell,\n      ePopup: ePopupGui,\n      keepWithinBounds: true\n    };\n    var positionCallback = editDetails.popupPosition === 'under' ? popupService.positionPopupUnderComponent.bind(popupService, positionParams) : popupService.positionPopupOverComponent.bind(popupService, positionParams);\n    var translate = gridOptionsWrapper.getLocaleTextFunc();\n    var addPopupRes = popupService.addPopup({\n      modal: useModelPopup,\n      eChild: ePopupGui,\n      closeOnEsc: true,\n      closedCallback: function () {\n        cellCtrl.onPopupEditorClosed();\n      },\n      anchorToElement: eParentCell,\n      positionCallback: positionCallback,\n      ariaLabel: translate('ariaLabelCellEditor', 'Cell Editor')\n    });\n    var hideEditorPopup = addPopupRes ? addPopupRes.hideFunc : undefined;\n    setPopupEditorWrapper(wrapper);\n    props.jsChildComp && props.jsChildComp.afterGuiAttached && props.jsChildComp.afterGuiAttached();\n    return function () {\n      if (hideEditorPopup != null) {\n        hideEditorPopup();\n      }\n\n      context.destroyBean(wrapper);\n    };\n  }, []);\n  return react_1.default.createElement(react_1.default.Fragment, null, popupEditorWrapper && props.wrappedContent && react_dom_1.createPortal(props.wrappedContent, popupEditorWrapper.getGui()));\n};\n\nexports.default = react_1.memo(PopupEditorComp);","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/react/lib/reactUi/cells/reactUi/cells/popupEditorComp.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CellCtrl, PopupEditorWrapper } from '@ag-grid-community/core';\nimport React, { useEffect, useState, memo, useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport { EditDetails } from './cellComp';\nimport { BeansContext } from '../beansContext';\n\nconst PopupEditorComp = (props: {\n            editDetails: EditDetails, \n            cellCtrl: CellCtrl, \n            eParentCell: HTMLElement,\n            wrappedContent?: any,\n            jsChildComp?: any\n        }) => {\n\n    const [popupEditorWrapper, setPopupEditorWrapper] = useState<PopupEditorWrapper>();\n\n    const {context, popupService, gridOptionsWrapper} = useContext(BeansContext);\n\n    useEffect( () => {\n        const {editDetails, cellCtrl, eParentCell} = props;\n        const {compDetails} = editDetails;\n\n        const useModelPopup = gridOptionsWrapper.isStopEditingWhenCellsLoseFocus();\n        \n        const wrapper = new PopupEditorWrapper(compDetails.params);\n        const ePopupGui = wrapper.getGui();\n\n        if (props.jsChildComp) {\n            const eChildGui = props.jsChildComp.getGui();\n            if (eChildGui) {\n                ePopupGui.appendChild(eChildGui);\n            }\n        }\n\n        const positionParams = {\n            column: cellCtrl.getColumn(),\n            rowNode: cellCtrl.getRowNode(),\n            type: 'popupCellEditor',\n            eventSource: eParentCell,\n            ePopup: ePopupGui,\n            keepWithinBounds: true\n        };\n    \n        const positionCallback = editDetails!.popupPosition === 'under' ?\n            popupService.positionPopupUnderComponent.bind(popupService, positionParams)\n            : popupService.positionPopupOverComponent.bind(popupService, positionParams);\n\n        const translate = gridOptionsWrapper.getLocaleTextFunc();\n    \n        const addPopupRes = popupService.addPopup({\n            modal: useModelPopup,\n            eChild: ePopupGui,\n            closeOnEsc: true,\n            closedCallback: () => { cellCtrl.onPopupEditorClosed(); },\n            anchorToElement: eParentCell,\n            positionCallback,\n            ariaLabel: translate('ariaLabelCellEditor', 'Cell Editor')\n        });\n    \n        const hideEditorPopup: (()=>void) | undefined = addPopupRes ? addPopupRes.hideFunc : undefined;\n\n        setPopupEditorWrapper(wrapper);\n\n        props.jsChildComp && props.jsChildComp.afterGuiAttached && props.jsChildComp.afterGuiAttached();\n\n        return ()=> {\n            if (hideEditorPopup!=null) {\n                hideEditorPopup();\n            }\n            context.destroyBean(wrapper);\n        };\n\n    }, []);\n\n    return (\n        <>\n            { popupEditorWrapper && props.wrappedContent \n                                 && createPortal(props.wrappedContent, popupEditorWrapper.getGui()) }\n        </>\n    );\n};\n\nexport default memo(PopupEditorComp);\n"]},"metadata":{},"sourceType":"script"}