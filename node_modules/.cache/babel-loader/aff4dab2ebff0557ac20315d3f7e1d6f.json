{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { values, exists } from \"../utils/generic\";\nimport { iterateObject } from \"../utils/object\";\nimport { getFunctionName } from \"../utils/function\";\n\nvar Context =\n/** @class */\nfunction () {\n  function Context(params, logger) {\n    this.beanWrappers = {};\n    this.destroyed = false;\n\n    if (!params || !params.beanClasses) {\n      return;\n    }\n\n    this.contextParams = params;\n    this.logger = logger;\n    this.logger.log(\">> creating ag-Application Context\");\n    this.createBeans();\n    var beanInstances = this.getBeanInstances();\n    this.wireBeans(beanInstances);\n    this.logger.log(\">> ag-Application Context ready - component is alive\");\n  }\n\n  Context.prototype.getBeanInstances = function () {\n    return values(this.beanWrappers).map(function (beanEntry) {\n      return beanEntry.beanInstance;\n    });\n  };\n\n  Context.prototype.createBean = function (bean, afterPreCreateCallback) {\n    if (!bean) {\n      throw Error(\"Can't wire to bean since it is null\");\n    }\n\n    this.wireBeans([bean], afterPreCreateCallback);\n    return bean;\n  };\n\n  Context.prototype.wireBeans = function (beanInstances, afterPreCreateCallback) {\n    this.autoWireBeans(beanInstances);\n    this.methodWireBeans(beanInstances);\n    this.callLifeCycleMethods(beanInstances, 'preConstructMethods'); // the callback sets the attributes, so the component has access to attributes\n    // before postConstruct methods in the component are executed\n\n    if (exists(afterPreCreateCallback)) {\n      beanInstances.forEach(afterPreCreateCallback);\n    }\n\n    this.callLifeCycleMethods(beanInstances, 'postConstructMethods');\n  };\n\n  Context.prototype.createBeans = function () {\n    var _this = this; // register all normal beans\n\n\n    this.contextParams.beanClasses.forEach(this.createBeanWrapper.bind(this)); // register override beans, these will overwrite beans above of same name\n    // instantiate all beans - overridden beans will be left out\n\n    iterateObject(this.beanWrappers, function (key, beanEntry) {\n      var constructorParamsMeta;\n\n      if (beanEntry.bean.__agBeanMetaData && beanEntry.bean.__agBeanMetaData.autowireMethods && beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor) {\n        constructorParamsMeta = beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor;\n      }\n\n      var constructorParams = _this.getBeansForParameters(constructorParamsMeta, beanEntry.bean.name);\n\n      var newInstance = applyToConstructor(beanEntry.bean, constructorParams);\n      beanEntry.beanInstance = newInstance;\n    });\n    var createdBeanNames = Object.keys(this.beanWrappers).join(', ');\n    this.logger.log(\"created beans: \" + createdBeanNames);\n  }; // tslint:disable-next-line\n\n\n  Context.prototype.createBeanWrapper = function (BeanClass) {\n    var metaData = BeanClass.__agBeanMetaData;\n\n    if (!metaData) {\n      var beanName = void 0;\n\n      if (BeanClass.prototype.constructor) {\n        beanName = getFunctionName(BeanClass.prototype.constructor);\n      } else {\n        beanName = \"\" + BeanClass;\n      }\n\n      console.error(\"Context item \" + beanName + \" is not a bean\");\n      return;\n    }\n\n    var beanEntry = {\n      bean: BeanClass,\n      beanInstance: null,\n      beanName: metaData.beanName\n    };\n    this.beanWrappers[metaData.beanName] = beanEntry;\n  };\n\n  Context.prototype.autoWireBeans = function (beanInstances) {\n    var _this = this;\n\n    beanInstances.forEach(function (beanInstance) {\n      _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n        var attributes = metaData.agClassAttributes;\n\n        if (!attributes) {\n          return;\n        }\n\n        attributes.forEach(function (attribute) {\n          var otherBean = _this.lookupBeanInstance(beanName, attribute.beanName, attribute.optional);\n\n          beanInstance[attribute.attributeName] = otherBean;\n        });\n      });\n    });\n  };\n\n  Context.prototype.methodWireBeans = function (beanInstances) {\n    var _this = this;\n\n    beanInstances.forEach(function (beanInstance) {\n      _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n        iterateObject(metaData.autowireMethods, function (methodName, wireParams) {\n          // skip constructor, as this is dealt with elsewhere\n          if (methodName === \"agConstructor\") {\n            return;\n          }\n\n          var initParams = _this.getBeansForParameters(wireParams, beanName);\n\n          beanInstance[methodName].apply(beanInstance, initParams);\n        });\n      });\n    });\n  };\n\n  Context.prototype.forEachMetaDataInHierarchy = function (beanInstance, callback) {\n    var prototype = Object.getPrototypeOf(beanInstance);\n\n    while (prototype != null) {\n      var constructor = prototype.constructor;\n\n      if (constructor.hasOwnProperty('__agBeanMetaData')) {\n        var metaData = constructor.__agBeanMetaData;\n        var beanName = this.getBeanName(constructor);\n        callback(metaData, beanName);\n      }\n\n      prototype = Object.getPrototypeOf(prototype);\n    }\n  };\n\n  Context.prototype.getBeanName = function (constructor) {\n    if (constructor.__agBeanMetaData && constructor.__agBeanMetaData.beanName) {\n      return constructor.__agBeanMetaData.beanName;\n    }\n\n    var constructorString = constructor.toString();\n    var beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n    return beanName;\n  };\n\n  Context.prototype.getBeansForParameters = function (parameters, beanName) {\n    var _this = this;\n\n    var beansList = [];\n\n    if (parameters) {\n      iterateObject(parameters, function (paramIndex, otherBeanName) {\n        var otherBean = _this.lookupBeanInstance(beanName, otherBeanName);\n\n        beansList[Number(paramIndex)] = otherBean;\n      });\n    }\n\n    return beansList;\n  };\n\n  Context.prototype.lookupBeanInstance = function (wiringBean, beanName, optional) {\n    if (optional === void 0) {\n      optional = false;\n    }\n\n    if (beanName === \"context\") {\n      return this;\n    }\n\n    if (this.contextParams.providedBeanInstances && this.contextParams.providedBeanInstances.hasOwnProperty(beanName)) {\n      return this.contextParams.providedBeanInstances[beanName];\n    }\n\n    var beanEntry = this.beanWrappers[beanName];\n\n    if (beanEntry) {\n      return beanEntry.beanInstance;\n    }\n\n    if (!optional) {\n      console.error(\"AG Grid: unable to find bean reference \" + beanName + \" while initialising \" + wiringBean);\n    }\n\n    return null;\n  };\n\n  Context.prototype.callLifeCycleMethods = function (beanInstances, lifeCycleMethod) {\n    var _this = this;\n\n    beanInstances.forEach(function (beanInstance) {\n      return _this.callLifeCycleMethodsOnBean(beanInstance, lifeCycleMethod);\n    });\n  };\n\n  Context.prototype.callLifeCycleMethodsOnBean = function (beanInstance, lifeCycleMethod, methodToIgnore) {\n    // putting all methods into a map removes duplicates\n    var allMethods = {}; // dump methods from each level of the metadata hierarchy\n\n    this.forEachMetaDataInHierarchy(beanInstance, function (metaData) {\n      var methods = metaData[lifeCycleMethod];\n\n      if (methods) {\n        methods.forEach(function (methodName) {\n          if (methodName != methodToIgnore) {\n            allMethods[methodName] = true;\n          }\n        });\n      }\n    });\n    var allMethodsList = Object.keys(allMethods);\n    allMethodsList.forEach(function (methodName) {\n      return beanInstance[methodName]();\n    });\n  };\n\n  Context.prototype.getBean = function (name) {\n    return this.lookupBeanInstance(\"getBean\", name, true);\n  };\n\n  Context.prototype.destroy = function () {\n    if (this.destroyed) {\n      return;\n    }\n\n    this.logger.log(\">> Shutting down ag-Application Context\");\n    var beanInstances = this.getBeanInstances();\n    this.destroyBeans(beanInstances);\n    this.contextParams.providedBeanInstances = null;\n    this.destroyed = true;\n    this.logger.log(\">> ag-Application Context shut down - component is dead\");\n  };\n\n  Context.prototype.destroyBean = function (bean) {\n    if (!bean) {\n      return;\n    }\n\n    this.destroyBeans([bean]);\n  };\n\n  Context.prototype.destroyBeans = function (beans) {\n    var _this = this;\n\n    if (!beans) {\n      return [];\n    }\n\n    beans.forEach(function (bean) {\n      _this.callLifeCycleMethodsOnBean(bean, 'preDestroyMethods', 'destroy'); // call destroy() explicitly if it exists\n\n\n      var beanAny = bean;\n\n      if (typeof beanAny.destroy === 'function') {\n        beanAny.destroy();\n      }\n    });\n    return [];\n  };\n\n  return Context;\n}();\n\nexport { Context }; // taken from: http://stackoverflow.com/questions/3362471/how-can-i-call-a-javascript-constructor-using-call-or-apply\n// allows calling 'apply' on a constructor\n\nfunction applyToConstructor(constructor, argArray) {\n  var args = [null].concat(argArray);\n  var factoryFunction = constructor.bind.apply(constructor, args);\n  return new factoryFunction();\n}\n\nexport function PreConstruct(target, methodName, descriptor) {\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.preConstructMethods) {\n    props.preConstructMethods = [];\n  }\n\n  props.preConstructMethods.push(methodName);\n}\nexport function PostConstruct(target, methodName, descriptor) {\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.postConstructMethods) {\n    props.postConstructMethods = [];\n  }\n\n  props.postConstructMethods.push(methodName);\n}\nexport function PreDestroy(target, methodName, descriptor) {\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.preDestroyMethods) {\n    props.preDestroyMethods = [];\n  }\n\n  props.preDestroyMethods.push(methodName);\n}\nexport function Bean(beanName) {\n  return function (classConstructor) {\n    var props = getOrCreateProps(classConstructor);\n    props.beanName = beanName;\n  };\n}\nexport function Autowired(name) {\n  return function (target, propertyKey, descriptor) {\n    autowiredFunc(target, name, false, target, propertyKey, null);\n  };\n}\nexport function Optional(name) {\n  return function (target, propertyKey, descriptor) {\n    autowiredFunc(target, name, true, target, propertyKey, null);\n  };\n}\n\nfunction autowiredFunc(target, name, optional, classPrototype, methodOrAttributeName, index) {\n  if (name === null) {\n    console.error(\"AG Grid: Autowired name should not be null\");\n    return;\n  }\n\n  if (typeof index === \"number\") {\n    console.error(\"AG Grid: Autowired should be on an attribute\");\n    return;\n  } // it's an attribute on the class\n\n\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.agClassAttributes) {\n    props.agClassAttributes = [];\n  }\n\n  props.agClassAttributes.push({\n    attributeName: methodOrAttributeName,\n    beanName: name,\n    optional: optional\n  });\n}\n\nexport function Qualifier(name) {\n  return function (classPrototype, methodOrAttributeName, index) {\n    var constructor = typeof classPrototype == \"function\" ? classPrototype : classPrototype.constructor;\n    var props;\n\n    if (typeof index === \"number\") {\n      // it's a parameter on a method\n      var methodName = void 0;\n\n      if (methodOrAttributeName) {\n        props = getOrCreateProps(constructor);\n        methodName = methodOrAttributeName;\n      } else {\n        props = getOrCreateProps(constructor);\n        methodName = \"agConstructor\";\n      }\n\n      if (!props.autowireMethods) {\n        props.autowireMethods = {};\n      }\n\n      if (!props.autowireMethods[methodName]) {\n        props.autowireMethods[methodName] = {};\n      }\n\n      props.autowireMethods[methodName][index] = name;\n    }\n  };\n}\n\nfunction getOrCreateProps(target) {\n  if (!target.hasOwnProperty(\"__agBeanMetaData\")) {\n    target.__agBeanMetaData = {};\n  }\n\n  return target.__agBeanMetaData;\n}","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/context/context.js"],"names":["values","exists","iterateObject","getFunctionName","Context","params","logger","beanWrappers","destroyed","beanClasses","contextParams","log","createBeans","beanInstances","getBeanInstances","wireBeans","prototype","map","beanEntry","beanInstance","createBean","bean","afterPreCreateCallback","Error","autoWireBeans","methodWireBeans","callLifeCycleMethods","forEach","_this","createBeanWrapper","bind","key","constructorParamsMeta","__agBeanMetaData","autowireMethods","agConstructor","constructorParams","getBeansForParameters","name","newInstance","applyToConstructor","createdBeanNames","Object","keys","join","BeanClass","metaData","beanName","constructor","console","error","forEachMetaDataInHierarchy","attributes","agClassAttributes","attribute","otherBean","lookupBeanInstance","optional","attributeName","methodName","wireParams","initParams","apply","callback","getPrototypeOf","hasOwnProperty","getBeanName","constructorString","toString","substring","indexOf","parameters","beansList","paramIndex","otherBeanName","Number","wiringBean","providedBeanInstances","lifeCycleMethod","callLifeCycleMethodsOnBean","methodToIgnore","allMethods","methods","allMethodsList","getBean","destroy","destroyBeans","destroyBean","beans","beanAny","argArray","args","concat","factoryFunction","PreConstruct","target","descriptor","props","getOrCreateProps","preConstructMethods","push","PostConstruct","postConstructMethods","PreDestroy","preDestroyMethods","Bean","classConstructor","Autowired","propertyKey","autowiredFunc","Optional","classPrototype","methodOrAttributeName","index","Qualifier"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { values, exists } from \"../utils/generic\";\nimport { iterateObject } from \"../utils/object\";\nimport { getFunctionName } from \"../utils/function\";\nvar Context = /** @class */ (function () {\n    function Context(params, logger) {\n        this.beanWrappers = {};\n        this.destroyed = false;\n        if (!params || !params.beanClasses) {\n            return;\n        }\n        this.contextParams = params;\n        this.logger = logger;\n        this.logger.log(\">> creating ag-Application Context\");\n        this.createBeans();\n        var beanInstances = this.getBeanInstances();\n        this.wireBeans(beanInstances);\n        this.logger.log(\">> ag-Application Context ready - component is alive\");\n    }\n    Context.prototype.getBeanInstances = function () {\n        return values(this.beanWrappers).map(function (beanEntry) { return beanEntry.beanInstance; });\n    };\n    Context.prototype.createBean = function (bean, afterPreCreateCallback) {\n        if (!bean) {\n            throw Error(\"Can't wire to bean since it is null\");\n        }\n        this.wireBeans([bean], afterPreCreateCallback);\n        return bean;\n    };\n    Context.prototype.wireBeans = function (beanInstances, afterPreCreateCallback) {\n        this.autoWireBeans(beanInstances);\n        this.methodWireBeans(beanInstances);\n        this.callLifeCycleMethods(beanInstances, 'preConstructMethods');\n        // the callback sets the attributes, so the component has access to attributes\n        // before postConstruct methods in the component are executed\n        if (exists(afterPreCreateCallback)) {\n            beanInstances.forEach(afterPreCreateCallback);\n        }\n        this.callLifeCycleMethods(beanInstances, 'postConstructMethods');\n    };\n    Context.prototype.createBeans = function () {\n        var _this = this;\n        // register all normal beans\n        this.contextParams.beanClasses.forEach(this.createBeanWrapper.bind(this));\n        // register override beans, these will overwrite beans above of same name\n        // instantiate all beans - overridden beans will be left out\n        iterateObject(this.beanWrappers, function (key, beanEntry) {\n            var constructorParamsMeta;\n            if (beanEntry.bean.__agBeanMetaData && beanEntry.bean.__agBeanMetaData.autowireMethods && beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor) {\n                constructorParamsMeta = beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor;\n            }\n            var constructorParams = _this.getBeansForParameters(constructorParamsMeta, beanEntry.bean.name);\n            var newInstance = applyToConstructor(beanEntry.bean, constructorParams);\n            beanEntry.beanInstance = newInstance;\n        });\n        var createdBeanNames = Object.keys(this.beanWrappers).join(', ');\n        this.logger.log(\"created beans: \" + createdBeanNames);\n    };\n    // tslint:disable-next-line\n    Context.prototype.createBeanWrapper = function (BeanClass) {\n        var metaData = BeanClass.__agBeanMetaData;\n        if (!metaData) {\n            var beanName = void 0;\n            if (BeanClass.prototype.constructor) {\n                beanName = getFunctionName(BeanClass.prototype.constructor);\n            }\n            else {\n                beanName = \"\" + BeanClass;\n            }\n            console.error(\"Context item \" + beanName + \" is not a bean\");\n            return;\n        }\n        var beanEntry = {\n            bean: BeanClass,\n            beanInstance: null,\n            beanName: metaData.beanName\n        };\n        this.beanWrappers[metaData.beanName] = beanEntry;\n    };\n    Context.prototype.autoWireBeans = function (beanInstances) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n                var attributes = metaData.agClassAttributes;\n                if (!attributes) {\n                    return;\n                }\n                attributes.forEach(function (attribute) {\n                    var otherBean = _this.lookupBeanInstance(beanName, attribute.beanName, attribute.optional);\n                    beanInstance[attribute.attributeName] = otherBean;\n                });\n            });\n        });\n    };\n    Context.prototype.methodWireBeans = function (beanInstances) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n                iterateObject(metaData.autowireMethods, function (methodName, wireParams) {\n                    // skip constructor, as this is dealt with elsewhere\n                    if (methodName === \"agConstructor\") {\n                        return;\n                    }\n                    var initParams = _this.getBeansForParameters(wireParams, beanName);\n                    beanInstance[methodName].apply(beanInstance, initParams);\n                });\n            });\n        });\n    };\n    Context.prototype.forEachMetaDataInHierarchy = function (beanInstance, callback) {\n        var prototype = Object.getPrototypeOf(beanInstance);\n        while (prototype != null) {\n            var constructor = prototype.constructor;\n            if (constructor.hasOwnProperty('__agBeanMetaData')) {\n                var metaData = constructor.__agBeanMetaData;\n                var beanName = this.getBeanName(constructor);\n                callback(metaData, beanName);\n            }\n            prototype = Object.getPrototypeOf(prototype);\n        }\n    };\n    Context.prototype.getBeanName = function (constructor) {\n        if (constructor.__agBeanMetaData && constructor.__agBeanMetaData.beanName) {\n            return constructor.__agBeanMetaData.beanName;\n        }\n        var constructorString = constructor.toString();\n        var beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n        return beanName;\n    };\n    Context.prototype.getBeansForParameters = function (parameters, beanName) {\n        var _this = this;\n        var beansList = [];\n        if (parameters) {\n            iterateObject(parameters, function (paramIndex, otherBeanName) {\n                var otherBean = _this.lookupBeanInstance(beanName, otherBeanName);\n                beansList[Number(paramIndex)] = otherBean;\n            });\n        }\n        return beansList;\n    };\n    Context.prototype.lookupBeanInstance = function (wiringBean, beanName, optional) {\n        if (optional === void 0) { optional = false; }\n        if (beanName === \"context\") {\n            return this;\n        }\n        if (this.contextParams.providedBeanInstances && this.contextParams.providedBeanInstances.hasOwnProperty(beanName)) {\n            return this.contextParams.providedBeanInstances[beanName];\n        }\n        var beanEntry = this.beanWrappers[beanName];\n        if (beanEntry) {\n            return beanEntry.beanInstance;\n        }\n        if (!optional) {\n            console.error(\"AG Grid: unable to find bean reference \" + beanName + \" while initialising \" + wiringBean);\n        }\n        return null;\n    };\n    Context.prototype.callLifeCycleMethods = function (beanInstances, lifeCycleMethod) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) { return _this.callLifeCycleMethodsOnBean(beanInstance, lifeCycleMethod); });\n    };\n    Context.prototype.callLifeCycleMethodsOnBean = function (beanInstance, lifeCycleMethod, methodToIgnore) {\n        // putting all methods into a map removes duplicates\n        var allMethods = {};\n        // dump methods from each level of the metadata hierarchy\n        this.forEachMetaDataInHierarchy(beanInstance, function (metaData) {\n            var methods = metaData[lifeCycleMethod];\n            if (methods) {\n                methods.forEach(function (methodName) {\n                    if (methodName != methodToIgnore) {\n                        allMethods[methodName] = true;\n                    }\n                });\n            }\n        });\n        var allMethodsList = Object.keys(allMethods);\n        allMethodsList.forEach(function (methodName) { return beanInstance[methodName](); });\n    };\n    Context.prototype.getBean = function (name) {\n        return this.lookupBeanInstance(\"getBean\", name, true);\n    };\n    Context.prototype.destroy = function () {\n        if (this.destroyed) {\n            return;\n        }\n        this.logger.log(\">> Shutting down ag-Application Context\");\n        var beanInstances = this.getBeanInstances();\n        this.destroyBeans(beanInstances);\n        this.contextParams.providedBeanInstances = null;\n        this.destroyed = true;\n        this.logger.log(\">> ag-Application Context shut down - component is dead\");\n    };\n    Context.prototype.destroyBean = function (bean) {\n        if (!bean) {\n            return;\n        }\n        this.destroyBeans([bean]);\n    };\n    Context.prototype.destroyBeans = function (beans) {\n        var _this = this;\n        if (!beans) {\n            return [];\n        }\n        beans.forEach(function (bean) {\n            _this.callLifeCycleMethodsOnBean(bean, 'preDestroyMethods', 'destroy');\n            // call destroy() explicitly if it exists\n            var beanAny = bean;\n            if (typeof beanAny.destroy === 'function') {\n                beanAny.destroy();\n            }\n        });\n        return [];\n    };\n    return Context;\n}());\nexport { Context };\n// taken from: http://stackoverflow.com/questions/3362471/how-can-i-call-a-javascript-constructor-using-call-or-apply\n// allows calling 'apply' on a constructor\nfunction applyToConstructor(constructor, argArray) {\n    var args = [null].concat(argArray);\n    var factoryFunction = constructor.bind.apply(constructor, args);\n    return new factoryFunction();\n}\nexport function PreConstruct(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.preConstructMethods) {\n        props.preConstructMethods = [];\n    }\n    props.preConstructMethods.push(methodName);\n}\nexport function PostConstruct(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.postConstructMethods) {\n        props.postConstructMethods = [];\n    }\n    props.postConstructMethods.push(methodName);\n}\nexport function PreDestroy(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.preDestroyMethods) {\n        props.preDestroyMethods = [];\n    }\n    props.preDestroyMethods.push(methodName);\n}\nexport function Bean(beanName) {\n    return function (classConstructor) {\n        var props = getOrCreateProps(classConstructor);\n        props.beanName = beanName;\n    };\n}\nexport function Autowired(name) {\n    return function (target, propertyKey, descriptor) {\n        autowiredFunc(target, name, false, target, propertyKey, null);\n    };\n}\nexport function Optional(name) {\n    return function (target, propertyKey, descriptor) {\n        autowiredFunc(target, name, true, target, propertyKey, null);\n    };\n}\nfunction autowiredFunc(target, name, optional, classPrototype, methodOrAttributeName, index) {\n    if (name === null) {\n        console.error(\"AG Grid: Autowired name should not be null\");\n        return;\n    }\n    if (typeof index === \"number\") {\n        console.error(\"AG Grid: Autowired should be on an attribute\");\n        return;\n    }\n    // it's an attribute on the class\n    var props = getOrCreateProps(target.constructor);\n    if (!props.agClassAttributes) {\n        props.agClassAttributes = [];\n    }\n    props.agClassAttributes.push({\n        attributeName: methodOrAttributeName,\n        beanName: name,\n        optional: optional\n    });\n}\nexport function Qualifier(name) {\n    return function (classPrototype, methodOrAttributeName, index) {\n        var constructor = typeof classPrototype == \"function\" ? classPrototype : classPrototype.constructor;\n        var props;\n        if (typeof index === \"number\") {\n            // it's a parameter on a method\n            var methodName = void 0;\n            if (methodOrAttributeName) {\n                props = getOrCreateProps(constructor);\n                methodName = methodOrAttributeName;\n            }\n            else {\n                props = getOrCreateProps(constructor);\n                methodName = \"agConstructor\";\n            }\n            if (!props.autowireMethods) {\n                props.autowireMethods = {};\n            }\n            if (!props.autowireMethods[methodName]) {\n                props.autowireMethods[methodName] = {};\n            }\n            props.autowireMethods[methodName][index] = name;\n        }\n    };\n}\nfunction getOrCreateProps(target) {\n    if (!target.hasOwnProperty(\"__agBeanMetaData\")) {\n        target.__agBeanMetaData = {};\n    }\n    return target.__agBeanMetaData;\n}\n"]},"metadata":{},"sourceType":"module"}