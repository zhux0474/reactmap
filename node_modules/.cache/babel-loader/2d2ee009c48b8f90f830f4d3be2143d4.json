{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { BeanStub } from \"../../context/beanStub\";\nimport { KeyCode } from \"../../constants/keyCode\";\nimport { getTarget } from \"../../utils/event\";\nimport { isEventFromPrintableCharacter } from \"../../utils/keyboard\";\n\nvar CellKeyboardListenerFeature =\n/** @class */\nfunction (_super) {\n  __extends(CellKeyboardListenerFeature, _super);\n\n  function CellKeyboardListenerFeature(ctrl, beans, column, rowNode, scope, rowCtrl) {\n    var _this = _super.call(this) || this;\n\n    _this.cellCtrl = ctrl;\n    _this.beans = beans;\n    _this.column = column;\n    _this.rowNode = rowNode;\n    _this.rowCtrl = rowCtrl;\n    return _this;\n  }\n\n  CellKeyboardListenerFeature.prototype.setComp = function (eGui) {\n    this.eGui = eGui;\n  };\n\n  CellKeyboardListenerFeature.prototype.onKeyDown = function (event) {\n    var key = event.which || event.keyCode;\n\n    switch (key) {\n      case KeyCode.ENTER:\n        this.onEnterKeyDown(event);\n        break;\n\n      case KeyCode.F2:\n        this.onF2KeyDown();\n        break;\n\n      case KeyCode.ESCAPE:\n        this.onEscapeKeyDown();\n        break;\n\n      case KeyCode.TAB:\n        this.onTabKeyDown(event);\n        break;\n\n      case KeyCode.BACKSPACE:\n      case KeyCode.DELETE:\n        this.onBackspaceOrDeleteKeyPressed(key);\n        break;\n\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n      case KeyCode.RIGHT:\n      case KeyCode.LEFT:\n        this.onNavigationKeyPressed(event, key);\n        break;\n    }\n  };\n\n  CellKeyboardListenerFeature.prototype.onNavigationKeyPressed = function (event, key) {\n    if (this.cellCtrl.isEditing()) {\n      return;\n    }\n\n    if (event.shiftKey && this.cellCtrl.isRangeSelectionEnabled()) {\n      this.onShiftRangeSelect(key);\n    } else {\n      this.beans.navigationService.navigateToNextCell(event, key, this.cellCtrl.getCellPosition(), true);\n    } // if we don't prevent default, the grid will scroll with the navigation keys\n\n\n    event.preventDefault();\n  };\n\n  CellKeyboardListenerFeature.prototype.onShiftRangeSelect = function (key) {\n    if (!this.beans.rangeService) {\n      return;\n    }\n\n    var endCell = this.beans.rangeService.extendLatestRangeInDirection(key);\n\n    if (endCell) {\n      this.beans.navigationService.ensureCellVisible(endCell);\n    }\n  };\n\n  CellKeyboardListenerFeature.prototype.onTabKeyDown = function (event) {\n    this.beans.navigationService.onTabKeyDown(this.cellCtrl, event);\n  };\n\n  CellKeyboardListenerFeature.prototype.onBackspaceOrDeleteKeyPressed = function (key) {\n    if (!this.cellCtrl.isEditing()) {\n      this.cellCtrl.startRowOrCellEdit(key);\n    }\n  };\n\n  CellKeyboardListenerFeature.prototype.onEnterKeyDown = function (e) {\n    if (this.cellCtrl.isEditing() || this.rowCtrl.isEditing()) {\n      this.cellCtrl.stopEditingAndFocus();\n    } else {\n      if (this.beans.gridOptionsWrapper.isEnterMovesDown()) {\n        this.beans.navigationService.navigateToNextCell(null, KeyCode.DOWN, this.cellCtrl.getCellPosition(), false);\n      } else {\n        this.cellCtrl.startRowOrCellEdit(KeyCode.ENTER);\n\n        if (this.cellCtrl.isEditing()) {\n          // if we started editing, then we need to prevent default, otherwise the Enter action can get\n          // applied to the cell editor. this happened, for example, with largeTextCellEditor where not\n          // preventing default results in a 'new line' character getting inserted in the text area\n          // when the editing was started\n          e.preventDefault();\n        }\n      }\n    }\n  };\n\n  CellKeyboardListenerFeature.prototype.onF2KeyDown = function () {\n    if (!this.cellCtrl.isEditing()) {\n      this.cellCtrl.startRowOrCellEdit(KeyCode.F2);\n    }\n  };\n\n  CellKeyboardListenerFeature.prototype.onEscapeKeyDown = function () {\n    if (this.cellCtrl.isEditing()) {\n      this.cellCtrl.stopRowOrCellEdit(true);\n      this.cellCtrl.focusCell(true);\n    }\n  };\n\n  CellKeyboardListenerFeature.prototype.onKeyPress = function (event) {\n    // check this, in case focus is on a (for example) a text field inside the cell,\n    // in which cse we should not be listening for these key pressed\n    var eventTarget = getTarget(event);\n    var eventOnChildComponent = eventTarget !== this.eGui;\n\n    if (eventOnChildComponent || this.cellCtrl.isEditing()) {\n      return;\n    }\n\n    var pressedChar = String.fromCharCode(event.charCode);\n\n    if (pressedChar === ' ') {\n      this.onSpaceKeyPressed(event);\n    } else if (isEventFromPrintableCharacter(event)) {\n      this.cellCtrl.startRowOrCellEdit(null, pressedChar); // if we don't prevent default, then the keypress also gets applied to the text field\n      // (at least when doing the default editor), but we need to allow the editor to decide\n      // what it wants to do. we only do this IF editing was started - otherwise it messes\n      // up when the use is not doing editing, but using rendering with text fields in cellRenderer\n      // (as it would block the the user from typing into text fields).\n\n      event.preventDefault();\n    }\n  };\n\n  CellKeyboardListenerFeature.prototype.onSpaceKeyPressed = function (event) {\n    var gridOptionsWrapper = this.beans.gridOptionsWrapper;\n\n    if (!this.cellCtrl.isEditing() && gridOptionsWrapper.isRowSelection()) {\n      var currentSelection = this.rowNode.isSelected();\n      var newSelection = !currentSelection;\n\n      if (newSelection || !gridOptionsWrapper.isSuppressRowDeselection()) {\n        var groupSelectsFiltered = this.beans.gridOptionsWrapper.isGroupSelectsFiltered();\n        var updatedCount = this.rowNode.setSelectedParams({\n          newValue: newSelection,\n          rangeSelect: event.shiftKey,\n          groupSelectsFiltered: groupSelectsFiltered\n        });\n\n        if (currentSelection === undefined && updatedCount === 0) {\n          this.rowNode.setSelectedParams({\n            newValue: false,\n            rangeSelect: event.shiftKey,\n            groupSelectsFiltered: groupSelectsFiltered\n          });\n        }\n      }\n    } // prevent default as space key, by default, moves browser scroll down\n\n\n    event.preventDefault();\n  };\n\n  CellKeyboardListenerFeature.prototype.destroy = function () {};\n\n  return CellKeyboardListenerFeature;\n}(BeanStub);\n\nexport { CellKeyboardListenerFeature };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/rendering/cell/cellKeyboardListenerFeature.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","BeanStub","KeyCode","getTarget","isEventFromPrintableCharacter","CellKeyboardListenerFeature","_super","ctrl","beans","column","rowNode","scope","rowCtrl","_this","call","cellCtrl","setComp","eGui","onKeyDown","event","key","which","keyCode","ENTER","onEnterKeyDown","F2","onF2KeyDown","ESCAPE","onEscapeKeyDown","TAB","onTabKeyDown","BACKSPACE","DELETE","onBackspaceOrDeleteKeyPressed","DOWN","UP","RIGHT","LEFT","onNavigationKeyPressed","isEditing","shiftKey","isRangeSelectionEnabled","onShiftRangeSelect","navigationService","navigateToNextCell","getCellPosition","preventDefault","rangeService","endCell","extendLatestRangeInDirection","ensureCellVisible","startRowOrCellEdit","e","stopEditingAndFocus","gridOptionsWrapper","isEnterMovesDown","stopRowOrCellEdit","focusCell","onKeyPress","eventTarget","eventOnChildComponent","pressedChar","String","fromCharCode","charCode","onSpaceKeyPressed","isRowSelection","currentSelection","isSelected","newSelection","isSuppressRowDeselection","groupSelectsFiltered","isGroupSelectsFiltered","updatedCount","setSelectedParams","newValue","rangeSelect","undefined","destroy"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,SAASI,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,6BAAT,QAA8C,sBAA9C;;AACA,IAAIC,2BAA2B;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC/DnB,EAAAA,SAAS,CAACkB,2BAAD,EAA8BC,MAA9B,CAAT;;AACA,WAASD,2BAAT,CAAqCE,IAArC,EAA2CC,KAA3C,EAAkDC,MAAlD,EAA0DC,OAA1D,EAAmEC,KAAnE,EAA0EC,OAA1E,EAAmF;AAC/E,QAAIC,KAAK,GAAGP,MAAM,CAACQ,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACAD,IAAAA,KAAK,CAACE,QAAN,GAAiBR,IAAjB;AACAM,IAAAA,KAAK,CAACL,KAAN,GAAcA,KAAd;AACAK,IAAAA,KAAK,CAACJ,MAAN,GAAeA,MAAf;AACAI,IAAAA,KAAK,CAACH,OAAN,GAAgBA,OAAhB;AACAG,IAAAA,KAAK,CAACD,OAAN,GAAgBA,OAAhB;AACA,WAAOC,KAAP;AACH;;AACDR,EAAAA,2BAA2B,CAACN,SAA5B,CAAsCiB,OAAtC,GAAgD,UAAUC,IAAV,EAAgB;AAC5D,SAAKA,IAAL,GAAYA,IAAZ;AACH,GAFD;;AAGAZ,EAAAA,2BAA2B,CAACN,SAA5B,CAAsCmB,SAAtC,GAAkD,UAAUC,KAAV,EAAiB;AAC/D,QAAIC,GAAG,GAAGD,KAAK,CAACE,KAAN,IAAeF,KAAK,CAACG,OAA/B;;AACA,YAAQF,GAAR;AACI,WAAKlB,OAAO,CAACqB,KAAb;AACI,aAAKC,cAAL,CAAoBL,KAApB;AACA;;AACJ,WAAKjB,OAAO,CAACuB,EAAb;AACI,aAAKC,WAAL;AACA;;AACJ,WAAKxB,OAAO,CAACyB,MAAb;AACI,aAAKC,eAAL;AACA;;AACJ,WAAK1B,OAAO,CAAC2B,GAAb;AACI,aAAKC,YAAL,CAAkBX,KAAlB;AACA;;AACJ,WAAKjB,OAAO,CAAC6B,SAAb;AACA,WAAK7B,OAAO,CAAC8B,MAAb;AACI,aAAKC,6BAAL,CAAmCb,GAAnC;AACA;;AACJ,WAAKlB,OAAO,CAACgC,IAAb;AACA,WAAKhC,OAAO,CAACiC,EAAb;AACA,WAAKjC,OAAO,CAACkC,KAAb;AACA,WAAKlC,OAAO,CAACmC,IAAb;AACI,aAAKC,sBAAL,CAA4BnB,KAA5B,EAAmCC,GAAnC;AACA;AAtBR;AAwBH,GA1BD;;AA2BAf,EAAAA,2BAA2B,CAACN,SAA5B,CAAsCuC,sBAAtC,GAA+D,UAAUnB,KAAV,EAAiBC,GAAjB,EAAsB;AACjF,QAAI,KAAKL,QAAL,CAAcwB,SAAd,EAAJ,EAA+B;AAC3B;AACH;;AACD,QAAIpB,KAAK,CAACqB,QAAN,IAAkB,KAAKzB,QAAL,CAAc0B,uBAAd,EAAtB,EAA+D;AAC3D,WAAKC,kBAAL,CAAwBtB,GAAxB;AACH,KAFD,MAGK;AACD,WAAKZ,KAAL,CAAWmC,iBAAX,CAA6BC,kBAA7B,CAAgDzB,KAAhD,EAAuDC,GAAvD,EAA4D,KAAKL,QAAL,CAAc8B,eAAd,EAA5D,EAA6F,IAA7F;AACH,KATgF,CAUjF;;;AACA1B,IAAAA,KAAK,CAAC2B,cAAN;AACH,GAZD;;AAaAzC,EAAAA,2BAA2B,CAACN,SAA5B,CAAsC2C,kBAAtC,GAA2D,UAAUtB,GAAV,EAAe;AACtE,QAAI,CAAC,KAAKZ,KAAL,CAAWuC,YAAhB,EAA8B;AAC1B;AACH;;AACD,QAAIC,OAAO,GAAG,KAAKxC,KAAL,CAAWuC,YAAX,CAAwBE,4BAAxB,CAAqD7B,GAArD,CAAd;;AACA,QAAI4B,OAAJ,EAAa;AACT,WAAKxC,KAAL,CAAWmC,iBAAX,CAA6BO,iBAA7B,CAA+CF,OAA/C;AACH;AACJ,GARD;;AASA3C,EAAAA,2BAA2B,CAACN,SAA5B,CAAsC+B,YAAtC,GAAqD,UAAUX,KAAV,EAAiB;AAClE,SAAKX,KAAL,CAAWmC,iBAAX,CAA6Bb,YAA7B,CAA0C,KAAKf,QAA/C,EAAyDI,KAAzD;AACH,GAFD;;AAGAd,EAAAA,2BAA2B,CAACN,SAA5B,CAAsCkC,6BAAtC,GAAsE,UAAUb,GAAV,EAAe;AACjF,QAAI,CAAC,KAAKL,QAAL,CAAcwB,SAAd,EAAL,EAAgC;AAC5B,WAAKxB,QAAL,CAAcoC,kBAAd,CAAiC/B,GAAjC;AACH;AACJ,GAJD;;AAKAf,EAAAA,2BAA2B,CAACN,SAA5B,CAAsCyB,cAAtC,GAAuD,UAAU4B,CAAV,EAAa;AAChE,QAAI,KAAKrC,QAAL,CAAcwB,SAAd,MAA6B,KAAK3B,OAAL,CAAa2B,SAAb,EAAjC,EAA2D;AACvD,WAAKxB,QAAL,CAAcsC,mBAAd;AACH,KAFD,MAGK;AACD,UAAI,KAAK7C,KAAL,CAAW8C,kBAAX,CAA8BC,gBAA9B,EAAJ,EAAsD;AAClD,aAAK/C,KAAL,CAAWmC,iBAAX,CAA6BC,kBAA7B,CAAgD,IAAhD,EAAsD1C,OAAO,CAACgC,IAA9D,EAAoE,KAAKnB,QAAL,CAAc8B,eAAd,EAApE,EAAqG,KAArG;AACH,OAFD,MAGK;AACD,aAAK9B,QAAL,CAAcoC,kBAAd,CAAiCjD,OAAO,CAACqB,KAAzC;;AACA,YAAI,KAAKR,QAAL,CAAcwB,SAAd,EAAJ,EAA+B;AAC3B;AACA;AACA;AACA;AACAa,UAAAA,CAAC,CAACN,cAAF;AACH;AACJ;AACJ;AACJ,GAnBD;;AAoBAzC,EAAAA,2BAA2B,CAACN,SAA5B,CAAsC2B,WAAtC,GAAoD,YAAY;AAC5D,QAAI,CAAC,KAAKX,QAAL,CAAcwB,SAAd,EAAL,EAAgC;AAC5B,WAAKxB,QAAL,CAAcoC,kBAAd,CAAiCjD,OAAO,CAACuB,EAAzC;AACH;AACJ,GAJD;;AAKApB,EAAAA,2BAA2B,CAACN,SAA5B,CAAsC6B,eAAtC,GAAwD,YAAY;AAChE,QAAI,KAAKb,QAAL,CAAcwB,SAAd,EAAJ,EAA+B;AAC3B,WAAKxB,QAAL,CAAcyC,iBAAd,CAAgC,IAAhC;AACA,WAAKzC,QAAL,CAAc0C,SAAd,CAAwB,IAAxB;AACH;AACJ,GALD;;AAMApD,EAAAA,2BAA2B,CAACN,SAA5B,CAAsC2D,UAAtC,GAAmD,UAAUvC,KAAV,EAAiB;AAChE;AACA;AACA,QAAIwC,WAAW,GAAGxD,SAAS,CAACgB,KAAD,CAA3B;AACA,QAAIyC,qBAAqB,GAAGD,WAAW,KAAK,KAAK1C,IAAjD;;AACA,QAAI2C,qBAAqB,IAAI,KAAK7C,QAAL,CAAcwB,SAAd,EAA7B,EAAwD;AACpD;AACH;;AACD,QAAIsB,WAAW,GAAGC,MAAM,CAACC,YAAP,CAAoB5C,KAAK,CAAC6C,QAA1B,CAAlB;;AACA,QAAIH,WAAW,KAAK,GAApB,EAAyB;AACrB,WAAKI,iBAAL,CAAuB9C,KAAvB;AACH,KAFD,MAGK,IAAIf,6BAA6B,CAACe,KAAD,CAAjC,EAA0C;AAC3C,WAAKJ,QAAL,CAAcoC,kBAAd,CAAiC,IAAjC,EAAuCU,WAAvC,EAD2C,CAE3C;AACA;AACA;AACA;AACA;;AACA1C,MAAAA,KAAK,CAAC2B,cAAN;AACH;AACJ,GArBD;;AAsBAzC,EAAAA,2BAA2B,CAACN,SAA5B,CAAsCkE,iBAAtC,GAA0D,UAAU9C,KAAV,EAAiB;AACvE,QAAImC,kBAAkB,GAAG,KAAK9C,KAAL,CAAW8C,kBAApC;;AACA,QAAI,CAAC,KAAKvC,QAAL,CAAcwB,SAAd,EAAD,IAA8Be,kBAAkB,CAACY,cAAnB,EAAlC,EAAuE;AACnE,UAAIC,gBAAgB,GAAG,KAAKzD,OAAL,CAAa0D,UAAb,EAAvB;AACA,UAAIC,YAAY,GAAG,CAACF,gBAApB;;AACA,UAAIE,YAAY,IAAI,CAACf,kBAAkB,CAACgB,wBAAnB,EAArB,EAAoE;AAChE,YAAIC,oBAAoB,GAAG,KAAK/D,KAAL,CAAW8C,kBAAX,CAA8BkB,sBAA9B,EAA3B;AACA,YAAIC,YAAY,GAAG,KAAK/D,OAAL,CAAagE,iBAAb,CAA+B;AAC9CC,UAAAA,QAAQ,EAAEN,YADoC;AAE9CO,UAAAA,WAAW,EAAEzD,KAAK,CAACqB,QAF2B;AAG9C+B,UAAAA,oBAAoB,EAAEA;AAHwB,SAA/B,CAAnB;;AAKA,YAAIJ,gBAAgB,KAAKU,SAArB,IAAkCJ,YAAY,KAAK,CAAvD,EAA0D;AACtD,eAAK/D,OAAL,CAAagE,iBAAb,CAA+B;AAC3BC,YAAAA,QAAQ,EAAE,KADiB;AAE3BC,YAAAA,WAAW,EAAEzD,KAAK,CAACqB,QAFQ;AAG3B+B,YAAAA,oBAAoB,EAAEA;AAHK,WAA/B;AAKH;AACJ;AACJ,KApBsE,CAqBvE;;;AACApD,IAAAA,KAAK,CAAC2B,cAAN;AACH,GAvBD;;AAwBAzC,EAAAA,2BAA2B,CAACN,SAA5B,CAAsC+E,OAAtC,GAAgD,YAAY,CAC3D,CADD;;AAEA,SAAOzE,2BAAP;AACH,CAvJgD,CAuJ/CJ,QAvJ+C,CAAjD;;AAwJA,SAASI,2BAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BeanStub } from \"../../context/beanStub\";\nimport { KeyCode } from \"../../constants/keyCode\";\nimport { getTarget } from \"../../utils/event\";\nimport { isEventFromPrintableCharacter } from \"../../utils/keyboard\";\nvar CellKeyboardListenerFeature = /** @class */ (function (_super) {\n    __extends(CellKeyboardListenerFeature, _super);\n    function CellKeyboardListenerFeature(ctrl, beans, column, rowNode, scope, rowCtrl) {\n        var _this = _super.call(this) || this;\n        _this.cellCtrl = ctrl;\n        _this.beans = beans;\n        _this.column = column;\n        _this.rowNode = rowNode;\n        _this.rowCtrl = rowCtrl;\n        return _this;\n    }\n    CellKeyboardListenerFeature.prototype.setComp = function (eGui) {\n        this.eGui = eGui;\n    };\n    CellKeyboardListenerFeature.prototype.onKeyDown = function (event) {\n        var key = event.which || event.keyCode;\n        switch (key) {\n            case KeyCode.ENTER:\n                this.onEnterKeyDown(event);\n                break;\n            case KeyCode.F2:\n                this.onF2KeyDown();\n                break;\n            case KeyCode.ESCAPE:\n                this.onEscapeKeyDown();\n                break;\n            case KeyCode.TAB:\n                this.onTabKeyDown(event);\n                break;\n            case KeyCode.BACKSPACE:\n            case KeyCode.DELETE:\n                this.onBackspaceOrDeleteKeyPressed(key);\n                break;\n            case KeyCode.DOWN:\n            case KeyCode.UP:\n            case KeyCode.RIGHT:\n            case KeyCode.LEFT:\n                this.onNavigationKeyPressed(event, key);\n                break;\n        }\n    };\n    CellKeyboardListenerFeature.prototype.onNavigationKeyPressed = function (event, key) {\n        if (this.cellCtrl.isEditing()) {\n            return;\n        }\n        if (event.shiftKey && this.cellCtrl.isRangeSelectionEnabled()) {\n            this.onShiftRangeSelect(key);\n        }\n        else {\n            this.beans.navigationService.navigateToNextCell(event, key, this.cellCtrl.getCellPosition(), true);\n        }\n        // if we don't prevent default, the grid will scroll with the navigation keys\n        event.preventDefault();\n    };\n    CellKeyboardListenerFeature.prototype.onShiftRangeSelect = function (key) {\n        if (!this.beans.rangeService) {\n            return;\n        }\n        var endCell = this.beans.rangeService.extendLatestRangeInDirection(key);\n        if (endCell) {\n            this.beans.navigationService.ensureCellVisible(endCell);\n        }\n    };\n    CellKeyboardListenerFeature.prototype.onTabKeyDown = function (event) {\n        this.beans.navigationService.onTabKeyDown(this.cellCtrl, event);\n    };\n    CellKeyboardListenerFeature.prototype.onBackspaceOrDeleteKeyPressed = function (key) {\n        if (!this.cellCtrl.isEditing()) {\n            this.cellCtrl.startRowOrCellEdit(key);\n        }\n    };\n    CellKeyboardListenerFeature.prototype.onEnterKeyDown = function (e) {\n        if (this.cellCtrl.isEditing() || this.rowCtrl.isEditing()) {\n            this.cellCtrl.stopEditingAndFocus();\n        }\n        else {\n            if (this.beans.gridOptionsWrapper.isEnterMovesDown()) {\n                this.beans.navigationService.navigateToNextCell(null, KeyCode.DOWN, this.cellCtrl.getCellPosition(), false);\n            }\n            else {\n                this.cellCtrl.startRowOrCellEdit(KeyCode.ENTER);\n                if (this.cellCtrl.isEditing()) {\n                    // if we started editing, then we need to prevent default, otherwise the Enter action can get\n                    // applied to the cell editor. this happened, for example, with largeTextCellEditor where not\n                    // preventing default results in a 'new line' character getting inserted in the text area\n                    // when the editing was started\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    CellKeyboardListenerFeature.prototype.onF2KeyDown = function () {\n        if (!this.cellCtrl.isEditing()) {\n            this.cellCtrl.startRowOrCellEdit(KeyCode.F2);\n        }\n    };\n    CellKeyboardListenerFeature.prototype.onEscapeKeyDown = function () {\n        if (this.cellCtrl.isEditing()) {\n            this.cellCtrl.stopRowOrCellEdit(true);\n            this.cellCtrl.focusCell(true);\n        }\n    };\n    CellKeyboardListenerFeature.prototype.onKeyPress = function (event) {\n        // check this, in case focus is on a (for example) a text field inside the cell,\n        // in which cse we should not be listening for these key pressed\n        var eventTarget = getTarget(event);\n        var eventOnChildComponent = eventTarget !== this.eGui;\n        if (eventOnChildComponent || this.cellCtrl.isEditing()) {\n            return;\n        }\n        var pressedChar = String.fromCharCode(event.charCode);\n        if (pressedChar === ' ') {\n            this.onSpaceKeyPressed(event);\n        }\n        else if (isEventFromPrintableCharacter(event)) {\n            this.cellCtrl.startRowOrCellEdit(null, pressedChar);\n            // if we don't prevent default, then the keypress also gets applied to the text field\n            // (at least when doing the default editor), but we need to allow the editor to decide\n            // what it wants to do. we only do this IF editing was started - otherwise it messes\n            // up when the use is not doing editing, but using rendering with text fields in cellRenderer\n            // (as it would block the the user from typing into text fields).\n            event.preventDefault();\n        }\n    };\n    CellKeyboardListenerFeature.prototype.onSpaceKeyPressed = function (event) {\n        var gridOptionsWrapper = this.beans.gridOptionsWrapper;\n        if (!this.cellCtrl.isEditing() && gridOptionsWrapper.isRowSelection()) {\n            var currentSelection = this.rowNode.isSelected();\n            var newSelection = !currentSelection;\n            if (newSelection || !gridOptionsWrapper.isSuppressRowDeselection()) {\n                var groupSelectsFiltered = this.beans.gridOptionsWrapper.isGroupSelectsFiltered();\n                var updatedCount = this.rowNode.setSelectedParams({\n                    newValue: newSelection,\n                    rangeSelect: event.shiftKey,\n                    groupSelectsFiltered: groupSelectsFiltered\n                });\n                if (currentSelection === undefined && updatedCount === 0) {\n                    this.rowNode.setSelectedParams({\n                        newValue: false,\n                        rangeSelect: event.shiftKey,\n                        groupSelectsFiltered: groupSelectsFiltered\n                    });\n                }\n            }\n        }\n        // prevent default as space key, by default, moves browser scroll down\n        event.preventDefault();\n    };\n    CellKeyboardListenerFeature.prototype.destroy = function () {\n    };\n    return CellKeyboardListenerFeature;\n}(BeanStub));\nexport { CellKeyboardListenerFeature };\n"]},"metadata":{},"sourceType":"module"}