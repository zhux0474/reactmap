{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { Constants } from \"../../constants/constants\";\nimport { BeanStub } from \"../../context/beanStub\";\nimport { RowHighlightPosition, RowNode } from \"../../entities/rowNode\";\nimport { Events } from \"../../events\";\nimport { ModuleNames } from \"../../modules/moduleNames\";\nimport { ModuleRegistry } from \"../../modules/moduleRegistry\";\nimport { addCssClass, addOrRemoveCssClass, isElementChildOfClass, removeCssClass } from \"../../utils/dom\";\nimport { isStopPropagationForAgGrid } from \"../../utils/event\";\nimport { doOnce, executeNextVMTurn } from \"../../utils/function\";\nimport { exists, find } from \"../../utils/generic\";\nimport { convertToMap } from \"../../utils/map\";\nimport { assign } from \"../../utils/object\";\nimport { escapeString } from \"../../utils/string\";\nimport { CellCtrl } from \"../cell/cellCtrl\";\nimport { AngularRowUtils } from \"./angularRowUtils\";\nimport { RowDragComp } from \"./rowDragComp\";\nexport var RowType;\n\n(function (RowType) {\n  RowType[\"Normal\"] = \"Normal\";\n  RowType[\"FullWidth\"] = \"FullWidth\";\n  RowType[\"FullWidthLoading\"] = \"FullWidthLoading\";\n  RowType[\"FullWidthGroup\"] = \"FullWidthGroup\";\n  RowType[\"FullWidthDetail\"] = \"FullWidthDetail\";\n})(RowType || (RowType = {}));\n\nexport var FullWidthRenderers = convertToMap([[RowType.FullWidthLoading, 'agLoadingCellRenderer'], [RowType.FullWidthGroup, 'agGroupRowRenderer'], [RowType.FullWidthDetail, 'agDetailCellRenderer']]);\nexport var FullWidthKeys = convertToMap([[RowType.FullWidth, 'fullWidthCellRenderer'], [RowType.FullWidthLoading, 'loadingCellRenderer'], [RowType.FullWidthGroup, 'groupRowRenderer'], [RowType.FullWidthDetail, 'detailCellRenderer']]);\nvar instanceIdSequence = 0;\n\nvar RowCtrl =\n/** @class */\nfunction (_super) {\n  __extends(RowCtrl, _super);\n\n  function RowCtrl(parentScope, rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout) {\n    var _this = _super.call(this) || this;\n\n    _this.allRowGuis = [];\n    _this.active = true;\n    _this.centerCellCtrls = {\n      list: [],\n      map: {}\n    };\n    _this.leftCellCtrls = {\n      list: [],\n      map: {}\n    };\n    _this.rightCellCtrls = {\n      list: [],\n      map: {}\n    };\n    _this.lastMouseDownOnDragger = false;\n    _this.updateColumnListsPending = false;\n    _this.parentScope = parentScope;\n    _this.beans = beans;\n    _this.rowNode = rowNode;\n    _this.paginationPage = _this.beans.paginationProxy.getCurrentPage();\n    _this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n    _this.printLayout = printLayout;\n    _this.instanceId = rowNode.id + '-' + instanceIdSequence++;\n\n    _this.setAnimateFlags(animateIn);\n\n    _this.rowFocused = _this.beans.focusService.isRowFocused(_this.rowNode.rowIndex, _this.rowNode.rowPinned);\n\n    _this.setupAngular1Scope();\n\n    _this.rowLevel = _this.beans.rowCssClassCalculator.calculateRowLevel(_this.rowNode);\n\n    _this.setRowType();\n\n    _this.addListeners();\n\n    _this.setInitialRowTop();\n\n    return _this;\n  }\n\n  RowCtrl.prototype.getBeans = function () {\n    return this.beans;\n  };\n\n  RowCtrl.prototype.getInstanceId = function () {\n    return this.instanceId;\n  };\n\n  RowCtrl.prototype.setComp = function (rowComp, element, pinned) {\n    var gui = {\n      rowComp: rowComp,\n      element: element,\n      pinned: pinned\n    };\n    this.allRowGuis.push(gui);\n\n    if (pinned === Constants.PINNED_LEFT) {\n      this.leftGui = gui;\n    } else if (pinned === Constants.PINNED_RIGHT) {\n      this.rightGui = gui;\n    } else if (this.isFullWidth() && !this.beans.gridOptionsWrapper.isEmbedFullWidthRows()) {\n      this.fullWidthGui = gui;\n    } else {\n      this.centerGui = gui;\n    }\n\n    var allNormalPresent = this.leftGui != null && this.rightGui != null && this.centerGui != null;\n    var fullWidthPresent = this.fullWidthGui != null;\n\n    if (allNormalPresent || fullWidthPresent) {\n      this.initialiseRowComps();\n    }\n  };\n\n  RowCtrl.prototype.isCacheable = function () {\n    return this.rowType === RowType.FullWidthDetail && this.beans.gridOptionsWrapper.isKeepDetailRows();\n  };\n\n  RowCtrl.prototype.setCached = function (cached) {\n    var displayValue = cached ? 'none' : undefined;\n    this.allRowGuis.forEach(function (rg) {\n      return rg.rowComp.setDisplay(displayValue);\n    });\n  };\n\n  RowCtrl.prototype.initialiseRowComps = function () {\n    var _this = this;\n\n    var gow = this.beans.gridOptionsWrapper;\n    this.onRowHeightChanged();\n    this.updateRowIndexes();\n    this.setFocusedClasses();\n    this.setStylesFromGridOptions();\n\n    if (gow.isRowSelection() && this.rowNode.selectable) {\n      this.onRowSelected();\n    }\n\n    this.updateColumnLists(!this.useAnimationFrameForCreate);\n\n    if (this.slideRowIn) {\n      executeNextVMTurn(this.onTopChanged.bind(this));\n    }\n\n    if (this.fadeRowIn) {\n      executeNextVMTurn(function () {\n        _this.allRowGuis.forEach(function (gui) {\n          return gui.rowComp.addOrRemoveCssClass('ag-opacity-zero', false);\n        });\n      });\n    }\n\n    var businessKey = this.getRowBusinessKey();\n    var rowIdSanitised = escapeString(this.rowNode.id);\n    var businessKeySanitised = escapeString(businessKey);\n    this.allRowGuis.forEach(function (gui) {\n      var comp = gui.rowComp;\n      comp.setRole('row');\n\n      var initialRowClasses = _this.getInitialRowClasses(gui.pinned);\n\n      initialRowClasses.forEach(function (name) {\n        return comp.addOrRemoveCssClass(name, true);\n      });\n\n      if (_this.rowNode.group) {\n        comp.setAriaExpanded(_this.rowNode.expanded == true);\n      }\n\n      if (rowIdSanitised != null) {\n        comp.setRowId(rowIdSanitised);\n      }\n\n      if (businessKeySanitised != null) {\n        comp.setRowBusinessKey(businessKeySanitised);\n      }\n\n      if (_this.isFullWidth()) {\n        comp.setTabIndex(-1);\n      } // DOM DATA\n\n\n      gow.setDomData(gui.element, RowCtrl.DOM_DATA_KEY_ROW_CTRL, _this);\n\n      _this.addDestroyFunc(function () {\n        return gow.setDomData(gui.element, RowCtrl.DOM_DATA_KEY_ROW_CTRL, null);\n      }); // adding hover functionality adds listener to this row, so we\n      // do it lazily in an animation frame\n\n\n      if (_this.useAnimationFrameForCreate) {\n        _this.beans.animationFrameService.createTask(_this.addHoverFunctionality.bind(_this, gui.element), _this.rowNode.rowIndex, 'createTasksP2');\n      } else {\n        _this.addHoverFunctionality(gui.element);\n      }\n\n      if (_this.isFullWidth()) {\n        _this.setupFullWidth(gui);\n      }\n\n      if (gow.isRowDragEntireRow()) {\n        _this.addRowDraggerToRow(gui);\n      } // the height animation we only want active after the row is alive for 1 second.\n      // this stops the row animation working when rows are initially crated. otherwise\n      // auto-height rows get inserted into the dom and resized immediately, which gives\n      // very bad UX (eg 10 rows get inserted, then all 10 expand, look particularly bad\n      // when scrolling). so this makes sure when rows are shown for the first time, they\n      // are resized immediately without animation.\n\n\n      _this.beans.animationFrameService.addDestroyTask(function () {\n        if (_this.isAlive()) {\n          gui.rowComp.addOrRemoveCssClass('ag-after-created', true);\n        }\n      });\n    });\n    this.executeProcessRowPostCreateFunc();\n  };\n\n  RowCtrl.prototype.addRowDraggerToRow = function (gui) {\n    var gow = this.beans.gridOptionsWrapper;\n\n    if (gow.isEnableRangeSelection()) {\n      doOnce(function () {\n        console.warn('AG Grid: Setting `rowDragEntireRow: true` in the gridOptions doesn\\'t work with `enableRangeSelection: true`');\n      }, 'rowDragAndRangeSelectionEnabled');\n      return;\n    }\n\n    var rowDragComp = new RowDragComp(function () {\n      return '1 row';\n    }, this.rowNode, undefined, gui.element, undefined, true);\n    this.createManagedBean(rowDragComp, this.beans.context);\n  };\n\n  RowCtrl.prototype.getFullWidthCellRendererType = function () {\n    return FullWidthKeys.get(this.rowType);\n  };\n\n  RowCtrl.prototype.getFullWidthCellRendererName = function () {\n    return FullWidthRenderers.get(this.rowType);\n  };\n\n  RowCtrl.prototype.setupFullWidth = function (gui) {\n    var params = this.createFullWidthParams(gui.element, gui.pinned);\n    var cellRendererType = this.getFullWidthCellRendererType();\n    var cellRendererName = this.getFullWidthCellRendererName();\n    var compDetails = this.beans.userComponentFactory.getFullWidthCellRendererDetails(params, cellRendererType, cellRendererName);\n\n    if (compDetails) {\n      gui.rowComp.showFullWidth(compDetails);\n    } else {\n      var masterDetailModuleLoaded = ModuleRegistry.isRegistered(ModuleNames.MasterDetailModule);\n\n      if (cellRendererName === 'agDetailCellRenderer' && !masterDetailModuleLoaded) {\n        console.warn(\"AG Grid: cell renderer agDetailCellRenderer (for master detail) not found. Did you forget to include the master detail module?\");\n      } else {\n        console.error(\"AG Grid: fullWidthCellRenderer \" + cellRendererName + \" not found\");\n      }\n    }\n  };\n\n  RowCtrl.prototype.getScope = function () {\n    return this.scope;\n  };\n\n  RowCtrl.prototype.isPrintLayout = function () {\n    return this.printLayout;\n  };\n\n  RowCtrl.prototype.setupAngular1Scope = function () {\n    var scopeResult = AngularRowUtils.createChildScopeOrNull(this.rowNode, this.parentScope, this.beans.gridOptionsWrapper);\n\n    if (scopeResult) {\n      this.scope = scopeResult.scope;\n      this.addDestroyFunc(scopeResult.scopeDestroyFunc);\n    }\n  }; // use by autoWidthCalculator, as it clones the elements\n\n\n  RowCtrl.prototype.getCellElement = function (column) {\n    var cellCtrl = this.getCellCtrl(column);\n    return cellCtrl ? cellCtrl.getGui() : null;\n  };\n\n  RowCtrl.prototype.executeProcessRowPostCreateFunc = function () {\n    var func = this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();\n\n    if (!func) {\n      return;\n    }\n\n    var params = {\n      eRow: this.centerGui ? this.centerGui.element : undefined,\n      ePinnedLeftRow: this.leftGui ? this.leftGui.element : undefined,\n      ePinnedRightRow: this.rightGui ? this.rightGui.element : undefined,\n      node: this.rowNode,\n      api: this.beans.gridOptionsWrapper.getApi(),\n      rowIndex: this.rowNode.rowIndex,\n      addRenderedRowListener: this.addEventListener.bind(this),\n      columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n      context: this.beans.gridOptionsWrapper.getContext()\n    };\n    func(params);\n  };\n\n  RowCtrl.prototype.setRowType = function () {\n    var isStub = this.rowNode.stub;\n    var isFullWidthCell = this.rowNode.isFullWidthCell();\n    var isDetailCell = this.beans.doingMasterDetail && this.rowNode.detail;\n    var pivotMode = this.beans.columnModel.isPivotMode(); // we only use full width for groups, not footers. it wouldn't make sense to include footers if not looking\n    // for totals. if users complain about this, then we should introduce a new property 'footerUseEntireRow'\n    // so each can be set independently (as a customer complained about footers getting full width, hence\n    // introducing this logic)\n\n    var isGroupRow = !!this.rowNode.group && !this.rowNode.footer;\n    var isFullWidthGroup = isGroupRow && this.beans.gridOptionsWrapper.isGroupUseEntireRow(pivotMode);\n\n    if (isStub) {\n      this.rowType = RowType.FullWidthLoading;\n    } else if (isDetailCell) {\n      this.rowType = RowType.FullWidthDetail;\n    } else if (isFullWidthCell) {\n      this.rowType = RowType.FullWidth;\n    } else if (isFullWidthGroup) {\n      this.rowType = RowType.FullWidthGroup;\n    } else {\n      this.rowType = RowType.Normal;\n    }\n  };\n\n  RowCtrl.prototype.updateColumnLists = function (suppressAnimationFrame) {\n    var _this = this;\n\n    if (suppressAnimationFrame === void 0) {\n      suppressAnimationFrame = false;\n    }\n\n    if (this.isFullWidth()) {\n      return;\n    }\n\n    var noAnimation = suppressAnimationFrame || this.beans.gridOptionsWrapper.isSuppressAnimationFrame() || this.printLayout;\n\n    if (noAnimation) {\n      this.updateColumnListsImpl();\n      return;\n    }\n\n    if (this.updateColumnListsPending) {\n      return;\n    }\n\n    this.beans.animationFrameService.createTask(function () {\n      if (!_this.active) {\n        return;\n      }\n\n      _this.updateColumnListsImpl();\n    }, this.rowNode.rowIndex, 'createTasksP1');\n    this.updateColumnListsPending = true;\n  };\n\n  RowCtrl.prototype.createCellCtrls = function (prev, cols, pinned) {\n    var _this = this;\n\n    if (pinned === void 0) {\n      pinned = null;\n    }\n\n    var res = {\n      list: [],\n      map: {}\n    };\n\n    var addCell = function (colInstanceId, cellCtrl) {\n      res.list.push(cellCtrl);\n      res.map[colInstanceId] = cellCtrl;\n    };\n\n    cols.forEach(function (col) {\n      // we use instanceId's rather than colId as it's possible there is a Column with same Id,\n      // but it's referring to a different column instance. Happens a lot with pivot, as pivot col id's are\n      // reused eg pivot_0, pivot_1 etc\n      var colInstanceId = col.getInstanceId();\n      var cellCtrl = prev.map[colInstanceId];\n\n      if (!cellCtrl) {\n        cellCtrl = new CellCtrl(col, _this.rowNode, _this.beans, _this);\n      }\n\n      addCell(colInstanceId, cellCtrl);\n    });\n    prev.list.forEach(function (prevCellCtrl) {\n      var cellInResult = res.map[prevCellCtrl.getColumn().getInstanceId()] != null;\n\n      if (cellInResult) {\n        return;\n      }\n\n      var keepCell = !_this.isCellEligibleToBeRemoved(prevCellCtrl, pinned);\n\n      if (keepCell) {\n        addCell(prevCellCtrl.getColumn().getInstanceId(), prevCellCtrl);\n        return;\n      }\n\n      prevCellCtrl.destroy();\n    });\n    return res;\n  };\n\n  RowCtrl.prototype.updateColumnListsImpl = function () {\n    var _this = this;\n\n    this.updateColumnListsPending = false;\n    var columnModel = this.beans.columnModel;\n\n    if (this.printLayout) {\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, columnModel.getAllDisplayedColumns());\n      this.leftCellCtrls = {\n        list: [],\n        map: {}\n      };\n      this.rightCellCtrls = {\n        list: [],\n        map: {}\n      };\n    } else {\n      var centerCols = columnModel.getViewportCenterColumnsForRow(this.rowNode);\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, centerCols);\n      var leftCols = columnModel.getDisplayedLeftColumnsForRow(this.rowNode);\n      this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, leftCols, Constants.PINNED_LEFT);\n      var rightCols = columnModel.getDisplayedRightColumnsForRow(this.rowNode);\n      this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, rightCols, Constants.PINNED_RIGHT);\n    }\n\n    this.allRowGuis.forEach(function (item) {\n      var cellControls = item.pinned === Constants.PINNED_LEFT ? _this.leftCellCtrls : item.pinned === Constants.PINNED_RIGHT ? _this.rightCellCtrls : _this.centerCellCtrls;\n      item.rowComp.setCellCtrls(cellControls.list);\n    });\n  };\n\n  RowCtrl.prototype.isCellEligibleToBeRemoved = function (cellCtrl, nextContainerPinned) {\n    var REMOVE_CELL = true;\n    var KEEP_CELL = false; // always remove the cell if it's not rendered or if it's in the wrong pinned location\n\n    var column = cellCtrl.getColumn();\n\n    if (column.getPinned() != nextContainerPinned) {\n      return REMOVE_CELL;\n    } // we want to try and keep editing and focused cells\n\n\n    var editing = cellCtrl.isEditing();\n    var focused = this.beans.focusService.isCellFocused(cellCtrl.getCellPosition());\n    var mightWantToKeepCell = editing || focused;\n\n    if (mightWantToKeepCell) {\n      var column_1 = cellCtrl.getColumn();\n      var displayedColumns = this.beans.columnModel.getAllDisplayedColumns();\n      var cellStillDisplayed = displayedColumns.indexOf(column_1) >= 0;\n      return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n    }\n\n    return REMOVE_CELL;\n  };\n\n  RowCtrl.prototype.setAnimateFlags = function (animateIn) {\n    if (animateIn) {\n      var oldRowTopExists = exists(this.rowNode.oldRowTop); // if the row had a previous position, we slide it in (animate row top)\n\n      this.slideRowIn = oldRowTopExists; // if the row had no previous position, we fade it in (animate\n\n      this.fadeRowIn = !oldRowTopExists;\n    } else {\n      this.slideRowIn = false;\n      this.fadeRowIn = false;\n    }\n  };\n\n  RowCtrl.prototype.isEditing = function () {\n    return this.editingRow;\n  };\n\n  RowCtrl.prototype.stopRowEditing = function (cancel) {\n    this.stopEditing(cancel);\n  };\n\n  RowCtrl.prototype.isFullWidth = function () {\n    return this.rowType !== RowType.Normal;\n  };\n\n  RowCtrl.prototype.getRowType = function () {\n    return this.rowType;\n  };\n\n  RowCtrl.prototype.refreshFullWidth = function () {\n    var _this = this; // returns 'true' if refresh succeeded\n\n\n    var tryRefresh = function (gui, pinned) {\n      if (!gui) {\n        return true;\n      } // no refresh needed\n\n\n      var cellRenderer = gui.rowComp.getFullWidthCellRenderer(); // no cell renderer, either means comp not yet ready, or comp ready but now reference\n      // to it (happens in react when comp is stateless). if comp not ready, we don't need to\n      // refresh, however we don't know which one, so we refresh to cover the case where it's\n      // react comp without reference so need to force a refresh\n\n      if (!cellRenderer) {\n        return false;\n      } // no refresh method present, so can't refresh, hard refresh needed\n\n\n      if (!cellRenderer.refresh) {\n        return false;\n      }\n\n      var params = _this.createFullWidthParams(gui.element, pinned);\n\n      var refreshSucceeded = cellRenderer.refresh(params);\n      return refreshSucceeded;\n    };\n\n    var fullWidthSuccess = tryRefresh(this.fullWidthGui, null);\n    var centerSuccess = tryRefresh(this.centerGui, null);\n    var leftSuccess = tryRefresh(this.leftGui, Constants.PINNED_LEFT);\n    var rightSuccess = tryRefresh(this.rightGui, Constants.PINNED_RIGHT);\n    var allFullWidthRowsRefreshed = fullWidthSuccess && centerSuccess && leftSuccess && rightSuccess;\n    return allFullWidthRowsRefreshed;\n  };\n\n  RowCtrl.prototype.addListeners = function () {\n    this.addManagedListener(this.rowNode, RowNode.EVENT_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_TOP_CHANGED, this.onTopChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_EXPANDED_CHANGED, this.updateExpandedCss.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_HAS_CHILDREN_CHANGED, this.updateExpandedCss.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_HIGHLIGHT_CHANGED, this.onRowNodeHighlightChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_UI_LEVEL_CHANGED, this.onUiLevelChanged.bind(this));\n    var eventService = this.beans.eventService;\n    this.addManagedListener(eventService, Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED, this.onPaginationPixelOffsetChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_COLUMN_MOVED, this.onColumnMoved.bind(this));\n    this.addListenersForCellComps();\n  };\n\n  RowCtrl.prototype.onColumnMoved = function () {\n    this.updateColumnLists();\n  };\n\n  RowCtrl.prototype.addListenersForCellComps = function () {\n    var _this = this;\n\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, function () {\n      _this.getAllCellCtrls().forEach(function (cellCtrl) {\n        return cellCtrl.onRowIndexChanged();\n      });\n    });\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, function (event) {\n      _this.getAllCellCtrls().forEach(function (cellCtrl) {\n        return cellCtrl.onCellChanged(event);\n      });\n    });\n  };\n\n  RowCtrl.prototype.onRowNodeDataChanged = function (event) {\n    // if this is an update, we want to refresh, as this will allow the user to put in a transition\n    // into the cellRenderer refresh method. otherwise this might be completely new data, in which case\n    // we will want to completely replace the cells\n    this.getAllCellCtrls().forEach(function (cellCtrl) {\n      return cellCtrl.refreshCell({\n        suppressFlash: !event.update,\n        newData: !event.update\n      });\n    }); // check for selected also, as this could be after lazy loading of the row data, in which case\n    // the id might of just gotten set inside the row and the row selected state may of changed\n    // as a result. this is what happens when selected rows are loaded in virtual pagination.\n    // - niall note - since moving to the stub component, this may no longer be true, as replacing\n    // the stub component now replaces the entire row\n\n    this.onRowSelected(); // as data has changed, then the style and class needs to be recomputed\n\n    this.postProcessCss();\n  };\n\n  RowCtrl.prototype.onRowNodeCellChanged = function () {\n    // as data has changed, then the style and class needs to be recomputed\n    this.postProcessCss();\n  };\n\n  RowCtrl.prototype.postProcessCss = function () {\n    this.setStylesFromGridOptions();\n    this.postProcessClassesFromGridOptions();\n    this.postProcessRowClassRules();\n    this.postProcessRowDragging();\n  };\n\n  RowCtrl.prototype.onRowNodeHighlightChanged = function () {\n    var highlighted = this.rowNode.highlighted;\n    this.allRowGuis.forEach(function (gui) {\n      var aboveOn = highlighted === RowHighlightPosition.Above;\n      var belowOn = highlighted === RowHighlightPosition.Below;\n      gui.rowComp.addOrRemoveCssClass('ag-row-highlight-above', aboveOn);\n      gui.rowComp.addOrRemoveCssClass('ag-row-highlight-below', belowOn);\n    });\n  };\n\n  RowCtrl.prototype.onRowNodeDraggingChanged = function () {\n    this.postProcessRowDragging();\n  };\n\n  RowCtrl.prototype.postProcessRowDragging = function () {\n    var dragging = this.rowNode.dragging;\n    this.allRowGuis.forEach(function (gui) {\n      return gui.rowComp.addOrRemoveCssClass('ag-row-dragging', dragging);\n    });\n  };\n\n  RowCtrl.prototype.updateExpandedCss = function () {\n    var expandable = this.rowNode.isExpandable();\n    var expanded = this.rowNode.expanded == true;\n    this.allRowGuis.forEach(function (gui) {\n      gui.rowComp.addOrRemoveCssClass('ag-row-group', expandable);\n      gui.rowComp.addOrRemoveCssClass('ag-row-group-expanded', expandable && expanded);\n      gui.rowComp.addOrRemoveCssClass('ag-row-group-contracted', expandable && !expanded);\n      gui.rowComp.setAriaExpanded(expandable && expanded);\n    });\n  };\n\n  RowCtrl.prototype.onDisplayedColumnsChanged = function () {\n    // we skip animations for onDisplayedColumnChanged, as otherwise the client could remove columns and\n    // then set data, and any old valueGetter's (ie from cols that were removed) would still get called.\n    this.updateColumnLists(true);\n\n    if (this.beans.columnModel.wasAutoRowHeightEverActive()) {\n      this.rowNode.checkAutoHeights();\n    }\n  };\n\n  RowCtrl.prototype.onVirtualColumnsChanged = function () {\n    this.updateColumnLists();\n  };\n\n  RowCtrl.prototype.getRowPosition = function () {\n    return {\n      rowPinned: this.rowNode.rowPinned,\n      rowIndex: this.rowNode.rowIndex\n    };\n  };\n\n  RowCtrl.prototype.onKeyboardNavigate = function (keyboardEvent) {\n    var currentFullWidthComp = find(this.allRowGuis, function (c) {\n      return c.element.contains(keyboardEvent.target);\n    });\n    var currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n    var isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n\n    if (!isFullWidthContainerFocused) {\n      return;\n    }\n\n    var node = this.rowNode;\n    var lastFocusedCell = this.beans.focusService.getFocusedCell();\n    var cellPosition = {\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      column: lastFocusedCell && lastFocusedCell.column\n    };\n    this.beans.navigationService.navigateToNextCell(keyboardEvent, keyboardEvent.keyCode, cellPosition, true);\n    keyboardEvent.preventDefault();\n  };\n\n  RowCtrl.prototype.onTabKeyDown = function (keyboardEvent) {\n    if (keyboardEvent.defaultPrevented || isStopPropagationForAgGrid(keyboardEvent)) {\n      return;\n    }\n\n    var currentFullWidthComp = find(this.allRowGuis, function (c) {\n      return c.element.contains(keyboardEvent.target);\n    });\n    var currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n    var isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n    var nextEl = null;\n\n    if (!isFullWidthContainerFocused) {\n      nextEl = this.beans.focusService.findNextFocusableElement(currentFullWidthContainer, false, keyboardEvent.shiftKey);\n    }\n\n    if (this.isFullWidth() && isFullWidthContainerFocused || !nextEl) {\n      this.beans.navigationService.onTabKeyDown(this, keyboardEvent);\n    }\n  };\n\n  RowCtrl.prototype.onFullWidthRowFocused = function (event) {\n    var node = this.rowNode;\n    var isFocused = this.isFullWidth() && event.rowIndex === node.rowIndex && event.rowPinned == node.rowPinned;\n    var element = this.fullWidthGui ? this.fullWidthGui.element : this.centerGui.element;\n    addOrRemoveCssClass(element, 'ag-full-width-focus', isFocused);\n\n    if (isFocused) {\n      // we don't scroll normal rows into view when we focus them, so we don't want\n      // to scroll Full Width rows either.\n      element.focus({\n        preventScroll: true\n      });\n    }\n  };\n\n  RowCtrl.prototype.refreshCell = function (cellCtrl) {\n    this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, cellCtrl);\n    this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, cellCtrl);\n    this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, cellCtrl);\n    this.updateColumnLists();\n  };\n\n  RowCtrl.prototype.removeCellCtrl = function (prev, cellCtrlToRemove) {\n    var res = {\n      list: [],\n      map: {}\n    };\n    prev.list.forEach(function (cellCtrl) {\n      if (cellCtrl === cellCtrlToRemove) {\n        return;\n      }\n\n      res.list.push(cellCtrl);\n      res.map[cellCtrl.getInstanceId()] = cellCtrl;\n    });\n    return res;\n  };\n\n  RowCtrl.prototype.onMouseEvent = function (eventName, mouseEvent) {\n    switch (eventName) {\n      case 'dblclick':\n        this.onRowDblClick(mouseEvent);\n        break;\n\n      case 'click':\n        this.onRowClick(mouseEvent);\n        break;\n\n      case 'touchstart':\n      case 'mousedown':\n        this.onRowMouseDown(mouseEvent);\n        break;\n    }\n  };\n\n  RowCtrl.prototype.createRowEvent = function (type, domEvent) {\n    return {\n      type: type,\n      node: this.rowNode,\n      data: this.rowNode.data,\n      rowIndex: this.rowNode.rowIndex,\n      rowPinned: this.rowNode.rowPinned,\n      context: this.beans.gridOptionsWrapper.getContext(),\n      api: this.beans.gridOptionsWrapper.getApi(),\n      columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n      event: domEvent\n    };\n  };\n\n  RowCtrl.prototype.createRowEventWithSource = function (type, domEvent) {\n    var event = this.createRowEvent(type, domEvent); // when first developing this, we included the rowComp in the event.\n    // this seems very weird. so when introducing the event types, i left the 'source'\n    // out of the type, and just include the source in the two places where this event\n    // was fired (rowClicked and rowDoubleClicked). it doesn't make sense for any\n    // users to be using this, as the rowComp isn't an object we expose, so would be\n    // very surprising if a user was using it.\n\n    event.source = this;\n    return event;\n  };\n\n  RowCtrl.prototype.onRowDblClick = function (mouseEvent) {\n    if (isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n\n    var agEvent = this.createRowEventWithSource(Events.EVENT_ROW_DOUBLE_CLICKED, mouseEvent);\n    this.beans.eventService.dispatchEvent(agEvent);\n  };\n\n  RowCtrl.prototype.onRowMouseDown = function (mouseEvent) {\n    this.lastMouseDownOnDragger = isElementChildOfClass(mouseEvent.target, 'ag-row-drag', 3);\n\n    if (!this.isFullWidth()) {\n      return;\n    }\n\n    var node = this.rowNode;\n    var columnModel = this.beans.columnModel;\n    this.beans.focusService.setFocusedCell(node.rowIndex, columnModel.getAllDisplayedColumns()[0], node.rowPinned, true);\n  };\n\n  RowCtrl.prototype.onRowClick = function (mouseEvent) {\n    var stop = isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n\n    if (stop) {\n      return;\n    }\n\n    var agEvent = this.createRowEventWithSource(Events.EVENT_ROW_CLICKED, mouseEvent);\n    this.beans.eventService.dispatchEvent(agEvent); // ctrlKey for windows, metaKey for Apple\n\n    var multiSelectKeyPressed = mouseEvent.ctrlKey || mouseEvent.metaKey;\n    var shiftKeyPressed = mouseEvent.shiftKey; // we do not allow selecting the group by clicking, when groupSelectChildren, as the logic to\n    // handle this is broken. to observe, change the logic below and allow groups to be selected.\n    // you will see the group gets selected, then all children get selected, then the grid unselects\n    // the children (as the default behaviour when clicking is to unselect other rows) which results\n    // in the group getting unselected (as all children are unselected). the correct thing would be\n    // to change this, so that children of the selected group are not then subsequenly un-selected.\n\n    var groupSelectsChildren = this.beans.gridOptionsWrapper.isGroupSelectsChildren();\n\n    if ( // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n    // so return if it's a group row\n    groupSelectsChildren && this.rowNode.group || // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,\n    // and we click it, the selection should not change (ie any currently selected row should stay selected)\n    !this.rowNode.selectable || // we also don't allow selection of pinned rows\n    this.rowNode.rowPinned || // if no selection method enabled, do nothing\n    !this.beans.gridOptionsWrapper.isRowSelection() || // if click selection suppressed, do nothing\n    this.beans.gridOptionsWrapper.isSuppressRowClickSelection()) {\n      return;\n    }\n\n    var multiSelectOnClick = this.beans.gridOptionsWrapper.isRowMultiSelectWithClick();\n    var rowDeselectionWithCtrl = !this.beans.gridOptionsWrapper.isSuppressRowDeselection();\n\n    if (this.rowNode.isSelected()) {\n      if (multiSelectOnClick) {\n        this.rowNode.setSelectedParams({\n          newValue: false\n        });\n      } else if (multiSelectKeyPressed) {\n        if (rowDeselectionWithCtrl) {\n          this.rowNode.setSelectedParams({\n            newValue: false\n          });\n        }\n      } else {\n        // selected with no multi key, must make sure anything else is unselected\n        this.rowNode.setSelectedParams({\n          newValue: !shiftKeyPressed,\n          clearSelection: !shiftKeyPressed,\n          rangeSelect: shiftKeyPressed\n        });\n      }\n    } else {\n      var clearSelection = multiSelectOnClick ? false : !multiSelectKeyPressed;\n      this.rowNode.setSelectedParams({\n        newValue: true,\n        clearSelection: clearSelection,\n        rangeSelect: shiftKeyPressed\n      });\n    }\n  };\n\n  RowCtrl.prototype.setupDetailRowAutoHeight = function (eDetailGui) {\n    var _this = this;\n\n    if (!this.beans.gridOptionsWrapper.isDetailRowAutoHeight()) {\n      return;\n    }\n\n    var checkRowSizeFunc = function () {\n      var clientHeight = eDetailGui.clientHeight; // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n      // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n      // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n      // empty detail grid would still have some styling around it giving at least a few pixels.\n\n      if (clientHeight != null && clientHeight > 0) {\n        // we do the update in a timeout, to make sure we are not calling from inside the grid\n        // doing another update\n        var updateRowHeightFunc = function () {\n          _this.rowNode.setRowHeight(clientHeight);\n\n          if (_this.beans.clientSideRowModel) {\n            _this.beans.clientSideRowModel.onRowHeightChanged();\n          } else if (_this.beans.serverSideRowModel) {\n            _this.beans.serverSideRowModel.onRowHeightChanged();\n          }\n        };\n\n        _this.beans.frameworkOverrides.setTimeout(updateRowHeightFunc, 0);\n      }\n    };\n\n    var resizeObserverDestroyFunc = this.beans.resizeObserverService.observeResize(eDetailGui, checkRowSizeFunc);\n    this.addDestroyFunc(resizeObserverDestroyFunc);\n    checkRowSizeFunc();\n  };\n\n  RowCtrl.prototype.createFullWidthParams = function (eRow, pinned) {\n    var _this = this;\n\n    var params = {\n      fullWidth: true,\n      data: this.rowNode.data,\n      node: this.rowNode,\n      value: this.rowNode.key,\n      valueFormatted: this.rowNode.key,\n      $scope: this.scope ? this.scope : this.parentScope,\n      $compile: this.beans.$compile,\n      rowIndex: this.rowNode.rowIndex,\n      api: this.beans.gridOptionsWrapper.getApi(),\n      columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n      context: this.beans.gridOptionsWrapper.getContext(),\n      // these need to be taken out, as part of 'afterAttached' now\n      eGridCell: eRow,\n      eParentOfValue: eRow,\n      pinned: pinned,\n      addRenderedRowListener: this.addEventListener.bind(this),\n      registerRowDragger: function (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) {\n        return _this.addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value, suppressVisibilityChange);\n      }\n    };\n    return params;\n  };\n\n  RowCtrl.prototype.addFullWidthRowDragging = function (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) {\n    if (value === void 0) {\n      value = '';\n    }\n\n    if (!this.isFullWidth()) {\n      return;\n    }\n\n    var rowDragComp = new RowDragComp(function () {\n      return value;\n    }, this.rowNode, undefined, rowDraggerElement, dragStartPixels, suppressVisibilityChange);\n    this.createManagedBean(rowDragComp, this.beans.context);\n  };\n\n  RowCtrl.prototype.onUiLevelChanged = function () {\n    var newLevel = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n\n    if (this.rowLevel != newLevel) {\n      var classToAdd_1 = 'ag-row-level-' + newLevel;\n      var classToRemove_1 = 'ag-row-level-' + this.rowLevel;\n      this.allRowGuis.forEach(function (gui) {\n        gui.rowComp.addOrRemoveCssClass(classToAdd_1, true);\n        gui.rowComp.addOrRemoveCssClass(classToRemove_1, false);\n      });\n    }\n\n    this.rowLevel = newLevel;\n  };\n\n  RowCtrl.prototype.isFirstRowOnPage = function () {\n    return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();\n  };\n\n  RowCtrl.prototype.isLastRowOnPage = function () {\n    return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();\n  };\n\n  RowCtrl.prototype.onModelUpdated = function () {\n    var newFirst = this.isFirstRowOnPage();\n    var newLast = this.isLastRowOnPage();\n\n    if (this.firstRowOnPage !== newFirst) {\n      this.firstRowOnPage = newFirst;\n      this.allRowGuis.forEach(function (gui) {\n        return gui.rowComp.addOrRemoveCssClass('ag-row-first', newFirst);\n      });\n    }\n\n    if (this.lastRowOnPage !== newLast) {\n      this.lastRowOnPage = newLast;\n      this.allRowGuis.forEach(function (gui) {\n        return gui.rowComp.addOrRemoveCssClass('ag-row-last', newLast);\n      });\n    }\n  };\n\n  RowCtrl.prototype.stopEditing = function (cancel) {\n    if (cancel === void 0) {\n      cancel = false;\n    }\n\n    this.getAllCellCtrls().forEach(function (cellCtrl) {\n      return cellCtrl.stopEditing(cancel);\n    });\n\n    if (!this.editingRow) {\n      return;\n    }\n\n    if (!cancel) {\n      var event_1 = this.createRowEvent(Events.EVENT_ROW_VALUE_CHANGED);\n      this.beans.eventService.dispatchEvent(event_1);\n    }\n\n    this.setEditingRow(false);\n  };\n\n  RowCtrl.prototype.setInlineEditingCss = function (editing) {\n    this.allRowGuis.forEach(function (gui) {\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-inline-editing\", editing);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-not-inline-editing\", !editing);\n    });\n  };\n\n  RowCtrl.prototype.setEditingRow = function (value) {\n    this.editingRow = value;\n    this.allRowGuis.forEach(function (gui) {\n      return gui.rowComp.addOrRemoveCssClass('ag-row-editing', value);\n    });\n    var event = value ? this.createRowEvent(Events.EVENT_ROW_EDITING_STARTED) : this.createRowEvent(Events.EVENT_ROW_EDITING_STOPPED);\n    this.beans.eventService.dispatchEvent(event);\n  };\n\n  RowCtrl.prototype.startRowEditing = function (keyPress, charPress, sourceRenderedCell) {\n    if (keyPress === void 0) {\n      keyPress = null;\n    }\n\n    if (charPress === void 0) {\n      charPress = null;\n    }\n\n    if (sourceRenderedCell === void 0) {\n      sourceRenderedCell = null;\n    } // don't do it if already editing\n\n\n    if (this.editingRow) {\n      return;\n    }\n\n    this.getAllCellCtrls().forEach(function (cellCtrl) {\n      var cellStartedEdit = cellCtrl === sourceRenderedCell;\n\n      if (cellStartedEdit) {\n        cellCtrl.startEditing(keyPress, charPress, cellStartedEdit);\n      } else {\n        cellCtrl.startEditing(null, null, cellStartedEdit);\n      }\n    });\n    this.setEditingRow(true);\n  };\n\n  RowCtrl.prototype.getAllCellCtrls = function () {\n    var res = __spreadArrays(this.centerCellCtrls.list, this.leftCellCtrls.list, this.rightCellCtrls.list);\n\n    return res;\n  };\n\n  RowCtrl.prototype.postProcessClassesFromGridOptions = function () {\n    var _this = this;\n\n    var cssClasses = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode, this.scope);\n\n    if (!cssClasses || !cssClasses.length) {\n      return;\n    }\n\n    cssClasses.forEach(function (classStr) {\n      _this.allRowGuis.forEach(function (c) {\n        return c.rowComp.addOrRemoveCssClass(classStr, true);\n      });\n    });\n  };\n\n  RowCtrl.prototype.postProcessRowClassRules = function () {\n    var _this = this;\n\n    this.beans.rowCssClassCalculator.processRowClassRules(this.rowNode, this.scope, function (className) {\n      _this.allRowGuis.forEach(function (gui) {\n        return gui.rowComp.addOrRemoveCssClass(className, true);\n      });\n    }, function (className) {\n      _this.allRowGuis.forEach(function (gui) {\n        return gui.rowComp.addOrRemoveCssClass(className, false);\n      });\n    });\n  };\n\n  RowCtrl.prototype.setStylesFromGridOptions = function () {\n    var rowStyles = this.processStylesFromGridOptions();\n    this.allRowGuis.forEach(function (gui) {\n      return gui.rowComp.setUserStyles(rowStyles);\n    });\n  };\n\n  RowCtrl.prototype.getRowBusinessKey = function () {\n    var businessKeyForNodeFunc = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();\n\n    if (typeof businessKeyForNodeFunc !== 'function') {\n      return;\n    }\n\n    return businessKeyForNodeFunc(this.rowNode);\n  };\n\n  RowCtrl.prototype.getInitialRowClasses = function (pinned) {\n    var params = {\n      rowNode: this.rowNode,\n      rowFocused: this.rowFocused,\n      fadeRowIn: this.fadeRowIn,\n      rowIsEven: this.rowNode.rowIndex % 2 === 0,\n      rowLevel: this.rowLevel,\n      fullWidthRow: this.isFullWidth(),\n      firstRowOnPage: this.isFirstRowOnPage(),\n      lastRowOnPage: this.isLastRowOnPage(),\n      printLayout: this.printLayout,\n      expandable: this.rowNode.isExpandable(),\n      scope: this.scope,\n      pinned: pinned\n    };\n    return this.beans.rowCssClassCalculator.getInitialRowClasses(params);\n  };\n\n  RowCtrl.prototype.processStylesFromGridOptions = function () {\n    // part 1 - rowStyle\n    var rowStyle = this.beans.gridOptionsWrapper.getRowStyle();\n\n    if (rowStyle && typeof rowStyle === 'function') {\n      console.warn('AG Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead');\n      return;\n    } // part 1 - rowStyleFunc\n\n\n    var rowStyleFunc = this.beans.gridOptionsWrapper.getRowStyleFunc();\n    var rowStyleFuncResult;\n\n    if (rowStyleFunc) {\n      var params = {\n        data: this.rowNode.data,\n        node: this.rowNode,\n        rowIndex: this.rowNode.rowIndex,\n        $scope: this.scope,\n        api: this.beans.gridOptionsWrapper.getApi(),\n        columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n        context: this.beans.gridOptionsWrapper.getContext()\n      };\n      rowStyleFuncResult = rowStyleFunc(params);\n    }\n\n    return assign({}, rowStyle, rowStyleFuncResult);\n  };\n\n  RowCtrl.prototype.onRowSelected = function () {\n    var _this = this;\n\n    var selected = this.rowNode.isSelected();\n    this.allRowGuis.forEach(function (gui) {\n      gui.rowComp.setAriaSelected(selected ? true : undefined);\n      gui.rowComp.addOrRemoveCssClass('ag-row-selected', selected);\n      gui.rowComp.setAriaLabel(_this.createAriaLabel());\n    });\n  };\n\n  RowCtrl.prototype.createAriaLabel = function () {\n    var selected = this.rowNode.isSelected();\n\n    if (selected && this.beans.gridOptionsWrapper.isSuppressRowDeselection()) {\n      return undefined;\n    }\n\n    var translate = this.beans.gridOptionsWrapper.getLocaleTextFunc();\n    var label = translate(selected ? 'ariaRowDeselect' : 'ariaRowSelect', \"Press SPACE to \" + (selected ? 'deselect' : 'select') + \" this row.\");\n    return label;\n  };\n\n  RowCtrl.prototype.isUseAnimationFrameForCreate = function () {\n    return this.useAnimationFrameForCreate;\n  };\n\n  RowCtrl.prototype.addHoverFunctionality = function (eRow) {\n    var _this = this; // because we use animation frames to do this, it's possible the row no longer exists\n    // by the time we get to add it\n\n\n    if (!this.active) {\n      return;\n    } // because mouseenter and mouseleave do not propagate, we cannot listen on the gridPanel\n    // like we do for all the other mouse events.\n    // because of the pinning, we cannot simply add / remove the class based on the eRow. we\n    // have to check all eRow's (body & pinned). so the trick is if any of the rows gets a\n    // mouse hover, it sets such in the rowNode, and then all three reflect the change as\n    // all are listening for event on the row node.\n    // step 1 - add listener, to set flag on row node\n\n\n    this.addManagedListener(eRow, 'mouseenter', function () {\n      return _this.rowNode.onMouseEnter();\n    });\n    this.addManagedListener(eRow, 'mouseleave', function () {\n      return _this.rowNode.onMouseLeave();\n    }); // step 2 - listen for changes on row node (which any eRow can trigger)\n\n    this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_ENTER, function () {\n      // if hover turned off, we don't add the class. we do this here so that if the application\n      // toggles this property mid way, we remove the hover form the last row, but we stop\n      // adding hovers from that point onwards.\n      if (!_this.beans.gridOptionsWrapper.isSuppressRowHoverHighlight()) {\n        addCssClass(eRow, 'ag-row-hover');\n      }\n    });\n    this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_LEAVE, function () {\n      removeCssClass(eRow, 'ag-row-hover');\n    });\n  }; // for animation, we don't want to animate entry or exit to a very far away pixel,\n  // otherwise the row would move so fast, it would appear to disappear. so this method\n  // moves the row closer to the viewport if it is far away, so the row slide in / out\n  // at a speed the user can see.\n\n\n  RowCtrl.prototype.roundRowTopToBounds = function (rowTop) {\n    var gridBodyCon = this.beans.ctrlsService.getGridBodyCtrl();\n    var range = gridBodyCon.getScrollFeature().getVScrollPosition();\n    var minPixel = this.applyPaginationOffset(range.top, true) - 100;\n    var maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n    return Math.min(Math.max(minPixel, rowTop), maxPixel);\n  };\n\n  RowCtrl.prototype.getFrameworkOverrides = function () {\n    return this.beans.frameworkOverrides;\n  };\n\n  RowCtrl.prototype.onRowHeightChanged = function () {\n    // check for exists first - if the user is resetting the row height, then\n    // it will be null (or undefined) momentarily until the next time the flatten\n    // stage is called where the row will then update again with a new height\n    if (exists(this.rowNode.rowHeight)) {\n      var heightPx_1 = this.rowNode.rowHeight + \"px\";\n      this.allRowGuis.forEach(function (gui) {\n        return gui.rowComp.setHeight(heightPx_1);\n      });\n    }\n  };\n\n  RowCtrl.prototype.addEventListener = function (eventType, listener) {\n    if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n      eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n      console.warn('AG Grid: Since version 11, event renderedRowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n    }\n\n    _super.prototype.addEventListener.call(this, eventType, listener);\n  };\n\n  RowCtrl.prototype.removeEventListener = function (eventType, listener) {\n    if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n      eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n      console.warn('AG Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n    }\n\n    _super.prototype.removeEventListener.call(this, eventType, listener);\n  }; // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n\n\n  RowCtrl.prototype.destroyFirstPass = function () {\n    this.active = false; // why do we have this method? shouldn't everything below be added as a destroy func beside\n    // the corresponding create logic?\n\n    this.setupRemoveAnimation();\n    var event = this.createRowEvent(Events.EVENT_VIRTUAL_ROW_REMOVED);\n    this.dispatchEvent(event);\n    this.beans.eventService.dispatchEvent(event);\n\n    _super.prototype.destroy.call(this);\n  };\n\n  RowCtrl.prototype.setupRemoveAnimation = function () {\n    var rowStillVisibleJustNotInViewport = this.rowNode.rowTop != null;\n\n    if (rowStillVisibleJustNotInViewport) {\n      // if the row is not rendered, but in viewport, it means it has moved,\n      // so we animate the row out. if the new location is very far away,\n      // the animation will be so fast the row will look like it's just disappeared,\n      // so instead we animate to a position just outside the viewport.\n      var rowTop = this.roundRowTopToBounds(this.rowNode.rowTop);\n      this.setRowTop(rowTop);\n    } else {\n      this.allRowGuis.forEach(function (gui) {\n        return gui.rowComp.addOrRemoveCssClass('ag-opacity-zero', true);\n      });\n    }\n  };\n\n  RowCtrl.prototype.destroySecondPass = function () {\n    this.allRowGuis.length = 0;\n\n    var destroyCellCtrls = function (ctrls) {\n      ctrls.list.forEach(function (c) {\n        return c.destroy();\n      });\n      return {\n        list: [],\n        map: {}\n      };\n    };\n\n    this.centerCellCtrls = destroyCellCtrls(this.centerCellCtrls);\n    this.leftCellCtrls = destroyCellCtrls(this.leftCellCtrls);\n    this.rightCellCtrls = destroyCellCtrls(this.rightCellCtrls);\n  };\n\n  RowCtrl.prototype.setFocusedClasses = function () {\n    var _this = this;\n\n    this.allRowGuis.forEach(function (gui) {\n      gui.rowComp.addOrRemoveCssClass('ag-row-focus', _this.rowFocused);\n      gui.rowComp.addOrRemoveCssClass('ag-row-no-focus', !_this.rowFocused);\n    });\n  };\n\n  RowCtrl.prototype.onCellFocusChanged = function () {\n    var rowFocused = this.beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n\n    if (rowFocused !== this.rowFocused) {\n      this.rowFocused = rowFocused;\n      this.setFocusedClasses();\n    } // if we are editing, then moving the focus out of a row will stop editing\n\n\n    if (!rowFocused && this.editingRow) {\n      this.stopEditing(false);\n    }\n  };\n\n  RowCtrl.prototype.onPaginationChanged = function () {\n    var currentPage = this.beans.paginationProxy.getCurrentPage(); // it is possible this row is in the new page, but the page number has changed, which means\n    // it needs to reposition itself relative to the new page\n\n    if (this.paginationPage !== currentPage) {\n      this.paginationPage = currentPage;\n      this.onTopChanged();\n    }\n  };\n\n  RowCtrl.prototype.onTopChanged = function () {\n    this.setRowTop(this.rowNode.rowTop);\n  };\n\n  RowCtrl.prototype.onPaginationPixelOffsetChanged = function () {\n    // the pixel offset is used when calculating rowTop to set on the row DIV\n    this.onTopChanged();\n  }; // applies pagination offset, eg if on second page, and page height is 500px, then removes\n  // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n  // reverse will take the offset away rather than add.\n\n\n  RowCtrl.prototype.applyPaginationOffset = function (topPx, reverse) {\n    if (reverse === void 0) {\n      reverse = false;\n    }\n\n    if (this.rowNode.isRowPinned()) {\n      return topPx;\n    }\n\n    var pixelOffset = this.beans.paginationProxy.getPixelOffset();\n    var multiplier = reverse ? 1 : -1;\n    return topPx + pixelOffset * multiplier;\n  };\n\n  RowCtrl.prototype.setRowTop = function (pixels) {\n    // print layout uses normal flow layout for row positioning\n    if (this.printLayout) {\n      return;\n    } // need to make sure rowTop is not null, as this can happen if the node was once\n    // visible (ie parent group was expanded) but is now not visible\n\n\n    if (exists(pixels)) {\n      var afterPaginationPixels = this.applyPaginationOffset(pixels);\n      var afterScalingPixels = this.rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n      var topPx = afterScalingPixels + \"px\";\n      this.setRowTopStyle(topPx);\n    }\n  };\n\n  RowCtrl.prototype.getInitialRowTop = function () {\n    return this.initialTop;\n  };\n\n  RowCtrl.prototype.getInitialTransform = function () {\n    return this.initialTransform;\n  };\n\n  RowCtrl.prototype.setInitialRowTop = function () {\n    // print layout uses normal flow layout for row positioning\n    if (this.printLayout) {\n      return '';\n    } // if sliding in, we take the old row top. otherwise we just set the current row top.\n\n\n    var pixels = this.slideRowIn ? this.roundRowTopToBounds(this.rowNode.oldRowTop) : this.rowNode.rowTop;\n    var afterPaginationPixels = this.applyPaginationOffset(pixels); // we don't apply scaling if row is pinned\n\n    var afterScalingPixels = this.rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n    var res = afterScalingPixels + 'px';\n    var suppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n\n    if (suppressRowTransform) {\n      this.initialTop = res;\n    } else {\n      this.initialTransform = \"translateY(\" + res + \")\";\n    }\n  };\n\n  RowCtrl.prototype.setRowTopStyle = function (topPx) {\n    var suppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n    this.allRowGuis.forEach(function (gui) {\n      return suppressRowTransform ? gui.rowComp.setTop(topPx) : gui.rowComp.setTransform(\"translateY(\" + topPx + \")\");\n    });\n  };\n\n  RowCtrl.prototype.getRowNode = function () {\n    return this.rowNode;\n  };\n\n  RowCtrl.prototype.getCellCtrl = function (column) {\n    // first up, check for cell directly linked to this column\n    var res = null;\n    this.getAllCellCtrls().forEach(function (cellCtrl) {\n      if (cellCtrl.getColumn() == column) {\n        res = cellCtrl;\n      }\n    });\n\n    if (res != null) {\n      return res;\n    } // second up, if not found, then check for spanned cols.\n    // we do this second (and not at the same time) as this is\n    // more expensive, as spanning cols is a\n    // infrequently used feature so we don't need to do this most\n    // of the time\n\n\n    this.getAllCellCtrls().forEach(function (cellCtrl) {\n      if (cellCtrl.getColSpanningList().indexOf(column) >= 0) {\n        res = cellCtrl;\n      }\n    });\n    return res;\n  };\n\n  RowCtrl.prototype.onRowIndexChanged = function () {\n    // we only bother updating if the rowIndex is present. if it is not present, it means this row\n    // is child of a group node, and the group node was closed, it's the only way to have no row index.\n    // when this happens, row is about to be de-rendered, so we don't care, rowComp is about to die!\n    if (this.rowNode.rowIndex != null) {\n      this.onCellFocusChanged();\n      this.updateRowIndexes();\n    }\n  };\n\n  RowCtrl.prototype.updateRowIndexes = function () {\n    var _this = this;\n\n    var rowIndexStr = this.rowNode.getRowIndexString();\n    var headerRowCount = this.beans.headerNavigationService.getHeaderRowCount();\n    var rowIsEven = this.rowNode.rowIndex % 2 === 0;\n    this.allRowGuis.forEach(function (c) {\n      c.rowComp.setRowIndex(rowIndexStr);\n      c.rowComp.setAriaRowIndex(headerRowCount + _this.rowNode.rowIndex + 1);\n      c.rowComp.addOrRemoveCssClass('ag-row-even', rowIsEven);\n      c.rowComp.addOrRemoveCssClass('ag-row-odd', !rowIsEven);\n    });\n  }; // returns the pinned left container, either the normal one, or the embedded full with one if exists\n\n\n  RowCtrl.prototype.getPinnedLeftRowElement = function () {\n    return this.leftGui ? this.leftGui.element : undefined;\n  }; // returns the pinned right container, either the normal one, or the embedded full with one if exists\n\n\n  RowCtrl.prototype.getPinnedRightRowElement = function () {\n    return this.rightGui ? this.rightGui.element : undefined;\n  }; // returns the body container, either the normal one, or the embedded full with one if exists\n\n\n  RowCtrl.prototype.getBodyRowElement = function () {\n    return this.centerGui ? this.centerGui.element : undefined;\n  }; // returns the full width container\n\n\n  RowCtrl.prototype.getFullWidthRowElement = function () {\n    return this.fullWidthGui ? this.fullWidthGui.element : undefined;\n  };\n\n  RowCtrl.DOM_DATA_KEY_ROW_CTRL = 'renderedRow';\n  return RowCtrl;\n}(BeanStub);\n\nexport { RowCtrl };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/rendering/row/rowCtrl.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","Constants","BeanStub","RowHighlightPosition","RowNode","Events","ModuleNames","ModuleRegistry","addCssClass","addOrRemoveCssClass","isElementChildOfClass","removeCssClass","isStopPropagationForAgGrid","doOnce","executeNextVMTurn","exists","find","convertToMap","assign","escapeString","CellCtrl","AngularRowUtils","RowDragComp","RowType","FullWidthRenderers","FullWidthLoading","FullWidthGroup","FullWidthDetail","FullWidthKeys","FullWidth","instanceIdSequence","RowCtrl","_super","parentScope","rowNode","beans","animateIn","useAnimationFrameForCreate","printLayout","_this","call","allRowGuis","active","centerCellCtrls","list","map","leftCellCtrls","rightCellCtrls","lastMouseDownOnDragger","updateColumnListsPending","paginationPage","paginationProxy","getCurrentPage","instanceId","id","setAnimateFlags","rowFocused","focusService","isRowFocused","rowIndex","rowPinned","setupAngular1Scope","rowLevel","rowCssClassCalculator","calculateRowLevel","setRowType","addListeners","setInitialRowTop","getBeans","getInstanceId","setComp","rowComp","element","pinned","gui","push","PINNED_LEFT","leftGui","PINNED_RIGHT","rightGui","isFullWidth","gridOptionsWrapper","isEmbedFullWidthRows","fullWidthGui","centerGui","allNormalPresent","fullWidthPresent","initialiseRowComps","isCacheable","rowType","isKeepDetailRows","setCached","cached","displayValue","undefined","forEach","rg","setDisplay","gow","onRowHeightChanged","updateRowIndexes","setFocusedClasses","setStylesFromGridOptions","isRowSelection","selectable","onRowSelected","updateColumnLists","slideRowIn","onTopChanged","bind","fadeRowIn","businessKey","getRowBusinessKey","rowIdSanitised","businessKeySanitised","comp","setRole","initialRowClasses","getInitialRowClasses","name","group","setAriaExpanded","expanded","setRowId","setRowBusinessKey","setTabIndex","setDomData","DOM_DATA_KEY_ROW_CTRL","addDestroyFunc","animationFrameService","createTask","addHoverFunctionality","setupFullWidth","isRowDragEntireRow","addRowDraggerToRow","addDestroyTask","isAlive","executeProcessRowPostCreateFunc","isEnableRangeSelection","console","warn","rowDragComp","createManagedBean","context","getFullWidthCellRendererType","get","getFullWidthCellRendererName","params","createFullWidthParams","cellRendererType","cellRendererName","compDetails","userComponentFactory","getFullWidthCellRendererDetails","showFullWidth","masterDetailModuleLoaded","isRegistered","MasterDetailModule","error","getScope","scope","isPrintLayout","scopeResult","createChildScopeOrNull","scopeDestroyFunc","getCellElement","column","cellCtrl","getCellCtrl","getGui","func","getProcessRowPostCreateFunc","eRow","ePinnedLeftRow","ePinnedRightRow","node","api","getApi","addRenderedRowListener","addEventListener","columnApi","getColumnApi","getContext","isStub","stub","isFullWidthCell","isDetailCell","doingMasterDetail","detail","pivotMode","columnModel","isPivotMode","isGroupRow","footer","isFullWidthGroup","isGroupUseEntireRow","Normal","suppressAnimationFrame","noAnimation","isSuppressAnimationFrame","updateColumnListsImpl","createCellCtrls","prev","cols","res","addCell","colInstanceId","col","prevCellCtrl","cellInResult","getColumn","keepCell","isCellEligibleToBeRemoved","destroy","getAllDisplayedColumns","centerCols","getViewportCenterColumnsForRow","leftCols","getDisplayedLeftColumnsForRow","rightCols","getDisplayedRightColumnsForRow","item","cellControls","setCellCtrls","nextContainerPinned","REMOVE_CELL","KEEP_CELL","getPinned","editing","isEditing","focused","isCellFocused","getCellPosition","mightWantToKeepCell","column_1","displayedColumns","cellStillDisplayed","indexOf","oldRowTopExists","oldRowTop","editingRow","stopRowEditing","cancel","stopEditing","getRowType","refreshFullWidth","tryRefresh","cellRenderer","getFullWidthCellRenderer","refresh","refreshSucceeded","fullWidthSuccess","centerSuccess","leftSuccess","rightSuccess","allFullWidthRowsRefreshed","addManagedListener","EVENT_HEIGHT_CHANGED","EVENT_ROW_SELECTED","EVENT_ROW_INDEX_CHANGED","onRowIndexChanged","EVENT_TOP_CHANGED","EVENT_EXPANDED_CHANGED","updateExpandedCss","EVENT_HAS_CHILDREN_CHANGED","EVENT_DATA_CHANGED","onRowNodeDataChanged","EVENT_CELL_CHANGED","onRowNodeCellChanged","EVENT_HIGHLIGHT_CHANGED","onRowNodeHighlightChanged","EVENT_DRAGGING_CHANGED","onRowNodeDraggingChanged","EVENT_UI_LEVEL_CHANGED","onUiLevelChanged","eventService","EVENT_PAGINATION_PIXEL_OFFSET_CHANGED","onPaginationPixelOffsetChanged","EVENT_HEIGHT_SCALE_CHANGED","EVENT_DISPLAYED_COLUMNS_CHANGED","onDisplayedColumnsChanged","EVENT_VIRTUAL_COLUMNS_CHANGED","onVirtualColumnsChanged","EVENT_CELL_FOCUSED","onCellFocusChanged","EVENT_PAGINATION_CHANGED","onPaginationChanged","EVENT_MODEL_UPDATED","onModelUpdated","EVENT_COLUMN_MOVED","onColumnMoved","addListenersForCellComps","getAllCellCtrls","event","onCellChanged","refreshCell","suppressFlash","update","newData","postProcessCss","postProcessClassesFromGridOptions","postProcessRowClassRules","postProcessRowDragging","highlighted","aboveOn","Above","belowOn","Below","dragging","expandable","isExpandable","wasAutoRowHeightEverActive","checkAutoHeights","getRowPosition","onKeyboardNavigate","keyboardEvent","currentFullWidthComp","c","contains","target","currentFullWidthContainer","isFullWidthContainerFocused","lastFocusedCell","getFocusedCell","cellPosition","navigationService","navigateToNextCell","keyCode","preventDefault","onTabKeyDown","defaultPrevented","nextEl","findNextFocusableElement","shiftKey","onFullWidthRowFocused","isFocused","focus","preventScroll","removeCellCtrl","cellCtrlToRemove","onMouseEvent","eventName","mouseEvent","onRowDblClick","onRowClick","onRowMouseDown","createRowEvent","type","domEvent","data","createRowEventWithSource","source","agEvent","EVENT_ROW_DOUBLE_CLICKED","dispatchEvent","setFocusedCell","stop","EVENT_ROW_CLICKED","multiSelectKeyPressed","ctrlKey","metaKey","shiftKeyPressed","groupSelectsChildren","isGroupSelectsChildren","isSuppressRowClickSelection","multiSelectOnClick","isRowMultiSelectWithClick","rowDeselectionWithCtrl","isSuppressRowDeselection","isSelected","setSelectedParams","newValue","clearSelection","rangeSelect","setupDetailRowAutoHeight","eDetailGui","isDetailRowAutoHeight","checkRowSizeFunc","clientHeight","updateRowHeightFunc","setRowHeight","clientSideRowModel","serverSideRowModel","frameworkOverrides","setTimeout","resizeObserverDestroyFunc","resizeObserverService","observeResize","fullWidth","value","key","valueFormatted","$scope","$compile","eGridCell","eParentOfValue","registerRowDragger","rowDraggerElement","dragStartPixels","suppressVisibilityChange","addFullWidthRowDragging","newLevel","classToAdd_1","classToRemove_1","isFirstRowOnPage","getPageFirstRow","isLastRowOnPage","getPageLastRow","newFirst","newLast","firstRowOnPage","lastRowOnPage","event_1","EVENT_ROW_VALUE_CHANGED","setEditingRow","setInlineEditingCss","EVENT_ROW_EDITING_STARTED","EVENT_ROW_EDITING_STOPPED","startRowEditing","keyPress","charPress","sourceRenderedCell","cellStartedEdit","startEditing","cssClasses","processClassesFromGridOptions","classStr","processRowClassRules","className","rowStyles","processStylesFromGridOptions","setUserStyles","businessKeyForNodeFunc","getBusinessKeyForNodeFunc","rowIsEven","fullWidthRow","rowStyle","getRowStyle","rowStyleFunc","getRowStyleFunc","rowStyleFuncResult","selected","setAriaSelected","setAriaLabel","createAriaLabel","translate","getLocaleTextFunc","label","isUseAnimationFrameForCreate","onMouseEnter","onMouseLeave","EVENT_MOUSE_ENTER","isSuppressRowHoverHighlight","EVENT_MOUSE_LEAVE","roundRowTopToBounds","rowTop","gridBodyCon","ctrlsService","getGridBodyCtrl","range","getScrollFeature","getVScrollPosition","minPixel","applyPaginationOffset","top","maxPixel","bottom","Math","min","max","getFrameworkOverrides","rowHeight","heightPx_1","setHeight","eventType","listener","EVENT_VIRTUAL_ROW_REMOVED","removeEventListener","destroyFirstPass","setupRemoveAnimation","rowStillVisibleJustNotInViewport","setRowTop","destroySecondPass","destroyCellCtrls","ctrls","currentPage","topPx","reverse","isRowPinned","pixelOffset","getPixelOffset","multiplier","pixels","afterPaginationPixels","afterScalingPixels","rowContainerHeightService","getRealPixelPosition","setRowTopStyle","getInitialRowTop","initialTop","getInitialTransform","initialTransform","suppressRowTransform","isSuppressRowTransform","setTop","setTransform","getRowNode","getColSpanningList","rowIndexStr","getRowIndexString","headerRowCount","headerNavigationService","getHeaderRowCount","setRowIndex","setAriaRowIndex","getPinnedLeftRowElement","getPinnedRightRowElement","getBodyRowElement","getFullWidthRowElement"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Constants } from \"../../constants/constants\";\nimport { BeanStub } from \"../../context/beanStub\";\nimport { RowHighlightPosition, RowNode } from \"../../entities/rowNode\";\nimport { Events } from \"../../events\";\nimport { ModuleNames } from \"../../modules/moduleNames\";\nimport { ModuleRegistry } from \"../../modules/moduleRegistry\";\nimport { addCssClass, addOrRemoveCssClass, isElementChildOfClass, removeCssClass } from \"../../utils/dom\";\nimport { isStopPropagationForAgGrid } from \"../../utils/event\";\nimport { doOnce, executeNextVMTurn } from \"../../utils/function\";\nimport { exists, find } from \"../../utils/generic\";\nimport { convertToMap } from \"../../utils/map\";\nimport { assign } from \"../../utils/object\";\nimport { escapeString } from \"../../utils/string\";\nimport { CellCtrl } from \"../cell/cellCtrl\";\nimport { AngularRowUtils } from \"./angularRowUtils\";\nimport { RowDragComp } from \"./rowDragComp\";\nexport var RowType;\n(function (RowType) {\n    RowType[\"Normal\"] = \"Normal\";\n    RowType[\"FullWidth\"] = \"FullWidth\";\n    RowType[\"FullWidthLoading\"] = \"FullWidthLoading\";\n    RowType[\"FullWidthGroup\"] = \"FullWidthGroup\";\n    RowType[\"FullWidthDetail\"] = \"FullWidthDetail\";\n})(RowType || (RowType = {}));\nexport var FullWidthRenderers = convertToMap([\n    [RowType.FullWidthLoading, 'agLoadingCellRenderer'],\n    [RowType.FullWidthGroup, 'agGroupRowRenderer'],\n    [RowType.FullWidthDetail, 'agDetailCellRenderer']\n]);\nexport var FullWidthKeys = convertToMap([\n    [RowType.FullWidth, 'fullWidthCellRenderer'],\n    [RowType.FullWidthLoading, 'loadingCellRenderer'],\n    [RowType.FullWidthGroup, 'groupRowRenderer'],\n    [RowType.FullWidthDetail, 'detailCellRenderer']\n]);\nvar instanceIdSequence = 0;\nvar RowCtrl = /** @class */ (function (_super) {\n    __extends(RowCtrl, _super);\n    function RowCtrl(parentScope, rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout) {\n        var _this = _super.call(this) || this;\n        _this.allRowGuis = [];\n        _this.active = true;\n        _this.centerCellCtrls = { list: [], map: {} };\n        _this.leftCellCtrls = { list: [], map: {} };\n        _this.rightCellCtrls = { list: [], map: {} };\n        _this.lastMouseDownOnDragger = false;\n        _this.updateColumnListsPending = false;\n        _this.parentScope = parentScope;\n        _this.beans = beans;\n        _this.rowNode = rowNode;\n        _this.paginationPage = _this.beans.paginationProxy.getCurrentPage();\n        _this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n        _this.printLayout = printLayout;\n        _this.instanceId = rowNode.id + '-' + instanceIdSequence++;\n        _this.setAnimateFlags(animateIn);\n        _this.rowFocused = _this.beans.focusService.isRowFocused(_this.rowNode.rowIndex, _this.rowNode.rowPinned);\n        _this.setupAngular1Scope();\n        _this.rowLevel = _this.beans.rowCssClassCalculator.calculateRowLevel(_this.rowNode);\n        _this.setRowType();\n        _this.addListeners();\n        _this.setInitialRowTop();\n        return _this;\n    }\n    RowCtrl.prototype.getBeans = function () {\n        return this.beans;\n    };\n    RowCtrl.prototype.getInstanceId = function () {\n        return this.instanceId;\n    };\n    RowCtrl.prototype.setComp = function (rowComp, element, pinned) {\n        var gui = { rowComp: rowComp, element: element, pinned: pinned };\n        this.allRowGuis.push(gui);\n        if (pinned === Constants.PINNED_LEFT) {\n            this.leftGui = gui;\n        }\n        else if (pinned === Constants.PINNED_RIGHT) {\n            this.rightGui = gui;\n        }\n        else if (this.isFullWidth() && !this.beans.gridOptionsWrapper.isEmbedFullWidthRows()) {\n            this.fullWidthGui = gui;\n        }\n        else {\n            this.centerGui = gui;\n        }\n        var allNormalPresent = this.leftGui != null && this.rightGui != null && this.centerGui != null;\n        var fullWidthPresent = this.fullWidthGui != null;\n        if (allNormalPresent || fullWidthPresent) {\n            this.initialiseRowComps();\n        }\n    };\n    RowCtrl.prototype.isCacheable = function () {\n        return this.rowType === RowType.FullWidthDetail\n            && this.beans.gridOptionsWrapper.isKeepDetailRows();\n    };\n    RowCtrl.prototype.setCached = function (cached) {\n        var displayValue = cached ? 'none' : undefined;\n        this.allRowGuis.forEach(function (rg) { return rg.rowComp.setDisplay(displayValue); });\n    };\n    RowCtrl.prototype.initialiseRowComps = function () {\n        var _this = this;\n        var gow = this.beans.gridOptionsWrapper;\n        this.onRowHeightChanged();\n        this.updateRowIndexes();\n        this.setFocusedClasses();\n        this.setStylesFromGridOptions();\n        if (gow.isRowSelection() && this.rowNode.selectable) {\n            this.onRowSelected();\n        }\n        this.updateColumnLists(!this.useAnimationFrameForCreate);\n        if (this.slideRowIn) {\n            executeNextVMTurn(this.onTopChanged.bind(this));\n        }\n        if (this.fadeRowIn) {\n            executeNextVMTurn(function () {\n                _this.allRowGuis.forEach(function (gui) { return gui.rowComp.addOrRemoveCssClass('ag-opacity-zero', false); });\n            });\n        }\n        var businessKey = this.getRowBusinessKey();\n        var rowIdSanitised = escapeString(this.rowNode.id);\n        var businessKeySanitised = escapeString(businessKey);\n        this.allRowGuis.forEach(function (gui) {\n            var comp = gui.rowComp;\n            comp.setRole('row');\n            var initialRowClasses = _this.getInitialRowClasses(gui.pinned);\n            initialRowClasses.forEach(function (name) { return comp.addOrRemoveCssClass(name, true); });\n            if (_this.rowNode.group) {\n                comp.setAriaExpanded(_this.rowNode.expanded == true);\n            }\n            if (rowIdSanitised != null) {\n                comp.setRowId(rowIdSanitised);\n            }\n            if (businessKeySanitised != null) {\n                comp.setRowBusinessKey(businessKeySanitised);\n            }\n            if (_this.isFullWidth()) {\n                comp.setTabIndex(-1);\n            }\n            // DOM DATA\n            gow.setDomData(gui.element, RowCtrl.DOM_DATA_KEY_ROW_CTRL, _this);\n            _this.addDestroyFunc(function () { return gow.setDomData(gui.element, RowCtrl.DOM_DATA_KEY_ROW_CTRL, null); });\n            // adding hover functionality adds listener to this row, so we\n            // do it lazily in an animation frame\n            if (_this.useAnimationFrameForCreate) {\n                _this.beans.animationFrameService.createTask(_this.addHoverFunctionality.bind(_this, gui.element), _this.rowNode.rowIndex, 'createTasksP2');\n            }\n            else {\n                _this.addHoverFunctionality(gui.element);\n            }\n            if (_this.isFullWidth()) {\n                _this.setupFullWidth(gui);\n            }\n            if (gow.isRowDragEntireRow()) {\n                _this.addRowDraggerToRow(gui);\n            }\n            // the height animation we only want active after the row is alive for 1 second.\n            // this stops the row animation working when rows are initially crated. otherwise\n            // auto-height rows get inserted into the dom and resized immediately, which gives\n            // very bad UX (eg 10 rows get inserted, then all 10 expand, look particularly bad\n            // when scrolling). so this makes sure when rows are shown for the first time, they\n            // are resized immediately without animation.\n            _this.beans.animationFrameService.addDestroyTask(function () {\n                if (_this.isAlive()) {\n                    gui.rowComp.addOrRemoveCssClass('ag-after-created', true);\n                }\n            });\n        });\n        this.executeProcessRowPostCreateFunc();\n    };\n    RowCtrl.prototype.addRowDraggerToRow = function (gui) {\n        var gow = this.beans.gridOptionsWrapper;\n        if (gow.isEnableRangeSelection()) {\n            doOnce(function () {\n                console.warn('AG Grid: Setting `rowDragEntireRow: true` in the gridOptions doesn\\'t work with `enableRangeSelection: true`');\n            }, 'rowDragAndRangeSelectionEnabled');\n            return;\n        }\n        var rowDragComp = new RowDragComp(function () { return '1 row'; }, this.rowNode, undefined, gui.element, undefined, true);\n        this.createManagedBean(rowDragComp, this.beans.context);\n    };\n    RowCtrl.prototype.getFullWidthCellRendererType = function () {\n        return FullWidthKeys.get(this.rowType);\n    };\n    RowCtrl.prototype.getFullWidthCellRendererName = function () {\n        return FullWidthRenderers.get(this.rowType);\n    };\n    RowCtrl.prototype.setupFullWidth = function (gui) {\n        var params = this.createFullWidthParams(gui.element, gui.pinned);\n        var cellRendererType = this.getFullWidthCellRendererType();\n        var cellRendererName = this.getFullWidthCellRendererName();\n        var compDetails = this.beans.userComponentFactory.getFullWidthCellRendererDetails(params, cellRendererType, cellRendererName);\n        if (compDetails) {\n            gui.rowComp.showFullWidth(compDetails);\n        }\n        else {\n            var masterDetailModuleLoaded = ModuleRegistry.isRegistered(ModuleNames.MasterDetailModule);\n            if (cellRendererName === 'agDetailCellRenderer' && !masterDetailModuleLoaded) {\n                console.warn(\"AG Grid: cell renderer agDetailCellRenderer (for master detail) not found. Did you forget to include the master detail module?\");\n            }\n            else {\n                console.error(\"AG Grid: fullWidthCellRenderer \" + cellRendererName + \" not found\");\n            }\n        }\n    };\n    RowCtrl.prototype.getScope = function () {\n        return this.scope;\n    };\n    RowCtrl.prototype.isPrintLayout = function () {\n        return this.printLayout;\n    };\n    RowCtrl.prototype.setupAngular1Scope = function () {\n        var scopeResult = AngularRowUtils.createChildScopeOrNull(this.rowNode, this.parentScope, this.beans.gridOptionsWrapper);\n        if (scopeResult) {\n            this.scope = scopeResult.scope;\n            this.addDestroyFunc(scopeResult.scopeDestroyFunc);\n        }\n    };\n    // use by autoWidthCalculator, as it clones the elements\n    RowCtrl.prototype.getCellElement = function (column) {\n        var cellCtrl = this.getCellCtrl(column);\n        return cellCtrl ? cellCtrl.getGui() : null;\n    };\n    RowCtrl.prototype.executeProcessRowPostCreateFunc = function () {\n        var func = this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();\n        if (!func) {\n            return;\n        }\n        var params = {\n            eRow: this.centerGui ? this.centerGui.element : undefined,\n            ePinnedLeftRow: this.leftGui ? this.leftGui.element : undefined,\n            ePinnedRightRow: this.rightGui ? this.rightGui.element : undefined,\n            node: this.rowNode,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            rowIndex: this.rowNode.rowIndex,\n            addRenderedRowListener: this.addEventListener.bind(this),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext()\n        };\n        func(params);\n    };\n    RowCtrl.prototype.setRowType = function () {\n        var isStub = this.rowNode.stub;\n        var isFullWidthCell = this.rowNode.isFullWidthCell();\n        var isDetailCell = this.beans.doingMasterDetail && this.rowNode.detail;\n        var pivotMode = this.beans.columnModel.isPivotMode();\n        // we only use full width for groups, not footers. it wouldn't make sense to include footers if not looking\n        // for totals. if users complain about this, then we should introduce a new property 'footerUseEntireRow'\n        // so each can be set independently (as a customer complained about footers getting full width, hence\n        // introducing this logic)\n        var isGroupRow = !!this.rowNode.group && !this.rowNode.footer;\n        var isFullWidthGroup = isGroupRow && this.beans.gridOptionsWrapper.isGroupUseEntireRow(pivotMode);\n        if (isStub) {\n            this.rowType = RowType.FullWidthLoading;\n        }\n        else if (isDetailCell) {\n            this.rowType = RowType.FullWidthDetail;\n        }\n        else if (isFullWidthCell) {\n            this.rowType = RowType.FullWidth;\n        }\n        else if (isFullWidthGroup) {\n            this.rowType = RowType.FullWidthGroup;\n        }\n        else {\n            this.rowType = RowType.Normal;\n        }\n    };\n    RowCtrl.prototype.updateColumnLists = function (suppressAnimationFrame) {\n        var _this = this;\n        if (suppressAnimationFrame === void 0) { suppressAnimationFrame = false; }\n        if (this.isFullWidth()) {\n            return;\n        }\n        var noAnimation = suppressAnimationFrame\n            || this.beans.gridOptionsWrapper.isSuppressAnimationFrame()\n            || this.printLayout;\n        if (noAnimation) {\n            this.updateColumnListsImpl();\n            return;\n        }\n        if (this.updateColumnListsPending) {\n            return;\n        }\n        this.beans.animationFrameService.createTask(function () {\n            if (!_this.active) {\n                return;\n            }\n            _this.updateColumnListsImpl();\n        }, this.rowNode.rowIndex, 'createTasksP1');\n        this.updateColumnListsPending = true;\n    };\n    RowCtrl.prototype.createCellCtrls = function (prev, cols, pinned) {\n        var _this = this;\n        if (pinned === void 0) { pinned = null; }\n        var res = {\n            list: [],\n            map: {}\n        };\n        var addCell = function (colInstanceId, cellCtrl) {\n            res.list.push(cellCtrl);\n            res.map[colInstanceId] = cellCtrl;\n        };\n        cols.forEach(function (col) {\n            // we use instanceId's rather than colId as it's possible there is a Column with same Id,\n            // but it's referring to a different column instance. Happens a lot with pivot, as pivot col id's are\n            // reused eg pivot_0, pivot_1 etc\n            var colInstanceId = col.getInstanceId();\n            var cellCtrl = prev.map[colInstanceId];\n            if (!cellCtrl) {\n                cellCtrl = new CellCtrl(col, _this.rowNode, _this.beans, _this);\n            }\n            addCell(colInstanceId, cellCtrl);\n        });\n        prev.list.forEach(function (prevCellCtrl) {\n            var cellInResult = res.map[prevCellCtrl.getColumn().getInstanceId()] != null;\n            if (cellInResult) {\n                return;\n            }\n            var keepCell = !_this.isCellEligibleToBeRemoved(prevCellCtrl, pinned);\n            if (keepCell) {\n                addCell(prevCellCtrl.getColumn().getInstanceId(), prevCellCtrl);\n                return;\n            }\n            prevCellCtrl.destroy();\n        });\n        return res;\n    };\n    RowCtrl.prototype.updateColumnListsImpl = function () {\n        var _this = this;\n        this.updateColumnListsPending = false;\n        var columnModel = this.beans.columnModel;\n        if (this.printLayout) {\n            this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, columnModel.getAllDisplayedColumns());\n            this.leftCellCtrls = { list: [], map: {} };\n            this.rightCellCtrls = { list: [], map: {} };\n        }\n        else {\n            var centerCols = columnModel.getViewportCenterColumnsForRow(this.rowNode);\n            this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, centerCols);\n            var leftCols = columnModel.getDisplayedLeftColumnsForRow(this.rowNode);\n            this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, leftCols, Constants.PINNED_LEFT);\n            var rightCols = columnModel.getDisplayedRightColumnsForRow(this.rowNode);\n            this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, rightCols, Constants.PINNED_RIGHT);\n        }\n        this.allRowGuis.forEach(function (item) {\n            var cellControls = item.pinned === Constants.PINNED_LEFT ? _this.leftCellCtrls :\n                item.pinned === Constants.PINNED_RIGHT ? _this.rightCellCtrls : _this.centerCellCtrls;\n            item.rowComp.setCellCtrls(cellControls.list);\n        });\n    };\n    RowCtrl.prototype.isCellEligibleToBeRemoved = function (cellCtrl, nextContainerPinned) {\n        var REMOVE_CELL = true;\n        var KEEP_CELL = false;\n        // always remove the cell if it's not rendered or if it's in the wrong pinned location\n        var column = cellCtrl.getColumn();\n        if (column.getPinned() != nextContainerPinned) {\n            return REMOVE_CELL;\n        }\n        // we want to try and keep editing and focused cells\n        var editing = cellCtrl.isEditing();\n        var focused = this.beans.focusService.isCellFocused(cellCtrl.getCellPosition());\n        var mightWantToKeepCell = editing || focused;\n        if (mightWantToKeepCell) {\n            var column_1 = cellCtrl.getColumn();\n            var displayedColumns = this.beans.columnModel.getAllDisplayedColumns();\n            var cellStillDisplayed = displayedColumns.indexOf(column_1) >= 0;\n            return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n        }\n        return REMOVE_CELL;\n    };\n    RowCtrl.prototype.setAnimateFlags = function (animateIn) {\n        if (animateIn) {\n            var oldRowTopExists = exists(this.rowNode.oldRowTop);\n            // if the row had a previous position, we slide it in (animate row top)\n            this.slideRowIn = oldRowTopExists;\n            // if the row had no previous position, we fade it in (animate\n            this.fadeRowIn = !oldRowTopExists;\n        }\n        else {\n            this.slideRowIn = false;\n            this.fadeRowIn = false;\n        }\n    };\n    RowCtrl.prototype.isEditing = function () {\n        return this.editingRow;\n    };\n    RowCtrl.prototype.stopRowEditing = function (cancel) {\n        this.stopEditing(cancel);\n    };\n    RowCtrl.prototype.isFullWidth = function () {\n        return this.rowType !== RowType.Normal;\n    };\n    RowCtrl.prototype.getRowType = function () {\n        return this.rowType;\n    };\n    RowCtrl.prototype.refreshFullWidth = function () {\n        var _this = this;\n        // returns 'true' if refresh succeeded\n        var tryRefresh = function (gui, pinned) {\n            if (!gui) {\n                return true;\n            } // no refresh needed\n            var cellRenderer = gui.rowComp.getFullWidthCellRenderer();\n            // no cell renderer, either means comp not yet ready, or comp ready but now reference\n            // to it (happens in react when comp is stateless). if comp not ready, we don't need to\n            // refresh, however we don't know which one, so we refresh to cover the case where it's\n            // react comp without reference so need to force a refresh\n            if (!cellRenderer) {\n                return false;\n            }\n            // no refresh method present, so can't refresh, hard refresh needed\n            if (!cellRenderer.refresh) {\n                return false;\n            }\n            var params = _this.createFullWidthParams(gui.element, pinned);\n            var refreshSucceeded = cellRenderer.refresh(params);\n            return refreshSucceeded;\n        };\n        var fullWidthSuccess = tryRefresh(this.fullWidthGui, null);\n        var centerSuccess = tryRefresh(this.centerGui, null);\n        var leftSuccess = tryRefresh(this.leftGui, Constants.PINNED_LEFT);\n        var rightSuccess = tryRefresh(this.rightGui, Constants.PINNED_RIGHT);\n        var allFullWidthRowsRefreshed = fullWidthSuccess && centerSuccess && leftSuccess && rightSuccess;\n        return allFullWidthRowsRefreshed;\n    };\n    RowCtrl.prototype.addListeners = function () {\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_TOP_CHANGED, this.onTopChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_EXPANDED_CHANGED, this.updateExpandedCss.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HAS_CHILDREN_CHANGED, this.updateExpandedCss.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HIGHLIGHT_CHANGED, this.onRowNodeHighlightChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_UI_LEVEL_CHANGED, this.onUiLevelChanged.bind(this));\n        var eventService = this.beans.eventService;\n        this.addManagedListener(eventService, Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED, this.onPaginationPixelOffsetChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_COLUMN_MOVED, this.onColumnMoved.bind(this));\n        this.addListenersForCellComps();\n    };\n    RowCtrl.prototype.onColumnMoved = function () {\n        this.updateColumnLists();\n    };\n    RowCtrl.prototype.addListenersForCellComps = function () {\n        var _this = this;\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, function () {\n            _this.getAllCellCtrls().forEach(function (cellCtrl) { return cellCtrl.onRowIndexChanged(); });\n        });\n        this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, function (event) {\n            _this.getAllCellCtrls().forEach(function (cellCtrl) { return cellCtrl.onCellChanged(event); });\n        });\n    };\n    RowCtrl.prototype.onRowNodeDataChanged = function (event) {\n        // if this is an update, we want to refresh, as this will allow the user to put in a transition\n        // into the cellRenderer refresh method. otherwise this might be completely new data, in which case\n        // we will want to completely replace the cells\n        this.getAllCellCtrls().forEach(function (cellCtrl) {\n            return cellCtrl.refreshCell({\n                suppressFlash: !event.update,\n                newData: !event.update\n            });\n        });\n        // check for selected also, as this could be after lazy loading of the row data, in which case\n        // the id might of just gotten set inside the row and the row selected state may of changed\n        // as a result. this is what happens when selected rows are loaded in virtual pagination.\n        // - niall note - since moving to the stub component, this may no longer be true, as replacing\n        // the stub component now replaces the entire row\n        this.onRowSelected();\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    };\n    RowCtrl.prototype.onRowNodeCellChanged = function () {\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    };\n    RowCtrl.prototype.postProcessCss = function () {\n        this.setStylesFromGridOptions();\n        this.postProcessClassesFromGridOptions();\n        this.postProcessRowClassRules();\n        this.postProcessRowDragging();\n    };\n    RowCtrl.prototype.onRowNodeHighlightChanged = function () {\n        var highlighted = this.rowNode.highlighted;\n        this.allRowGuis.forEach(function (gui) {\n            var aboveOn = highlighted === RowHighlightPosition.Above;\n            var belowOn = highlighted === RowHighlightPosition.Below;\n            gui.rowComp.addOrRemoveCssClass('ag-row-highlight-above', aboveOn);\n            gui.rowComp.addOrRemoveCssClass('ag-row-highlight-below', belowOn);\n        });\n    };\n    RowCtrl.prototype.onRowNodeDraggingChanged = function () {\n        this.postProcessRowDragging();\n    };\n    RowCtrl.prototype.postProcessRowDragging = function () {\n        var dragging = this.rowNode.dragging;\n        this.allRowGuis.forEach(function (gui) { return gui.rowComp.addOrRemoveCssClass('ag-row-dragging', dragging); });\n    };\n    RowCtrl.prototype.updateExpandedCss = function () {\n        var expandable = this.rowNode.isExpandable();\n        var expanded = this.rowNode.expanded == true;\n        this.allRowGuis.forEach(function (gui) {\n            gui.rowComp.addOrRemoveCssClass('ag-row-group', expandable);\n            gui.rowComp.addOrRemoveCssClass('ag-row-group-expanded', expandable && expanded);\n            gui.rowComp.addOrRemoveCssClass('ag-row-group-contracted', expandable && !expanded);\n            gui.rowComp.setAriaExpanded(expandable && expanded);\n        });\n    };\n    RowCtrl.prototype.onDisplayedColumnsChanged = function () {\n        // we skip animations for onDisplayedColumnChanged, as otherwise the client could remove columns and\n        // then set data, and any old valueGetter's (ie from cols that were removed) would still get called.\n        this.updateColumnLists(true);\n        if (this.beans.columnModel.wasAutoRowHeightEverActive()) {\n            this.rowNode.checkAutoHeights();\n        }\n    };\n    RowCtrl.prototype.onVirtualColumnsChanged = function () {\n        this.updateColumnLists();\n    };\n    RowCtrl.prototype.getRowPosition = function () {\n        return {\n            rowPinned: this.rowNode.rowPinned,\n            rowIndex: this.rowNode.rowIndex\n        };\n    };\n    RowCtrl.prototype.onKeyboardNavigate = function (keyboardEvent) {\n        var currentFullWidthComp = find(this.allRowGuis, function (c) { return c.element.contains(keyboardEvent.target); });\n        var currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n        var isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n        if (!isFullWidthContainerFocused) {\n            return;\n        }\n        var node = this.rowNode;\n        var lastFocusedCell = this.beans.focusService.getFocusedCell();\n        var cellPosition = {\n            rowIndex: node.rowIndex,\n            rowPinned: node.rowPinned,\n            column: (lastFocusedCell && lastFocusedCell.column)\n        };\n        this.beans.navigationService.navigateToNextCell(keyboardEvent, keyboardEvent.keyCode, cellPosition, true);\n        keyboardEvent.preventDefault();\n    };\n    RowCtrl.prototype.onTabKeyDown = function (keyboardEvent) {\n        if (keyboardEvent.defaultPrevented || isStopPropagationForAgGrid(keyboardEvent)) {\n            return;\n        }\n        var currentFullWidthComp = find(this.allRowGuis, function (c) { return c.element.contains(keyboardEvent.target); });\n        var currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n        var isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n        var nextEl = null;\n        if (!isFullWidthContainerFocused) {\n            nextEl = this.beans.focusService.findNextFocusableElement(currentFullWidthContainer, false, keyboardEvent.shiftKey);\n        }\n        if ((this.isFullWidth() && isFullWidthContainerFocused) || !nextEl) {\n            this.beans.navigationService.onTabKeyDown(this, keyboardEvent);\n        }\n    };\n    RowCtrl.prototype.onFullWidthRowFocused = function (event) {\n        var node = this.rowNode;\n        var isFocused = this.isFullWidth() && event.rowIndex === node.rowIndex && event.rowPinned == node.rowPinned;\n        var element = this.fullWidthGui ? this.fullWidthGui.element : this.centerGui.element;\n        addOrRemoveCssClass(element, 'ag-full-width-focus', isFocused);\n        if (isFocused) {\n            // we don't scroll normal rows into view when we focus them, so we don't want\n            // to scroll Full Width rows either.\n            element.focus({ preventScroll: true });\n        }\n    };\n    RowCtrl.prototype.refreshCell = function (cellCtrl) {\n        this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, cellCtrl);\n        this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, cellCtrl);\n        this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, cellCtrl);\n        this.updateColumnLists();\n    };\n    RowCtrl.prototype.removeCellCtrl = function (prev, cellCtrlToRemove) {\n        var res = {\n            list: [],\n            map: {}\n        };\n        prev.list.forEach(function (cellCtrl) {\n            if (cellCtrl === cellCtrlToRemove) {\n                return;\n            }\n            res.list.push(cellCtrl);\n            res.map[cellCtrl.getInstanceId()] = cellCtrl;\n        });\n        return res;\n    };\n    RowCtrl.prototype.onMouseEvent = function (eventName, mouseEvent) {\n        switch (eventName) {\n            case 'dblclick':\n                this.onRowDblClick(mouseEvent);\n                break;\n            case 'click':\n                this.onRowClick(mouseEvent);\n                break;\n            case 'touchstart':\n            case 'mousedown':\n                this.onRowMouseDown(mouseEvent);\n                break;\n        }\n    };\n    RowCtrl.prototype.createRowEvent = function (type, domEvent) {\n        return {\n            type: type,\n            node: this.rowNode,\n            data: this.rowNode.data,\n            rowIndex: this.rowNode.rowIndex,\n            rowPinned: this.rowNode.rowPinned,\n            context: this.beans.gridOptionsWrapper.getContext(),\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            event: domEvent\n        };\n    };\n    RowCtrl.prototype.createRowEventWithSource = function (type, domEvent) {\n        var event = this.createRowEvent(type, domEvent);\n        // when first developing this, we included the rowComp in the event.\n        // this seems very weird. so when introducing the event types, i left the 'source'\n        // out of the type, and just include the source in the two places where this event\n        // was fired (rowClicked and rowDoubleClicked). it doesn't make sense for any\n        // users to be using this, as the rowComp isn't an object we expose, so would be\n        // very surprising if a user was using it.\n        event.source = this;\n        return event;\n    };\n    RowCtrl.prototype.onRowDblClick = function (mouseEvent) {\n        if (isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        var agEvent = this.createRowEventWithSource(Events.EVENT_ROW_DOUBLE_CLICKED, mouseEvent);\n        this.beans.eventService.dispatchEvent(agEvent);\n    };\n    RowCtrl.prototype.onRowMouseDown = function (mouseEvent) {\n        this.lastMouseDownOnDragger = isElementChildOfClass(mouseEvent.target, 'ag-row-drag', 3);\n        if (!this.isFullWidth()) {\n            return;\n        }\n        var node = this.rowNode;\n        var columnModel = this.beans.columnModel;\n        this.beans.focusService.setFocusedCell(node.rowIndex, columnModel.getAllDisplayedColumns()[0], node.rowPinned, true);\n    };\n    RowCtrl.prototype.onRowClick = function (mouseEvent) {\n        var stop = isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n        if (stop) {\n            return;\n        }\n        var agEvent = this.createRowEventWithSource(Events.EVENT_ROW_CLICKED, mouseEvent);\n        this.beans.eventService.dispatchEvent(agEvent);\n        // ctrlKey for windows, metaKey for Apple\n        var multiSelectKeyPressed = mouseEvent.ctrlKey || mouseEvent.metaKey;\n        var shiftKeyPressed = mouseEvent.shiftKey;\n        // we do not allow selecting the group by clicking, when groupSelectChildren, as the logic to\n        // handle this is broken. to observe, change the logic below and allow groups to be selected.\n        // you will see the group gets selected, then all children get selected, then the grid unselects\n        // the children (as the default behaviour when clicking is to unselect other rows) which results\n        // in the group getting unselected (as all children are unselected). the correct thing would be\n        // to change this, so that children of the selected group are not then subsequenly un-selected.\n        var groupSelectsChildren = this.beans.gridOptionsWrapper.isGroupSelectsChildren();\n        if (\n        // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n        // so return if it's a group row\n        (groupSelectsChildren && this.rowNode.group) ||\n            // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,\n            // and we click it, the selection should not change (ie any currently selected row should stay selected)\n            !this.rowNode.selectable ||\n            // we also don't allow selection of pinned rows\n            this.rowNode.rowPinned ||\n            // if no selection method enabled, do nothing\n            !this.beans.gridOptionsWrapper.isRowSelection() ||\n            // if click selection suppressed, do nothing\n            this.beans.gridOptionsWrapper.isSuppressRowClickSelection()) {\n            return;\n        }\n        var multiSelectOnClick = this.beans.gridOptionsWrapper.isRowMultiSelectWithClick();\n        var rowDeselectionWithCtrl = !this.beans.gridOptionsWrapper.isSuppressRowDeselection();\n        if (this.rowNode.isSelected()) {\n            if (multiSelectOnClick) {\n                this.rowNode.setSelectedParams({ newValue: false });\n            }\n            else if (multiSelectKeyPressed) {\n                if (rowDeselectionWithCtrl) {\n                    this.rowNode.setSelectedParams({ newValue: false });\n                }\n            }\n            else {\n                // selected with no multi key, must make sure anything else is unselected\n                this.rowNode.setSelectedParams({ newValue: !shiftKeyPressed, clearSelection: !shiftKeyPressed, rangeSelect: shiftKeyPressed });\n            }\n        }\n        else {\n            var clearSelection = multiSelectOnClick ? false : !multiSelectKeyPressed;\n            this.rowNode.setSelectedParams({ newValue: true, clearSelection: clearSelection, rangeSelect: shiftKeyPressed });\n        }\n    };\n    RowCtrl.prototype.setupDetailRowAutoHeight = function (eDetailGui) {\n        var _this = this;\n        if (!this.beans.gridOptionsWrapper.isDetailRowAutoHeight()) {\n            return;\n        }\n        var checkRowSizeFunc = function () {\n            var clientHeight = eDetailGui.clientHeight;\n            // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n            // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n            // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n            // empty detail grid would still have some styling around it giving at least a few pixels.\n            if (clientHeight != null && clientHeight > 0) {\n                // we do the update in a timeout, to make sure we are not calling from inside the grid\n                // doing another update\n                var updateRowHeightFunc = function () {\n                    _this.rowNode.setRowHeight(clientHeight);\n                    if (_this.beans.clientSideRowModel) {\n                        _this.beans.clientSideRowModel.onRowHeightChanged();\n                    }\n                    else if (_this.beans.serverSideRowModel) {\n                        _this.beans.serverSideRowModel.onRowHeightChanged();\n                    }\n                };\n                _this.beans.frameworkOverrides.setTimeout(updateRowHeightFunc, 0);\n            }\n        };\n        var resizeObserverDestroyFunc = this.beans.resizeObserverService.observeResize(eDetailGui, checkRowSizeFunc);\n        this.addDestroyFunc(resizeObserverDestroyFunc);\n        checkRowSizeFunc();\n    };\n    RowCtrl.prototype.createFullWidthParams = function (eRow, pinned) {\n        var _this = this;\n        var params = {\n            fullWidth: true,\n            data: this.rowNode.data,\n            node: this.rowNode,\n            value: this.rowNode.key,\n            valueFormatted: this.rowNode.key,\n            $scope: this.scope ? this.scope : this.parentScope,\n            $compile: this.beans.$compile,\n            rowIndex: this.rowNode.rowIndex,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext(),\n            // these need to be taken out, as part of 'afterAttached' now\n            eGridCell: eRow,\n            eParentOfValue: eRow,\n            pinned: pinned,\n            addRenderedRowListener: this.addEventListener.bind(this),\n            registerRowDragger: function (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) { return _this.addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value, suppressVisibilityChange); }\n        };\n        return params;\n    };\n    RowCtrl.prototype.addFullWidthRowDragging = function (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) {\n        if (value === void 0) { value = ''; }\n        if (!this.isFullWidth()) {\n            return;\n        }\n        var rowDragComp = new RowDragComp(function () { return value; }, this.rowNode, undefined, rowDraggerElement, dragStartPixels, suppressVisibilityChange);\n        this.createManagedBean(rowDragComp, this.beans.context);\n    };\n    RowCtrl.prototype.onUiLevelChanged = function () {\n        var newLevel = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n        if (this.rowLevel != newLevel) {\n            var classToAdd_1 = 'ag-row-level-' + newLevel;\n            var classToRemove_1 = 'ag-row-level-' + this.rowLevel;\n            this.allRowGuis.forEach(function (gui) {\n                gui.rowComp.addOrRemoveCssClass(classToAdd_1, true);\n                gui.rowComp.addOrRemoveCssClass(classToRemove_1, false);\n            });\n        }\n        this.rowLevel = newLevel;\n    };\n    RowCtrl.prototype.isFirstRowOnPage = function () {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();\n    };\n    RowCtrl.prototype.isLastRowOnPage = function () {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();\n    };\n    RowCtrl.prototype.onModelUpdated = function () {\n        var newFirst = this.isFirstRowOnPage();\n        var newLast = this.isLastRowOnPage();\n        if (this.firstRowOnPage !== newFirst) {\n            this.firstRowOnPage = newFirst;\n            this.allRowGuis.forEach(function (gui) { return gui.rowComp.addOrRemoveCssClass('ag-row-first', newFirst); });\n        }\n        if (this.lastRowOnPage !== newLast) {\n            this.lastRowOnPage = newLast;\n            this.allRowGuis.forEach(function (gui) { return gui.rowComp.addOrRemoveCssClass('ag-row-last', newLast); });\n        }\n    };\n    RowCtrl.prototype.stopEditing = function (cancel) {\n        if (cancel === void 0) { cancel = false; }\n        this.getAllCellCtrls().forEach(function (cellCtrl) { return cellCtrl.stopEditing(cancel); });\n        if (!this.editingRow) {\n            return;\n        }\n        if (!cancel) {\n            var event_1 = this.createRowEvent(Events.EVENT_ROW_VALUE_CHANGED);\n            this.beans.eventService.dispatchEvent(event_1);\n        }\n        this.setEditingRow(false);\n    };\n    RowCtrl.prototype.setInlineEditingCss = function (editing) {\n        this.allRowGuis.forEach(function (gui) {\n            gui.rowComp.addOrRemoveCssClass(\"ag-row-inline-editing\", editing);\n            gui.rowComp.addOrRemoveCssClass(\"ag-row-not-inline-editing\", !editing);\n        });\n    };\n    RowCtrl.prototype.setEditingRow = function (value) {\n        this.editingRow = value;\n        this.allRowGuis.forEach(function (gui) { return gui.rowComp.addOrRemoveCssClass('ag-row-editing', value); });\n        var event = value ?\n            this.createRowEvent(Events.EVENT_ROW_EDITING_STARTED)\n            : this.createRowEvent(Events.EVENT_ROW_EDITING_STOPPED);\n        this.beans.eventService.dispatchEvent(event);\n    };\n    RowCtrl.prototype.startRowEditing = function (keyPress, charPress, sourceRenderedCell) {\n        if (keyPress === void 0) { keyPress = null; }\n        if (charPress === void 0) { charPress = null; }\n        if (sourceRenderedCell === void 0) { sourceRenderedCell = null; }\n        // don't do it if already editing\n        if (this.editingRow) {\n            return;\n        }\n        this.getAllCellCtrls().forEach(function (cellCtrl) {\n            var cellStartedEdit = cellCtrl === sourceRenderedCell;\n            if (cellStartedEdit) {\n                cellCtrl.startEditing(keyPress, charPress, cellStartedEdit);\n            }\n            else {\n                cellCtrl.startEditing(null, null, cellStartedEdit);\n            }\n        });\n        this.setEditingRow(true);\n    };\n    RowCtrl.prototype.getAllCellCtrls = function () {\n        var res = __spreadArrays(this.centerCellCtrls.list, this.leftCellCtrls.list, this.rightCellCtrls.list);\n        return res;\n    };\n    RowCtrl.prototype.postProcessClassesFromGridOptions = function () {\n        var _this = this;\n        var cssClasses = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode, this.scope);\n        if (!cssClasses || !cssClasses.length) {\n            return;\n        }\n        cssClasses.forEach(function (classStr) {\n            _this.allRowGuis.forEach(function (c) { return c.rowComp.addOrRemoveCssClass(classStr, true); });\n        });\n    };\n    RowCtrl.prototype.postProcessRowClassRules = function () {\n        var _this = this;\n        this.beans.rowCssClassCalculator.processRowClassRules(this.rowNode, this.scope, function (className) {\n            _this.allRowGuis.forEach(function (gui) { return gui.rowComp.addOrRemoveCssClass(className, true); });\n        }, function (className) {\n            _this.allRowGuis.forEach(function (gui) { return gui.rowComp.addOrRemoveCssClass(className, false); });\n        });\n    };\n    RowCtrl.prototype.setStylesFromGridOptions = function () {\n        var rowStyles = this.processStylesFromGridOptions();\n        this.allRowGuis.forEach(function (gui) { return gui.rowComp.setUserStyles(rowStyles); });\n    };\n    RowCtrl.prototype.getRowBusinessKey = function () {\n        var businessKeyForNodeFunc = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();\n        if (typeof businessKeyForNodeFunc !== 'function') {\n            return;\n        }\n        return businessKeyForNodeFunc(this.rowNode);\n    };\n    RowCtrl.prototype.getInitialRowClasses = function (pinned) {\n        var params = {\n            rowNode: this.rowNode,\n            rowFocused: this.rowFocused,\n            fadeRowIn: this.fadeRowIn,\n            rowIsEven: this.rowNode.rowIndex % 2 === 0,\n            rowLevel: this.rowLevel,\n            fullWidthRow: this.isFullWidth(),\n            firstRowOnPage: this.isFirstRowOnPage(),\n            lastRowOnPage: this.isLastRowOnPage(),\n            printLayout: this.printLayout,\n            expandable: this.rowNode.isExpandable(),\n            scope: this.scope,\n            pinned: pinned\n        };\n        return this.beans.rowCssClassCalculator.getInitialRowClasses(params);\n    };\n    RowCtrl.prototype.processStylesFromGridOptions = function () {\n        // part 1 - rowStyle\n        var rowStyle = this.beans.gridOptionsWrapper.getRowStyle();\n        if (rowStyle && typeof rowStyle === 'function') {\n            console.warn('AG Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead');\n            return;\n        }\n        // part 1 - rowStyleFunc\n        var rowStyleFunc = this.beans.gridOptionsWrapper.getRowStyleFunc();\n        var rowStyleFuncResult;\n        if (rowStyleFunc) {\n            var params = {\n                data: this.rowNode.data,\n                node: this.rowNode,\n                rowIndex: this.rowNode.rowIndex,\n                $scope: this.scope,\n                api: this.beans.gridOptionsWrapper.getApi(),\n                columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n                context: this.beans.gridOptionsWrapper.getContext()\n            };\n            rowStyleFuncResult = rowStyleFunc(params);\n        }\n        return assign({}, rowStyle, rowStyleFuncResult);\n    };\n    RowCtrl.prototype.onRowSelected = function () {\n        var _this = this;\n        var selected = this.rowNode.isSelected();\n        this.allRowGuis.forEach(function (gui) {\n            gui.rowComp.setAriaSelected(selected ? true : undefined);\n            gui.rowComp.addOrRemoveCssClass('ag-row-selected', selected);\n            gui.rowComp.setAriaLabel(_this.createAriaLabel());\n        });\n    };\n    RowCtrl.prototype.createAriaLabel = function () {\n        var selected = this.rowNode.isSelected();\n        if (selected && this.beans.gridOptionsWrapper.isSuppressRowDeselection()) {\n            return undefined;\n        }\n        var translate = this.beans.gridOptionsWrapper.getLocaleTextFunc();\n        var label = translate(selected ? 'ariaRowDeselect' : 'ariaRowSelect', \"Press SPACE to \" + (selected ? 'deselect' : 'select') + \" this row.\");\n        return label;\n    };\n    RowCtrl.prototype.isUseAnimationFrameForCreate = function () {\n        return this.useAnimationFrameForCreate;\n    };\n    RowCtrl.prototype.addHoverFunctionality = function (eRow) {\n        var _this = this;\n        // because we use animation frames to do this, it's possible the row no longer exists\n        // by the time we get to add it\n        if (!this.active) {\n            return;\n        }\n        // because mouseenter and mouseleave do not propagate, we cannot listen on the gridPanel\n        // like we do for all the other mouse events.\n        // because of the pinning, we cannot simply add / remove the class based on the eRow. we\n        // have to check all eRow's (body & pinned). so the trick is if any of the rows gets a\n        // mouse hover, it sets such in the rowNode, and then all three reflect the change as\n        // all are listening for event on the row node.\n        // step 1 - add listener, to set flag on row node\n        this.addManagedListener(eRow, 'mouseenter', function () { return _this.rowNode.onMouseEnter(); });\n        this.addManagedListener(eRow, 'mouseleave', function () { return _this.rowNode.onMouseLeave(); });\n        // step 2 - listen for changes on row node (which any eRow can trigger)\n        this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_ENTER, function () {\n            // if hover turned off, we don't add the class. we do this here so that if the application\n            // toggles this property mid way, we remove the hover form the last row, but we stop\n            // adding hovers from that point onwards.\n            if (!_this.beans.gridOptionsWrapper.isSuppressRowHoverHighlight()) {\n                addCssClass(eRow, 'ag-row-hover');\n            }\n        });\n        this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_LEAVE, function () {\n            removeCssClass(eRow, 'ag-row-hover');\n        });\n    };\n    // for animation, we don't want to animate entry or exit to a very far away pixel,\n    // otherwise the row would move so fast, it would appear to disappear. so this method\n    // moves the row closer to the viewport if it is far away, so the row slide in / out\n    // at a speed the user can see.\n    RowCtrl.prototype.roundRowTopToBounds = function (rowTop) {\n        var gridBodyCon = this.beans.ctrlsService.getGridBodyCtrl();\n        var range = gridBodyCon.getScrollFeature().getVScrollPosition();\n        var minPixel = this.applyPaginationOffset(range.top, true) - 100;\n        var maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n        return Math.min(Math.max(minPixel, rowTop), maxPixel);\n    };\n    RowCtrl.prototype.getFrameworkOverrides = function () {\n        return this.beans.frameworkOverrides;\n    };\n    RowCtrl.prototype.onRowHeightChanged = function () {\n        // check for exists first - if the user is resetting the row height, then\n        // it will be null (or undefined) momentarily until the next time the flatten\n        // stage is called where the row will then update again with a new height\n        if (exists(this.rowNode.rowHeight)) {\n            var heightPx_1 = this.rowNode.rowHeight + \"px\";\n            this.allRowGuis.forEach(function (gui) { return gui.rowComp.setHeight(heightPx_1); });\n        }\n    };\n    RowCtrl.prototype.addEventListener = function (eventType, listener) {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('AG Grid: Since version 11, event renderedRowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        _super.prototype.addEventListener.call(this, eventType, listener);\n    };\n    RowCtrl.prototype.removeEventListener = function (eventType, listener) {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('AG Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        _super.prototype.removeEventListener.call(this, eventType, listener);\n    };\n    // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n    RowCtrl.prototype.destroyFirstPass = function () {\n        this.active = false;\n        // why do we have this method? shouldn't everything below be added as a destroy func beside\n        // the corresponding create logic?\n        this.setupRemoveAnimation();\n        var event = this.createRowEvent(Events.EVENT_VIRTUAL_ROW_REMOVED);\n        this.dispatchEvent(event);\n        this.beans.eventService.dispatchEvent(event);\n        _super.prototype.destroy.call(this);\n    };\n    RowCtrl.prototype.setupRemoveAnimation = function () {\n        var rowStillVisibleJustNotInViewport = this.rowNode.rowTop != null;\n        if (rowStillVisibleJustNotInViewport) {\n            // if the row is not rendered, but in viewport, it means it has moved,\n            // so we animate the row out. if the new location is very far away,\n            // the animation will be so fast the row will look like it's just disappeared,\n            // so instead we animate to a position just outside the viewport.\n            var rowTop = this.roundRowTopToBounds(this.rowNode.rowTop);\n            this.setRowTop(rowTop);\n        }\n        else {\n            this.allRowGuis.forEach(function (gui) { return gui.rowComp.addOrRemoveCssClass('ag-opacity-zero', true); });\n        }\n    };\n    RowCtrl.prototype.destroySecondPass = function () {\n        this.allRowGuis.length = 0;\n        var destroyCellCtrls = function (ctrls) {\n            ctrls.list.forEach(function (c) { return c.destroy(); });\n            return { list: [], map: {} };\n        };\n        this.centerCellCtrls = destroyCellCtrls(this.centerCellCtrls);\n        this.leftCellCtrls = destroyCellCtrls(this.leftCellCtrls);\n        this.rightCellCtrls = destroyCellCtrls(this.rightCellCtrls);\n    };\n    RowCtrl.prototype.setFocusedClasses = function () {\n        var _this = this;\n        this.allRowGuis.forEach(function (gui) {\n            gui.rowComp.addOrRemoveCssClass('ag-row-focus', _this.rowFocused);\n            gui.rowComp.addOrRemoveCssClass('ag-row-no-focus', !_this.rowFocused);\n        });\n    };\n    RowCtrl.prototype.onCellFocusChanged = function () {\n        var rowFocused = this.beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n        if (rowFocused !== this.rowFocused) {\n            this.rowFocused = rowFocused;\n            this.setFocusedClasses();\n        }\n        // if we are editing, then moving the focus out of a row will stop editing\n        if (!rowFocused && this.editingRow) {\n            this.stopEditing(false);\n        }\n    };\n    RowCtrl.prototype.onPaginationChanged = function () {\n        var currentPage = this.beans.paginationProxy.getCurrentPage();\n        // it is possible this row is in the new page, but the page number has changed, which means\n        // it needs to reposition itself relative to the new page\n        if (this.paginationPage !== currentPage) {\n            this.paginationPage = currentPage;\n            this.onTopChanged();\n        }\n    };\n    RowCtrl.prototype.onTopChanged = function () {\n        this.setRowTop(this.rowNode.rowTop);\n    };\n    RowCtrl.prototype.onPaginationPixelOffsetChanged = function () {\n        // the pixel offset is used when calculating rowTop to set on the row DIV\n        this.onTopChanged();\n    };\n    // applies pagination offset, eg if on second page, and page height is 500px, then removes\n    // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n    // reverse will take the offset away rather than add.\n    RowCtrl.prototype.applyPaginationOffset = function (topPx, reverse) {\n        if (reverse === void 0) { reverse = false; }\n        if (this.rowNode.isRowPinned()) {\n            return topPx;\n        }\n        var pixelOffset = this.beans.paginationProxy.getPixelOffset();\n        var multiplier = reverse ? 1 : -1;\n        return topPx + (pixelOffset * multiplier);\n    };\n    RowCtrl.prototype.setRowTop = function (pixels) {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) {\n            return;\n        }\n        // need to make sure rowTop is not null, as this can happen if the node was once\n        // visible (ie parent group was expanded) but is now not visible\n        if (exists(pixels)) {\n            var afterPaginationPixels = this.applyPaginationOffset(pixels);\n            var afterScalingPixels = this.rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n            var topPx = afterScalingPixels + \"px\";\n            this.setRowTopStyle(topPx);\n        }\n    };\n    RowCtrl.prototype.getInitialRowTop = function () {\n        return this.initialTop;\n    };\n    RowCtrl.prototype.getInitialTransform = function () {\n        return this.initialTransform;\n    };\n    RowCtrl.prototype.setInitialRowTop = function () {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) {\n            return '';\n        }\n        // if sliding in, we take the old row top. otherwise we just set the current row top.\n        var pixels = this.slideRowIn ? this.roundRowTopToBounds(this.rowNode.oldRowTop) : this.rowNode.rowTop;\n        var afterPaginationPixels = this.applyPaginationOffset(pixels);\n        // we don't apply scaling if row is pinned\n        var afterScalingPixels = this.rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n        var res = afterScalingPixels + 'px';\n        var suppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n        if (suppressRowTransform) {\n            this.initialTop = res;\n        }\n        else {\n            this.initialTransform = \"translateY(\" + res + \")\";\n        }\n    };\n    RowCtrl.prototype.setRowTopStyle = function (topPx) {\n        var suppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n        this.allRowGuis.forEach(function (gui) { return suppressRowTransform ?\n            gui.rowComp.setTop(topPx) :\n            gui.rowComp.setTransform(\"translateY(\" + topPx + \")\"); });\n    };\n    RowCtrl.prototype.getRowNode = function () {\n        return this.rowNode;\n    };\n    RowCtrl.prototype.getCellCtrl = function (column) {\n        // first up, check for cell directly linked to this column\n        var res = null;\n        this.getAllCellCtrls().forEach(function (cellCtrl) {\n            if (cellCtrl.getColumn() == column) {\n                res = cellCtrl;\n            }\n        });\n        if (res != null) {\n            return res;\n        }\n        // second up, if not found, then check for spanned cols.\n        // we do this second (and not at the same time) as this is\n        // more expensive, as spanning cols is a\n        // infrequently used feature so we don't need to do this most\n        // of the time\n        this.getAllCellCtrls().forEach(function (cellCtrl) {\n            if (cellCtrl.getColSpanningList().indexOf(column) >= 0) {\n                res = cellCtrl;\n            }\n        });\n        return res;\n    };\n    RowCtrl.prototype.onRowIndexChanged = function () {\n        // we only bother updating if the rowIndex is present. if it is not present, it means this row\n        // is child of a group node, and the group node was closed, it's the only way to have no row index.\n        // when this happens, row is about to be de-rendered, so we don't care, rowComp is about to die!\n        if (this.rowNode.rowIndex != null) {\n            this.onCellFocusChanged();\n            this.updateRowIndexes();\n        }\n    };\n    RowCtrl.prototype.updateRowIndexes = function () {\n        var _this = this;\n        var rowIndexStr = this.rowNode.getRowIndexString();\n        var headerRowCount = this.beans.headerNavigationService.getHeaderRowCount();\n        var rowIsEven = this.rowNode.rowIndex % 2 === 0;\n        this.allRowGuis.forEach(function (c) {\n            c.rowComp.setRowIndex(rowIndexStr);\n            c.rowComp.setAriaRowIndex(headerRowCount + _this.rowNode.rowIndex + 1);\n            c.rowComp.addOrRemoveCssClass('ag-row-even', rowIsEven);\n            c.rowComp.addOrRemoveCssClass('ag-row-odd', !rowIsEven);\n        });\n    };\n    // returns the pinned left container, either the normal one, or the embedded full with one if exists\n    RowCtrl.prototype.getPinnedLeftRowElement = function () {\n        return this.leftGui ? this.leftGui.element : undefined;\n    };\n    // returns the pinned right container, either the normal one, or the embedded full with one if exists\n    RowCtrl.prototype.getPinnedRightRowElement = function () {\n        return this.rightGui ? this.rightGui.element : undefined;\n    };\n    // returns the body container, either the normal one, or the embedded full with one if exists\n    RowCtrl.prototype.getBodyRowElement = function () {\n        return this.centerGui ? this.centerGui.element : undefined;\n    };\n    // returns the full width container\n    RowCtrl.prototype.getFullWidthRowElement = function () {\n        return this.fullWidthGui ? this.fullWidthGui.element : undefined;\n    };\n    RowCtrl.DOM_DATA_KEY_ROW_CTRL = 'renderedRow';\n    return RowCtrl;\n}(BeanStub));\nexport { RowCtrl };\n"]},"metadata":{},"sourceType":"module"}