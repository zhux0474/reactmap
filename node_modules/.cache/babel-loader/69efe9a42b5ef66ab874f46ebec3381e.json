{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerMap.js\";\nimport React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\"; //import \"./SmokerMap.css\";\n\nimport Map from \"ol/Map\"; //import Feature from \"ol/Feature\";\n\nimport View from \"ol/View\"; //import { Point, Style, Circle, Fill, Feature } from \"ol\";\n\nimport TileLayer from \"ol/layer/Tile\"; //import TileWMS from 'ol/source/TileWMS';\n\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport { Fill, Stroke, Style } from 'ol/style'; //import cityboundary from \"./Minneapolis_Police_Precincts.geojson\";\n\nimport ImageWMS from 'ol/source/ImageWMS';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SmokerMap extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.mapRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    var basemap = new TileLayer({\n      source: new OSM()\n    });\n    const wmsSource = new ImageWMS({\n      url: 'https://ahocevar.com/geoserver/wms',\n      params: {\n        'LAYERS': 'topp:states'\n      },\n      ratio: 1,\n      serverType: 'geoserver'\n    });\n\n    const updateLegend = function (resolution) {\n      const graphicUrl = wmsSource.getLegendUrl(resolution);\n      const img = document.getElementById('legend');\n      img.src = graphicUrl;\n    };\n\n    const resolution = map.getView().getResolution();\n    updateLegend(resolution);\n    var vectorstyle = new Style({\n      fill: new Fill({\n        color: '#eeeeee'\n      }),\n      stroke: new Stroke({\n        color: 'black',\n        width: 1\n      })\n    });\n    var totalsmoker = new VectorSource({\n      url: \"https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms?service=WMS&version=1.1.0&request=GetMap&layers=lung_cancer%3Atotal_smokers_v2&bbox=-97.239209%2C43.499383499%2C-89.4917389999999%2C49.3843580000001&width=768&height=583&srs=EPSG%3A4326&format=geojson\",\n      format: new GeoJSON()\n    });\n\n    var stylefunction = function (feature) {\n      var style;\n      var value = feature.get('brffs_smokers');\n      console.log(value); //var color= value <100 ? '#ffffff': value <200 ? '#ff3f3f' : '#3f0000';\n      //this.style.getFill().setColor(color);\n\n      if (feature.get('brffs_smokers') > '400') {\n        style = new Style({\n          fill: new Fill({\n            color: '#eeeeee'\n          }),\n          stroke: new Stroke({\n            color: 'black',\n            width: 1\n          })\n        });\n      } else style = new Style({\n        fill: new Fill({\n          color: '#B4DFB4'\n        }),\n        stroke: new Stroke({\n          color: 'black',\n          width: 1\n        })\n      });\n\n      return style;\n    };\n\n    var vectorlayer = new VectorLayer({\n      source: totalsmoker,\n      style: stylefunction,\n      showLegend: true\n    });\n    /*  \n    var lungdata = new TileLayer({\n     source : new TileWMS ({\n       url:'https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms',\n       serverType:'geoserver',\n       params: {'LAYERS': 'lung_cancer:total_smokers_v2', 'TILED': true},\n       \n       transition: 0\n      }),\n     style: vectorstyle\n       })*/\n\n    this.map = new Map({\n      layers: [basemap, vectorlayer],\n      target: \"mapContainer\",\n      view: new View({\n        center: fromLonLat([-94.6859, 46.7296]),\n        zoom: 6\n      })\n    });\n    this.map.getView().on('change:resolution', function (event) {\n      const resolution = event.target.getResolution();\n      updateLegend(resolution);\n    });\n  }\n\n  render() {\n    console.log(\"-> render App\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapContainer\",\n      ref: this.mapRef,\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*\nconst SmokerMap = ({ counties}) =>{\n    /*\n    const mapStyle={\n        fillColor: \"white\",\n        weight: 1,\n        color: \"black\",\n        fillOpacity: 1,\n    };\n    const onEachCountry = (country, layer) => {\n        layer.options.fillColor = country.properties.color;\n        const name = country.properties.ADMIN;\n        const confirmedText = country.properties.confirmedText;\n        layer.bindPopup(`${name} ${confirmedText}`);\n      };*/\n\n/*return (\n  <Map style={{ height: \"90vh\" }} zoom={2} center={[-94.6859,46.7296]}>\n    <GeoJSON\n      style={mapStyle}\n      data={countries}\n      onEachFeature={onEachCountry}\n    />\n  </Map>\n);\n return (\n  <div className=\"map_div\">\n  <Map className=\"smoker_map\" view={{center:fromLonLat([-94.6859,46.7296]),zoom:6}}>\n    <Layers>\n      <layer.Tile></layer.Tile>\n      </Layers>\n       </Map>\n  \n  </div>\n);\n};\nexport default SmokerMap;\n*/","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerMap.js"],"names":["React","fromLonLat","get","Map","View","TileLayer","VectorLayer","VectorSource","GeoJSON","OSM","Fill","Stroke","Style","ImageWMS","SmokerMap","Component","constructor","props","console","log","mapRef","createRef","componentDidMount","basemap","source","wmsSource","url","params","ratio","serverType","updateLegend","resolution","graphicUrl","getLegendUrl","img","document","getElementById","src","map","getView","getResolution","vectorstyle","fill","color","stroke","width","totalsmoker","format","stylefunction","feature","style","value","vectorlayer","showLegend","layers","target","view","center","zoom","on","event","render","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\";\n//import \"./SmokerMap.css\";\nimport Map from \"ol/Map\";\n//import Feature from \"ol/Feature\";\nimport View from \"ol/View\";\n//import { Point, Style, Circle, Fill, Feature } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\n//import TileWMS from 'ol/source/TileWMS';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport {Fill, Stroke, Style} from 'ol/style';\n//import cityboundary from \"./Minneapolis_Police_Precincts.geojson\";\n\nimport ImageWMS from 'ol/source/ImageWMS';\n\n\n\n\nexport default class SmokerMap extends React.Component{\n  constructor(props){\n    super(props);\n    console.log(this.props);\n    this.mapRef=React.createRef();\n  }\n  componentDidMount(){\n\n    var basemap =new TileLayer({\n      source: new OSM()\n    })\n\n    const wmsSource = new ImageWMS({\n      url: 'https://ahocevar.com/geoserver/wms',\n      params: {'LAYERS': 'topp:states'},\n      ratio: 1,\n      serverType: 'geoserver',\n    });\n\n    const updateLegend = function (resolution) {\n      const graphicUrl = wmsSource.getLegendUrl(resolution);\n      const img = document.getElementById('legend');\n      img.src = graphicUrl;\n    };\n    const resolution = map.getView().getResolution();\n    updateLegend(resolution);\n\n    var vectorstyle = new Style({\n      fill: new Fill({\n        color: '#eeeeee'\n      }),\n      stroke: new Stroke({\n        color:'black',\n        width:1\n      })\n    })\n\n    var totalsmoker = new VectorSource({\n      url:\"https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms?service=WMS&version=1.1.0&request=GetMap&layers=lung_cancer%3Atotal_smokers_v2&bbox=-97.239209%2C43.499383499%2C-89.4917389999999%2C49.3843580000001&width=768&height=583&srs=EPSG%3A4326&format=geojson\",\n      format: new GeoJSON()\n    })\n\n \n      var stylefunction = function(feature){\n        var style;\n        var value=feature.get('brffs_smokers');\n        console.log(value);\n        //var color= value <100 ? '#ffffff': value <200 ? '#ff3f3f' : '#3f0000';\n\n        //this.style.getFill().setColor(color);\n      if(feature.get('brffs_smokers')>'400'){\n        style= new Style({\n          fill: new Fill({\n            color: '#eeeeee'\n          }),\n          stroke: new Stroke({\n            color:'black',\n            width:1\n          })\n\n        })\n\n      }\n      else \n        style= new Style({\n         fill: new Fill({\n            color: '#B4DFB4'\n          }),\n         stroke: new Stroke({\n           color:'black',\n            width:1\n         })\n\n      })\n      \n        return style;\n\n    };\n\n    var vectorlayer = new VectorLayer({\n     \n       source: totalsmoker,\n       style: stylefunction,\n       showLegend:true\n       \n    \n       })\n\n     /*  \n    var lungdata = new TileLayer({\n      source : new TileWMS ({\n        url:'https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms',\n        serverType:'geoserver',\n        params: {'LAYERS': 'lung_cancer:total_smokers_v2', 'TILED': true},\n        \n        transition: 0\n\n      }),\n      style: vectorstyle\n\n\n\n\n    })*/\n    \n    this.map=new Map({\n      layers: [basemap,vectorlayer],\n      target: \"mapContainer\",\n      view :new View({\n        center:fromLonLat([-94.6859,46.7296]),\n        zoom: 6\n      })\n\n    });\n\n    this.map.getView().on('change:resolution', function (event) {\n      const resolution = event.target.getResolution();\n      updateLegend(resolution);\n    });\n   \n  }\n  render() {\n    console.log(\"-> render App\");\n    return (\n      <div\n        id=\"mapContainer\"\n        ref={this.mapRef}\n        style={{ width: \"100%\", height: \"500px\" }}\n      >\n       \n      </div>\n    );\n  }\n\n\n}\n/*\nconst SmokerMap = ({ counties}) =>{\n    /*\n    const mapStyle={\n        fillColor: \"white\",\n        weight: 1,\n        color: \"black\",\n        fillOpacity: 1,\n    };\n    const onEachCountry = (country, layer) => {\n        layer.options.fillColor = country.properties.color;\n        const name = country.properties.ADMIN;\n        const confirmedText = country.properties.confirmedText;\n        layer.bindPopup(`${name} ${confirmedText}`);\n      };*/\n\n      /*return (\n        <Map style={{ height: \"90vh\" }} zoom={2} center={[-94.6859,46.7296]}>\n          <GeoJSON\n            style={mapStyle}\n            data={countries}\n            onEachFeature={onEachCountry}\n          />\n        </Map>\n      );\n\n      return (\n        <div className=\"map_div\">\n        <Map className=\"smoker_map\" view={{center:fromLonLat([-94.6859,46.7296]),zoom:6}}>\n          <Layers>\n            <layer.Tile></layer.Tile>\n            </Layers>\n    \n        </Map>\n        \n        </div>\n      );\n\n};\nexport default SmokerMap;\n*/\n"]},"metadata":{},"sourceType":"module"}