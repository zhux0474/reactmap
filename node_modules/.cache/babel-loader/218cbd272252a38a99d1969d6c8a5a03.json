{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerMap.js\";\nimport React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\"; //import \"./SmokerMap.css\";\n\nimport Map from \"ol/Map\"; //import Feature from \"ol/Feature\";\n\nimport View from \"ol/View\"; //import { Point, Style, Circle, Fill, Feature } from \"ol\";\n\nimport TileLayer from \"ol/layer/Tile\"; //import TileWMS from 'ol/source/TileWMS';\n\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport { Fill, Stroke, Style } from 'ol/style'; //import cityboundary from \"./Minneapolis_Police_Precincts.geojson\";\n\nimport ImageWMS from 'ol/source/ImageWMS';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SmokerMap extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props); //this.mapRef=React.createRef();\n    //this.legendRef=React.createRef();\n  }\n\n  componentDidMount() {\n    var basemap = new TileLayer({\n      source: new OSM()\n    });\n    const wmsSource = new ImageWMS({\n      url: 'https://ahocevar.com/geoserver/wms',\n      params: {\n        'LAYERS': 'topp:states'\n      },\n      target: \"maplegend\",\n      ratio: 1,\n      serverType: 'geoserver'\n    });\n    var totalsmoker = new VectorSource({\n      url: \"https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms?service=WMS&version=1.1.0&request=GetMap&layers=lung_cancer%3Atotal_smokers_v2&bbox=-97.239209%2C43.499383499%2C-89.4917389999999%2C49.3843580000001&width=768&height=583&srs=EPSG%3A4326&format=geojson\",\n      format: new GeoJSON()\n    });\n    var breakarray = [300, 400, 500, 600];\n    var colorarray = ['#edf8fb', '#b3cde3', '#8c96c6', '#88419d']; //and use a for loop inside to assign stuff omg imsotired!\n\n    var stylefunction = function (feature) {\n      var style;\n      var value = feature.get('brffs_smokers');\n      console.log(value);\n\n      for (let i = 0; i < breakarray.length; i++) {\n        if (value > breakarray[i]) {\n          style = new Style({\n            fill: new Fill({\n              color: colorarray[i]\n            }),\n            stroke: new Stroke({\n              color: 'black',\n              width: 1\n            })\n          });\n        }\n\n        ;\n      }\n      /*\n      else \n        style= new Style({\n         fill: new Fill({\n            color: '#B4DFB4'\n          }),\n         stroke: new Stroke({\n           color:'black',\n            width:1\n         })\n       })*/\n\n\n      return style;\n    };\n\n    var vectorlayer = new VectorLayer({\n      source: totalsmoker,\n      style: stylefunction,\n      showLegend: true\n    });\n    /*  \n    var lungdata = new TileLayer({\n     source : new TileWMS ({\n       url:'https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms',\n       serverType:'geoserver',\n       params: {'LAYERS': 'lung_cancer:total_smokers_v2', 'TILED': true},\n       \n       transition: 0\n      }),\n     style: vectorstyle\n       })*/\n\n    var remap = new Map({\n      layers: [basemap, vectorlayer],\n      target: \"mapContainer\",\n      view: new View({\n        center: fromLonLat([-94.6859, 46.7296]),\n        zoom: 6\n      })\n    });\n  }\n\n  render() {\n    console.log(\"-> render App\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapContainer\",\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerMap.js"],"names":["React","fromLonLat","get","Map","View","TileLayer","VectorLayer","VectorSource","GeoJSON","OSM","Fill","Stroke","Style","ImageWMS","SmokerMap","Component","constructor","props","console","log","componentDidMount","basemap","source","wmsSource","url","params","target","ratio","serverType","totalsmoker","format","breakarray","colorarray","stylefunction","feature","style","value","i","length","fill","color","stroke","width","vectorlayer","showLegend","remap","layers","view","center","zoom","render","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\";\n//import \"./SmokerMap.css\";\nimport Map from \"ol/Map\";\n//import Feature from \"ol/Feature\";\nimport View from \"ol/View\";\n//import { Point, Style, Circle, Fill, Feature } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\n//import TileWMS from 'ol/source/TileWMS';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport {Fill, Stroke, Style} from 'ol/style';\n//import cityboundary from \"./Minneapolis_Police_Precincts.geojson\";\n\nimport ImageWMS from 'ol/source/ImageWMS';\n\n\n\nexport default class SmokerMap extends React.Component{\n  constructor(props){\n    super(props);\n    console.log(this.props);\n    //this.mapRef=React.createRef();\n    //this.legendRef=React.createRef();\n  }\n\n  \n  componentDidMount(){\n\n    var basemap =new TileLayer({\n      source: new OSM()\n    })\n\n    const wmsSource = new ImageWMS({\n      url: 'https://ahocevar.com/geoserver/wms',\n      params: {'LAYERS': 'topp:states'},\n      target: \"maplegend\",\n      ratio: 1,\n      serverType: 'geoserver',\n    });\n  \n  \n\n    var totalsmoker = new VectorSource({\n      url:\"https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms?service=WMS&version=1.1.0&request=GetMap&layers=lung_cancer%3Atotal_smokers_v2&bbox=-97.239209%2C43.499383499%2C-89.4917389999999%2C49.3843580000001&width=768&height=583&srs=EPSG%3A4326&format=geojson\",\n      format: new GeoJSON()\n    })\n\n    var breakarray= [300,400,500,600];\n    var colorarray= ['#edf8fb','#b3cde3','#8c96c6','#88419d']\n    //and use a for loop inside to assign stuff omg imsotired!\n      var stylefunction = function(feature){\n        var style;\n        var value=feature.get('brffs_smokers');\n        console.log(value);\n        for (let i =0;i<breakarray.length;i++){\n          if(value>breakarray[i]){\n          style= new Style({\n            fill: new Fill({\n              color: colorarray[i]\n            }),\n            stroke: new Stroke({\n              color:'black',\n              width:1\n            })\n  \n          })\n  \n        };\n      }\n  \n\n\n      /*\n      else \n        style= new Style({\n         fill: new Fill({\n            color: '#B4DFB4'\n          }),\n         stroke: new Stroke({\n           color:'black',\n            width:1\n         })\n\n      })*/\n      \n        return style;\n\n    };\n\n    var vectorlayer = new VectorLayer({\n     \n       source: totalsmoker,\n       style: stylefunction,\n       showLegend:true\n       \n    \n       })\n\n     /*  \n    var lungdata = new TileLayer({\n      source : new TileWMS ({\n        url:'https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms',\n        serverType:'geoserver',\n        params: {'LAYERS': 'lung_cancer:total_smokers_v2', 'TILED': true},\n        \n        transition: 0\n\n      }),\n      style: vectorstyle\n\n\n\n\n    })*/\n    \n    var remap=new Map({\n      layers: [basemap,vectorlayer],\n      target: \"mapContainer\",\n      view :new View({\n        center:fromLonLat([-94.6859,46.7296]),\n        zoom: 6\n      })\n\n    \n\n    });\n\n   \n   \n  }\n  render() {\n    console.log(\"-> render App\");\n    return (\n\n      \n      <div id=\"mapContainer\" style={{ width: \"100%\", height: \"500px\"}}></div>\n\n      \n    );\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}