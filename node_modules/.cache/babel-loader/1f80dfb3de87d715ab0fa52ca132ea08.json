{"ast":null,"code":"/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  var ret;\n  offset += stride;\n\n  for (; offset < end; offset += stride) {\n    ret = callback(flatCoordinates.slice(offset - stride, offset), flatCoordinates.slice(offset, offset + stride));\n\n    if (ret) {\n      return ret;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/rongxuan/Desktop/git_react/node_modules/ol/src/geom/flat/segments.js"],"names":[],"mappings":"AAAA;;AAEG;;AAEH;;;;;;;;;;;;AAYG;AACH,OAAM,SAAU,OAAV,CAAkB,eAAlB,EAAmC,MAAnC,EAA2C,GAA3C,EAAgD,MAAhD,EAAwD,QAAxD,EAAgE;AACpE,MAAI,GAAJ;AACA,EAAA,MAAM,IAAI,MAAV;;AACA,SAAO,MAAM,GAAG,GAAhB,EAAqB,MAAM,IAAI,MAA/B,EAAuC;AACrC,IAAA,GAAG,GAAG,QAAQ,CACZ,eAAe,CAAC,KAAhB,CAAsB,MAAM,GAAG,MAA/B,EAAuC,MAAvC,CADY,EAEZ,eAAe,CAAC,KAAhB,CAAsB,MAAtB,EAA8B,MAAM,GAAG,MAAvC,CAFY,CAAd;;AAIA,QAAI,GAAJ,EAAS;AACP,aAAO,GAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD","sourcesContent":["/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}