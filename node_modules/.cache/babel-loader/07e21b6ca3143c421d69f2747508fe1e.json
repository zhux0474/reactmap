{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/WFS\n */\n\n\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport { XML_SCHEMA_INSTANCE_URI, createElementNS, isDocument, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\nimport { and as andFilterFn, bbox as bboxFilterFn } from './filter.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { readNonNegativeIntegerString, readPositiveInteger, writeStringTextNode } from './xsd.js';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nvar FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(GMLBase.prototype.readGeometryElement, 'bounds')\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nvar TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nvar TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\n\nvar FEATURE_PREFIX = 'feature';\n/**\n * @type {string}\n */\n\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n/**\n * @type {Object<string, string>}\n */\n\nvar OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc'\n};\n/**\n * @type {Object<string, string>}\n */\n\nvar WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs'\n};\n/**\n * @type {Object<string, string>}\n */\n\nvar FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes'\n};\n/**\n * @type {Object<string, string>}\n */\n\nvar SCHEMA_LOCATIONS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n/**\n * @type {Object<string, object>}\n */\n\nvar GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2\n};\n/**\n * @const\n * @type {string}\n */\n\nvar DEFAULT_VERSION = '1.1.0';\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\n\nvar WFS =\n/** @class */\nfunction (_super) {\n  __extends(WFS, _super);\n  /**\n   * @param {Options} [opt_options] Optional configuration object.\n   */\n\n\n  function WFS(opt_options) {\n    var _this = _super.call(this) || this;\n\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.version_ = options.version ? options.version : DEFAULT_VERSION;\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n\n    _this.featureType_ = options.featureType;\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n\n    _this.featureNS_ = options.featureNS;\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n\n    _this.gmlFormat_ = options.gmlFormat ? options.gmlFormat : new GML_FORMATS[_this.version_]();\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.schemaLocation_ = options.schemaLocation ? options.schemaLocation : SCHEMA_LOCATIONS[_this.version_];\n    return _this;\n  }\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n\n\n  WFS.prototype.getFeatureType = function () {\n    return this.featureType_;\n  };\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n\n\n  WFS.prototype.setFeatureType = function (featureType) {\n    this.featureType_ = featureType;\n  };\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  WFS.prototype.readFeaturesFromNode = function (node, opt_options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_\n    });\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    var objectStack = [context];\n    var featuresNS;\n\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n\n    var features = pushParseAndPop([], featuresNS, node, objectStack, this.gmlFormat_);\n\n    if (!features) {\n      features = [];\n    }\n\n    return features;\n  };\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n\n\n  WFS.prototype.readTransactionResponse = function (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n      /** @type {Document} */\n      source);\n    } else {\n      return this.readTransactionResponseFromNode(\n      /** @type {Element} */\n      source);\n    }\n  };\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n\n\n  WFS.prototype.readFeatureCollectionMetadata = function (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */\n      source);\n    } else {\n      return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */\n      source);\n    }\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n\n\n  WFS.prototype.readFeatureCollectionMetadataFromDocument = function (doc) {\n    for (var n =\n    /** @type {Node} */\n    doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Element} */\n        n);\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n\n\n  WFS.prototype.readFeatureCollectionMetadataFromNode = function (node) {\n    var result = {};\n    var value = readNonNegativeIntegerString(node.getAttribute('numberOfFeatures'));\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n    /** @type {FeatureCollectionMetadata} */\n    result, FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n\n\n  WFS.prototype.readTransactionResponseFromDocument = function (doc) {\n    for (var n =\n    /** @type {Node} */\n    doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(\n        /** @type {Element} */\n        n);\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n\n\n  WFS.prototype.readTransactionResponseFromNode = function (node) {\n    return pushParseAndPop(\n    /** @type {TransactionResponse} */\n    {}, TRANSACTION_RESPONSE_PARSERS, node, []);\n  };\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n\n\n  WFS.prototype.writeGetFeature = function (options) {\n    var _this = this;\n\n    var node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : []\n    });\n    assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` must be an Array\n\n    if (typeof options.featureTypes[0] === 'string') {\n      var filter = options.filter;\n\n      if (options.bbox) {\n        assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n\n        filter = this.combineBboxAndFilter(options.geometryName, options.bbox, options.srsName, filter);\n      }\n\n      assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter\n      });\n      writeGetFeature(node,\n      /** @type {!Array<string>} */\n      options.featureTypes, [context]);\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach(function (\n      /** @type {FeatureType} */\n      featureType) {\n        var completeFilter = _this.combineBboxAndFilter(featureType.geometryName, featureType.bbox, options.srsName, options.filter);\n\n        assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n\n    return node;\n  };\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [opt_srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [opt_filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n\n\n  WFS.prototype.combineBboxAndFilter = function (geometryName, extent, opt_srsName, opt_filter) {\n    var bboxFilter = bboxFilterFn(geometryName, extent, opt_srsName);\n\n    if (opt_filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(opt_filter, bboxFilter);\n    }\n\n    return bboxFilter;\n  };\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n\n\n  WFS.prototype.writeTransaction = function (inserts, updates, deletes, options) {\n    var objectStack = [];\n    var version = options.version ? options.version : this.version_;\n    var node = createElementNS(WFSNS[version], 'Transaction');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    var baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATIONS[version]);\n    var request = createTransactionRequest(node, baseObj, version, options);\n\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n\n    if (options.nativeElements) {\n      serializeTransactionRequest('Native', options.nativeElements, objectStack, request);\n    }\n\n    return node;\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n\n\n  WFS.prototype.readProjectionFromDocument = function (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(\n        /** @type {Element} */\n        n);\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n\n\n  WFS.prototype.readProjectionFromNode = function (node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (!(n.childNodes.length === 0 || n.childNodes.length === 1 && n.firstChild.nodeType === 3)) {\n          var objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  return WFS;\n}(XMLFeature);\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\n\n\nfunction createTransactionRequest(node, baseObj, version, options) {\n  var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n  var gmlVersion;\n\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n\n  var obj = assign({\n    node: node\n  }, {\n    version: version,\n    'featureNS': options.featureNS,\n    'featureType': options.featureType,\n    'featurePrefix': featurePrefix,\n    'gmlVersion': gmlVersion,\n    'hasZ': options.hasZ,\n    'srsName': options.srsName\n  }, baseObj);\n  return obj;\n}\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\n\n\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(request, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory(type), features, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\n\n\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser\n  }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\n\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeFeature(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var version = context['version'];\n  var ns = OGCNS[version];\n  var filter = createElementNS(ns, 'Filter');\n  var child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid',\n  /** @type {string} */\n  fid);\n  node.appendChild(filter);\n}\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\n\n\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  var prefix = featurePrefix + ':'; // The featureType already contains the prefix.\n\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeDelete(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeUpdate(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n\n  var version = context['version'];\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n\n      if (value !== undefined) {\n        var name_1 = keys[i];\n\n        if (value && typeof\n        /** @type {?} */\n        value.getSimplifiedGeometry === 'function') {\n          name_1 = geometryName;\n        }\n\n        values.push({\n          name: name_1,\n          value: value\n        });\n      }\n    }\n\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    {\n      version: version,\n      'gmlVersion': context['gmlVersion'],\n      node: node,\n      'hasZ': context['hasZ'],\n      'srsName': context['srsName']\n    }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Property'), values, objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeProperty(node, pair, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var version = context['version'];\n  var ns = WFSNS[version];\n  var name = createElementNS(ns, 'Name');\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n\n    if (pair.value && typeof\n    /** @type {?} */\n    pair.value.getSimplifiedGeometry === 'function') {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\n\nvar GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\n\nfunction writeQuery(node, featureType, objectStack) {\n  var context =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var version = context['version'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName; // If feature prefix is not defined, we must not use the default prefix.\n\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n\n  var typeNameAttr;\n\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n\n  node.setAttribute(typeNameAttr, typeName);\n\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n\n  var item =\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(item, QUERY_SERIALIZERS, makeSimpleNodeFactory('PropertyName'), propertyNames, objectStack);\n  var filter = context['filter'];\n\n  if (filter) {\n    var child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeFilterCondition(node, filter, objectStack) {\n  var context =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n\n  var item = {\n    node: node\n  };\n  assign(item, {\n    context: context\n  });\n  pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(filter.getTagName()), [filter], objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeBboxFilter(node, filter, objectStack) {\n  var parent =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  parent['srsName'] = filter.srsName;\n  var format = GML_FORMATS[version];\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid',\n  /** @type {string} */\n  filter.rid);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeSpatialFilter(node, filter, objectStack) {\n  var parent =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  parent['srsName'] = filter.srsName;\n  var format = GML_FORMATS[version];\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeDWithinFilter(node, filter, objectStack) {\n  var parent =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  var distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n\n  node.appendChild(distance);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeDuringFilter(node, filter, objectStack) {\n  var parent =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n  node.appendChild(timePeriod);\n  var begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n  var end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeLogicalFilter(node, filter, objectStack) {\n  var parent =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n\n  var item = {\n    node: node\n  };\n  assign(item, {\n    context: context\n  });\n  var conditions = filter.conditions;\n\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n  }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeNotFilter(node, filter, objectStack) {\n  var parent =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n\n  var item = {\n    node: node\n  };\n  assign(item, {\n    context: context\n  });\n  var condition = filter.condition;\n  pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeComparisonFilter(node, filter, objectStack) {\n  var parent =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeIsNullFilter(node, filter, objectStack) {\n  var parent =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  var parent =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  var ns = getFilterNS(version);\n  writePropertyName(version, node, filter.propertyName);\n  var lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n  var upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  var parent =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\n\n\nfunction writeExpression(ns, tagName, node, value) {\n  var property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\n\n\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\n\n\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\n\n\nfunction writeTimeInstant(node, time) {\n  var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n  var timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} opt_version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\n\n\nexport function writeFilter(filter, opt_version) {\n  var version = opt_version || '1.1.0';\n  var child = createElementNS(getFilterNS(version), 'Filter');\n  var context = {\n    node: child\n  };\n  assign(context, {\n    'version': version,\n    'filter': filter\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\n\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  var context =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var item =\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory('Query'), featureTypes, objectStack);\n}\n\nfunction getFilterNS(version) {\n  var ns;\n\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n\n  return ns;\n}\n\nexport default WFS;","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/ol/src/format/WFS.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    } else {\n      return this.readTransactionResponseFromNode(\n        /** @type {Element} */ (source)\n      );\n    }\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    } else {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Element} */ (source)\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` must be an Array\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [opt_srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [opt_filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, opt_srsName, opt_filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, opt_srsName);\n    if (opt_filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(opt_filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const name = createElementNS(ns, 'Name');\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} opt_version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, opt_version) {\n  const version = opt_version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n"]},"metadata":{},"sourceType":"module"}