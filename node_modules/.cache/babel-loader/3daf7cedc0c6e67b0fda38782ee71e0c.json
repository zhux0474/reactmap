{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.FileUtil = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _GeoJSON = _interopRequireDefault(require(\"ol/format/GeoJSON\"));\n\nvar _Vector = _interopRequireDefault(require(\"ol/layer/Vector\"));\n\nvar _Vector2 = _interopRequireDefault(require(\"ol/source/Vector\"));\n\nvar _shpjs = _interopRequireDefault(require(\"shpjs\"));\n/**\n * Helper class for adding layers from various file formats.\n *\n * @class\n */\n\n\nvar FileUtil = /*#__PURE__*/function () {\n  function FileUtil() {\n    (0, _classCallCheck2[\"default\"])(this, FileUtil);\n  }\n\n  (0, _createClass2[\"default\"])(FileUtil, null, [{\n    key: \"addGeojsonLayerFromFile\",\n    value:\n    /**\n     * Adds a new vector layer from a geojson file.\n     * @param {File} file the file to read the geojson from\n     * @param {ol.Map} map the map to add the layer to\n     */\n    function addGeojsonLayerFromFile(file, map) {\n      var reader = new FileReader();\n      reader.readAsText(file);\n      reader.addEventListener('loadend', function () {\n        var content = reader.result;\n        FileUtil.addGeojsonLayer(content, map);\n      });\n    }\n    /**\n     * Adds a new vector layer from a shape file (zip).\n     * @param {File} file the file to read the geojson from\n     * @param {ol.Map} map the map to add the layer to\n     */\n\n  }, {\n    key: \"addShpLayerFromFile\",\n    value: function addShpLayerFromFile(file, map) {\n      var reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.addEventListener('loadend', function () {\n        var blob = reader.result;\n        (0, _shpjs[\"default\"])(blob).then(function (json) {\n          FileUtil.addGeojsonLayer(json, map);\n        });\n      });\n    }\n    /**\n     * Adds a new vector layer from a geojson string.\n     * @param {string} json the geojson string\n     * @param {ol.Map} map the map to add the layer to\n     */\n\n  }, {\n    key: \"addGeojsonLayer\",\n    value: function addGeojsonLayer(json, map) {\n      var format = new _GeoJSON[\"default\"]();\n      var features = format.readFeatures(json);\n      var layer = new _Vector[\"default\"]({\n        source: new _Vector2[\"default\"]({\n          features: features\n        })\n      });\n      map.addLayer(layer);\n    }\n  }]);\n  return FileUtil;\n}();\n\nexports.FileUtil = FileUtil;\nvar _default = FileUtil;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@terrestris/ol-util/dist/FileUtil/FileUtil.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","FileUtil","_classCallCheck2","_createClass2","_GeoJSON","_Vector","_Vector2","_shpjs","key","addGeojsonLayerFromFile","file","map","reader","FileReader","readAsText","addEventListener","content","result","addGeojsonLayer","addShpLayerFromFile","readAsArrayBuffer","blob","then","json","format","features","readFeatures","layer","source","addLayer","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.FileUtil = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _GeoJSON = _interopRequireDefault(require(\"ol/format/GeoJSON\"));\n\nvar _Vector = _interopRequireDefault(require(\"ol/layer/Vector\"));\n\nvar _Vector2 = _interopRequireDefault(require(\"ol/source/Vector\"));\n\nvar _shpjs = _interopRequireDefault(require(\"shpjs\"));\n\n/**\n * Helper class for adding layers from various file formats.\n *\n * @class\n */\nvar FileUtil = /*#__PURE__*/function () {\n  function FileUtil() {\n    (0, _classCallCheck2[\"default\"])(this, FileUtil);\n  }\n\n  (0, _createClass2[\"default\"])(FileUtil, null, [{\n    key: \"addGeojsonLayerFromFile\",\n    value:\n    /**\n     * Adds a new vector layer from a geojson file.\n     * @param {File} file the file to read the geojson from\n     * @param {ol.Map} map the map to add the layer to\n     */\n    function addGeojsonLayerFromFile(file, map) {\n      var reader = new FileReader();\n      reader.readAsText(file);\n      reader.addEventListener('loadend', function () {\n        var content = reader.result;\n        FileUtil.addGeojsonLayer(content, map);\n      });\n    }\n    /**\n     * Adds a new vector layer from a shape file (zip).\n     * @param {File} file the file to read the geojson from\n     * @param {ol.Map} map the map to add the layer to\n     */\n\n  }, {\n    key: \"addShpLayerFromFile\",\n    value: function addShpLayerFromFile(file, map) {\n      var reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.addEventListener('loadend', function () {\n        var blob = reader.result;\n        (0, _shpjs[\"default\"])(blob).then(function (json) {\n          FileUtil.addGeojsonLayer(json, map);\n        });\n      });\n    }\n    /**\n     * Adds a new vector layer from a geojson string.\n     * @param {string} json the geojson string\n     * @param {ol.Map} map the map to add the layer to\n     */\n\n  }, {\n    key: \"addGeojsonLayer\",\n    value: function addGeojsonLayer(json, map) {\n      var format = new _GeoJSON[\"default\"]();\n      var features = format.readFeatures(json);\n      var layer = new _Vector[\"default\"]({\n        source: new _Vector2[\"default\"]({\n          features: features\n        })\n      });\n      map.addLayer(layer);\n    }\n  }]);\n  return FileUtil;\n}();\n\nexports.FileUtil = FileUtil;\nvar _default = FileUtil;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}