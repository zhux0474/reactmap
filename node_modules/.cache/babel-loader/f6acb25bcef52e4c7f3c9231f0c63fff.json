{"ast":null,"code":"// @ag-grid-community/react v26.2.0\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ChangeDetectionStrategyType;\n\n(function (ChangeDetectionStrategyType) {\n  ChangeDetectionStrategyType[\"IdentityCheck\"] = \"IdentityCheck\";\n  ChangeDetectionStrategyType[\"DeepValueCheck\"] = \"DeepValueCheck\";\n  ChangeDetectionStrategyType[\"NoCheck\"] = \"NoCheck\";\n})(ChangeDetectionStrategyType = exports.ChangeDetectionStrategyType || (exports.ChangeDetectionStrategyType = {}));\n\nvar SimpleFunctionalStrategy =\n/** @class */\nfunction () {\n  function SimpleFunctionalStrategy(strategy) {\n    this.strategy = strategy;\n  }\n\n  SimpleFunctionalStrategy.prototype.areEqual = function (a, b) {\n    return this.strategy(a, b);\n  };\n\n  return SimpleFunctionalStrategy;\n}();\n\nvar DeepValueStrategy =\n/** @class */\nfunction () {\n  function DeepValueStrategy() {}\n\n  DeepValueStrategy.prototype.areEqual = function (a, b) {\n    return DeepValueStrategy.areEquivalent(DeepValueStrategy.copy(a), DeepValueStrategy.copy(b));\n  };\n  /*\n   * deeper object comparison - taken from https://stackoverflow.com/questions/1068834/object-comparison-in-javascript\n   */\n\n\n  DeepValueStrategy.unwrapStringOrNumber = function (obj) {\n    return obj instanceof Number || obj instanceof String ? obj.valueOf() : obj;\n  }; // sigh, here for ie compatibility\n\n\n  DeepValueStrategy.copy = function (value) {\n    if (!value) {\n      return value;\n    }\n\n    if (Array.isArray(value)) {\n      // shallow copy the array - this will typically be either rowData or columnDefs\n      var arrayCopy = [];\n\n      for (var i = 0; i < value.length; i++) {\n        arrayCopy.push(this.copy(value[i]));\n      }\n\n      return arrayCopy;\n    } // for anything without keys (boolean, string etc).\n    // Object.keys - chrome will swallow them, IE will fail (correctly, imho)\n\n\n    if (typeof value !== \"object\") {\n      return value;\n    }\n\n    return [{}, value].reduce(function (r, o) {\n      Object.keys(o).forEach(function (k) {\n        r[k] = o[k];\n      });\n      return r;\n    }, {});\n  };\n\n  DeepValueStrategy.isNaN = function (value) {\n    if (Number.isNaN) {\n      return Number.isNaN(value);\n    } // for ie11...\n\n\n    return typeof value === 'number' && isNaN(value);\n  };\n  /*\n   * slightly modified, but taken from https://stackoverflow.com/questions/1068834/object-comparison-in-javascript\n   *\n   * What we're trying to do here is determine if the property being checked has changed in _value_, not just in reference\n   *\n   * For eg, if a user updates the columnDefs via property binding, but the actual columns defs are the same before and\n   * after, then we don't want the grid to re-render\n   */\n\n\n  DeepValueStrategy.areEquivalent = function (a, b) {\n    a = DeepValueStrategy.unwrapStringOrNumber(a);\n    b = DeepValueStrategy.unwrapStringOrNumber(b);\n    if (a === b) return true; //e.g. a and b both null\n\n    if (a === null || b === null || typeof a !== typeof b) return false;\n\n    if (DeepValueStrategy.isNaN(a) && DeepValueStrategy.isNaN(b)) {\n      return true;\n    }\n\n    if (a instanceof Date) {\n      return b instanceof Date && a.valueOf() === b.valueOf();\n    }\n\n    if (typeof a === \"function\") {\n      // false to allow for callbacks to be reactive...\n      return false;\n    }\n\n    if (typeof a !== \"object\" || a.$$typeof && a.$$typeof.toString() === \"Symbol(react.element)\") {\n      return a == b; //for boolean, number, string, function, xml\n    }\n\n    if (Object.isFrozen(a) || Object.isFrozen(b)) {\n      return a === b;\n    }\n\n    var newA = a.areEquivPropertyTracking === undefined,\n        newB = b.areEquivPropertyTracking === undefined;\n\n    try {\n      var prop = void 0;\n\n      if (newA) {\n        a.areEquivPropertyTracking = [];\n      } else if (a.areEquivPropertyTracking.some(function (other) {\n        return other === b;\n      })) return true;\n\n      if (newB) {\n        b.areEquivPropertyTracking = [];\n      } else if (b.areEquivPropertyTracking.some(function (other) {\n        return other === a;\n      })) {\n        return true;\n      }\n\n      a.areEquivPropertyTracking.push(b);\n      b.areEquivPropertyTracking.push(a);\n      var tmp = {};\n\n      for (prop in a) if (prop != \"areEquivPropertyTracking\") {\n        tmp[prop] = null;\n      }\n\n      for (prop in b) if (prop != \"areEquivPropertyTracking\") {\n        tmp[prop] = null;\n      }\n\n      for (prop in tmp) {\n        if (!this.areEquivalent(a[prop], b[prop])) {\n          return false;\n        }\n      }\n\n      return true;\n    } finally {\n      if (newA) delete a.areEquivPropertyTracking;\n      if (newB) delete b.areEquivPropertyTracking;\n    }\n  };\n\n  return DeepValueStrategy;\n}();\n\nvar ChangeDetectionService =\n/** @class */\nfunction () {\n  function ChangeDetectionService() {\n    var _a;\n\n    this.strategyMap = (_a = {}, _a[ChangeDetectionStrategyType.DeepValueCheck] = new DeepValueStrategy(), _a[ChangeDetectionStrategyType.IdentityCheck] = new SimpleFunctionalStrategy(function (a, b) {\n      return a === b;\n    }), _a[ChangeDetectionStrategyType.NoCheck] = new SimpleFunctionalStrategy(function (a, b) {\n      return false;\n    }), _a);\n  }\n\n  ChangeDetectionService.prototype.getStrategy = function (changeDetectionStrategy) {\n    return this.strategyMap[changeDetectionStrategy];\n  };\n\n  return ChangeDetectionService;\n}();\n\nexports.ChangeDetectionService = ChangeDetectionService;","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/react/lib/shared/shared/changeDetectionService.ts"],"names":[],"mappings":"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","sourcesContent":["export enum ChangeDetectionStrategyType {\n    IdentityCheck = 'IdentityCheck',\n    DeepValueCheck = 'DeepValueCheck',\n    NoCheck = 'NoCheck'\n}\n\nexport interface ChangeDetectionStrategy {\n    areEqual(a: any, b: any): boolean;\n}\n\nclass SimpleFunctionalStrategy implements ChangeDetectionStrategy {\n    private strategy: (a: any, b: any) => boolean;\n\n    constructor(strategy: (a: any, b: any) => boolean) {\n        this.strategy = strategy;\n    }\n\n    areEqual(a: any, b: any): boolean {\n        return this.strategy(a, b);\n    }\n}\n\nclass DeepValueStrategy implements ChangeDetectionStrategy {\n    areEqual(a: any, b: any): boolean {\n        return DeepValueStrategy.areEquivalent(DeepValueStrategy.copy(a), DeepValueStrategy.copy(b));\n    }\n\n    /*\n     * deeper object comparison - taken from https://stackoverflow.com/questions/1068834/object-comparison-in-javascript\n     */\n    static unwrapStringOrNumber(obj: any) {\n        return obj instanceof Number || obj instanceof String ? obj.valueOf() : obj;\n    }\n\n    // sigh, here for ie compatibility\n    static copy(value: any): any {\n        if (!value) {\n            return value;\n        }\n\n        if (Array.isArray(value)) {\n            // shallow copy the array - this will typically be either rowData or columnDefs\n            const arrayCopy = [];\n            for (let i = 0; i < value.length; i++) {\n                arrayCopy.push(this.copy(value[i]));\n            }\n            return arrayCopy;\n        }\n\n        // for anything without keys (boolean, string etc).\n        // Object.keys - chrome will swallow them, IE will fail (correctly, imho)\n        if (typeof value !== \"object\") {\n            return value;\n        }\n\n        return [{}, value].reduce((r, o) => {\n            Object.keys(o).forEach(function (k) {\n                r[k] = o[k];\n            });\n            return r;\n        }, {});\n    }\n\n    static isNaN(value: any) {\n        if(Number.isNaN) {\n            return Number.isNaN(value);\n        }\n        // for ie11...\n        return typeof(value) === 'number' && isNaN(value);\n    }\n    /*\n     * slightly modified, but taken from https://stackoverflow.com/questions/1068834/object-comparison-in-javascript\n     *\n     * What we're trying to do here is determine if the property being checked has changed in _value_, not just in reference\n     *\n     * For eg, if a user updates the columnDefs via property binding, but the actual columns defs are the same before and\n     * after, then we don't want the grid to re-render\n     */\n    static areEquivalent(a: any, b: any) {\n        a = DeepValueStrategy.unwrapStringOrNumber(a);\n        b = DeepValueStrategy.unwrapStringOrNumber(b);\n        if (a === b) return true; //e.g. a and b both null\n        if (a === null || b === null || typeof a !== typeof b) return false;\n        if(DeepValueStrategy.isNaN(a) && DeepValueStrategy.isNaN(b)) {\n            return true;\n        }\n        if (a instanceof Date) {\n            return b instanceof Date && a.valueOf() === b.valueOf();\n        }\n        if (typeof a === \"function\") {\n            // false to allow for callbacks to be reactive...\n            return false;\n        }\n        if (typeof a !== \"object\" ||\n            (a.$$typeof && a.$$typeof.toString() === \"Symbol(react.element)\")) {\n            return a == b; //for boolean, number, string, function, xml\n        }\n        if(Object.isFrozen(a) || Object.isFrozen(b)) {\n            return a === b;\n        }\n\n        const newA = a.areEquivPropertyTracking === undefined,\n            newB = b.areEquivPropertyTracking === undefined;\n        try {\n            let prop;\n            if (newA) {\n                a.areEquivPropertyTracking = [];\n            } else if (\n                a.areEquivPropertyTracking.some(function (other: any) {\n                    return other === b;\n                })\n            )\n                return true;\n            if (newB) {\n                b.areEquivPropertyTracking = [];\n            } else if (b.areEquivPropertyTracking.some((other: any) => other === a)) {\n                return true;\n            }\n            a.areEquivPropertyTracking.push(b);\n            b.areEquivPropertyTracking.push(a);\n\n            const tmp = {};\n            for (prop in a)\n                if (prop != \"areEquivPropertyTracking\") {\n                    (tmp as any)[prop] = null;\n                }\n            for (prop in b)\n                if (prop != \"areEquivPropertyTracking\") {\n                    (tmp as any)[prop] = null;\n                }\n\n            for (prop in tmp) {\n                if (!this.areEquivalent(a[prop], b[prop])) {\n                    return false;\n                }\n            }\n            return true;\n        } finally {\n            if (newA) delete a.areEquivPropertyTracking;\n            if (newB) delete b.areEquivPropertyTracking;\n        }\n    }\n}\n\nexport class ChangeDetectionService {\n    private strategyMap: { [key in ChangeDetectionStrategyType]: ChangeDetectionStrategy } = {\n        [ChangeDetectionStrategyType.DeepValueCheck]: new DeepValueStrategy(),\n        [ChangeDetectionStrategyType.IdentityCheck]: new SimpleFunctionalStrategy((a, b) => a === b),\n        [ChangeDetectionStrategyType.NoCheck]: new SimpleFunctionalStrategy((a, b) => false)\n    };\n\n    public getStrategy(changeDetectionStrategy: ChangeDetectionStrategyType): ChangeDetectionStrategy {\n        return this.strategyMap[changeDetectionStrategy];\n    }\n}"]},"metadata":{},"sourceType":"script"}