{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { setDisplayed } from '../../../utils/dom';\n/** Provides sync access to async component. Date component can be lazy created - this class encapsulates\n * this by keeping value locally until DateComp has loaded, then passing DateComp the value. */\n\nvar DateCompWrapper =\n/** @class */\nfunction () {\n  function DateCompWrapper(context, userComponentFactory, dateComponentParams, eParent) {\n    var _this = this;\n\n    this.alive = true;\n    this.context = context;\n    this.eParent = eParent;\n    var compDetails = userComponentFactory.getDateCompDetails(dateComponentParams);\n    var promise = compDetails.newAgStackInstance();\n    promise.then(function (dateComp) {\n      // because async, check the filter still exists after component comes back\n      if (!_this.alive) {\n        context.destroyBean(dateComp);\n        return;\n      }\n\n      _this.dateComp = dateComp;\n\n      if (!dateComp) {\n        return;\n      }\n\n      eParent.appendChild(dateComp.getGui());\n\n      if (dateComp.afterGuiAttached) {\n        dateComp.afterGuiAttached();\n      }\n\n      if (_this.tempValue) {\n        dateComp.setDate(_this.tempValue);\n      }\n\n      if (_this.disabled != null) {\n        _this.setDateCompDisabled(_this.disabled);\n      }\n    });\n  }\n\n  DateCompWrapper.prototype.destroy = function () {\n    this.alive = false;\n    this.dateComp = this.context.destroyBean(this.dateComp);\n  };\n\n  DateCompWrapper.prototype.getDate = function () {\n    return this.dateComp ? this.dateComp.getDate() : this.tempValue;\n  };\n\n  DateCompWrapper.prototype.setDate = function (value) {\n    if (this.dateComp) {\n      this.dateComp.setDate(value);\n    } else {\n      this.tempValue = value;\n    }\n  };\n\n  DateCompWrapper.prototype.setDisabled = function (disabled) {\n    if (this.dateComp) {\n      this.setDateCompDisabled(disabled);\n    } else {\n      this.disabled = disabled;\n    }\n  };\n\n  DateCompWrapper.prototype.setDisplayed = function (displayed) {\n    setDisplayed(this.eParent, displayed);\n  };\n\n  DateCompWrapper.prototype.setInputPlaceholder = function (placeholder) {\n    if (this.dateComp && this.dateComp.setInputPlaceholder) {\n      this.dateComp.setInputPlaceholder(placeholder);\n    }\n  };\n\n  DateCompWrapper.prototype.setInputAriaLabel = function (label) {\n    if (this.dateComp && this.dateComp.setInputAriaLabel) {\n      this.dateComp.setInputAriaLabel(label);\n    }\n  };\n\n  DateCompWrapper.prototype.afterGuiAttached = function (params) {\n    if (this.dateComp && typeof this.dateComp.afterGuiAttached === 'function') {\n      this.dateComp.afterGuiAttached(params);\n    }\n  };\n\n  DateCompWrapper.prototype.setDateCompDisabled = function (disabled) {\n    if (this.dateComp == null) {\n      return;\n    }\n\n    if (this.dateComp.setDisabled == null) {\n      return;\n    }\n\n    this.dateComp.setDisabled(disabled);\n  };\n\n  return DateCompWrapper;\n}();\n\nexport { DateCompWrapper };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/filter/provided/date/dateCompWrapper.js"],"names":["setDisplayed","DateCompWrapper","context","userComponentFactory","dateComponentParams","eParent","_this","alive","compDetails","getDateCompDetails","promise","newAgStackInstance","then","dateComp","destroyBean","appendChild","getGui","afterGuiAttached","tempValue","setDate","disabled","setDateCompDisabled","prototype","destroy","getDate","value","setDisabled","displayed","setInputPlaceholder","placeholder","setInputAriaLabel","label","params"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { setDisplayed } from '../../../utils/dom';\n/** Provides sync access to async component. Date component can be lazy created - this class encapsulates\n * this by keeping value locally until DateComp has loaded, then passing DateComp the value. */\nvar DateCompWrapper = /** @class */ (function () {\n    function DateCompWrapper(context, userComponentFactory, dateComponentParams, eParent) {\n        var _this = this;\n        this.alive = true;\n        this.context = context;\n        this.eParent = eParent;\n        var compDetails = userComponentFactory.getDateCompDetails(dateComponentParams);\n        var promise = compDetails.newAgStackInstance();\n        promise.then(function (dateComp) {\n            // because async, check the filter still exists after component comes back\n            if (!_this.alive) {\n                context.destroyBean(dateComp);\n                return;\n            }\n            _this.dateComp = dateComp;\n            if (!dateComp) {\n                return;\n            }\n            eParent.appendChild(dateComp.getGui());\n            if (dateComp.afterGuiAttached) {\n                dateComp.afterGuiAttached();\n            }\n            if (_this.tempValue) {\n                dateComp.setDate(_this.tempValue);\n            }\n            if (_this.disabled != null) {\n                _this.setDateCompDisabled(_this.disabled);\n            }\n        });\n    }\n    DateCompWrapper.prototype.destroy = function () {\n        this.alive = false;\n        this.dateComp = this.context.destroyBean(this.dateComp);\n    };\n    DateCompWrapper.prototype.getDate = function () {\n        return this.dateComp ? this.dateComp.getDate() : this.tempValue;\n    };\n    DateCompWrapper.prototype.setDate = function (value) {\n        if (this.dateComp) {\n            this.dateComp.setDate(value);\n        }\n        else {\n            this.tempValue = value;\n        }\n    };\n    DateCompWrapper.prototype.setDisabled = function (disabled) {\n        if (this.dateComp) {\n            this.setDateCompDisabled(disabled);\n        }\n        else {\n            this.disabled = disabled;\n        }\n    };\n    DateCompWrapper.prototype.setDisplayed = function (displayed) {\n        setDisplayed(this.eParent, displayed);\n    };\n    DateCompWrapper.prototype.setInputPlaceholder = function (placeholder) {\n        if (this.dateComp && this.dateComp.setInputPlaceholder) {\n            this.dateComp.setInputPlaceholder(placeholder);\n        }\n    };\n    DateCompWrapper.prototype.setInputAriaLabel = function (label) {\n        if (this.dateComp && this.dateComp.setInputAriaLabel) {\n            this.dateComp.setInputAriaLabel(label);\n        }\n    };\n    DateCompWrapper.prototype.afterGuiAttached = function (params) {\n        if (this.dateComp && typeof this.dateComp.afterGuiAttached === 'function') {\n            this.dateComp.afterGuiAttached(params);\n        }\n    };\n    DateCompWrapper.prototype.setDateCompDisabled = function (disabled) {\n        if (this.dateComp == null) {\n            return;\n        }\n        if (this.dateComp.setDisabled == null) {\n            return;\n        }\n        this.dateComp.setDisabled(disabled);\n    };\n    return DateCompWrapper;\n}());\nexport { DateCompWrapper };\n"]},"metadata":{},"sourceType":"module"}