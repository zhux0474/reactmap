{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { DragSourceType } from \"../../dragAndDrop/dragAndDropService\";\nimport { Autowired, PostConstruct } from \"../../context/context\";\nimport { MoveColumnFeature } from \"./moveColumnFeature\";\nimport { BodyDropPivotTarget } from \"./bodyDropPivotTarget\";\nimport { Constants } from \"../../constants/constants\";\nimport { BeanStub } from \"../../context/beanStub\";\n\nvar BodyDropTarget =\n/** @class */\nfunction (_super) {\n  __extends(BodyDropTarget, _super);\n\n  function BodyDropTarget(pinned, eContainer) {\n    var _this = _super.call(this) || this;\n\n    _this.pinned = pinned;\n    _this.eContainer = eContainer;\n    return _this;\n  }\n\n  BodyDropTarget.prototype.postConstruct = function () {\n    var _this = this;\n\n    this.ctrlsService.whenReady(function (p) {\n      switch (_this.pinned) {\n        case Constants.PINNED_LEFT:\n          _this.eSecondaryContainers = [[p.gridBodyCtrl.getBodyViewportElement(), p.leftRowContainerCtrl.getContainerElement()], [p.bottomLeftRowContainerCtrl.getContainerElement()], [p.topLeftRowContainerCtrl.getContainerElement()]];\n          break;\n\n        case Constants.PINNED_RIGHT:\n          _this.eSecondaryContainers = [[p.gridBodyCtrl.getBodyViewportElement(), p.rightRowContainerCtrl.getContainerElement()], [p.bottomRightRowContainerCtrl.getContainerElement()], [p.topRightRowContainerCtrl.getContainerElement()]];\n          break;\n\n        default:\n          _this.eSecondaryContainers = [[p.gridBodyCtrl.getBodyViewportElement(), p.centerRowContainerCtrl.getViewportElement()], [p.bottomCenterRowContainerCtrl.getViewportElement()], [p.topCenterRowContainerCtrl.getViewportElement()]];\n          break;\n      }\n    });\n  };\n\n  BodyDropTarget.prototype.isInterestedIn = function (type) {\n    return type === DragSourceType.HeaderCell || type === DragSourceType.ToolPanel && this.gridOptionsWrapper.isAllowDragFromColumnsToolPanel();\n  };\n\n  BodyDropTarget.prototype.getSecondaryContainers = function () {\n    return this.eSecondaryContainers;\n  };\n\n  BodyDropTarget.prototype.getContainer = function () {\n    return this.eContainer;\n  };\n\n  BodyDropTarget.prototype.init = function () {\n    this.moveColumnFeature = this.createManagedBean(new MoveColumnFeature(this.pinned, this.eContainer));\n    this.bodyDropPivotTarget = this.createManagedBean(new BodyDropPivotTarget(this.pinned));\n    this.dragAndDropService.addDropTarget(this);\n  };\n\n  BodyDropTarget.prototype.getIconName = function () {\n    return this.currentDropListener.getIconName();\n  }; // we want to use the bodyPivotTarget if the user is dragging columns in from the toolPanel\n  // and we are in pivot mode, as it has to logic to set pivot/value/group on the columns when\n  // dropped into the grid's body.\n\n\n  BodyDropTarget.prototype.isDropColumnInPivotMode = function (draggingEvent) {\n    // in pivot mode, then if moving a column (ie didn't come from toolpanel) then it's\n    // a standard column move, however if it came from the toolpanel, then we are introducing\n    // dimensions or values to the grid\n    return this.columnModel.isPivotMode() && draggingEvent.dragSource.type === DragSourceType.ToolPanel;\n  };\n\n  BodyDropTarget.prototype.onDragEnter = function (draggingEvent) {\n    // we pick the drop listener depending on whether we are in pivot mode are not. if we are\n    // in pivot mode, then dropping cols changes the row group, pivot, value stats. otherwise\n    // we change visibility state and position.\n    this.currentDropListener = this.isDropColumnInPivotMode(draggingEvent) ? this.bodyDropPivotTarget : this.moveColumnFeature;\n    this.currentDropListener.onDragEnter(draggingEvent);\n  };\n\n  BodyDropTarget.prototype.onDragLeave = function (params) {\n    this.currentDropListener.onDragLeave(params);\n  };\n\n  BodyDropTarget.prototype.onDragging = function (params) {\n    this.currentDropListener.onDragging(params);\n  };\n\n  BodyDropTarget.prototype.onDragStop = function (params) {\n    this.currentDropListener.onDragStop(params);\n  };\n\n  __decorate([Autowired('dragAndDropService')], BodyDropTarget.prototype, \"dragAndDropService\", void 0);\n\n  __decorate([Autowired('columnModel')], BodyDropTarget.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('ctrlsService')], BodyDropTarget.prototype, \"ctrlsService\", void 0);\n\n  __decorate([PostConstruct], BodyDropTarget.prototype, \"postConstruct\", null);\n\n  __decorate([PostConstruct], BodyDropTarget.prototype, \"init\", null);\n\n  return BodyDropTarget;\n}(BeanStub);\n\nexport { BodyDropTarget };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/headerRendering/columnDrag/bodyDropTarget.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DragSourceType","Autowired","PostConstruct","MoveColumnFeature","BodyDropPivotTarget","Constants","BeanStub","BodyDropTarget","_super","pinned","eContainer","_this","call","postConstruct","ctrlsService","whenReady","PINNED_LEFT","eSecondaryContainers","gridBodyCtrl","getBodyViewportElement","leftRowContainerCtrl","getContainerElement","bottomLeftRowContainerCtrl","topLeftRowContainerCtrl","PINNED_RIGHT","rightRowContainerCtrl","bottomRightRowContainerCtrl","topRightRowContainerCtrl","centerRowContainerCtrl","getViewportElement","bottomCenterRowContainerCtrl","topCenterRowContainerCtrl","isInterestedIn","type","HeaderCell","ToolPanel","gridOptionsWrapper","isAllowDragFromColumnsToolPanel","getSecondaryContainers","getContainer","init","moveColumnFeature","createManagedBean","bodyDropPivotTarget","dragAndDropService","addDropTarget","getIconName","currentDropListener","isDropColumnInPivotMode","draggingEvent","columnModel","isPivotMode","dragSource","onDragEnter","onDragLeave","params","onDragging","onDragStop"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DragSourceType } from \"../../dragAndDrop/dragAndDropService\";\nimport { Autowired, PostConstruct } from \"../../context/context\";\nimport { MoveColumnFeature } from \"./moveColumnFeature\";\nimport { BodyDropPivotTarget } from \"./bodyDropPivotTarget\";\nimport { Constants } from \"../../constants/constants\";\nimport { BeanStub } from \"../../context/beanStub\";\nvar BodyDropTarget = /** @class */ (function (_super) {\n    __extends(BodyDropTarget, _super);\n    function BodyDropTarget(pinned, eContainer) {\n        var _this = _super.call(this) || this;\n        _this.pinned = pinned;\n        _this.eContainer = eContainer;\n        return _this;\n    }\n    BodyDropTarget.prototype.postConstruct = function () {\n        var _this = this;\n        this.ctrlsService.whenReady(function (p) {\n            switch (_this.pinned) {\n                case Constants.PINNED_LEFT:\n                    _this.eSecondaryContainers = [\n                        [p.gridBodyCtrl.getBodyViewportElement(), p.leftRowContainerCtrl.getContainerElement()],\n                        [p.bottomLeftRowContainerCtrl.getContainerElement()],\n                        [p.topLeftRowContainerCtrl.getContainerElement()]\n                    ];\n                    break;\n                case Constants.PINNED_RIGHT:\n                    _this.eSecondaryContainers = [\n                        [p.gridBodyCtrl.getBodyViewportElement(), p.rightRowContainerCtrl.getContainerElement()],\n                        [p.bottomRightRowContainerCtrl.getContainerElement()],\n                        [p.topRightRowContainerCtrl.getContainerElement()]\n                    ];\n                    break;\n                default:\n                    _this.eSecondaryContainers = [\n                        [p.gridBodyCtrl.getBodyViewportElement(), p.centerRowContainerCtrl.getViewportElement()],\n                        [p.bottomCenterRowContainerCtrl.getViewportElement()],\n                        [p.topCenterRowContainerCtrl.getViewportElement()]\n                    ];\n                    break;\n            }\n        });\n    };\n    BodyDropTarget.prototype.isInterestedIn = function (type) {\n        return type === DragSourceType.HeaderCell ||\n            (type === DragSourceType.ToolPanel && this.gridOptionsWrapper.isAllowDragFromColumnsToolPanel());\n    };\n    BodyDropTarget.prototype.getSecondaryContainers = function () {\n        return this.eSecondaryContainers;\n    };\n    BodyDropTarget.prototype.getContainer = function () {\n        return this.eContainer;\n    };\n    BodyDropTarget.prototype.init = function () {\n        this.moveColumnFeature = this.createManagedBean(new MoveColumnFeature(this.pinned, this.eContainer));\n        this.bodyDropPivotTarget = this.createManagedBean(new BodyDropPivotTarget(this.pinned));\n        this.dragAndDropService.addDropTarget(this);\n    };\n    BodyDropTarget.prototype.getIconName = function () {\n        return this.currentDropListener.getIconName();\n    };\n    // we want to use the bodyPivotTarget if the user is dragging columns in from the toolPanel\n    // and we are in pivot mode, as it has to logic to set pivot/value/group on the columns when\n    // dropped into the grid's body.\n    BodyDropTarget.prototype.isDropColumnInPivotMode = function (draggingEvent) {\n        // in pivot mode, then if moving a column (ie didn't come from toolpanel) then it's\n        // a standard column move, however if it came from the toolpanel, then we are introducing\n        // dimensions or values to the grid\n        return this.columnModel.isPivotMode() && draggingEvent.dragSource.type === DragSourceType.ToolPanel;\n    };\n    BodyDropTarget.prototype.onDragEnter = function (draggingEvent) {\n        // we pick the drop listener depending on whether we are in pivot mode are not. if we are\n        // in pivot mode, then dropping cols changes the row group, pivot, value stats. otherwise\n        // we change visibility state and position.\n        this.currentDropListener = this.isDropColumnInPivotMode(draggingEvent) ? this.bodyDropPivotTarget : this.moveColumnFeature;\n        this.currentDropListener.onDragEnter(draggingEvent);\n    };\n    BodyDropTarget.prototype.onDragLeave = function (params) {\n        this.currentDropListener.onDragLeave(params);\n    };\n    BodyDropTarget.prototype.onDragging = function (params) {\n        this.currentDropListener.onDragging(params);\n    };\n    BodyDropTarget.prototype.onDragStop = function (params) {\n        this.currentDropListener.onDragStop(params);\n    };\n    __decorate([\n        Autowired('dragAndDropService')\n    ], BodyDropTarget.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        Autowired('columnModel')\n    ], BodyDropTarget.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('ctrlsService')\n    ], BodyDropTarget.prototype, \"ctrlsService\", void 0);\n    __decorate([\n        PostConstruct\n    ], BodyDropTarget.prototype, \"postConstruct\", null);\n    __decorate([\n        PostConstruct\n    ], BodyDropTarget.prototype, \"init\", null);\n    return BodyDropTarget;\n}(BeanStub));\nexport { BodyDropTarget };\n"]},"metadata":{},"sourceType":"module"}