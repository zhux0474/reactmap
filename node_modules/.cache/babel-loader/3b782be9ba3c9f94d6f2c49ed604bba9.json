{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerMap.js\";\nimport React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\"; //import \"./SmokerMap.css\";\n\nimport Map from \"ol/Map\"; //import Feature from \"ol/Feature\";\n\nimport View from \"ol/View\"; //import { Point, Style, Circle, Fill, Feature } from \"ol\";\n\nimport TileLayer from \"ol/layer/Tile\"; //import TileWMS from 'ol/source/TileWMS';\n\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport { Fill, Stroke, Style } from 'ol/style'; //import cityboundary from \"./Minneapolis_Police_Precincts.geojson\";\n\nimport ImageWMS from 'ol/source/ImageWMS';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SmokerMap extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props); //this.mapRef=React.createRef();\n    //this.legendRef=React.createRef();\n  }\n\n  componentDidMount() {\n    var basemap = new TileLayer({\n      source: new OSM()\n    });\n    const wmsSource = new ImageWMS({\n      url: 'https://ahocevar.com/geoserver/wms',\n      params: {\n        'LAYERS': 'topp:states'\n      },\n      target: \"maplegend\",\n      ratio: 1,\n      serverType: 'geoserver'\n    });\n    /*\n    var vectorstyle = new Style({\n      fill: new Fill({\n        color: '#eeeeee'\n      }),\n      stroke: new Stroke({\n        color:'black',\n        width:1\n      })\n    })*/\n\n    var totalsmoker = new VectorSource({\n      url: \"https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms?service=WMS&version=1.1.0&request=GetMap&layers=lung_cancer%3Atotal_smokers_v2&bbox=-97.239209%2C43.499383499%2C-89.4917389999999%2C49.3843580000001&width=768&height=583&srs=EPSG%3A4326&format=geojson\",\n      format: new GeoJSON()\n    });\n\n    var stylefunction = function (feature) {\n      var style;\n      var value = feature.get('brffs_smokers');\n      console.log(value); //var color= value <100 ? '#ffffff': value <200 ? '#ff3f3f' : '#3f0000';\n      //this.style.getFill().setColor(color);\n\n      if (feature.get('brffs_smokers') > '400') {\n        style = new Style({\n          fill: new Fill({\n            color: '#eeeeee'\n          }),\n          stroke: new Stroke({\n            color: 'black',\n            width: 1\n          })\n        });\n      } else style = new Style({\n        fill: new Fill({\n          color: '#B4DFB4'\n        }),\n        stroke: new Stroke({\n          color: 'black',\n          width: 1\n        })\n      });\n\n      return style;\n    };\n\n    var vectorlayer = new VectorLayer({\n      source: totalsmoker,\n      style: stylefunction,\n      showLegend: true\n    });\n    /*  \n    var lungdata = new TileLayer({\n     source : new TileWMS ({\n       url:'https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms',\n       serverType:'geoserver',\n       params: {'LAYERS': 'lung_cancer:total_smokers_v2', 'TILED': true},\n       \n       transition: 0\n      }),\n     style: vectorstyle\n       })*/\n\n    var remap = new Map({\n      layers: [basemap, vectorlayer],\n      target: \"mapContainer\",\n      view: new View({\n        center: fromLonLat([-94.6859, 46.7296]),\n        zoom: 6\n      })\n    });\n    /*\n    const updateLegend = function (resolution) {\n      const graphicUrl = wmsSource.getLegendUrl(resolution);\n      //const img = document.getElementById('legend');\n      //const img.src = graphicUrl;\n    };\n    \n    const resolution = this.map.getView().getResolution();\n    updateLegend(resolution);\n     this.map.getView().on('change:resolution', function (event) {\n      const resolution = event.target.getResolution();\n      updateLegend(resolution);\n    });\n    */\n  }\n\n  render() {\n    console.log(\"-> render App\");\n    return (\n      /*#__PURE__*/\n\n      /*\n      <div\n        id=\"mapContainer\"\n        ref={this.mapRef.current}\n        style={{ width: \"100%\", height: \"500px\" }}\n      >\n       map\n      </div>,*/\n      _jsxDEV(\"div\", {\n        id: \"mapContainer\",\n        style: {\n          width: \"100%\",\n          height: \"500px\",\n          position: \"fixed\",\n          top: '20vh'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerMap.js"],"names":["React","fromLonLat","get","Map","View","TileLayer","VectorLayer","VectorSource","GeoJSON","OSM","Fill","Stroke","Style","ImageWMS","SmokerMap","Component","constructor","props","console","log","componentDidMount","basemap","source","wmsSource","url","params","target","ratio","serverType","totalsmoker","format","stylefunction","feature","style","value","fill","color","stroke","width","vectorlayer","showLegend","remap","layers","view","center","zoom","render","height","position","top"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\";\n//import \"./SmokerMap.css\";\nimport Map from \"ol/Map\";\n//import Feature from \"ol/Feature\";\nimport View from \"ol/View\";\n//import { Point, Style, Circle, Fill, Feature } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\n//import TileWMS from 'ol/source/TileWMS';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport {Fill, Stroke, Style} from 'ol/style';\n//import cityboundary from \"./Minneapolis_Police_Precincts.geojson\";\n\nimport ImageWMS from 'ol/source/ImageWMS';\n\n\n\nexport default class SmokerMap extends React.Component{\n  constructor(props){\n    super(props);\n    console.log(this.props);\n    //this.mapRef=React.createRef();\n    //this.legendRef=React.createRef();\n  }\n\n  \n  componentDidMount(){\n\n    var basemap =new TileLayer({\n      source: new OSM()\n    })\n\n    const wmsSource = new ImageWMS({\n      url: 'https://ahocevar.com/geoserver/wms',\n      params: {'LAYERS': 'topp:states'},\n      target: \"maplegend\",\n      ratio: 1,\n      serverType: 'geoserver',\n    });\n  \n    \n    \n    /*\n    var vectorstyle = new Style({\n      fill: new Fill({\n        color: '#eeeeee'\n      }),\n      stroke: new Stroke({\n        color:'black',\n        width:1\n      })\n    })*/\n\n    var totalsmoker = new VectorSource({\n      url:\"https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms?service=WMS&version=1.1.0&request=GetMap&layers=lung_cancer%3Atotal_smokers_v2&bbox=-97.239209%2C43.499383499%2C-89.4917389999999%2C49.3843580000001&width=768&height=583&srs=EPSG%3A4326&format=geojson\",\n      format: new GeoJSON()\n    })\n\n \n      var stylefunction = function(feature){\n        var style;\n        var value=feature.get('brffs_smokers');\n        console.log(value);\n        //var color= value <100 ? '#ffffff': value <200 ? '#ff3f3f' : '#3f0000';\n\n        //this.style.getFill().setColor(color);\n      if(feature.get('brffs_smokers')>'400'){\n        style= new Style({\n          fill: new Fill({\n            color: '#eeeeee'\n          }),\n          stroke: new Stroke({\n            color:'black',\n            width:1\n          })\n\n        })\n\n      }\n      else \n        style= new Style({\n         fill: new Fill({\n            color: '#B4DFB4'\n          }),\n         stroke: new Stroke({\n           color:'black',\n            width:1\n         })\n\n      })\n      \n        return style;\n\n    };\n\n    var vectorlayer = new VectorLayer({\n     \n       source: totalsmoker,\n       style: stylefunction,\n       showLegend:true\n       \n    \n       })\n\n     /*  \n    var lungdata = new TileLayer({\n      source : new TileWMS ({\n        url:'https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms',\n        serverType:'geoserver',\n        params: {'LAYERS': 'lung_cancer:total_smokers_v2', 'TILED': true},\n        \n        transition: 0\n\n      }),\n      style: vectorstyle\n\n\n\n\n    })*/\n    \n    var remap=new Map({\n      layers: [basemap,vectorlayer],\n      target: \"mapContainer\",\n      view :new View({\n        center:fromLonLat([-94.6859,46.7296]),\n        zoom: 6\n      })\n\n    \n\n    });\n\n    /*\n    const updateLegend = function (resolution) {\n      const graphicUrl = wmsSource.getLegendUrl(resolution);\n      //const img = document.getElementById('legend');\n      //const img.src = graphicUrl;\n    };\n    \n    const resolution = this.map.getView().getResolution();\n    updateLegend(resolution);\n\n    this.map.getView().on('change:resolution', function (event) {\n      const resolution = event.target.getResolution();\n      updateLegend(resolution);\n    });\n   */\n   \n  }\n  render() {\n    console.log(\"-> render App\");\n    return (\n\n      /*\n      <div\n        id=\"mapContainer\"\n        ref={this.mapRef.current}\n        style={{ width: \"100%\", height: \"500px\" }}\n      >\n       map\n      </div>,*/\n      <div id=\"mapContainer\" style={{ width: \"100%\", height: \"500px\", position: \"fixed\", top: '20vh'}}></div>\n\n      \n    );\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}