{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerLegend.js\";\nimport React from \"react\";\nimport { metadata } from './metadata.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SmokerLengend extends React.Component {\n  render() {\n    var legend = [];\n\n    for (var i = 1; i < metadata.break.length; i++) {\n      legend.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: metadata.color[i],\n            width: '15px',\n            height: '15px',\n            display: 'inline-block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this), metadata.break[i - 1], \"-\", metadata.break[i] - 1]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this));\n    }\n\n    return legend;\n    /*\n    var indents = [];\n    for (var i = 0; i < metadata.break.length; i++) {\n      \n      indents.push(<span style ={{backgroundColor:metadata.color[i], width: '15px', height: '15px', display: 'inline-flex',display: 'flex', alignItems: 'center'}}></span>,<text style ={{position:'relative',alignItems: 'middle'}}>{metadata.break[i+1]-1}</text>);\n    }\n      return (\n       <div>\n        {indents}\n        \n       </div>\n    );\n    */\n  }\n\n}\n/*\nvar indents = [];\n        for (var i = 0; i < metadata.break.length; i++) {\n            list=[\n                {key:i,value:indents.push(<span style ={{backgroundColor:metadata.color[i], width: '15px', height: '15px', display: 'inline-flex',display: 'flex', alignItems: 'center'}}></span>,<text style ={{position:'relative',alignItems: 'middle'}}>{metadata.break[i]}</text>)}\n            ];\n          \n        }\n\n\n        return (\n           <div>\n               {list.map(({key,value})=>(\n               <div>{value}</div>\n               \n               ))}\n            \n            \n           </div>\n        );*/","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerLegend.js"],"names":["React","metadata","SmokerLengend","Component","render","legend","i","break","length","push","display","alignItems","backgroundColor","color","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AAEA,eAAe,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA2C;AAEtDC,EAAAA,MAAM,GAAE;AAEJ,QAAIC,MAAM,GAAC,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAACL,QAAQ,CAACM,KAAT,CAAeC,MAAhC,EAAuCF,CAAC,EAAxC,EAA4C;AACxCD,MAAAA,MAAM,CAACI,IAAP,eACA;AAAa,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAiBC,UAAAA,UAAU,EAAE;AAA7B,SAApB;AAAA,gCACI;AAAM,UAAA,KAAK,EAAG;AAACC,YAAAA,eAAe,EAACX,QAAQ,CAACY,KAAT,CAAeP,CAAf,CAAjB;AAAoCQ,YAAAA,KAAK,EAAE,MAA3C;AAAmDC,YAAAA,MAAM,EAAE,MAA3D;AAAmEL,YAAAA,OAAO,EAAE;AAA5E;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGST,QAAQ,CAACM,KAAT,CAAeD,CAAC,GAAC,CAAjB,CAHT,OAG+BL,QAAQ,CAACM,KAAT,CAAeD,CAAf,IAAkB,CAHjD;AAAA,SAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,cADA;AAQH;;AACD,WAAOD,MAAP;AAGA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOC;;AArCyD;AAwC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport {metadata} from './metadata.js';\n\nexport default class SmokerLengend extends React.Component{\n    \n    render(){\n        \n        var legend=[];\n        for (var i =1; i<metadata.break.length;i++) {\n            legend.push(\n            <div key={i} style={{display: 'flex',alignItems: 'center'}}>\n                <span style ={{backgroundColor:metadata.color[i], width: '15px', height: '15px', display: 'inline-block'}}>\n                </span>\n                    {metadata.break[i-1]}-{metadata.break[i]-1}\n                \n                </div>); \n            \n        }\n        return legend;\n        \n\n        /*\n        var indents = [];\n        for (var i = 0; i < metadata.break.length; i++) {\n          \n          indents.push(<span style ={{backgroundColor:metadata.color[i], width: '15px', height: '15px', display: 'inline-flex',display: 'flex', alignItems: 'center'}}></span>,<text style ={{position:'relative',alignItems: 'middle'}}>{metadata.break[i+1]-1}</text>);\n        }\n\n\n        return (\n           <div>\n            {indents}\n            \n           </div>\n        );\n        */\n        \n\n   \n\n}\n}\n\n/*\nvar indents = [];\n        for (var i = 0; i < metadata.break.length; i++) {\n            list=[\n                {key:i,value:indents.push(<span style ={{backgroundColor:metadata.color[i], width: '15px', height: '15px', display: 'inline-flex',display: 'flex', alignItems: 'center'}}></span>,<text style ={{position:'relative',alignItems: 'middle'}}>{metadata.break[i]}</text>)}\n            ];\n          \n        }\n\n\n        return (\n           <div>\n               {list.map(({key,value})=>(\n               <div>{value}</div>\n               \n               ))}\n            \n            \n           </div>\n        );*/"]},"metadata":{},"sourceType":"module"}