{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, PostConstruct } from '../../context/context';\nimport { Constants } from '../../constants/constants';\nimport { loadTemplate, addCssClass, setDisabled } from '../../utils/dom';\nimport { debounce } from '../../utils/function';\nimport { DEFAULT_FILTER_LOCALE_TEXT } from '../filterLocaleText';\nimport { ManagedFocusFeature } from '../../widgets/managedFocusFeature';\nimport { convertToSet } from '../../utils/set';\nimport { Component } from '../../widgets/component';\n/**\n * Contains common logic to all provided filters (apply button, clear button, etc).\n * All the filters that come with AG Grid extend this class. User filters do not\n * extend this class.\n *\n * @param M type of filter-model managed by the concrete sub-class that extends this type\n * @param V type of value managed by the concrete sub-class that extends this type\n */\n\nvar ProvidedFilter =\n/** @class */\nfunction (_super) {\n  __extends(ProvidedFilter, _super);\n\n  function ProvidedFilter(filterNameKey) {\n    var _this = _super.call(this) || this;\n\n    _this.filterNameKey = filterNameKey;\n    _this.applyActive = false;\n    _this.hidePopup = null; // after the user hits 'apply' the model gets copied to here. this is then the model that we use for\n    // all filtering. so if user changes UI but doesn't hit apply, then the UI will be out of sync with this model.\n    // this is what we want, as the UI should only become the 'active' filter once it's applied. when apply is\n    // inactive, this model will be in sync (following the debounce ms). if the UI is not a valid filter\n    // (eg the value is missing so nothing to filter on, or for set filter all checkboxes are checked so filter\n    // not active) then this appliedModel will be null/undefined.\n\n    _this.appliedModel = null;\n    return _this;\n  }\n\n  ProvidedFilter.prototype.postConstruct = function () {\n    this.resetTemplate(); // do this first to create the DOM\n\n    this.createManagedBean(new ManagedFocusFeature(this.getFocusableElement(), {\n      handleKeyDown: this.handleKeyDown.bind(this)\n    }));\n  }; // override\n\n\n  ProvidedFilter.prototype.handleKeyDown = function (e) {};\n\n  ProvidedFilter.prototype.getFilterTitle = function () {\n    return this.translate(this.filterNameKey);\n  };\n  /** @deprecated */\n\n\n  ProvidedFilter.prototype.onFilterChanged = function () {\n    console.warn(\"AG Grid: you should not call onFilterChanged() directly on the filter, please call\\n        gridApi.onFilterChanged() instead. onFilterChanged is not part of the exposed filter interface (it was\\n        a method that existed on an old version of the filters that was not intended for public use.\");\n    this.providedFilterParams.filterChangedCallback();\n  };\n\n  ProvidedFilter.prototype.isFilterActive = function () {\n    // filter is active if we have a valid applied model\n    return !!this.appliedModel;\n  };\n\n  ProvidedFilter.prototype.resetTemplate = function (paramsMap) {\n    var templateString =\n    /* html */\n    \"\\n            <div class=\\\"ag-filter-wrapper\\\">\\n                <div class=\\\"ag-filter-body-wrapper ag-\" + this.getCssIdentifier() + \"-body-wrapper\\\">\\n                    \" + this.createBodyTemplate() + \"\\n                </div>\\n            </div>\";\n    this.setTemplate(templateString, paramsMap);\n  };\n\n  ProvidedFilter.prototype.isReadOnly = function () {\n    return !!this.providedFilterParams.readOnly;\n  };\n\n  ProvidedFilter.prototype.init = function (params) {\n    var _this = this;\n\n    this.setParams(params);\n    this.resetUiToDefaults(true).then(function () {\n      _this.updateUiVisibility();\n\n      _this.setupOnBtApplyDebounce();\n    });\n  };\n\n  ProvidedFilter.prototype.setParams = function (params) {\n    ProvidedFilter.checkForDeprecatedParams(params);\n    this.providedFilterParams = params;\n\n    if (params.newRowsAction === 'keep') {\n      this.newRowsActionKeep = true;\n    } else if (params.newRowsAction === 'clear') {\n      this.newRowsActionKeep = false;\n    } else {\n      // the default for SSRM and IRM is 'keep', for CSRM and VRM the default is 'clear'\n      var modelsForKeep = [Constants.ROW_MODEL_TYPE_SERVER_SIDE, Constants.ROW_MODEL_TYPE_INFINITE];\n      this.newRowsActionKeep = modelsForKeep.indexOf(this.rowModel.getType()) >= 0;\n    }\n\n    this.applyActive = ProvidedFilter.isUseApplyButton(params);\n    this.createButtonPanel();\n  };\n\n  ProvidedFilter.prototype.createButtonPanel = function () {\n    var _this = this;\n\n    var buttons = this.providedFilterParams.buttons;\n\n    if (!buttons || buttons.length < 1 || this.isReadOnly()) {\n      return;\n    }\n\n    var eButtonsPanel = document.createElement('div');\n    addCssClass(eButtonsPanel, 'ag-filter-apply-panel');\n\n    var addButton = function (type) {\n      var text;\n      var clickListener;\n\n      switch (type) {\n        case 'apply':\n          text = _this.translate('applyFilter');\n\n          clickListener = function (e) {\n            return _this.onBtApply(false, false, e);\n          };\n\n          break;\n\n        case 'clear':\n          text = _this.translate('clearFilter');\n\n          clickListener = function () {\n            return _this.onBtClear();\n          };\n\n          break;\n\n        case 'reset':\n          text = _this.translate('resetFilter');\n\n          clickListener = function () {\n            return _this.onBtReset();\n          };\n\n          break;\n\n        case 'cancel':\n          text = _this.translate('cancelFilter');\n\n          clickListener = function (e) {\n            _this.onBtCancel(e);\n          };\n\n          break;\n\n        default:\n          console.warn('Unknown button type specified');\n          return;\n      }\n\n      var button = loadTemplate(\n      /* html */\n      \"<button\\n                    type=\\\"button\\\"\\n                    ref=\\\"\" + type + \"FilterButton\\\"\\n                    class=\\\"ag-standard-button ag-filter-apply-panel-button\\\"\\n                >\" + text + \"\\n                </button>\");\n      eButtonsPanel.appendChild(button);\n\n      _this.addManagedListener(button, 'click', clickListener);\n    };\n\n    convertToSet(buttons).forEach(function (type) {\n      return addButton(type);\n    });\n    this.getGui().appendChild(eButtonsPanel);\n  };\n\n  ProvidedFilter.checkForDeprecatedParams = function (params) {\n    var buttons = params.buttons || [];\n\n    if (buttons.length > 0) {\n      return;\n    }\n\n    var applyButton = params.applyButton,\n        resetButton = params.resetButton,\n        clearButton = params.clearButton;\n\n    if (clearButton) {\n      console.warn('AG Grid: as of AG Grid v23.2, filterParams.clearButton is deprecated. Please use filterParams.buttons instead');\n      buttons.push('clear');\n    }\n\n    if (resetButton) {\n      console.warn('AG Grid: as of AG Grid v23.2, filterParams.resetButton is deprecated. Please use filterParams.buttons instead');\n      buttons.push('reset');\n    }\n\n    if (applyButton) {\n      console.warn('AG Grid: as of AG Grid v23.2, filterParams.applyButton is deprecated. Please use filterParams.buttons instead');\n      buttons.push('apply');\n    }\n\n    if (params.apply) {\n      console.warn('AG Grid: as of AG Grid v21, filterParams.apply is deprecated. Please use filterParams.buttons instead');\n      buttons.push('apply');\n    }\n\n    params.buttons = buttons;\n  }; // subclasses can override this to provide alternative debounce defaults\n\n\n  ProvidedFilter.prototype.getDefaultDebounceMs = function () {\n    return 0;\n  };\n\n  ProvidedFilter.prototype.setupOnBtApplyDebounce = function () {\n    var debounceMs = ProvidedFilter.getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs());\n    this.onBtApplyDebounce = debounce(this.onBtApply.bind(this), debounceMs);\n  };\n\n  ProvidedFilter.prototype.getModel = function () {\n    return this.appliedModel;\n  };\n\n  ProvidedFilter.prototype.setModel = function (model) {\n    var _this = this;\n\n    var promise = model ? this.setModelIntoUi(model) : this.resetUiToDefaults();\n    return promise.then(function () {\n      _this.updateUiVisibility(); // we set the model from the GUI, rather than the provided model,\n      // so the model is consistent, e.g. handling of null/undefined will be the same,\n      // or if model is case insensitive, then casing is removed.\n\n\n      _this.applyModel();\n    });\n  };\n\n  ProvidedFilter.prototype.onBtCancel = function (e) {\n    var _this = this;\n\n    var currentModel = this.getModel();\n\n    var afterAppliedFunc = function () {\n      _this.onUiChanged(false, 'prevent');\n\n      if (_this.providedFilterParams.closeOnApply) {\n        _this.close(e);\n      }\n    };\n\n    if (currentModel != null) {\n      this.setModelIntoUi(currentModel).then(afterAppliedFunc);\n    } else {\n      this.resetUiToDefaults().then(afterAppliedFunc);\n    }\n  };\n\n  ProvidedFilter.prototype.onBtClear = function () {\n    var _this = this;\n\n    this.resetUiToDefaults().then(function () {\n      return _this.onUiChanged();\n    });\n  };\n\n  ProvidedFilter.prototype.onBtReset = function () {\n    this.onBtClear();\n    this.onBtApply();\n  };\n  /**\n   * Applies changes made in the UI to the filter, and returns true if the model has changed.\n   */\n\n\n  ProvidedFilter.prototype.applyModel = function () {\n    var newModel = this.getModelFromUi();\n\n    if (!this.isModelValid(newModel)) {\n      return false;\n    }\n\n    var previousModel = this.appliedModel;\n    this.appliedModel = newModel; // models can be same if user pasted same content into text field, or maybe just changed the case\n    // and it's a case insensitive filter\n\n    return !this.areModelsEqual(previousModel, newModel);\n  };\n\n  ProvidedFilter.prototype.isModelValid = function (model) {\n    return true;\n  };\n\n  ProvidedFilter.prototype.onBtApply = function (afterFloatingFilter, afterDataChange, e) {\n    if (afterFloatingFilter === void 0) {\n      afterFloatingFilter = false;\n    }\n\n    if (afterDataChange === void 0) {\n      afterDataChange = false;\n    }\n\n    if (this.applyModel()) {\n      // the floating filter uses 'afterFloatingFilter' info, so it doesn't refresh after filter changed if change\n      // came from floating filter\n      this.providedFilterParams.filterChangedCallback({\n        afterFloatingFilter: afterFloatingFilter,\n        afterDataChange: afterDataChange\n      });\n    }\n\n    var closeOnApply = this.providedFilterParams.closeOnApply; // only close if an apply button is visible, otherwise we'd be closing every time a change was made!\n\n    if (closeOnApply && this.applyActive && !afterFloatingFilter && !afterDataChange) {\n      this.close(e);\n    }\n  };\n\n  ProvidedFilter.prototype.onNewRowsLoaded = function () {\n    var _this = this;\n\n    if (!this.newRowsActionKeep) {\n      this.resetUiToDefaults().then(function () {\n        return _this.appliedModel = null;\n      });\n    }\n  };\n\n  ProvidedFilter.prototype.close = function (e) {\n    if (!this.hidePopup) {\n      return;\n    }\n\n    var keyboardEvent = e;\n    var key = keyboardEvent && keyboardEvent.key;\n    var params;\n\n    if (key === 'Enter' || key === 'Space') {\n      params = {\n        keyboardEvent: keyboardEvent\n      };\n    }\n\n    this.hidePopup(params);\n    this.hidePopup = null;\n  }; // called by set filter\n\n\n  ProvidedFilter.prototype.isNewRowsActionKeep = function () {\n    return this.newRowsActionKeep;\n  };\n  /**\n   * By default, if the change came from a floating filter it will be applied immediately, otherwise if there is no\n   * apply button it will be applied after a debounce, otherwise it will not be applied at all. This behaviour can\n   * be adjusted by using the apply parameter.\n   */\n\n\n  ProvidedFilter.prototype.onUiChanged = function (fromFloatingFilter, apply) {\n    if (fromFloatingFilter === void 0) {\n      fromFloatingFilter = false;\n    }\n\n    this.updateUiVisibility();\n    this.providedFilterParams.filterModifiedCallback();\n\n    if (this.applyActive && !this.isReadOnly) {\n      var isValid = this.isModelValid(this.getModelFromUi());\n      setDisabled(this.getRefElement('applyFilterButton'), !isValid);\n    }\n\n    if (fromFloatingFilter && !apply || apply === 'immediately') {\n      this.onBtApply(fromFloatingFilter);\n    } else if (!this.applyActive && !apply || apply === 'debounce') {\n      this.onBtApplyDebounce();\n    }\n  };\n\n  ProvidedFilter.prototype.afterGuiAttached = function (params) {\n    if (params == null) {\n      return;\n    }\n\n    this.hidePopup = params.hidePopup;\n  }; // static, as used by floating filter also\n\n\n  ProvidedFilter.getDebounceMs = function (params, debounceDefault) {\n    if (ProvidedFilter.isUseApplyButton(params)) {\n      if (params.debounceMs != null) {\n        console.warn('AG Grid: debounceMs is ignored when apply button is present');\n      }\n\n      return 0;\n    }\n\n    return params.debounceMs != null ? params.debounceMs : debounceDefault;\n  }; // static, as used by floating filter also\n\n\n  ProvidedFilter.isUseApplyButton = function (params) {\n    ProvidedFilter.checkForDeprecatedParams(params);\n    return !!params.buttons && params.buttons.indexOf('apply') >= 0;\n  };\n\n  ProvidedFilter.prototype.destroy = function () {\n    this.hidePopup = null;\n\n    _super.prototype.destroy.call(this);\n  };\n\n  ProvidedFilter.prototype.translate = function (key) {\n    var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n    return translate(key, DEFAULT_FILTER_LOCALE_TEXT[key]);\n  };\n\n  ProvidedFilter.prototype.getCellValue = function (rowNode) {\n    return this.providedFilterParams.valueGetter(rowNode);\n  };\n\n  __decorate([Autowired('rowModel')], ProvidedFilter.prototype, \"rowModel\", void 0);\n\n  __decorate([PostConstruct], ProvidedFilter.prototype, \"postConstruct\", null);\n\n  return ProvidedFilter;\n}(Component);\n\nexport { ProvidedFilter };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/filter/provided/providedFilter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","PostConstruct","Constants","loadTemplate","addCssClass","setDisabled","debounce","DEFAULT_FILTER_LOCALE_TEXT","ManagedFocusFeature","convertToSet","Component","ProvidedFilter","_super","filterNameKey","_this","call","applyActive","hidePopup","appliedModel","postConstruct","resetTemplate","createManagedBean","getFocusableElement","handleKeyDown","bind","e","getFilterTitle","translate","onFilterChanged","console","warn","providedFilterParams","filterChangedCallback","isFilterActive","paramsMap","templateString","getCssIdentifier","createBodyTemplate","setTemplate","isReadOnly","readOnly","init","params","setParams","resetUiToDefaults","then","updateUiVisibility","setupOnBtApplyDebounce","checkForDeprecatedParams","newRowsAction","newRowsActionKeep","modelsForKeep","ROW_MODEL_TYPE_SERVER_SIDE","ROW_MODEL_TYPE_INFINITE","indexOf","rowModel","getType","isUseApplyButton","createButtonPanel","buttons","eButtonsPanel","document","createElement","addButton","type","text","clickListener","onBtApply","onBtClear","onBtReset","onBtCancel","button","appendChild","addManagedListener","forEach","getGui","applyButton","resetButton","clearButton","push","apply","getDefaultDebounceMs","debounceMs","getDebounceMs","onBtApplyDebounce","getModel","setModel","model","promise","setModelIntoUi","applyModel","currentModel","afterAppliedFunc","onUiChanged","closeOnApply","close","newModel","getModelFromUi","isModelValid","previousModel","areModelsEqual","afterFloatingFilter","afterDataChange","onNewRowsLoaded","keyboardEvent","isNewRowsActionKeep","fromFloatingFilter","filterModifiedCallback","isValid","getRefElement","afterGuiAttached","debounceDefault","destroy","gridOptionsWrapper","getLocaleTextFunc","getCellValue","rowNode","valueGetter"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, PostConstruct } from '../../context/context';\nimport { Constants } from '../../constants/constants';\nimport { loadTemplate, addCssClass, setDisabled } from '../../utils/dom';\nimport { debounce } from '../../utils/function';\nimport { DEFAULT_FILTER_LOCALE_TEXT } from '../filterLocaleText';\nimport { ManagedFocusFeature } from '../../widgets/managedFocusFeature';\nimport { convertToSet } from '../../utils/set';\nimport { Component } from '../../widgets/component';\n/**\n * Contains common logic to all provided filters (apply button, clear button, etc).\n * All the filters that come with AG Grid extend this class. User filters do not\n * extend this class.\n *\n * @param M type of filter-model managed by the concrete sub-class that extends this type\n * @param V type of value managed by the concrete sub-class that extends this type\n */\nvar ProvidedFilter = /** @class */ (function (_super) {\n    __extends(ProvidedFilter, _super);\n    function ProvidedFilter(filterNameKey) {\n        var _this = _super.call(this) || this;\n        _this.filterNameKey = filterNameKey;\n        _this.applyActive = false;\n        _this.hidePopup = null;\n        // after the user hits 'apply' the model gets copied to here. this is then the model that we use for\n        // all filtering. so if user changes UI but doesn't hit apply, then the UI will be out of sync with this model.\n        // this is what we want, as the UI should only become the 'active' filter once it's applied. when apply is\n        // inactive, this model will be in sync (following the debounce ms). if the UI is not a valid filter\n        // (eg the value is missing so nothing to filter on, or for set filter all checkboxes are checked so filter\n        // not active) then this appliedModel will be null/undefined.\n        _this.appliedModel = null;\n        return _this;\n    }\n    ProvidedFilter.prototype.postConstruct = function () {\n        this.resetTemplate(); // do this first to create the DOM\n        this.createManagedBean(new ManagedFocusFeature(this.getFocusableElement(), {\n            handleKeyDown: this.handleKeyDown.bind(this)\n        }));\n    };\n    // override\n    ProvidedFilter.prototype.handleKeyDown = function (e) { };\n    ProvidedFilter.prototype.getFilterTitle = function () {\n        return this.translate(this.filterNameKey);\n    };\n    /** @deprecated */\n    ProvidedFilter.prototype.onFilterChanged = function () {\n        console.warn(\"AG Grid: you should not call onFilterChanged() directly on the filter, please call\\n        gridApi.onFilterChanged() instead. onFilterChanged is not part of the exposed filter interface (it was\\n        a method that existed on an old version of the filters that was not intended for public use.\");\n        this.providedFilterParams.filterChangedCallback();\n    };\n    ProvidedFilter.prototype.isFilterActive = function () {\n        // filter is active if we have a valid applied model\n        return !!this.appliedModel;\n    };\n    ProvidedFilter.prototype.resetTemplate = function (paramsMap) {\n        var templateString = /* html */ \"\\n            <div class=\\\"ag-filter-wrapper\\\">\\n                <div class=\\\"ag-filter-body-wrapper ag-\" + this.getCssIdentifier() + \"-body-wrapper\\\">\\n                    \" + this.createBodyTemplate() + \"\\n                </div>\\n            </div>\";\n        this.setTemplate(templateString, paramsMap);\n    };\n    ProvidedFilter.prototype.isReadOnly = function () {\n        return !!this.providedFilterParams.readOnly;\n    };\n    ProvidedFilter.prototype.init = function (params) {\n        var _this = this;\n        this.setParams(params);\n        this.resetUiToDefaults(true).then(function () {\n            _this.updateUiVisibility();\n            _this.setupOnBtApplyDebounce();\n        });\n    };\n    ProvidedFilter.prototype.setParams = function (params) {\n        ProvidedFilter.checkForDeprecatedParams(params);\n        this.providedFilterParams = params;\n        if (params.newRowsAction === 'keep') {\n            this.newRowsActionKeep = true;\n        }\n        else if (params.newRowsAction === 'clear') {\n            this.newRowsActionKeep = false;\n        }\n        else {\n            // the default for SSRM and IRM is 'keep', for CSRM and VRM the default is 'clear'\n            var modelsForKeep = [Constants.ROW_MODEL_TYPE_SERVER_SIDE, Constants.ROW_MODEL_TYPE_INFINITE];\n            this.newRowsActionKeep = modelsForKeep.indexOf(this.rowModel.getType()) >= 0;\n        }\n        this.applyActive = ProvidedFilter.isUseApplyButton(params);\n        this.createButtonPanel();\n    };\n    ProvidedFilter.prototype.createButtonPanel = function () {\n        var _this = this;\n        var buttons = this.providedFilterParams.buttons;\n        if (!buttons || buttons.length < 1 || this.isReadOnly()) {\n            return;\n        }\n        var eButtonsPanel = document.createElement('div');\n        addCssClass(eButtonsPanel, 'ag-filter-apply-panel');\n        var addButton = function (type) {\n            var text;\n            var clickListener;\n            switch (type) {\n                case 'apply':\n                    text = _this.translate('applyFilter');\n                    clickListener = function (e) { return _this.onBtApply(false, false, e); };\n                    break;\n                case 'clear':\n                    text = _this.translate('clearFilter');\n                    clickListener = function () { return _this.onBtClear(); };\n                    break;\n                case 'reset':\n                    text = _this.translate('resetFilter');\n                    clickListener = function () { return _this.onBtReset(); };\n                    break;\n                case 'cancel':\n                    text = _this.translate('cancelFilter');\n                    clickListener = function (e) { _this.onBtCancel(e); };\n                    break;\n                default:\n                    console.warn('Unknown button type specified');\n                    return;\n            }\n            var button = loadTemplate(\n            /* html */\n            \"<button\\n                    type=\\\"button\\\"\\n                    ref=\\\"\" + type + \"FilterButton\\\"\\n                    class=\\\"ag-standard-button ag-filter-apply-panel-button\\\"\\n                >\" + text + \"\\n                </button>\");\n            eButtonsPanel.appendChild(button);\n            _this.addManagedListener(button, 'click', clickListener);\n        };\n        convertToSet(buttons).forEach(function (type) { return addButton(type); });\n        this.getGui().appendChild(eButtonsPanel);\n    };\n    ProvidedFilter.checkForDeprecatedParams = function (params) {\n        var buttons = params.buttons || [];\n        if (buttons.length > 0) {\n            return;\n        }\n        var applyButton = params.applyButton, resetButton = params.resetButton, clearButton = params.clearButton;\n        if (clearButton) {\n            console.warn('AG Grid: as of AG Grid v23.2, filterParams.clearButton is deprecated. Please use filterParams.buttons instead');\n            buttons.push('clear');\n        }\n        if (resetButton) {\n            console.warn('AG Grid: as of AG Grid v23.2, filterParams.resetButton is deprecated. Please use filterParams.buttons instead');\n            buttons.push('reset');\n        }\n        if (applyButton) {\n            console.warn('AG Grid: as of AG Grid v23.2, filterParams.applyButton is deprecated. Please use filterParams.buttons instead');\n            buttons.push('apply');\n        }\n        if (params.apply) {\n            console.warn('AG Grid: as of AG Grid v21, filterParams.apply is deprecated. Please use filterParams.buttons instead');\n            buttons.push('apply');\n        }\n        params.buttons = buttons;\n    };\n    // subclasses can override this to provide alternative debounce defaults\n    ProvidedFilter.prototype.getDefaultDebounceMs = function () {\n        return 0;\n    };\n    ProvidedFilter.prototype.setupOnBtApplyDebounce = function () {\n        var debounceMs = ProvidedFilter.getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs());\n        this.onBtApplyDebounce = debounce(this.onBtApply.bind(this), debounceMs);\n    };\n    ProvidedFilter.prototype.getModel = function () {\n        return this.appliedModel;\n    };\n    ProvidedFilter.prototype.setModel = function (model) {\n        var _this = this;\n        var promise = model ? this.setModelIntoUi(model) : this.resetUiToDefaults();\n        return promise.then(function () {\n            _this.updateUiVisibility();\n            // we set the model from the GUI, rather than the provided model,\n            // so the model is consistent, e.g. handling of null/undefined will be the same,\n            // or if model is case insensitive, then casing is removed.\n            _this.applyModel();\n        });\n    };\n    ProvidedFilter.prototype.onBtCancel = function (e) {\n        var _this = this;\n        var currentModel = this.getModel();\n        var afterAppliedFunc = function () {\n            _this.onUiChanged(false, 'prevent');\n            if (_this.providedFilterParams.closeOnApply) {\n                _this.close(e);\n            }\n        };\n        if (currentModel != null) {\n            this.setModelIntoUi(currentModel).then(afterAppliedFunc);\n        }\n        else {\n            this.resetUiToDefaults().then(afterAppliedFunc);\n        }\n    };\n    ProvidedFilter.prototype.onBtClear = function () {\n        var _this = this;\n        this.resetUiToDefaults().then(function () { return _this.onUiChanged(); });\n    };\n    ProvidedFilter.prototype.onBtReset = function () {\n        this.onBtClear();\n        this.onBtApply();\n    };\n    /**\n     * Applies changes made in the UI to the filter, and returns true if the model has changed.\n     */\n    ProvidedFilter.prototype.applyModel = function () {\n        var newModel = this.getModelFromUi();\n        if (!this.isModelValid(newModel)) {\n            return false;\n        }\n        var previousModel = this.appliedModel;\n        this.appliedModel = newModel;\n        // models can be same if user pasted same content into text field, or maybe just changed the case\n        // and it's a case insensitive filter\n        return !this.areModelsEqual(previousModel, newModel);\n    };\n    ProvidedFilter.prototype.isModelValid = function (model) {\n        return true;\n    };\n    ProvidedFilter.prototype.onBtApply = function (afterFloatingFilter, afterDataChange, e) {\n        if (afterFloatingFilter === void 0) { afterFloatingFilter = false; }\n        if (afterDataChange === void 0) { afterDataChange = false; }\n        if (this.applyModel()) {\n            // the floating filter uses 'afterFloatingFilter' info, so it doesn't refresh after filter changed if change\n            // came from floating filter\n            this.providedFilterParams.filterChangedCallback({ afterFloatingFilter: afterFloatingFilter, afterDataChange: afterDataChange });\n        }\n        var closeOnApply = this.providedFilterParams.closeOnApply;\n        // only close if an apply button is visible, otherwise we'd be closing every time a change was made!\n        if (closeOnApply && this.applyActive && !afterFloatingFilter && !afterDataChange) {\n            this.close(e);\n        }\n    };\n    ProvidedFilter.prototype.onNewRowsLoaded = function () {\n        var _this = this;\n        if (!this.newRowsActionKeep) {\n            this.resetUiToDefaults().then(function () { return _this.appliedModel = null; });\n        }\n    };\n    ProvidedFilter.prototype.close = function (e) {\n        if (!this.hidePopup) {\n            return;\n        }\n        var keyboardEvent = e;\n        var key = keyboardEvent && keyboardEvent.key;\n        var params;\n        if (key === 'Enter' || key === 'Space') {\n            params = { keyboardEvent: keyboardEvent };\n        }\n        this.hidePopup(params);\n        this.hidePopup = null;\n    };\n    // called by set filter\n    ProvidedFilter.prototype.isNewRowsActionKeep = function () {\n        return this.newRowsActionKeep;\n    };\n    /**\n     * By default, if the change came from a floating filter it will be applied immediately, otherwise if there is no\n     * apply button it will be applied after a debounce, otherwise it will not be applied at all. This behaviour can\n     * be adjusted by using the apply parameter.\n     */\n    ProvidedFilter.prototype.onUiChanged = function (fromFloatingFilter, apply) {\n        if (fromFloatingFilter === void 0) { fromFloatingFilter = false; }\n        this.updateUiVisibility();\n        this.providedFilterParams.filterModifiedCallback();\n        if (this.applyActive && !this.isReadOnly) {\n            var isValid = this.isModelValid(this.getModelFromUi());\n            setDisabled(this.getRefElement('applyFilterButton'), !isValid);\n        }\n        if ((fromFloatingFilter && !apply) || apply === 'immediately') {\n            this.onBtApply(fromFloatingFilter);\n        }\n        else if ((!this.applyActive && !apply) || apply === 'debounce') {\n            this.onBtApplyDebounce();\n        }\n    };\n    ProvidedFilter.prototype.afterGuiAttached = function (params) {\n        if (params == null) {\n            return;\n        }\n        this.hidePopup = params.hidePopup;\n    };\n    // static, as used by floating filter also\n    ProvidedFilter.getDebounceMs = function (params, debounceDefault) {\n        if (ProvidedFilter.isUseApplyButton(params)) {\n            if (params.debounceMs != null) {\n                console.warn('AG Grid: debounceMs is ignored when apply button is present');\n            }\n            return 0;\n        }\n        return params.debounceMs != null ? params.debounceMs : debounceDefault;\n    };\n    // static, as used by floating filter also\n    ProvidedFilter.isUseApplyButton = function (params) {\n        ProvidedFilter.checkForDeprecatedParams(params);\n        return !!params.buttons && params.buttons.indexOf('apply') >= 0;\n    };\n    ProvidedFilter.prototype.destroy = function () {\n        this.hidePopup = null;\n        _super.prototype.destroy.call(this);\n    };\n    ProvidedFilter.prototype.translate = function (key) {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        return translate(key, DEFAULT_FILTER_LOCALE_TEXT[key]);\n    };\n    ProvidedFilter.prototype.getCellValue = function (rowNode) {\n        return this.providedFilterParams.valueGetter(rowNode);\n    };\n    __decorate([\n        Autowired('rowModel')\n    ], ProvidedFilter.prototype, \"rowModel\", void 0);\n    __decorate([\n        PostConstruct\n    ], ProvidedFilter.prototype, \"postConstruct\", null);\n    return ProvidedFilter;\n}(Component));\nexport { ProvidedFilter };\n"]},"metadata":{},"sourceType":"module"}