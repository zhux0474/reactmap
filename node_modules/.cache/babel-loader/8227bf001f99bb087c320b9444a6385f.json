{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/filter/Or\n */\n\n\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\n\nvar Or =\n/** @class */\nfunction (_super) {\n  __extends(Or, _super);\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n\n\n  function Or(conditions) {\n    return _super.call(this, 'Or', Array.prototype.slice.call(arguments)) || this;\n  }\n\n  return Or;\n}(LogicalNary);\n\nexport default Or;","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/ol/src/format/filter/Or.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEG;;;AACH,OAAO,WAAP,MAAwB,kBAAxB;AAEA;;;;AAIG;;AACH,IAAA,EAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiB,EAAA,SAAA,CAAA,EAAA,EAAA,MAAA,CAAA;AACf;;AAEG;;;AACH,WAAA,EAAA,CAAY,UAAZ,EAAsB;WACpB,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,KAAK,CAAC,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAZ,KAAkD,I;AACnD;;AACH,SAAA,EAAA;AAAC,CAPD,CAAiB,WAAjB,CAAA;;AASA,eAAe,EAAf","sourcesContent":["/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nclass Or extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('Or', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default Or;\n"]},"metadata":{},"sourceType":"module"}