{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { Events } from '../events';\nimport { PropertyKeys } from '../propertyKeys';\nimport { iterateObject } from '../utils/object';\nimport { values } from '../utils/generic';\nimport { includes } from '../utils/array';\n\nvar ComponentUtil =\n/** @class */\nfunction () {\n  function ComponentUtil() {}\n\n  ComponentUtil.getEventCallbacks = function () {\n    if (!ComponentUtil.EVENT_CALLBACKS) {\n      ComponentUtil.EVENT_CALLBACKS = ComponentUtil.EVENTS.map(function (event) {\n        return ComponentUtil.getCallbackForEvent(event);\n      });\n    }\n\n    return ComponentUtil.EVENT_CALLBACKS;\n  };\n\n  ComponentUtil.copyAttributesToGridOptions = function (gridOptions, component, skipEventDeprecationCheck) {\n    if (skipEventDeprecationCheck === void 0) {\n      skipEventDeprecationCheck = false;\n    } // create empty grid options if none were passed\n\n\n    if (typeof gridOptions !== 'object') {\n      gridOptions = {};\n    } // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\n\n\n    var pGridOptions = gridOptions;\n\n    var keyExists = function (key) {\n      return typeof component[key] !== 'undefined';\n    }; // add in all the simple properties\n\n\n    __spreadArrays(ComponentUtil.ARRAY_PROPERTIES, ComponentUtil.STRING_PROPERTIES, ComponentUtil.OBJECT_PROPERTIES, ComponentUtil.FUNCTION_PROPERTIES, ComponentUtil.getEventCallbacks()).filter(keyExists).forEach(function (key) {\n      return pGridOptions[key] = component[key];\n    });\n\n    ComponentUtil.BOOLEAN_PROPERTIES.filter(keyExists).forEach(function (key) {\n      return pGridOptions[key] = ComponentUtil.toBoolean(component[key]);\n    });\n    ComponentUtil.NUMBER_PROPERTIES.filter(keyExists).forEach(function (key) {\n      return pGridOptions[key] = ComponentUtil.toNumber(component[key]);\n    });\n    return gridOptions;\n  };\n\n  ComponentUtil.getCallbackForEvent = function (eventName) {\n    if (!eventName || eventName.length < 2) {\n      return eventName;\n    }\n\n    return 'on' + eventName[0].toUpperCase() + eventName.substr(1);\n  };\n\n  ComponentUtil.processOnChange = function (changes, gridOptions, api, columnApi) {\n    if (!changes) {\n      return;\n    }\n\n    var changesToApply = __assign({}, changes); // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\n\n\n    var pGridOptions = gridOptions;\n\n    var keyExists = function (key) {\n      return changesToApply[key];\n    }; // check if any change for the simple types, and if so, then just copy in the new value\n\n\n    __spreadArrays(ComponentUtil.ARRAY_PROPERTIES, ComponentUtil.OBJECT_PROPERTIES, ComponentUtil.STRING_PROPERTIES, ComponentUtil.getEventCallbacks()).filter(keyExists).forEach(function (key) {\n      return pGridOptions[key] = changesToApply[key].currentValue;\n    });\n\n    ComponentUtil.BOOLEAN_PROPERTIES.filter(keyExists).forEach(function (key) {\n      return pGridOptions[key] = ComponentUtil.toBoolean(changesToApply[key].currentValue);\n    });\n    ComponentUtil.NUMBER_PROPERTIES.filter(keyExists).forEach(function (key) {\n      return pGridOptions[key] = ComponentUtil.toNumber(changesToApply[key].currentValue);\n    });\n\n    if (changesToApply.enableCellTextSelection) {\n      api.setEnableCellTextSelection(ComponentUtil.toBoolean(changesToApply.enableCellTextSelection.currentValue));\n      delete changesToApply.enableCellTextSelection;\n    }\n\n    if (changesToApply.quickFilterText) {\n      api.setQuickFilter(changesToApply.quickFilterText.currentValue);\n      delete changesToApply.quickFilterText;\n    }\n\n    if (changesToApply.autoGroupColumnDef) {\n      api.setAutoGroupColumnDef(changesToApply.autoGroupColumnDef.currentValue, \"gridOptionsChanged\");\n      delete changesToApply.autoGroupColumnDef;\n    }\n\n    if (changesToApply.columnDefs) {\n      api.setColumnDefs(changesToApply.columnDefs.currentValue, \"gridOptionsChanged\");\n      delete changesToApply.columnDefs;\n    }\n\n    if (changesToApply.paginationPageSize) {\n      api.paginationSetPageSize(ComponentUtil.toNumber(changesToApply.paginationPageSize.currentValue));\n      delete changesToApply.paginationPageSize;\n    }\n\n    if (changesToApply.pivotMode) {\n      columnApi.setPivotMode(ComponentUtil.toBoolean(changesToApply.pivotMode.currentValue));\n      delete changesToApply.pivotMode;\n    }\n\n    if (changesToApply.groupRemoveSingleChildren) {\n      api.setGroupRemoveSingleChildren(ComponentUtil.toBoolean(changesToApply.groupRemoveSingleChildren.currentValue));\n      delete changesToApply.groupRemoveSingleChildren;\n    }\n\n    if (changesToApply.suppressRowDrag) {\n      api.setSuppressRowDrag(ComponentUtil.toBoolean(changesToApply.suppressRowDrag.currentValue));\n      delete changesToApply.suppressRowDrag;\n    }\n\n    if (changesToApply.suppressMoveWhenRowDragging) {\n      api.setSuppressMoveWhenRowDragging(ComponentUtil.toBoolean(changesToApply.suppressMoveWhenRowDragging.currentValue));\n      delete changesToApply.suppressMoveWhenRowDragging;\n    }\n\n    if (changesToApply.suppressRowClickSelection) {\n      api.setSuppressRowClickSelection(ComponentUtil.toBoolean(changesToApply.suppressRowClickSelection.currentValue));\n      delete changesToApply.suppressRowClickSelection;\n    }\n\n    if (changesToApply.suppressClipboardPaste) {\n      api.setSuppressClipboardPaste(ComponentUtil.toBoolean(changesToApply.suppressClipboardPaste.currentValue));\n      delete changesToApply.suppressClipboardPaste;\n    }\n\n    if (changesToApply.headerHeight) {\n      api.setHeaderHeight(ComponentUtil.toNumber(changesToApply.headerHeight.currentValue));\n      delete changesToApply.headerHeight;\n    } // any remaining properties can be set in a generic way\n    // ie the setter takes the form of setXXX and the argument requires no formatting/translation first\n\n\n    var dynamicApi = api;\n    Object.keys(changesToApply).forEach(function (property) {\n      var setterName = \"set\" + property.charAt(0).toUpperCase() + property.substring(1);\n\n      if (dynamicApi[setterName]) {\n        dynamicApi[setterName](changes[property].currentValue);\n      }\n    }); // copy changes into an event for dispatch\n\n    var event = {\n      type: Events.EVENT_COMPONENT_STATE_CHANGED,\n      api: gridOptions.api,\n      columnApi: gridOptions.columnApi\n    };\n    iterateObject(changes, function (key, value) {\n      event[key] = value;\n    });\n    api.dispatchEvent(event);\n  };\n\n  ComponentUtil.toBoolean = function (value) {\n    if (typeof value === 'boolean') {\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      // for boolean, compare to empty String to allow attributes appearing with\n      // no value to be treated as 'true'\n      return value.toUpperCase() === 'TRUE' || value == '';\n    }\n\n    return false;\n  };\n\n  ComponentUtil.toNumber = function (value) {\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      return Number(value);\n    }\n  }; // all the events are populated in here AFTER this class (at the bottom of the file).\n\n\n  ComponentUtil.EVENTS = []; // events that are available for use by users of AG Grid and so should be documented\n\n  ComponentUtil.PUBLIC_EVENTS = []; // events that are internal to AG Grid and should not be exposed to users via documentation or generated framework components\n\n  ComponentUtil.EXCLUDED_INTERNAL_EVENTS = [];\n  ComponentUtil.STRING_PROPERTIES = PropertyKeys.STRING_PROPERTIES;\n  ComponentUtil.OBJECT_PROPERTIES = PropertyKeys.OBJECT_PROPERTIES;\n  ComponentUtil.ARRAY_PROPERTIES = PropertyKeys.ARRAY_PROPERTIES;\n  ComponentUtil.NUMBER_PROPERTIES = PropertyKeys.NUMBER_PROPERTIES;\n  ComponentUtil.BOOLEAN_PROPERTIES = PropertyKeys.BOOLEAN_PROPERTIES;\n  ComponentUtil.FUNCTION_PROPERTIES = PropertyKeys.FUNCTION_PROPERTIES;\n  ComponentUtil.ALL_PROPERTIES = PropertyKeys.ALL_PROPERTIES;\n  return ComponentUtil;\n}();\n\nexport { ComponentUtil };\nComponentUtil.EVENTS = values(Events);\n/** Exclude the following internal events from code generation to prevent exposing these events via framework components */\n\nComponentUtil.EXCLUDED_INTERNAL_EVENTS = [Events.EVENT_SCROLLBAR_WIDTH_CHANGED, Events.EVENT_CHECKBOX_CHANGED, Events.EVENT_HEIGHT_SCALE_CHANGED, Events.EVENT_BODY_HEIGHT_CHANGED, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, Events.EVENT_SCROLL_VISIBILITY_CHANGED, Events.EVENT_COLUMN_HOVER_CHANGED, Events.EVENT_FLASH_CELLS, Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED, Events.EVENT_DISPLAYED_ROWS_CHANGED, Events.EVENT_LEFT_PINNED_WIDTH_CHANGED, Events.EVENT_RIGHT_PINNED_WIDTH_CHANGED, Events.EVENT_ROW_CONTAINER_HEIGHT_CHANGED, Events.EVENT_POPUP_TO_FRONT, Events.EVENT_KEYBOARD_FOCUS, Events.EVENT_MOUSE_FOCUS, Events.EVENT_STORE_UPDATED, Events.EVENT_COLUMN_PANEL_ITEM_DRAG_START, Events.EVENT_COLUMN_PANEL_ITEM_DRAG_END, Events.EVENT_FILL_START, Events.EVENT_FILL_END];\n/** EVENTS that should be exposed via code generation for the framework components.  */\n\nComponentUtil.PUBLIC_EVENTS = ComponentUtil.EVENTS.filter(function (e) {\n  return !includes(ComponentUtil.EXCLUDED_INTERNAL_EVENTS, e);\n});","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/components/componentUtil.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","Events","PropertyKeys","iterateObject","values","includes","ComponentUtil","getEventCallbacks","EVENT_CALLBACKS","EVENTS","map","event","getCallbackForEvent","copyAttributesToGridOptions","gridOptions","component","skipEventDeprecationCheck","pGridOptions","keyExists","key","ARRAY_PROPERTIES","STRING_PROPERTIES","OBJECT_PROPERTIES","FUNCTION_PROPERTIES","filter","forEach","BOOLEAN_PROPERTIES","toBoolean","NUMBER_PROPERTIES","toNumber","eventName","toUpperCase","substr","processOnChange","changes","api","columnApi","changesToApply","currentValue","enableCellTextSelection","setEnableCellTextSelection","quickFilterText","setQuickFilter","autoGroupColumnDef","setAutoGroupColumnDef","columnDefs","setColumnDefs","paginationPageSize","paginationSetPageSize","pivotMode","setPivotMode","groupRemoveSingleChildren","setGroupRemoveSingleChildren","suppressRowDrag","setSuppressRowDrag","suppressMoveWhenRowDragging","setSuppressMoveWhenRowDragging","suppressRowClickSelection","setSuppressRowClickSelection","suppressClipboardPaste","setSuppressClipboardPaste","headerHeight","setHeaderHeight","dynamicApi","keys","property","setterName","charAt","substring","type","EVENT_COMPONENT_STATE_CHANGED","value","dispatchEvent","Number","PUBLIC_EVENTS","EXCLUDED_INTERNAL_EVENTS","ALL_PROPERTIES","EVENT_SCROLLBAR_WIDTH_CHANGED","EVENT_CHECKBOX_CHANGED","EVENT_HEIGHT_SCALE_CHANGED","EVENT_BODY_HEIGHT_CHANGED","EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED","EVENT_SCROLL_VISIBILITY_CHANGED","EVENT_COLUMN_HOVER_CHANGED","EVENT_FLASH_CELLS","EVENT_PAGINATION_PIXEL_OFFSET_CHANGED","EVENT_DISPLAYED_ROWS_CHANGED","EVENT_LEFT_PINNED_WIDTH_CHANGED","EVENT_RIGHT_PINNED_WIDTH_CHANGED","EVENT_ROW_CONTAINER_HEIGHT_CHANGED","EVENT_POPUP_TO_FRONT","EVENT_KEYBOARD_FOCUS","EVENT_MOUSE_FOCUS","EVENT_STORE_UPDATED","EVENT_COLUMN_PANEL_ITEM_DRAG_START","EVENT_COLUMN_PANEL_ITEM_DRAG_END","EVENT_FILL_START","EVENT_FILL_END","e"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Events } from '../events';\nimport { PropertyKeys } from '../propertyKeys';\nimport { iterateObject } from '../utils/object';\nimport { values } from '../utils/generic';\nimport { includes } from '../utils/array';\nvar ComponentUtil = /** @class */ (function () {\n    function ComponentUtil() {\n    }\n    ComponentUtil.getEventCallbacks = function () {\n        if (!ComponentUtil.EVENT_CALLBACKS) {\n            ComponentUtil.EVENT_CALLBACKS = ComponentUtil.EVENTS.map(function (event) { return ComponentUtil.getCallbackForEvent(event); });\n        }\n        return ComponentUtil.EVENT_CALLBACKS;\n    };\n    ComponentUtil.copyAttributesToGridOptions = function (gridOptions, component, skipEventDeprecationCheck) {\n        if (skipEventDeprecationCheck === void 0) { skipEventDeprecationCheck = false; }\n        // create empty grid options if none were passed\n        if (typeof gridOptions !== 'object') {\n            gridOptions = {};\n        }\n        // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\n        var pGridOptions = gridOptions;\n        var keyExists = function (key) { return typeof component[key] !== 'undefined'; };\n        // add in all the simple properties\n        __spreadArrays(ComponentUtil.ARRAY_PROPERTIES, ComponentUtil.STRING_PROPERTIES, ComponentUtil.OBJECT_PROPERTIES, ComponentUtil.FUNCTION_PROPERTIES, ComponentUtil.getEventCallbacks()).filter(keyExists)\n            .forEach(function (key) { return pGridOptions[key] = component[key]; });\n        ComponentUtil.BOOLEAN_PROPERTIES\n            .filter(keyExists)\n            .forEach(function (key) { return pGridOptions[key] = ComponentUtil.toBoolean(component[key]); });\n        ComponentUtil.NUMBER_PROPERTIES\n            .filter(keyExists)\n            .forEach(function (key) { return pGridOptions[key] = ComponentUtil.toNumber(component[key]); });\n        return gridOptions;\n    };\n    ComponentUtil.getCallbackForEvent = function (eventName) {\n        if (!eventName || eventName.length < 2) {\n            return eventName;\n        }\n        return 'on' + eventName[0].toUpperCase() + eventName.substr(1);\n    };\n    ComponentUtil.processOnChange = function (changes, gridOptions, api, columnApi) {\n        if (!changes) {\n            return;\n        }\n        var changesToApply = __assign({}, changes);\n        // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\n        var pGridOptions = gridOptions;\n        var keyExists = function (key) { return changesToApply[key]; };\n        // check if any change for the simple types, and if so, then just copy in the new value\n        __spreadArrays(ComponentUtil.ARRAY_PROPERTIES, ComponentUtil.OBJECT_PROPERTIES, ComponentUtil.STRING_PROPERTIES, ComponentUtil.getEventCallbacks()).filter(keyExists)\n            .forEach(function (key) { return pGridOptions[key] = changesToApply[key].currentValue; });\n        ComponentUtil.BOOLEAN_PROPERTIES\n            .filter(keyExists)\n            .forEach(function (key) { return pGridOptions[key] = ComponentUtil.toBoolean(changesToApply[key].currentValue); });\n        ComponentUtil.NUMBER_PROPERTIES\n            .filter(keyExists)\n            .forEach(function (key) { return pGridOptions[key] = ComponentUtil.toNumber(changesToApply[key].currentValue); });\n        if (changesToApply.enableCellTextSelection) {\n            api.setEnableCellTextSelection(ComponentUtil.toBoolean(changesToApply.enableCellTextSelection.currentValue));\n            delete changesToApply.enableCellTextSelection;\n        }\n        if (changesToApply.quickFilterText) {\n            api.setQuickFilter(changesToApply.quickFilterText.currentValue);\n            delete changesToApply.quickFilterText;\n        }\n        if (changesToApply.autoGroupColumnDef) {\n            api.setAutoGroupColumnDef(changesToApply.autoGroupColumnDef.currentValue, \"gridOptionsChanged\");\n            delete changesToApply.autoGroupColumnDef;\n        }\n        if (changesToApply.columnDefs) {\n            api.setColumnDefs(changesToApply.columnDefs.currentValue, \"gridOptionsChanged\");\n            delete changesToApply.columnDefs;\n        }\n        if (changesToApply.paginationPageSize) {\n            api.paginationSetPageSize(ComponentUtil.toNumber(changesToApply.paginationPageSize.currentValue));\n            delete changesToApply.paginationPageSize;\n        }\n        if (changesToApply.pivotMode) {\n            columnApi.setPivotMode(ComponentUtil.toBoolean(changesToApply.pivotMode.currentValue));\n            delete changesToApply.pivotMode;\n        }\n        if (changesToApply.groupRemoveSingleChildren) {\n            api.setGroupRemoveSingleChildren(ComponentUtil.toBoolean(changesToApply.groupRemoveSingleChildren.currentValue));\n            delete changesToApply.groupRemoveSingleChildren;\n        }\n        if (changesToApply.suppressRowDrag) {\n            api.setSuppressRowDrag(ComponentUtil.toBoolean(changesToApply.suppressRowDrag.currentValue));\n            delete changesToApply.suppressRowDrag;\n        }\n        if (changesToApply.suppressMoveWhenRowDragging) {\n            api.setSuppressMoveWhenRowDragging(ComponentUtil.toBoolean(changesToApply.suppressMoveWhenRowDragging.currentValue));\n            delete changesToApply.suppressMoveWhenRowDragging;\n        }\n        if (changesToApply.suppressRowClickSelection) {\n            api.setSuppressRowClickSelection(ComponentUtil.toBoolean(changesToApply.suppressRowClickSelection.currentValue));\n            delete changesToApply.suppressRowClickSelection;\n        }\n        if (changesToApply.suppressClipboardPaste) {\n            api.setSuppressClipboardPaste(ComponentUtil.toBoolean(changesToApply.suppressClipboardPaste.currentValue));\n            delete changesToApply.suppressClipboardPaste;\n        }\n        if (changesToApply.headerHeight) {\n            api.setHeaderHeight(ComponentUtil.toNumber(changesToApply.headerHeight.currentValue));\n            delete changesToApply.headerHeight;\n        }\n        // any remaining properties can be set in a generic way\n        // ie the setter takes the form of setXXX and the argument requires no formatting/translation first\n        var dynamicApi = api;\n        Object.keys(changesToApply)\n            .forEach(function (property) {\n            var setterName = \"set\" + property.charAt(0).toUpperCase() + property.substring(1);\n            if (dynamicApi[setterName]) {\n                dynamicApi[setterName](changes[property].currentValue);\n            }\n        });\n        // copy changes into an event for dispatch\n        var event = {\n            type: Events.EVENT_COMPONENT_STATE_CHANGED,\n            api: gridOptions.api,\n            columnApi: gridOptions.columnApi\n        };\n        iterateObject(changes, function (key, value) {\n            event[key] = value;\n        });\n        api.dispatchEvent(event);\n    };\n    ComponentUtil.toBoolean = function (value) {\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        if (typeof value === 'string') {\n            // for boolean, compare to empty String to allow attributes appearing with\n            // no value to be treated as 'true'\n            return value.toUpperCase() === 'TRUE' || value == '';\n        }\n        return false;\n    };\n    ComponentUtil.toNumber = function (value) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        if (typeof value === 'string') {\n            return Number(value);\n        }\n    };\n    // all the events are populated in here AFTER this class (at the bottom of the file).\n    ComponentUtil.EVENTS = [];\n    // events that are available for use by users of AG Grid and so should be documented\n    ComponentUtil.PUBLIC_EVENTS = [];\n    // events that are internal to AG Grid and should not be exposed to users via documentation or generated framework components\n    ComponentUtil.EXCLUDED_INTERNAL_EVENTS = [];\n    ComponentUtil.STRING_PROPERTIES = PropertyKeys.STRING_PROPERTIES;\n    ComponentUtil.OBJECT_PROPERTIES = PropertyKeys.OBJECT_PROPERTIES;\n    ComponentUtil.ARRAY_PROPERTIES = PropertyKeys.ARRAY_PROPERTIES;\n    ComponentUtil.NUMBER_PROPERTIES = PropertyKeys.NUMBER_PROPERTIES;\n    ComponentUtil.BOOLEAN_PROPERTIES = PropertyKeys.BOOLEAN_PROPERTIES;\n    ComponentUtil.FUNCTION_PROPERTIES = PropertyKeys.FUNCTION_PROPERTIES;\n    ComponentUtil.ALL_PROPERTIES = PropertyKeys.ALL_PROPERTIES;\n    return ComponentUtil;\n}());\nexport { ComponentUtil };\nComponentUtil.EVENTS = values(Events);\n/** Exclude the following internal events from code generation to prevent exposing these events via framework components */\nComponentUtil.EXCLUDED_INTERNAL_EVENTS = [\n    Events.EVENT_SCROLLBAR_WIDTH_CHANGED,\n    Events.EVENT_CHECKBOX_CHANGED,\n    Events.EVENT_HEIGHT_SCALE_CHANGED,\n    Events.EVENT_BODY_HEIGHT_CHANGED,\n    Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,\n    Events.EVENT_SCROLL_VISIBILITY_CHANGED,\n    Events.EVENT_COLUMN_HOVER_CHANGED,\n    Events.EVENT_FLASH_CELLS,\n    Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED,\n    Events.EVENT_DISPLAYED_ROWS_CHANGED,\n    Events.EVENT_LEFT_PINNED_WIDTH_CHANGED,\n    Events.EVENT_RIGHT_PINNED_WIDTH_CHANGED,\n    Events.EVENT_ROW_CONTAINER_HEIGHT_CHANGED,\n    Events.EVENT_POPUP_TO_FRONT,\n    Events.EVENT_KEYBOARD_FOCUS,\n    Events.EVENT_MOUSE_FOCUS,\n    Events.EVENT_STORE_UPDATED,\n    Events.EVENT_COLUMN_PANEL_ITEM_DRAG_START,\n    Events.EVENT_COLUMN_PANEL_ITEM_DRAG_END,\n    Events.EVENT_FILL_START,\n    Events.EVENT_FILL_END,\n];\n/** EVENTS that should be exposed via code generation for the framework components.  */\nComponentUtil.PUBLIC_EVENTS = ComponentUtil.EVENTS.filter(function (e) { return !includes(ComponentUtil.EXCLUDED_INTERNAL_EVENTS, e); });\n"]},"metadata":{},"sourceType":"module"}