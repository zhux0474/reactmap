{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { exists, toStringOrNull } from './generic';\nexport function firstExistingValue() {\n  var values = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    values[_i] = arguments[_i];\n  }\n\n  for (var i = 0; i < values.length; i++) {\n    var value = values[i];\n\n    if (exists(value)) {\n      return value;\n    }\n  }\n\n  return null;\n}\n/** @deprecated */\n\nexport function anyExists(values) {\n  return values && firstExistingValue(values) != null;\n}\nexport function existsAndNotEmpty(value) {\n  return value != null && value.length > 0;\n}\nexport function last(arr) {\n  if (!arr || !arr.length) {\n    return;\n  }\n\n  return arr[arr.length - 1];\n}\nexport function areEqual(a, b, comparator) {\n  if (a == null && b == null) {\n    return true;\n  }\n\n  return a != null && b != null && a.length === b.length && every(a, function (value, index) {\n    return comparator ? comparator(value, b[index]) : b[index] === value;\n  });\n}\n/** @deprecated */\n\nexport function compareArrays(array1, array2) {\n  return areEqual(array1, array2);\n}\n/** @deprecated */\n\nexport function shallowCompare(arr1, arr2) {\n  return areEqual(arr1, arr2);\n}\nexport function sortNumerically(array) {\n  return array.sort(function (a, b) {\n    return a - b;\n  });\n}\nexport function removeRepeatsFromArray(array, object) {\n  if (!array) {\n    return;\n  }\n\n  for (var index = array.length - 2; index >= 0; index--) {\n    var thisOneMatches = array[index] === object;\n    var nextOneMatches = array[index + 1] === object;\n\n    if (thisOneMatches && nextOneMatches) {\n      array.splice(index + 1, 1);\n    }\n  }\n}\nexport function removeFromArray(array, object) {\n  var index = array.indexOf(object);\n\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nexport function removeAllFromArray(array, toRemove) {\n  forEach(toRemove, function (item) {\n    return removeFromArray(array, item);\n  });\n}\nexport function insertIntoArray(array, object, toIndex) {\n  array.splice(toIndex, 0, object);\n}\nexport function insertArrayIntoArray(dest, src, toIndex) {\n  if (dest == null || src == null) {\n    return;\n  } // put items in backwards, otherwise inserted items end up in reverse order\n\n\n  for (var i = src.length - 1; i >= 0; i--) {\n    var item = src[i];\n    insertIntoArray(dest, item, toIndex);\n  }\n}\nexport function moveInArray(array, objectsToMove, toIndex) {\n  // first take out items from the array\n  removeAllFromArray(array, objectsToMove); // now add the objects, in same order as provided to us, that means we start at the end\n  // as the objects will be pushed to the right as they are inserted\n\n  forEach(objectsToMove.slice().reverse(), function (obj) {\n    return insertIntoArray(array, obj, toIndex);\n  });\n}\nexport function includes(array, value) {\n  return array.indexOf(value) > -1;\n}\nexport function flatten(arrayOfArrays) {\n  return [].concat.apply([], arrayOfArrays);\n}\nexport function pushAll(target, source) {\n  if (source == null || target == null) {\n    return;\n  }\n\n  forEach(source, function (value) {\n    return target.push(value);\n  });\n}\nexport function toStrings(array) {\n  return map(array, toStringOrNull);\n}\nexport function findIndex(collection, predicate) {\n  for (var i = 0; i < collection.length; i++) {\n    if (predicate(collection[i], i, collection)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function fill(collection, value, start, end) {\n  if (value === void 0) {\n    value = null;\n  }\n\n  if (start === void 0) {\n    start = 0;\n  }\n\n  if (end === void 0) {\n    end = collection.length;\n  }\n\n  for (var i = start; i < end; i++) {\n    collection[i] = value;\n  }\n\n  return collection;\n}\n/**\n * The implementation of Array.prototype.every in browsers is always slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/bek91dtit8/\n */\n\nexport function every(list, predicate) {\n  if (list == null) {\n    return true;\n  }\n\n  for (var i = 0; i < list.length; i++) {\n    if (!predicate(list[i], i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * The implementation of Array.prototype.some in browsers is always slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/5dk91e4tmt/\n */\n\nexport function some(list, predicate) {\n  if (list == null) {\n    return false;\n  }\n\n  for (var i = 0; i < list.length; i++) {\n    if (predicate(list[i], i)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * The implementation of Array.prototype.forEach in browsers is often slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/apk91elt8a/\n */\n\nexport function forEach(list, action) {\n  if (list == null) {\n    return;\n  }\n\n  for (var i = 0; i < list.length; i++) {\n    action(list[i], i);\n  }\n}\nexport function forEachReverse(list, action) {\n  if (list == null) {\n    return;\n  }\n\n  for (var i = list.length - 1; i >= 0; i--) {\n    action(list[i], i);\n  }\n}\n/**\n * The implementation of Array.prototype.map in browsers is generally the same as just using a simple for loop. However,\n * Firefox does exhibit some difference, and this performs no worse in other browsers, so use this if you want improved\n * performance.\n * https://jsbench.me/njk91ez8pc/\n */\n\nexport function map(list, process) {\n  if (list == null) {\n    return null;\n  }\n\n  var mapped = [];\n\n  for (var i = 0; i < list.length; i++) {\n    mapped.push(process(list[i], i));\n  }\n\n  return mapped;\n}\n/**\n * The implementation of Array.prototype.filter in browsers is always slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/7bk91fk08c/\n */\n\nexport function filter(list, predicate) {\n  if (list == null) {\n    return null;\n  }\n\n  var filtered = [];\n\n  for (var i = 0; i < list.length; i++) {\n    if (predicate(list[i], i)) {\n      filtered.push(list[i]);\n    }\n  }\n\n  return filtered;\n}\n/**\n * The implementation of Array.prototype.reduce in browsers is generally the same as just using a simple for loop. However,\n * Chrome does exhibit some difference, and this performs no worse in other browsers, so use this if you want improved\n * performance.\n * https://jsbench.me/7vk92n6u1f/\n */\n\nexport function reduce(list, step, initial) {\n  if (list == null || initial == null) {\n    return null;\n  }\n\n  var result = initial;\n\n  for (var i = 0; i < list.length; i++) {\n    result = step(result, list[i], i);\n  }\n\n  return result;\n}\n/** @deprecated */\n\nexport function forEachSnapshotFirst(list, callback) {\n  if (!list) {\n    return;\n  }\n\n  var arrayCopy = list.slice(0);\n  arrayCopy.forEach(callback);\n}","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/utils/array.js"],"names":["exists","toStringOrNull","firstExistingValue","values","_i","arguments","length","i","value","anyExists","existsAndNotEmpty","last","arr","areEqual","a","b","comparator","every","index","compareArrays","array1","array2","shallowCompare","arr1","arr2","sortNumerically","array","sort","removeRepeatsFromArray","object","thisOneMatches","nextOneMatches","splice","removeFromArray","indexOf","removeAllFromArray","toRemove","forEach","item","insertIntoArray","toIndex","insertArrayIntoArray","dest","src","moveInArray","objectsToMove","slice","reverse","obj","includes","flatten","arrayOfArrays","concat","apply","pushAll","target","source","push","toStrings","map","findIndex","collection","predicate","fill","start","end","list","some","action","forEachReverse","process","mapped","filter","filtered","reduce","step","initial","result","forEachSnapshotFirst","callback","arrayCopy"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { exists, toStringOrNull } from './generic';\nexport function firstExistingValue() {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    for (var i = 0; i < values.length; i++) {\n        var value = values[i];\n        if (exists(value)) {\n            return value;\n        }\n    }\n    return null;\n}\n/** @deprecated */\nexport function anyExists(values) {\n    return values && firstExistingValue(values) != null;\n}\nexport function existsAndNotEmpty(value) {\n    return value != null && value.length > 0;\n}\nexport function last(arr) {\n    if (!arr || !arr.length) {\n        return;\n    }\n    return arr[arr.length - 1];\n}\nexport function areEqual(a, b, comparator) {\n    if (a == null && b == null) {\n        return true;\n    }\n    return a != null &&\n        b != null &&\n        a.length === b.length &&\n        every(a, function (value, index) { return comparator ? comparator(value, b[index]) : b[index] === value; });\n}\n/** @deprecated */\nexport function compareArrays(array1, array2) {\n    return areEqual(array1, array2);\n}\n/** @deprecated */\nexport function shallowCompare(arr1, arr2) {\n    return areEqual(arr1, arr2);\n}\nexport function sortNumerically(array) {\n    return array.sort(function (a, b) { return a - b; });\n}\nexport function removeRepeatsFromArray(array, object) {\n    if (!array) {\n        return;\n    }\n    for (var index = array.length - 2; index >= 0; index--) {\n        var thisOneMatches = array[index] === object;\n        var nextOneMatches = array[index + 1] === object;\n        if (thisOneMatches && nextOneMatches) {\n            array.splice(index + 1, 1);\n        }\n    }\n}\nexport function removeFromArray(array, object) {\n    var index = array.indexOf(object);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\nexport function removeAllFromArray(array, toRemove) {\n    forEach(toRemove, function (item) { return removeFromArray(array, item); });\n}\nexport function insertIntoArray(array, object, toIndex) {\n    array.splice(toIndex, 0, object);\n}\nexport function insertArrayIntoArray(dest, src, toIndex) {\n    if (dest == null || src == null) {\n        return;\n    }\n    // put items in backwards, otherwise inserted items end up in reverse order\n    for (var i = src.length - 1; i >= 0; i--) {\n        var item = src[i];\n        insertIntoArray(dest, item, toIndex);\n    }\n}\nexport function moveInArray(array, objectsToMove, toIndex) {\n    // first take out items from the array\n    removeAllFromArray(array, objectsToMove);\n    // now add the objects, in same order as provided to us, that means we start at the end\n    // as the objects will be pushed to the right as they are inserted\n    forEach(objectsToMove.slice().reverse(), function (obj) { return insertIntoArray(array, obj, toIndex); });\n}\nexport function includes(array, value) {\n    return array.indexOf(value) > -1;\n}\nexport function flatten(arrayOfArrays) {\n    return [].concat.apply([], arrayOfArrays);\n}\nexport function pushAll(target, source) {\n    if (source == null || target == null) {\n        return;\n    }\n    forEach(source, function (value) { return target.push(value); });\n}\nexport function toStrings(array) {\n    return map(array, toStringOrNull);\n}\nexport function findIndex(collection, predicate) {\n    for (var i = 0; i < collection.length; i++) {\n        if (predicate(collection[i], i, collection)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function fill(collection, value, start, end) {\n    if (value === void 0) { value = null; }\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = collection.length; }\n    for (var i = start; i < end; i++) {\n        collection[i] = value;\n    }\n    return collection;\n}\n/**\n * The implementation of Array.prototype.every in browsers is always slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/bek91dtit8/\n */\nexport function every(list, predicate) {\n    if (list == null) {\n        return true;\n    }\n    for (var i = 0; i < list.length; i++) {\n        if (!predicate(list[i], i)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * The implementation of Array.prototype.some in browsers is always slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/5dk91e4tmt/\n */\nexport function some(list, predicate) {\n    if (list == null) {\n        return false;\n    }\n    for (var i = 0; i < list.length; i++) {\n        if (predicate(list[i], i)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * The implementation of Array.prototype.forEach in browsers is often slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/apk91elt8a/\n */\nexport function forEach(list, action) {\n    if (list == null) {\n        return;\n    }\n    for (var i = 0; i < list.length; i++) {\n        action(list[i], i);\n    }\n}\nexport function forEachReverse(list, action) {\n    if (list == null) {\n        return;\n    }\n    for (var i = list.length - 1; i >= 0; i--) {\n        action(list[i], i);\n    }\n}\n/**\n * The implementation of Array.prototype.map in browsers is generally the same as just using a simple for loop. However,\n * Firefox does exhibit some difference, and this performs no worse in other browsers, so use this if you want improved\n * performance.\n * https://jsbench.me/njk91ez8pc/\n */\nexport function map(list, process) {\n    if (list == null) {\n        return null;\n    }\n    var mapped = [];\n    for (var i = 0; i < list.length; i++) {\n        mapped.push(process(list[i], i));\n    }\n    return mapped;\n}\n/**\n * The implementation of Array.prototype.filter in browsers is always slower than just using a simple for loop, so\n * use this for improved performance.\n * https://jsbench.me/7bk91fk08c/\n */\nexport function filter(list, predicate) {\n    if (list == null) {\n        return null;\n    }\n    var filtered = [];\n    for (var i = 0; i < list.length; i++) {\n        if (predicate(list[i], i)) {\n            filtered.push(list[i]);\n        }\n    }\n    return filtered;\n}\n/**\n * The implementation of Array.prototype.reduce in browsers is generally the same as just using a simple for loop. However,\n * Chrome does exhibit some difference, and this performs no worse in other browsers, so use this if you want improved\n * performance.\n * https://jsbench.me/7vk92n6u1f/\n */\nexport function reduce(list, step, initial) {\n    if (list == null || initial == null) {\n        return null;\n    }\n    var result = initial;\n    for (var i = 0; i < list.length; i++) {\n        result = step(result, list[i], i);\n    }\n    return result;\n}\n/** @deprecated */\nexport function forEachSnapshotFirst(list, callback) {\n    if (!list) {\n        return;\n    }\n    var arrayCopy = list.slice(0);\n    arrayCopy.forEach(callback);\n}\n"]},"metadata":{},"sourceType":"module"}