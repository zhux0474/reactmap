{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerMap.js\";\nimport React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\"; //import \"./SmokerMap.css\";\n\nimport Map from \"ol/Map\"; //import Feature from \"ol/Feature\";\n\nimport View from \"ol/View\"; //import { Point, Style, Circle, Fill, Feature } from \"ol\";\n\nimport TileLayer from \"ol/layer/Tile\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport { Fill, Stroke, Style } from 'ol/style';\nimport cityboundary from \"./Minneapolis_Police_Precincts.geojson\"; //import county from \"./County.json\";\n\n/*\nconst vectorlayer = \nnew VectorLayer({\n    source : new VectorSource({\n      url: './City_Boundary.geojson',\n      format: new GeoJSON(),\n      featureProjection:\"EPSG:4326\"\n    }),\n    style: new Style({\n      color: '#eeeeee',\n      ///style: getFill().setColor(color),\n\n    })\n})*/\n\n/*\nconst vectorlayer=new GeoJSON().readFeatures(geojsonObject, {\n  featureProjection:'EPSG:3857'\n});*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SmokerMap extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.mapRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    var basemap = new TileLayer({\n      source: new OSM()\n    });\n    var vectorstyle = new Style({\n      stroke: new Stroke({\n        color: 'black',\n        width: 1\n      })\n    });\n    var vectorlayer = new VectorLayer({\n      source: new VectorSource({\n        url: cityboundary,\n        format: new GeoJSON(),\n        style: vectorstyle\n      }) //style: new Style({\n      //need to add stuff here to style the polygon \n      //fill: new Fill({\n      //color: [255,0,0,255]}),//'#eeeeee' [255,0,0,255]\n      ///style: getFill().setColor(color),\n      //}), \n\n    });\n    this.map = new Map({\n      layers: [basemap, vectorlayer],\n      target: \"mapContainer\",\n      view: new View({\n        //projection: 'EPSG:2227',\n        center: fromLonLat([-94.6859, 46.7296]),\n        zoom: 7\n      })\n    });\n  }\n\n  render() {\n    console.log(\"-> render App\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapContainer\",\n      ref: this.mapRef,\n      style: {\n        width: \"100%\",\n        height: \"700px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*\nconst SmokerMap = ({ counties}) =>{\n    /*\n    const mapStyle={\n        fillColor: \"white\",\n        weight: 1,\n        color: \"black\",\n        fillOpacity: 1,\n    };\n    const onEachCountry = (country, layer) => {\n        layer.options.fillColor = country.properties.color;\n        const name = country.properties.ADMIN;\n        const confirmedText = country.properties.confirmedText;\n        layer.bindPopup(`${name} ${confirmedText}`);\n      };*/\n\n/*return (\n  <Map style={{ height: \"90vh\" }} zoom={2} center={[-94.6859,46.7296]}>\n    <GeoJSON\n      style={mapStyle}\n      data={countries}\n      onEachFeature={onEachCountry}\n    />\n  </Map>\n);\n return (\n  <div className=\"map_div\">\n  <Map className=\"smoker_map\" view={{center:fromLonLat([-94.6859,46.7296]),zoom:6}}>\n    <Layers>\n      <layer.Tile></layer.Tile>\n      </Layers>\n       </Map>\n  \n  </div>\n);\n};\nexport default SmokerMap;\n*/","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerMap.js"],"names":["React","fromLonLat","get","Map","View","TileLayer","VectorLayer","VectorSource","GeoJSON","OSM","Fill","Stroke","Style","cityboundary","SmokerMap","Component","constructor","props","console","log","mapRef","createRef","componentDidMount","basemap","source","vectorstyle","stroke","color","width","vectorlayer","url","format","style","map","layers","target","view","center","zoom","render","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,SAAhC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAkC,UAAlC;AACA,OAAOC,YAAP,MAAyB,wCAAzB,C,CACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAEA,eAAe,MAAMC,SAAN,SAAwBd,KAAK,CAACe,SAA9B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA,SAAKG,MAAL,gBAAYpB,KAAK,CAACqB,SAAN,EAAZ;AACD;;AACDC,EAAAA,iBAAiB,GAAE;AAEjB,QAAIC,OAAO,GAAE,IAAIlB,SAAJ,CAAc;AACzBmB,MAAAA,MAAM,EAAE,IAAIf,GAAJ;AADiB,KAAd,CAAb;AAIA,QAAIgB,WAAW,GAAG,IAAIb,KAAJ,CAAU;AAE1Bc,MAAAA,MAAM,EAAE,IAAIf,MAAJ,CAAW;AACjBgB,QAAAA,KAAK,EAAC,OADW;AAEjBC,QAAAA,KAAK,EAAC;AAFW,OAAX;AAFkB,KAAV,CAAlB;AAQA,QAAIC,WAAW,GAAG,IAAIvB,WAAJ,CAAgB;AAE/BkB,MAAAA,MAAM,EAAG,IAAIjB,YAAJ,CAAiB;AACzBuB,QAAAA,GAAG,EAAEjB,YADoB;AAEzBkB,QAAAA,MAAM,EAAE,IAAIvB,OAAJ,EAFiB;AAGzBwB,QAAAA,KAAK,EAAEP;AAHkB,OAAjB,CAFsB,CAOhC;AACE;AACA;AACE;AAEF;AAEF;;AAdgC,KAAhB,CAAlB;AAkBA,SAAKQ,GAAL,GAAS,IAAI9B,GAAJ,CAAQ;AACf+B,MAAAA,MAAM,EAAE,CAACX,OAAD,EAAUM,WAAV,CADO;AAEfM,MAAAA,MAAM,EAAE,cAFO;AAGfC,MAAAA,IAAI,EAAE,IAAIhC,IAAJ,CAAS;AACb;AACAiC,QAAAA,MAAM,EAACpC,UAAU,CAAC,CAAC,CAAC,OAAF,EAAU,OAAV,CAAD,CAFJ;AAGbqC,QAAAA,IAAI,EAAE;AAHO,OAAT;AAHS,KAAR,CAAT;AAWD;;AACDC,EAAAA,MAAM,GAAG;AACPrB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,wBACE;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,GAAG,EAAE,KAAKC,MAFZ;AAGE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE,MAAT;AAAiBY,QAAAA,MAAM,EAAE;AAAzB;AAHT;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA7DmD;AAiEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\";\n//import \"./SmokerMap.css\";\nimport Map from \"ol/Map\";\n//import Feature from \"ol/Feature\";\nimport View from \"ol/View\";\n//import { Point, Style, Circle, Fill, Feature } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport {Fill, Stroke, Style} from 'ol/style';\nimport cityboundary from \"./Minneapolis_Police_Precincts.geojson\";\n//import county from \"./County.json\";\n\n/*\nconst vectorlayer = \nnew VectorLayer({\n    source : new VectorSource({\n      url: './City_Boundary.geojson',\n      format: new GeoJSON(),\n      featureProjection:\"EPSG:4326\"\n    }),\n    style: new Style({\n      color: '#eeeeee',\n      ///style: getFill().setColor(color),\n\n    })\n})*/\n\n/*\nconst vectorlayer=new GeoJSON().readFeatures(geojsonObject, {\n  featureProjection:'EPSG:3857'\n});*/\n\nexport default class SmokerMap extends React.Component{\n  constructor(props){\n    super(props);\n    console.log(this.props);\n    this.mapRef=React.createRef();\n  }\n  componentDidMount(){\n\n    var basemap =new TileLayer({\n      source: new OSM()\n    })\n\n    var vectorstyle = new Style({\n\n      stroke: new Stroke({\n        color:'black',\n        width:1\n      })\n    })\n\n    var vectorlayer = new VectorLayer({\n      \n       source : new VectorSource({\n        url: cityboundary,\n        format: new GeoJSON(),\n        style: vectorstyle\n      })\n      //style: new Style({\n        //need to add stuff here to style the polygon \n        //fill: new Fill({\n          //color: [255,0,0,255]}),//'#eeeeee' [255,0,0,255]\n        \n        ///style: getFill().setColor(color),\n  \n      //}), \n\n    })\n    \n    this.map=new Map({\n      layers: [basemap, vectorlayer],\n      target: \"mapContainer\",\n      view :new View({\n        //projection: 'EPSG:2227',\n        center:fromLonLat([-94.6859,46.7296]),\n        zoom: 7\n      })\n\n    });\n   \n  }\n  render() {\n    console.log(\"-> render App\");\n    return (\n      <div\n        id=\"mapContainer\"\n        ref={this.mapRef}\n        style={{ width: \"100%\", height: \"700px\" }}\n      >\n       \n      </div>\n    );\n  }\n\n\n}\n/*\nconst SmokerMap = ({ counties}) =>{\n    /*\n    const mapStyle={\n        fillColor: \"white\",\n        weight: 1,\n        color: \"black\",\n        fillOpacity: 1,\n    };\n    const onEachCountry = (country, layer) => {\n        layer.options.fillColor = country.properties.color;\n        const name = country.properties.ADMIN;\n        const confirmedText = country.properties.confirmedText;\n        layer.bindPopup(`${name} ${confirmedText}`);\n      };*/\n\n      /*return (\n        <Map style={{ height: \"90vh\" }} zoom={2} center={[-94.6859,46.7296]}>\n          <GeoJSON\n            style={mapStyle}\n            data={countries}\n            onEachFeature={onEachCountry}\n          />\n        </Map>\n      );\n\n      return (\n        <div className=\"map_div\">\n        <Map className=\"smoker_map\" view={{center:fromLonLat([-94.6859,46.7296]),zoom:6}}>\n          <Layers>\n            <layer.Tile></layer.Tile>\n            </Layers>\n    \n        </Map>\n        \n        </div>\n      );\n\n};\nexport default SmokerMap;\n*/\n"]},"metadata":{},"sourceType":"module"}