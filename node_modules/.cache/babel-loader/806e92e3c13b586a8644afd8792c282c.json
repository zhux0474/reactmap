{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Bean } from \"./context/context\";\nimport { BeanStub } from \"./context/beanStub\";\nimport { Constants } from \"./constants/constants\";\nimport { Events } from \"./events\";\n\nvar SortController =\n/** @class */\nfunction (_super) {\n  __extends(SortController, _super);\n\n  function SortController() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SortController_1 = SortController;\n\n  SortController.prototype.progressSort = function (column, multiSort, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    var nextDirection = this.getNextSortDirection(column);\n    this.setSortForColumn(column, nextDirection, multiSort, source);\n  };\n\n  SortController.prototype.setSortForColumn = function (column, sort, multiSort, source) {\n    if (source === void 0) {\n      source = \"api\";\n    } // auto correct - if sort not legal value, then set it to 'no sort' (which is null)\n\n\n    if (sort !== Constants.SORT_ASC && sort !== Constants.SORT_DESC) {\n      sort = null;\n    } // update sort on current col\n\n\n    column.setSort(sort, source);\n    var doingMultiSort = multiSort && !this.gridOptionsWrapper.isSuppressMultiSort(); // clear sort on all columns except this one, and update the icons\n\n    if (!doingMultiSort) {\n      this.clearSortBarThisColumn(column, source);\n    } // sortIndex used for knowing order of cols when multi-col sort\n\n\n    this.updateSortIndex(column);\n    this.dispatchSortChangedEvents();\n  };\n\n  SortController.prototype.updateSortIndex = function (lastColToChange) {\n    // update sortIndex on all sorting cols\n    var allSortedCols = this.getColumnsWithSortingOrdered();\n    var sortIndex = 0;\n    allSortedCols.forEach(function (col) {\n      if (col !== lastColToChange) {\n        col.setSortIndex(sortIndex);\n        sortIndex++;\n      }\n    }); // last col to change always gets the last sort index, it's added to the end\n\n    if (lastColToChange.getSort()) {\n      lastColToChange.setSortIndex(sortIndex);\n    } // clear sort index on all cols not sorting\n\n\n    var allCols = this.columnModel.getPrimaryAndSecondaryAndAutoColumns();\n    allCols.filter(function (col) {\n      return col.getSort() == null;\n    }).forEach(function (col) {\n      return col.setSortIndex();\n    });\n  }; // gets called by API, so if data changes, use can call this, which will end up\n  // working out the sort order again of the rows.\n\n\n  SortController.prototype.onSortChanged = function () {\n    this.dispatchSortChangedEvents();\n  };\n\n  SortController.prototype.isSortActive = function () {\n    // pull out all the columns that have sorting set\n    var allCols = this.columnModel.getPrimaryAndSecondaryAndAutoColumns();\n    var sortedCols = allCols.filter(function (column) {\n      return !!column.getSort();\n    });\n    return sortedCols && sortedCols.length > 0;\n  };\n\n  SortController.prototype.dispatchSortChangedEvents = function () {\n    var event = {\n      type: Events.EVENT_SORT_CHANGED,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n    this.eventService.dispatchEvent(event);\n  };\n\n  SortController.prototype.clearSortBarThisColumn = function (columnToSkip, source) {\n    this.columnModel.getPrimaryAndSecondaryAndAutoColumns().forEach(function (columnToClear) {\n      // Do not clear if either holding shift, or if column in question was clicked\n      if (columnToClear !== columnToSkip) {\n        // setting to 'undefined' as null means 'none' rather than cleared, otherwise issue will arise\n        // if sort order is: ['desc', null , 'asc'], as it will start at null rather than 'desc'.\n        columnToClear.setSort(undefined, source);\n      }\n    });\n  };\n\n  SortController.prototype.getNextSortDirection = function (column) {\n    var sortingOrder;\n\n    if (column.getColDef().sortingOrder) {\n      sortingOrder = column.getColDef().sortingOrder;\n    } else if (this.gridOptionsWrapper.getSortingOrder()) {\n      sortingOrder = this.gridOptionsWrapper.getSortingOrder();\n    } else {\n      sortingOrder = SortController_1.DEFAULT_SORTING_ORDER;\n    }\n\n    if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\n      console.warn(\"ag-grid: sortingOrder must be an array with at least one element, currently it's \" + sortingOrder);\n      return null;\n    }\n\n    var currentIndex = sortingOrder.indexOf(column.getSort());\n    var notInArray = currentIndex < 0;\n    var lastItemInArray = currentIndex == sortingOrder.length - 1;\n    var result;\n\n    if (notInArray || lastItemInArray) {\n      result = sortingOrder[0];\n    } else {\n      result = sortingOrder[currentIndex + 1];\n    } // verify the sort type exists, as the user could provide the sortingOrder, need to make sure it's valid\n\n\n    if (SortController_1.DEFAULT_SORTING_ORDER.indexOf(result) < 0) {\n      console.warn('ag-grid: invalid sort type ' + result);\n      return null;\n    }\n\n    return result;\n  };\n\n  SortController.prototype.getColumnsWithSortingOrdered = function () {\n    // pull out all the columns that have sorting set\n    var allColumnsIncludingAuto = this.columnModel.getPrimaryAndSecondaryAndAutoColumns();\n    var columnsWithSorting = allColumnsIncludingAuto.filter(function (column) {\n      return !!column.getSort();\n    }); // when both cols are missing sortIndex, we use the position of the col in all cols list.\n    // this means if colDefs only have sort, but no sortIndex, we deterministically pick which\n    // cols is sorted by first.\n\n    var allColsIndexes = {};\n    allColumnsIncludingAuto.forEach(function (col, index) {\n      return allColsIndexes[col.getId()] = index;\n    }); // put the columns in order of which one got sorted first\n\n    columnsWithSorting.sort(function (a, b) {\n      var iA = a.getSortIndex();\n      var iB = b.getSortIndex();\n\n      if (iA != null && iB != null) {\n        return iA - iB; // both present, normal comparison\n      } else if (iA == null && iB == null) {\n        // both missing, compare using column positions\n        var posA = allColsIndexes[a.getId()];\n        var posB = allColsIndexes[b.getId()];\n        return posA > posB ? 1 : -1;\n      } else if (iB == null) {\n        return -1; // iB missing\n      } else {\n        return 1; // iA missing\n      }\n    });\n    return columnsWithSorting;\n  }; // used by server side row models, to sent sort to server\n\n\n  SortController.prototype.getSortModel = function () {\n    return this.getColumnsWithSortingOrdered().map(function (column) {\n      return {\n        sort: column.getSort(),\n        colId: column.getId()\n      };\n    });\n  };\n\n  SortController.prototype.getSortOptions = function () {\n    return this.getColumnsWithSortingOrdered().map(function (column) {\n      return {\n        sort: column.getSort(),\n        column: column\n      };\n    });\n  };\n\n  var SortController_1;\n  SortController.DEFAULT_SORTING_ORDER = [Constants.SORT_ASC, Constants.SORT_DESC, null];\n\n  __decorate([Autowired('columnModel')], SortController.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('columnApi')], SortController.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], SortController.prototype, \"gridApi\", void 0);\n\n  SortController = SortController_1 = __decorate([Bean('sortController')], SortController);\n  return SortController;\n}(BeanStub);\n\nexport { SortController };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/sortController.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Bean","BeanStub","Constants","Events","SortController","_super","apply","SortController_1","progressSort","column","multiSort","source","nextDirection","getNextSortDirection","setSortForColumn","sort","SORT_ASC","SORT_DESC","setSort","doingMultiSort","gridOptionsWrapper","isSuppressMultiSort","clearSortBarThisColumn","updateSortIndex","dispatchSortChangedEvents","lastColToChange","allSortedCols","getColumnsWithSortingOrdered","sortIndex","forEach","col","setSortIndex","getSort","allCols","columnModel","getPrimaryAndSecondaryAndAutoColumns","filter","onSortChanged","isSortActive","sortedCols","event","type","EVENT_SORT_CHANGED","api","gridApi","columnApi","eventService","dispatchEvent","columnToSkip","columnToClear","undefined","sortingOrder","getColDef","getSortingOrder","DEFAULT_SORTING_ORDER","isArray","console","warn","currentIndex","indexOf","notInArray","lastItemInArray","result","allColumnsIncludingAuto","columnsWithSorting","allColsIndexes","index","getId","a","iA","getSortIndex","iB","posA","posB","getSortModel","map","colId","getSortOptions"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASM,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;;AACA,IAAIC,cAAc;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAClDlC,EAAAA,SAAS,CAACiC,cAAD,EAAiBC,MAAjB,CAAT;;AACA,WAASD,cAAT,GAA0B;AACtB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBf,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDgB,EAAAA,gBAAgB,GAAGH,cAAnB;;AACAA,EAAAA,cAAc,CAACrB,SAAf,CAAyByB,YAAzB,GAAwC,UAAUC,MAAV,EAAkBC,SAAlB,EAA6BC,MAA7B,EAAqC;AACzE,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAIC,aAAa,GAAG,KAAKC,oBAAL,CAA0BJ,MAA1B,CAApB;AACA,SAAKK,gBAAL,CAAsBL,MAAtB,EAA8BG,aAA9B,EAA6CF,SAA7C,EAAwDC,MAAxD;AACH,GAJD;;AAKAP,EAAAA,cAAc,CAACrB,SAAf,CAAyB+B,gBAAzB,GAA4C,UAAUL,MAAV,EAAkBM,IAAlB,EAAwBL,SAAxB,EAAmCC,MAAnC,EAA2C;AACnF,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB,KADyC,CAEnF;;;AACA,QAAII,IAAI,KAAKb,SAAS,CAACc,QAAnB,IAA+BD,IAAI,KAAKb,SAAS,CAACe,SAAtD,EAAiE;AAC7DF,MAAAA,IAAI,GAAG,IAAP;AACH,KALkF,CAMnF;;;AACAN,IAAAA,MAAM,CAACS,OAAP,CAAeH,IAAf,EAAqBJ,MAArB;AACA,QAAIQ,cAAc,GAAGT,SAAS,IAAI,CAAC,KAAKU,kBAAL,CAAwBC,mBAAxB,EAAnC,CARmF,CASnF;;AACA,QAAI,CAACF,cAAL,EAAqB;AACjB,WAAKG,sBAAL,CAA4Bb,MAA5B,EAAoCE,MAApC;AACH,KAZkF,CAanF;;;AACA,SAAKY,eAAL,CAAqBd,MAArB;AACA,SAAKe,yBAAL;AACH,GAhBD;;AAiBApB,EAAAA,cAAc,CAACrB,SAAf,CAAyBwC,eAAzB,GAA2C,UAAUE,eAAV,EAA2B;AAClE;AACA,QAAIC,aAAa,GAAG,KAAKC,4BAAL,EAApB;AACA,QAAIC,SAAS,GAAG,CAAhB;AACAF,IAAAA,aAAa,CAACG,OAAd,CAAsB,UAAUC,GAAV,EAAe;AACjC,UAAIA,GAAG,KAAKL,eAAZ,EAA6B;AACzBK,QAAAA,GAAG,CAACC,YAAJ,CAAiBH,SAAjB;AACAA,QAAAA,SAAS;AACZ;AACJ,KALD,EAJkE,CAUlE;;AACA,QAAIH,eAAe,CAACO,OAAhB,EAAJ,EAA+B;AAC3BP,MAAAA,eAAe,CAACM,YAAhB,CAA6BH,SAA7B;AACH,KAbiE,CAclE;;;AACA,QAAIK,OAAO,GAAG,KAAKC,WAAL,CAAiBC,oCAAjB,EAAd;AACAF,IAAAA,OAAO,CAACG,MAAR,CAAe,UAAUN,GAAV,EAAe;AAAE,aAAOA,GAAG,CAACE,OAAJ,MAAiB,IAAxB;AAA+B,KAA/D,EAAiEH,OAAjE,CAAyE,UAAUC,GAAV,EAAe;AAAE,aAAOA,GAAG,CAACC,YAAJ,EAAP;AAA4B,KAAtH;AACH,GAjBD,CA5BkD,CA8ClD;AACA;;;AACA3B,EAAAA,cAAc,CAACrB,SAAf,CAAyBsD,aAAzB,GAAyC,YAAY;AACjD,SAAKb,yBAAL;AACH,GAFD;;AAGApB,EAAAA,cAAc,CAACrB,SAAf,CAAyBuD,YAAzB,GAAwC,YAAY;AAChD;AACA,QAAIL,OAAO,GAAG,KAAKC,WAAL,CAAiBC,oCAAjB,EAAd;AACA,QAAII,UAAU,GAAGN,OAAO,CAACG,MAAR,CAAe,UAAU3B,MAAV,EAAkB;AAAE,aAAO,CAAC,CAACA,MAAM,CAACuB,OAAP,EAAT;AAA4B,KAA/D,CAAjB;AACA,WAAOO,UAAU,IAAIA,UAAU,CAAC/C,MAAX,GAAoB,CAAzC;AACH,GALD;;AAMAY,EAAAA,cAAc,CAACrB,SAAf,CAAyByC,yBAAzB,GAAqD,YAAY;AAC7D,QAAIgB,KAAK,GAAG;AACRC,MAAAA,IAAI,EAAEtC,MAAM,CAACuC,kBADL;AAERC,MAAAA,GAAG,EAAE,KAAKC,OAFF;AAGRC,MAAAA,SAAS,EAAE,KAAKA;AAHR,KAAZ;AAKA,SAAKC,YAAL,CAAkBC,aAAlB,CAAgCP,KAAhC;AACH,GAPD;;AAQApC,EAAAA,cAAc,CAACrB,SAAf,CAAyBuC,sBAAzB,GAAkD,UAAU0B,YAAV,EAAwBrC,MAAxB,EAAgC;AAC9E,SAAKuB,WAAL,CAAiBC,oCAAjB,GAAwDN,OAAxD,CAAgE,UAAUoB,aAAV,EAAyB;AACrF;AACA,UAAIA,aAAa,KAAKD,YAAtB,EAAoC;AAChC;AACA;AACAC,QAAAA,aAAa,CAAC/B,OAAd,CAAsBgC,SAAtB,EAAiCvC,MAAjC;AACH;AACJ,KAPD;AAQH,GATD;;AAUAP,EAAAA,cAAc,CAACrB,SAAf,CAAyB8B,oBAAzB,GAAgD,UAAUJ,MAAV,EAAkB;AAC9D,QAAI0C,YAAJ;;AACA,QAAI1C,MAAM,CAAC2C,SAAP,GAAmBD,YAAvB,EAAqC;AACjCA,MAAAA,YAAY,GAAG1C,MAAM,CAAC2C,SAAP,GAAmBD,YAAlC;AACH,KAFD,MAGK,IAAI,KAAK/B,kBAAL,CAAwBiC,eAAxB,EAAJ,EAA+C;AAChDF,MAAAA,YAAY,GAAG,KAAK/B,kBAAL,CAAwBiC,eAAxB,EAAf;AACH,KAFI,MAGA;AACDF,MAAAA,YAAY,GAAG5C,gBAAgB,CAAC+C,qBAAhC;AACH;;AACD,QAAI,CAAC5E,KAAK,CAAC6E,OAAN,CAAcJ,YAAd,CAAD,IAAgCA,YAAY,CAAC3D,MAAb,IAAuB,CAA3D,EAA8D;AAC1DgE,MAAAA,OAAO,CAACC,IAAR,CAAa,sFAAsFN,YAAnG;AACA,aAAO,IAAP;AACH;;AACD,QAAIO,YAAY,GAAGP,YAAY,CAACQ,OAAb,CAAqBlD,MAAM,CAACuB,OAAP,EAArB,CAAnB;AACA,QAAI4B,UAAU,GAAGF,YAAY,GAAG,CAAhC;AACA,QAAIG,eAAe,GAAGH,YAAY,IAAIP,YAAY,CAAC3D,MAAb,GAAsB,CAA5D;AACA,QAAIsE,MAAJ;;AACA,QAAIF,UAAU,IAAIC,eAAlB,EAAmC;AAC/BC,MAAAA,MAAM,GAAGX,YAAY,CAAC,CAAD,CAArB;AACH,KAFD,MAGK;AACDW,MAAAA,MAAM,GAAGX,YAAY,CAACO,YAAY,GAAG,CAAhB,CAArB;AACH,KAxB6D,CAyB9D;;;AACA,QAAInD,gBAAgB,CAAC+C,qBAAjB,CAAuCK,OAAvC,CAA+CG,MAA/C,IAAyD,CAA7D,EAAgE;AAC5DN,MAAAA,OAAO,CAACC,IAAR,CAAa,gCAAgCK,MAA7C;AACA,aAAO,IAAP;AACH;;AACD,WAAOA,MAAP;AACH,GA/BD;;AAgCA1D,EAAAA,cAAc,CAACrB,SAAf,CAAyB4C,4BAAzB,GAAwD,YAAY;AAChE;AACA,QAAIoC,uBAAuB,GAAG,KAAK7B,WAAL,CAAiBC,oCAAjB,EAA9B;AACA,QAAI6B,kBAAkB,GAAGD,uBAAuB,CAAC3B,MAAxB,CAA+B,UAAU3B,MAAV,EAAkB;AAAE,aAAO,CAAC,CAACA,MAAM,CAACuB,OAAP,EAAT;AAA4B,KAA/E,CAAzB,CAHgE,CAIhE;AACA;AACA;;AACA,QAAIiC,cAAc,GAAG,EAArB;AACAF,IAAAA,uBAAuB,CAAClC,OAAxB,CAAgC,UAAUC,GAAV,EAAeoC,KAAf,EAAsB;AAAE,aAAOD,cAAc,CAACnC,GAAG,CAACqC,KAAJ,EAAD,CAAd,GAA8BD,KAArC;AAA6C,KAArG,EARgE,CAShE;;AACAF,IAAAA,kBAAkB,CAACjD,IAAnB,CAAwB,UAAUqD,CAAV,EAAa9F,CAAb,EAAgB;AACpC,UAAI+F,EAAE,GAAGD,CAAC,CAACE,YAAF,EAAT;AACA,UAAIC,EAAE,GAAGjG,CAAC,CAACgG,YAAF,EAAT;;AACA,UAAID,EAAE,IAAI,IAAN,IAAcE,EAAE,IAAI,IAAxB,EAA8B;AAC1B,eAAOF,EAAE,GAAGE,EAAZ,CAD0B,CACV;AACnB,OAFD,MAGK,IAAIF,EAAE,IAAI,IAAN,IAAcE,EAAE,IAAI,IAAxB,EAA8B;AAC/B;AACA,YAAIC,IAAI,GAAGP,cAAc,CAACG,CAAC,CAACD,KAAF,EAAD,CAAzB;AACA,YAAIM,IAAI,GAAGR,cAAc,CAAC3F,CAAC,CAAC6F,KAAF,EAAD,CAAzB;AACA,eAAOK,IAAI,GAAGC,IAAP,GAAc,CAAd,GAAkB,CAAC,CAA1B;AACH,OALI,MAMA,IAAIF,EAAE,IAAI,IAAV,EAAgB;AACjB,eAAO,CAAC,CAAR,CADiB,CACN;AACd,OAFI,MAGA;AACD,eAAO,CAAP,CADC,CACS;AACb;AACJ,KAlBD;AAmBA,WAAOP,kBAAP;AACH,GA9BD,CA3GkD,CA0IlD;;;AACA5D,EAAAA,cAAc,CAACrB,SAAf,CAAyB2F,YAAzB,GAAwC,YAAY;AAChD,WAAO,KAAK/C,4BAAL,GAAoCgD,GAApC,CAAwC,UAAUlE,MAAV,EAAkB;AAAE,aAAQ;AACvEM,QAAAA,IAAI,EAAEN,MAAM,CAACuB,OAAP,EADiE;AAEvE4C,QAAAA,KAAK,EAAEnE,MAAM,CAAC0D,KAAP;AAFgE,OAAR;AAG9D,KAHE,CAAP;AAIH,GALD;;AAMA/D,EAAAA,cAAc,CAACrB,SAAf,CAAyB8F,cAAzB,GAA0C,YAAY;AAClD,WAAO,KAAKlD,4BAAL,GAAoCgD,GAApC,CAAwC,UAAUlE,MAAV,EAAkB;AAAE,aAAQ;AACvEM,QAAAA,IAAI,EAAEN,MAAM,CAACuB,OAAP,EADiE;AAEvEvB,QAAAA,MAAM,EAAEA;AAF+D,OAAR;AAG9D,KAHE,CAAP;AAIH,GALD;;AAMA,MAAIF,gBAAJ;AACAH,EAAAA,cAAc,CAACkD,qBAAf,GAAuC,CAACpD,SAAS,CAACc,QAAX,EAAqBd,SAAS,CAACe,SAA/B,EAA0C,IAA1C,CAAvC;;AACAhC,EAAAA,UAAU,CAAC,CACPc,SAAS,CAAC,aAAD,CADF,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,aAFnB,EAEkC,KAAK,CAFvC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPc,SAAS,CAAC,WAAD,CADF,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,WAFnB,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPc,SAAS,CAAC,SAAD,CADF,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,SAFnB,EAE8B,KAAK,CAFnC,CAAV;;AAGAqB,EAAAA,cAAc,GAAGG,gBAAgB,GAAGtB,UAAU,CAAC,CAC3Ce,IAAI,CAAC,gBAAD,CADuC,CAAD,EAE3CI,cAF2C,CAA9C;AAGA,SAAOA,cAAP;AACH,CAtKmC,CAsKlCH,QAtKkC,CAApC;;AAuKA,SAASG,cAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Bean } from \"./context/context\";\nimport { BeanStub } from \"./context/beanStub\";\nimport { Constants } from \"./constants/constants\";\nimport { Events } from \"./events\";\nvar SortController = /** @class */ (function (_super) {\n    __extends(SortController, _super);\n    function SortController() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SortController_1 = SortController;\n    SortController.prototype.progressSort = function (column, multiSort, source) {\n        if (source === void 0) { source = \"api\"; }\n        var nextDirection = this.getNextSortDirection(column);\n        this.setSortForColumn(column, nextDirection, multiSort, source);\n    };\n    SortController.prototype.setSortForColumn = function (column, sort, multiSort, source) {\n        if (source === void 0) { source = \"api\"; }\n        // auto correct - if sort not legal value, then set it to 'no sort' (which is null)\n        if (sort !== Constants.SORT_ASC && sort !== Constants.SORT_DESC) {\n            sort = null;\n        }\n        // update sort on current col\n        column.setSort(sort, source);\n        var doingMultiSort = multiSort && !this.gridOptionsWrapper.isSuppressMultiSort();\n        // clear sort on all columns except this one, and update the icons\n        if (!doingMultiSort) {\n            this.clearSortBarThisColumn(column, source);\n        }\n        // sortIndex used for knowing order of cols when multi-col sort\n        this.updateSortIndex(column);\n        this.dispatchSortChangedEvents();\n    };\n    SortController.prototype.updateSortIndex = function (lastColToChange) {\n        // update sortIndex on all sorting cols\n        var allSortedCols = this.getColumnsWithSortingOrdered();\n        var sortIndex = 0;\n        allSortedCols.forEach(function (col) {\n            if (col !== lastColToChange) {\n                col.setSortIndex(sortIndex);\n                sortIndex++;\n            }\n        });\n        // last col to change always gets the last sort index, it's added to the end\n        if (lastColToChange.getSort()) {\n            lastColToChange.setSortIndex(sortIndex);\n        }\n        // clear sort index on all cols not sorting\n        var allCols = this.columnModel.getPrimaryAndSecondaryAndAutoColumns();\n        allCols.filter(function (col) { return col.getSort() == null; }).forEach(function (col) { return col.setSortIndex(); });\n    };\n    // gets called by API, so if data changes, use can call this, which will end up\n    // working out the sort order again of the rows.\n    SortController.prototype.onSortChanged = function () {\n        this.dispatchSortChangedEvents();\n    };\n    SortController.prototype.isSortActive = function () {\n        // pull out all the columns that have sorting set\n        var allCols = this.columnModel.getPrimaryAndSecondaryAndAutoColumns();\n        var sortedCols = allCols.filter(function (column) { return !!column.getSort(); });\n        return sortedCols && sortedCols.length > 0;\n    };\n    SortController.prototype.dispatchSortChangedEvents = function () {\n        var event = {\n            type: Events.EVENT_SORT_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    SortController.prototype.clearSortBarThisColumn = function (columnToSkip, source) {\n        this.columnModel.getPrimaryAndSecondaryAndAutoColumns().forEach(function (columnToClear) {\n            // Do not clear if either holding shift, or if column in question was clicked\n            if (columnToClear !== columnToSkip) {\n                // setting to 'undefined' as null means 'none' rather than cleared, otherwise issue will arise\n                // if sort order is: ['desc', null , 'asc'], as it will start at null rather than 'desc'.\n                columnToClear.setSort(undefined, source);\n            }\n        });\n    };\n    SortController.prototype.getNextSortDirection = function (column) {\n        var sortingOrder;\n        if (column.getColDef().sortingOrder) {\n            sortingOrder = column.getColDef().sortingOrder;\n        }\n        else if (this.gridOptionsWrapper.getSortingOrder()) {\n            sortingOrder = this.gridOptionsWrapper.getSortingOrder();\n        }\n        else {\n            sortingOrder = SortController_1.DEFAULT_SORTING_ORDER;\n        }\n        if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\n            console.warn(\"ag-grid: sortingOrder must be an array with at least one element, currently it's \" + sortingOrder);\n            return null;\n        }\n        var currentIndex = sortingOrder.indexOf(column.getSort());\n        var notInArray = currentIndex < 0;\n        var lastItemInArray = currentIndex == sortingOrder.length - 1;\n        var result;\n        if (notInArray || lastItemInArray) {\n            result = sortingOrder[0];\n        }\n        else {\n            result = sortingOrder[currentIndex + 1];\n        }\n        // verify the sort type exists, as the user could provide the sortingOrder, need to make sure it's valid\n        if (SortController_1.DEFAULT_SORTING_ORDER.indexOf(result) < 0) {\n            console.warn('ag-grid: invalid sort type ' + result);\n            return null;\n        }\n        return result;\n    };\n    SortController.prototype.getColumnsWithSortingOrdered = function () {\n        // pull out all the columns that have sorting set\n        var allColumnsIncludingAuto = this.columnModel.getPrimaryAndSecondaryAndAutoColumns();\n        var columnsWithSorting = allColumnsIncludingAuto.filter(function (column) { return !!column.getSort(); });\n        // when both cols are missing sortIndex, we use the position of the col in all cols list.\n        // this means if colDefs only have sort, but no sortIndex, we deterministically pick which\n        // cols is sorted by first.\n        var allColsIndexes = {};\n        allColumnsIncludingAuto.forEach(function (col, index) { return allColsIndexes[col.getId()] = index; });\n        // put the columns in order of which one got sorted first\n        columnsWithSorting.sort(function (a, b) {\n            var iA = a.getSortIndex();\n            var iB = b.getSortIndex();\n            if (iA != null && iB != null) {\n                return iA - iB; // both present, normal comparison\n            }\n            else if (iA == null && iB == null) {\n                // both missing, compare using column positions\n                var posA = allColsIndexes[a.getId()];\n                var posB = allColsIndexes[b.getId()];\n                return posA > posB ? 1 : -1;\n            }\n            else if (iB == null) {\n                return -1; // iB missing\n            }\n            else {\n                return 1; // iA missing\n            }\n        });\n        return columnsWithSorting;\n    };\n    // used by server side row models, to sent sort to server\n    SortController.prototype.getSortModel = function () {\n        return this.getColumnsWithSortingOrdered().map(function (column) { return ({\n            sort: column.getSort(),\n            colId: column.getId()\n        }); });\n    };\n    SortController.prototype.getSortOptions = function () {\n        return this.getColumnsWithSortingOrdered().map(function (column) { return ({\n            sort: column.getSort(),\n            column: column\n        }); });\n    };\n    var SortController_1;\n    SortController.DEFAULT_SORTING_ORDER = [Constants.SORT_ASC, Constants.SORT_DESC, null];\n    __decorate([\n        Autowired('columnModel')\n    ], SortController.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], SortController.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], SortController.prototype, \"gridApi\", void 0);\n    SortController = SortController_1 = __decorate([\n        Bean('sortController')\n    ], SortController);\n    return SortController;\n}(BeanStub));\nexport { SortController };\n"]},"metadata":{},"sourceType":"module"}