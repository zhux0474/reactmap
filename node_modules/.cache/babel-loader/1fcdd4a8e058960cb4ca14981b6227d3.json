{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar reUnescapedHtml = /[&<>\"']/g;\n/**\n * HTML Escapes.\n */\n\nvar HTML_ESCAPES = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n/**\n * It encodes any string in UTF-8 format\n * taken from https://github.com/mathiasbynens/utf8.js\n * @param {string} s\n * @returns {string}\n */\n\nexport function utf8_encode(s) {\n  var stringFromCharCode = String.fromCharCode;\n\n  function ucs2decode(string) {\n    var output = [];\n\n    if (!string) {\n      return [];\n    }\n\n    var len = string.length;\n    var counter = 0;\n    var value;\n    var extra;\n\n    while (counter < len) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < len) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n\n  function checkScalarValue(point) {\n    if (point >= 0xD800 && point <= 0xDFFF) {\n      throw Error('Lone surrogate U+' + point.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n  }\n\n  function createByte(point, shift) {\n    return stringFromCharCode(point >> shift & 0x3F | 0x80);\n  }\n\n  function encodeCodePoint(point) {\n    if (point >= 0 && point <= 31 && point !== 10) {\n      var convertedCode = point.toString(16).toUpperCase();\n      var paddedCode = padStart(convertedCode, 4, '0');\n      return \"_x\" + paddedCode + \"_\";\n    }\n\n    if ((point & 0xFFFFFF80) == 0) {\n      // 1-byte sequence\n      return stringFromCharCode(point);\n    }\n\n    var symbol = '';\n\n    if ((point & 0xFFFFF800) == 0) {\n      // 2-byte sequence\n      symbol = stringFromCharCode(point >> 6 & 0x1F | 0xC0);\n    } else if ((point & 0xFFFF0000) == 0) {\n      // 3-byte sequence\n      checkScalarValue(point);\n      symbol = stringFromCharCode(point >> 12 & 0x0F | 0xE0);\n      symbol += createByte(point, 6);\n    } else if ((point & 0xFFE00000) == 0) {\n      // 4-byte sequence\n      symbol = stringFromCharCode(point >> 18 & 0x07 | 0xF0);\n      symbol += createByte(point, 12);\n      symbol += createByte(point, 6);\n    }\n\n    symbol += stringFromCharCode(point & 0x3F | 0x80);\n    return symbol;\n  }\n\n  var codePoints = ucs2decode(s);\n  var length = codePoints.length;\n  var index = -1;\n  var codePoint;\n  var byteString = '';\n\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint);\n  }\n\n  return byteString;\n}\n/**\n * @param str The string to be repeated\n * @param len The size of the output string\n * @returns A string with size len created from repeated `str`.\n */\n\nexport function stringRepeat(str, len) {\n  len = Math.floor(len);\n\n  if (str.length === 0 || len === 0) {\n    return '';\n  }\n\n  var maxCount = str.length * len;\n  len = Math.floor(Math.log(len) / Math.log(2));\n\n  while (len) {\n    str += str;\n    len--;\n  }\n\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\n/**\n * @param str The string to be padded\n * @param totalLength The final length needed\n * @param padStr The string to generate the padding\n * @returns The padded string\n */\n\nexport function padStart(str, totalLength, padStr) {\n  if (str.length > totalLength) {\n    return str;\n  }\n\n  totalLength -= str.length;\n\n  if (totalLength > padStr.length) {\n    padStr += stringRepeat(padStr, totalLength / padStr.length);\n  }\n\n  return padStr.slice(0, totalLength) + str;\n}\n/**\n * Converts a camelCase string into hyphenated string\n * from https://gist.github.com/youssman/745578062609e8acac9f\n * @param {string} str\n * @return {string}\n */\n\nexport function camelCaseToHyphen(str) {\n  if (str === null || str === undefined) {\n    return null;\n  }\n\n  return str.replace(/([A-Z])/g, function (g) {\n    return '-' + g[0].toLowerCase();\n  });\n}\n/**\n * Converts a hyphenated string into camelCase string\n * from https://stackoverflow.com/questions/6660977/convert-hyphens-to-camel-case-camelcase\n * @param {string} str\n * @return {string}\n */\n\nexport function hyphenToCamelCase(str) {\n  if (str === null || str === undefined) {\n    return null;\n  }\n\n  return str.replace(/-([a-z])/g, function (g) {\n    return g[1].toUpperCase();\n  });\n}\nexport function capitalise(str) {\n  return str[0].toUpperCase() + str.substr(1).toLowerCase();\n}\nexport function escapeString(toEscape) {\n  // we call toString() twice, in case value is an object, where user provides\n  // a toString() method, and first call to toString() returns back something other\n  // than a string (eg a number to render)\n  return toEscape == null ? null : toEscape.toString().toString().replace(reUnescapedHtml, function (chr) {\n    return HTML_ESCAPES[chr];\n  });\n}\n/**\n * Converts a camelCase string into regular text\n * from: https://stackoverflow.com/questions/15369566/putting-space-in-camel-case-string-using-regular-expression\n * @param {string} camelCase\n * @return {string}\n */\n\nexport function camelCaseToHumanText(camelCase) {\n  if (!camelCase || camelCase == null) {\n    return null;\n  }\n\n  var rex = /([A-Z])([A-Z])([a-z])|([a-z])([A-Z])/g;\n  var words = camelCase.replace(rex, '$1$4 $2$3$5').replace('.', ' ').split(' ');\n  return words.map(function (word) {\n    return word.substring(0, 1).toUpperCase() + (word.length > 1 ? word.substring(1, word.length) : '');\n  }).join(' ');\n}\nexport function startsWith(str, matchStart) {\n  if (str === matchStart) {\n    return true;\n  }\n\n  return str != null && str.slice(0, matchStart.length) === matchStart;\n}","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/utils/string.js"],"names":["reUnescapedHtml","HTML_ESCAPES","utf8_encode","s","stringFromCharCode","String","fromCharCode","ucs2decode","string","output","len","length","counter","value","extra","charCodeAt","push","checkScalarValue","point","Error","toString","toUpperCase","createByte","shift","encodeCodePoint","convertedCode","paddedCode","padStart","symbol","codePoints","index","codePoint","byteString","stringRepeat","str","Math","floor","maxCount","log","substring","totalLength","padStr","slice","camelCaseToHyphen","undefined","replace","g","toLowerCase","hyphenToCamelCase","capitalise","substr","escapeString","toEscape","chr","camelCaseToHumanText","camelCase","rex","words","split","map","word","join","startsWith","matchStart"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar reUnescapedHtml = /[&<>\"']/g;\n/**\n * HTML Escapes.\n */\nvar HTML_ESCAPES = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\n/**\n * It encodes any string in UTF-8 format\n * taken from https://github.com/mathiasbynens/utf8.js\n * @param {string} s\n * @returns {string}\n */\nexport function utf8_encode(s) {\n    var stringFromCharCode = String.fromCharCode;\n    function ucs2decode(string) {\n        var output = [];\n        if (!string) {\n            return [];\n        }\n        var len = string.length;\n        var counter = 0;\n        var value;\n        var extra;\n        while (counter < len) {\n            value = string.charCodeAt(counter++);\n            if (value >= 0xD800 && value <= 0xDBFF && counter < len) {\n                // high surrogate, and there is a next character\n                extra = string.charCodeAt(counter++);\n                if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n                    output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n                }\n                else {\n                    // unmatched surrogate; only append this code unit, in case the next\n                    // code unit is the high surrogate of a surrogate pair\n                    output.push(value);\n                    counter--;\n                }\n            }\n            else {\n                output.push(value);\n            }\n        }\n        return output;\n    }\n    function checkScalarValue(point) {\n        if (point >= 0xD800 && point <= 0xDFFF) {\n            throw Error('Lone surrogate U+' + point.toString(16).toUpperCase() +\n                ' is not a scalar value');\n        }\n    }\n    function createByte(point, shift) {\n        return stringFromCharCode(((point >> shift) & 0x3F) | 0x80);\n    }\n    function encodeCodePoint(point) {\n        if ((point >= 0 && point <= 31 && point !== 10)) {\n            var convertedCode = point.toString(16).toUpperCase();\n            var paddedCode = padStart(convertedCode, 4, '0');\n            return \"_x\" + paddedCode + \"_\";\n        }\n        if ((point & 0xFFFFFF80) == 0) { // 1-byte sequence\n            return stringFromCharCode(point);\n        }\n        var symbol = '';\n        if ((point & 0xFFFFF800) == 0) { // 2-byte sequence\n            symbol = stringFromCharCode(((point >> 6) & 0x1F) | 0xC0);\n        }\n        else if ((point & 0xFFFF0000) == 0) { // 3-byte sequence\n            checkScalarValue(point);\n            symbol = stringFromCharCode(((point >> 12) & 0x0F) | 0xE0);\n            symbol += createByte(point, 6);\n        }\n        else if ((point & 0xFFE00000) == 0) { // 4-byte sequence\n            symbol = stringFromCharCode(((point >> 18) & 0x07) | 0xF0);\n            symbol += createByte(point, 12);\n            symbol += createByte(point, 6);\n        }\n        symbol += stringFromCharCode((point & 0x3F) | 0x80);\n        return symbol;\n    }\n    var codePoints = ucs2decode(s);\n    var length = codePoints.length;\n    var index = -1;\n    var codePoint;\n    var byteString = '';\n    while (++index < length) {\n        codePoint = codePoints[index];\n        byteString += encodeCodePoint(codePoint);\n    }\n    return byteString;\n}\n/**\n * @param str The string to be repeated\n * @param len The size of the output string\n * @returns A string with size len created from repeated `str`.\n */\nexport function stringRepeat(str, len) {\n    len = Math.floor(len);\n    if (str.length === 0 || len === 0) {\n        return '';\n    }\n    var maxCount = str.length * len;\n    len = Math.floor(Math.log(len) / Math.log(2));\n    while (len) {\n        str += str;\n        len--;\n    }\n    str += str.substring(0, maxCount - str.length);\n    return str;\n}\n/**\n * @param str The string to be padded\n * @param totalLength The final length needed\n * @param padStr The string to generate the padding\n * @returns The padded string\n */\nexport function padStart(str, totalLength, padStr) {\n    if (str.length > totalLength) {\n        return str;\n    }\n    totalLength -= str.length;\n    if (totalLength > padStr.length) {\n        padStr += stringRepeat(padStr, totalLength / padStr.length);\n    }\n    return padStr.slice(0, totalLength) + str;\n}\n/**\n * Converts a camelCase string into hyphenated string\n * from https://gist.github.com/youssman/745578062609e8acac9f\n * @param {string} str\n * @return {string}\n */\nexport function camelCaseToHyphen(str) {\n    if (str === null || str === undefined) {\n        return null;\n    }\n    return str.replace(/([A-Z])/g, function (g) { return '-' + g[0].toLowerCase(); });\n}\n/**\n * Converts a hyphenated string into camelCase string\n * from https://stackoverflow.com/questions/6660977/convert-hyphens-to-camel-case-camelcase\n * @param {string} str\n * @return {string}\n */\nexport function hyphenToCamelCase(str) {\n    if (str === null || str === undefined) {\n        return null;\n    }\n    return str.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\n}\nexport function capitalise(str) {\n    return str[0].toUpperCase() + str.substr(1).toLowerCase();\n}\nexport function escapeString(toEscape) {\n    // we call toString() twice, in case value is an object, where user provides\n    // a toString() method, and first call to toString() returns back something other\n    // than a string (eg a number to render)\n    return toEscape == null ? null : toEscape.toString().toString().replace(reUnescapedHtml, function (chr) { return HTML_ESCAPES[chr]; });\n}\n/**\n * Converts a camelCase string into regular text\n * from: https://stackoverflow.com/questions/15369566/putting-space-in-camel-case-string-using-regular-expression\n * @param {string} camelCase\n * @return {string}\n */\nexport function camelCaseToHumanText(camelCase) {\n    if (!camelCase || camelCase == null) {\n        return null;\n    }\n    var rex = /([A-Z])([A-Z])([a-z])|([a-z])([A-Z])/g;\n    var words = camelCase.replace(rex, '$1$4 $2$3$5').replace('.', ' ').split(' ');\n    return words.map(function (word) { return word.substring(0, 1).toUpperCase() + ((word.length > 1) ? word.substring(1, word.length) : ''); }).join(' ');\n}\nexport function startsWith(str, matchStart) {\n    if (str === matchStart) {\n        return true;\n    }\n    return str != null && str.slice(0, matchStart.length) === matchStart;\n}\n"]},"metadata":{},"sourceType":"module"}