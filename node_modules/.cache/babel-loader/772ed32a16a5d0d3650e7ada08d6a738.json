{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Constants } from \"../constants/constants\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { Autowired, Bean, PostConstruct } from \"../context/context\";\n\nvar RowNodeEventThrottle =\n/** @class */\nfunction (_super) {\n  __extends(RowNodeEventThrottle, _super);\n\n  function RowNodeEventThrottle() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.events = [];\n    return _this;\n  }\n\n  RowNodeEventThrottle.prototype.postConstruct = function () {\n    if (this.rowModel.getType() == Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n      this.clientSideRowModel = this.rowModel;\n    }\n  }; // because the user can call rowNode.setExpanded() many times in one VM turn,\n  // we throttle the calls to ClientSideRowModel using animationFrameService. this means for 100\n  // row nodes getting expanded, we only update the CSRM once, and then we fire all events after\n  // CSRM has updated.\n  // \n  // if we did not do this, then the user could call setExpanded on 100+ rows, causing the grid\n  // to re-render 100+ times, which would be a performance lag.\n  //    \n  // we use animationFrameService\n  // rather than _.debounce() so this will get done if anyone flushes the animationFrameService\n  // (eg user calls api.ensureRowVisible(), which in turn flushes ).\n\n\n  RowNodeEventThrottle.prototype.dispatchExpanded = function (event) {\n    var _this = this;\n\n    this.events.push(event);\n\n    if (this.dispatchExpandedDebounced == null) {\n      this.dispatchExpandedDebounced = this.animationFrameService.debounce(function () {\n        _this.clientSideRowModel && _this.clientSideRowModel.onRowGroupOpened();\n\n        _this.events.forEach(function (e) {\n          return _this.eventService.dispatchEvent(e);\n        });\n\n        _this.events = [];\n      });\n    }\n\n    this.dispatchExpandedDebounced();\n  };\n\n  __decorate([Autowired('animationFrameService')], RowNodeEventThrottle.prototype, \"animationFrameService\", void 0);\n\n  __decorate([Autowired('rowModel')], RowNodeEventThrottle.prototype, \"rowModel\", void 0);\n\n  __decorate([PostConstruct], RowNodeEventThrottle.prototype, \"postConstruct\", null);\n\n  RowNodeEventThrottle = __decorate([Bean('rowNodeEventThrottle')], RowNodeEventThrottle);\n  return RowNodeEventThrottle;\n}(BeanStub);\n\nexport { RowNodeEventThrottle };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/entities/rowNodeEventThrottle.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Constants","BeanStub","Autowired","Bean","PostConstruct","RowNodeEventThrottle","_super","_this","apply","events","postConstruct","rowModel","getType","ROW_MODEL_TYPE_CLIENT_SIDE","clientSideRowModel","dispatchExpanded","event","push","dispatchExpandedDebounced","animationFrameService","debounce","onRowGroupOpened","forEach","e","eventService","dispatchEvent"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Constants } from \"../constants/constants\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { Autowired, Bean, PostConstruct } from \"../context/context\";\nvar RowNodeEventThrottle = /** @class */ (function (_super) {\n    __extends(RowNodeEventThrottle, _super);\n    function RowNodeEventThrottle() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.events = [];\n        return _this;\n    }\n    RowNodeEventThrottle.prototype.postConstruct = function () {\n        if (this.rowModel.getType() == Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            this.clientSideRowModel = this.rowModel;\n        }\n    };\n    // because the user can call rowNode.setExpanded() many times in one VM turn,\n    // we throttle the calls to ClientSideRowModel using animationFrameService. this means for 100\n    // row nodes getting expanded, we only update the CSRM once, and then we fire all events after\n    // CSRM has updated.\n    // \n    // if we did not do this, then the user could call setExpanded on 100+ rows, causing the grid\n    // to re-render 100+ times, which would be a performance lag.\n    //    \n    // we use animationFrameService\n    // rather than _.debounce() so this will get done if anyone flushes the animationFrameService\n    // (eg user calls api.ensureRowVisible(), which in turn flushes ).\n    RowNodeEventThrottle.prototype.dispatchExpanded = function (event) {\n        var _this = this;\n        this.events.push(event);\n        if (this.dispatchExpandedDebounced == null) {\n            this.dispatchExpandedDebounced = this.animationFrameService.debounce(function () {\n                _this.clientSideRowModel && _this.clientSideRowModel.onRowGroupOpened();\n                _this.events.forEach(function (e) { return _this.eventService.dispatchEvent(e); });\n                _this.events = [];\n            });\n        }\n        this.dispatchExpandedDebounced();\n    };\n    __decorate([\n        Autowired('animationFrameService')\n    ], RowNodeEventThrottle.prototype, \"animationFrameService\", void 0);\n    __decorate([\n        Autowired('rowModel')\n    ], RowNodeEventThrottle.prototype, \"rowModel\", void 0);\n    __decorate([\n        PostConstruct\n    ], RowNodeEventThrottle.prototype, \"postConstruct\", null);\n    RowNodeEventThrottle = __decorate([\n        Bean('rowNodeEventThrottle')\n    ], RowNodeEventThrottle);\n    return RowNodeEventThrottle;\n}(BeanStub));\nexport { RowNodeEventThrottle };\n"]},"metadata":{},"sourceType":"module"}