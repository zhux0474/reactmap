{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { getFunctionName } from '../utils/function';\nexport function QuerySelector(selector) {\n  return querySelectorFunc.bind(this, selector, undefined);\n}\nexport function RefSelector(ref) {\n  return querySelectorFunc.bind(this, \"[ref=\" + ref + \"]\", ref);\n}\n\nfunction querySelectorFunc(selector, refSelector, classPrototype, methodOrAttributeName, index) {\n  if (selector === null) {\n    console.error('AG Grid: QuerySelector selector should not be null');\n    return;\n  }\n\n  if (typeof index === 'number') {\n    console.error('AG Grid: QuerySelector should be on an attribute');\n    return;\n  }\n\n  addToObjectProps(classPrototype, 'querySelectors', {\n    attributeName: methodOrAttributeName,\n    querySelector: selector,\n    refSelector: refSelector\n  });\n} // // think we should take this out, put property bindings on the\n// export function Method(eventName?: string): Function {\n//     return methodFunc.bind(this, eventName);\n// }\n//\n// function methodFunc(alias: string, target: Object, methodName: string) {\n//     if (alias === null) {\n//         console.error(\"AG Grid: EventListener eventName should not be null\");\n//         return;\n//     }\n//\n//     addToObjectProps(target, 'methods', {\n//         methodName: methodName,\n//         alias: alias\n//     });\n// }\n\n\nfunction addToObjectProps(target, key, value) {\n  // it's an attribute on the class\n  var props = getOrCreateProps(target, getFunctionName(target.constructor));\n\n  if (!props[key]) {\n    props[key] = [];\n  }\n\n  props[key].push(value);\n}\n\nfunction getOrCreateProps(target, instanceName) {\n  if (!target.__agComponentMetaData) {\n    target.__agComponentMetaData = {};\n  }\n\n  if (!target.__agComponentMetaData[instanceName]) {\n    target.__agComponentMetaData[instanceName] = {};\n  }\n\n  return target.__agComponentMetaData[instanceName];\n}","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/widgets/componentAnnotations.js"],"names":["getFunctionName","QuerySelector","selector","querySelectorFunc","bind","undefined","RefSelector","ref","refSelector","classPrototype","methodOrAttributeName","index","console","error","addToObjectProps","attributeName","querySelector","target","key","value","props","getOrCreateProps","constructor","push","instanceName","__agComponentMetaData"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,mBAAhC;AACA,OAAO,SAASC,aAAT,CAAuBC,QAAvB,EAAiC;AACpC,SAAOC,iBAAiB,CAACC,IAAlB,CAAuB,IAAvB,EAA6BF,QAA7B,EAAuCG,SAAvC,CAAP;AACH;AACD,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AAC7B,SAAOJ,iBAAiB,CAACC,IAAlB,CAAuB,IAAvB,EAA6B,UAAUG,GAAV,GAAgB,GAA7C,EAAkDA,GAAlD,CAAP;AACH;;AACD,SAASJ,iBAAT,CAA2BD,QAA3B,EAAqCM,WAArC,EAAkDC,cAAlD,EAAkEC,qBAAlE,EAAyFC,KAAzF,EAAgG;AAC5F,MAAIT,QAAQ,KAAK,IAAjB,EAAuB;AACnBU,IAAAA,OAAO,CAACC,KAAR,CAAc,oDAAd;AACA;AACH;;AACD,MAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;AAC3BC,IAAAA,OAAO,CAACC,KAAR,CAAc,kDAAd;AACA;AACH;;AACDC,EAAAA,gBAAgB,CAACL,cAAD,EAAiB,gBAAjB,EAAmC;AAC/CM,IAAAA,aAAa,EAAEL,qBADgC;AAE/CM,IAAAA,aAAa,EAAEd,QAFgC;AAG/CM,IAAAA,WAAW,EAAEA;AAHkC,GAAnC,CAAhB;AAKH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,gBAAT,CAA0BG,MAA1B,EAAkCC,GAAlC,EAAuCC,KAAvC,EAA8C;AAC1C;AACA,MAAIC,KAAK,GAAGC,gBAAgB,CAACJ,MAAD,EAASjB,eAAe,CAACiB,MAAM,CAACK,WAAR,CAAxB,CAA5B;;AACA,MAAI,CAACF,KAAK,CAACF,GAAD,CAAV,EAAiB;AACbE,IAAAA,KAAK,CAACF,GAAD,CAAL,GAAa,EAAb;AACH;;AACDE,EAAAA,KAAK,CAACF,GAAD,CAAL,CAAWK,IAAX,CAAgBJ,KAAhB;AACH;;AACD,SAASE,gBAAT,CAA0BJ,MAA1B,EAAkCO,YAAlC,EAAgD;AAC5C,MAAI,CAACP,MAAM,CAACQ,qBAAZ,EAAmC;AAC/BR,IAAAA,MAAM,CAACQ,qBAAP,GAA+B,EAA/B;AACH;;AACD,MAAI,CAACR,MAAM,CAACQ,qBAAP,CAA6BD,YAA7B,CAAL,EAAiD;AAC7CP,IAAAA,MAAM,CAACQ,qBAAP,CAA6BD,YAA7B,IAA6C,EAA7C;AACH;;AACD,SAAOP,MAAM,CAACQ,qBAAP,CAA6BD,YAA7B,CAAP;AACH","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { getFunctionName } from '../utils/function';\nexport function QuerySelector(selector) {\n    return querySelectorFunc.bind(this, selector, undefined);\n}\nexport function RefSelector(ref) {\n    return querySelectorFunc.bind(this, \"[ref=\" + ref + \"]\", ref);\n}\nfunction querySelectorFunc(selector, refSelector, classPrototype, methodOrAttributeName, index) {\n    if (selector === null) {\n        console.error('AG Grid: QuerySelector selector should not be null');\n        return;\n    }\n    if (typeof index === 'number') {\n        console.error('AG Grid: QuerySelector should be on an attribute');\n        return;\n    }\n    addToObjectProps(classPrototype, 'querySelectors', {\n        attributeName: methodOrAttributeName,\n        querySelector: selector,\n        refSelector: refSelector\n    });\n}\n// // think we should take this out, put property bindings on the\n// export function Method(eventName?: string): Function {\n//     return methodFunc.bind(this, eventName);\n// }\n//\n// function methodFunc(alias: string, target: Object, methodName: string) {\n//     if (alias === null) {\n//         console.error(\"AG Grid: EventListener eventName should not be null\");\n//         return;\n//     }\n//\n//     addToObjectProps(target, 'methods', {\n//         methodName: methodName,\n//         alias: alias\n//     });\n// }\nfunction addToObjectProps(target, key, value) {\n    // it's an attribute on the class\n    var props = getOrCreateProps(target, getFunctionName(target.constructor));\n    if (!props[key]) {\n        props[key] = [];\n    }\n    props[key].push(value);\n}\nfunction getOrCreateProps(target, instanceName) {\n    if (!target.__agComponentMetaData) {\n        target.__agComponentMetaData = {};\n    }\n    if (!target.__agComponentMetaData[instanceName]) {\n        target.__agComponentMetaData[instanceName] = {};\n    }\n    return target.__agComponentMetaData[instanceName];\n}\n"]},"metadata":{},"sourceType":"module"}