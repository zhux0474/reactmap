{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _isNil2 = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _Vector = _interopRequireDefault(require(\"ol/layer/Vector\"));\n\nvar _Vector2 = _interopRequireDefault(require(\"ol/source/Vector\"));\n\nvar _Collection = _interopRequireDefault(require(\"ol/Collection\"));\n\nvar _MultiPolygon = _interopRequireDefault(require(\"ol/geom/MultiPolygon\"));\n\nvar _MultiLineString = _interopRequireDefault(require(\"ol/geom/MultiLineString\"));\n\nvar _Style = _interopRequireDefault(require(\"ol/style/Style\"));\n\nvar _Stroke = _interopRequireDefault(require(\"ol/style/Stroke\"));\n\nvar _Fill = _interopRequireDefault(require(\"ol/style/Fill\"));\n\nvar _Circle = _interopRequireDefault(require(\"ol/style/Circle\"));\n\nvar _Draw = _interopRequireDefault(require(\"ol/interaction/Draw\"));\n\nvar _Observable = require(\"ol/Observable\");\n\nvar _Overlay = _interopRequireDefault(require(\"ol/Overlay\"));\n\nvar _GeometryType = _interopRequireDefault(require(\"ol/geom/GeometryType\"));\n\nvar _OverlayPositioning = _interopRequireDefault(require(\"ol/OverlayPositioning\"));\n\nvar _MeasureUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/MeasureUtil/MeasureUtil\"));\n\nvar _MapUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/MapUtil/MapUtil\"));\n\nvar _ToggleButton = _interopRequireDefault(require(\"../ToggleButton/ToggleButton\"));\n\nvar _constants = require(\"../../constants\");\n\nrequire(\"./MeasureButton.less\");\n\nvar _Polygon = _interopRequireDefault(require(\"ol/geom/Polygon\"));\n\nvar _LineString = _interopRequireDefault(require(\"ol/geom/LineString\"));\n\nvar _excluded = [\"className\", \"map\", \"measureType\", \"measureLayerName\", \"fillColor\", \"strokeColor\", \"showMeasureInfoOnClickedPoints\", \"showHelpTooltip\", \"multipleDrawing\", \"clickToDrawText\", \"continuePolygonMsg\", \"continueLineMsg\", \"continueAngleMsg\", \"decimalPlacesInTooltips\", \"measureTooltipCssClasses\", \"onToggle\"];\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * The MeasureButton.\n *\n * @class The MeasureButton\n * @extends React.Component\n */\n\n\nvar MeasureButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(MeasureButton, _React$Component);\n\n  var _super = _createSuper(MeasureButton);\n  /**\n   * The default properties.\n   */\n\n  /**\n   * The className added to this component.\n   *\n   * @private\n   */\n\n  /**\n   * Currently drawn feature.\n   *\n   * @private\n   */\n\n  /**\n   * Overlay to show the measurement.\n   *\n   * @private\n   */\n\n  /**\n   * Overlay to show the help messages.\n   *\n   * @private\n   */\n\n  /**\n   * The help tooltip element.\n   *\n   * @private\n   */\n\n  /**\n   * The measure tooltip element.\n   *\n   * @private\n   */\n\n  /**\n   * An array of created overlays we use for the tooltips. Used to eventually\n   * clean up everything we added.\n   *\n   * @private\n   */\n\n  /**\n   * An array of created divs we use for the tooltips. Used to eventually\n   * clean up everything we added.\n   *\n   * @private\n   */\n\n  /**\n   * An object holding keyed `OlEventsKey` instances returned by the `on`\n   * method of `OlObservable`. These keys are used to unbind temporary\n   * listeners on events of the `OlInteractionDraw` or `OlMap`. The keys\n   * are the names of the events on the various objects. The `click` key is\n   * not always bound, but only for certain #measureType values.\n   *\n   * In #cleanup, we unbind all events we have bound so as to not leak\n   * memory, and to ensure we have no concurring listeners being active at a\n   * time (E.g. when multiple measure buttons are in an application).\n   *\n   * @private\n   */\n\n  /**\n   * The vector layer showing the geometries added by the draw interaction.\n   *\n   * @private\n   */\n\n  /**\n   * The draw interaction used to draw the geometries to measure.\n   *\n   * @private\n   */\n\n  /**\n   * Creates the MeasureButton.\n   *\n   * @constructs MeasureButton\n   */\n\n\n  function MeasureButton(props) {\n    var _this;\n\n    _classCallCheck(this, MeasureButton);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"measurebutton\"));\n\n    _defineProperty(_assertThisInitialized(_this), \"_feature\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measureTooltip\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_helpTooltip\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_helpTooltipElement\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measureTooltipElement\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_createdTooltipOverlays\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"_createdTooltipDivs\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"_eventKeys\", {\n      drawstart: undefined,\n      drawend: undefined,\n      pointermove: undefined,\n      click: undefined,\n      change: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_measureLayer\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_drawInteraction\", null);\n\n    _this.onDrawInteractionActiveChange = _this.onDrawInteractionActiveChange.bind(_assertThisInitialized(_this));\n    _this.onToggle = _this.onToggle.bind(_assertThisInitialized(_this));\n    _this.onDrawStart = _this.onDrawStart.bind(_assertThisInitialized(_this));\n    _this.onDrawEnd = _this.onDrawEnd.bind(_assertThisInitialized(_this));\n    _this.onDrawInteractionGeometryChange = _this.onDrawInteractionGeometryChange.bind(_assertThisInitialized(_this));\n    _this.onMapPointerMove = _this.onMapPointerMove.bind(_assertThisInitialized(_this));\n    _this.onMapClick = _this.onMapClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * `componentDidMount` method of the MeasureButton.\n   *\n   * @method\n   */\n\n\n  _createClass(MeasureButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createMeasureLayer();\n      this.createDrawInteraction();\n    }\n    /**\n     * Ensures that component is properly cleaned up on unmount.\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.pressed) {\n        this.onToggle(false);\n      }\n    }\n    /**\n     * Called when the button is toggled, this method ensures that everything\n     * is cleaned up when unpressed, and that measuring can start when pressed.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"onToggle\",\n    value: function onToggle(pressed) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          map = _this$props.map,\n          onToggle = _this$props.onToggle;\n      this.cleanup();\n      onToggle(pressed);\n\n      if (pressed && this._drawInteraction) {\n        this._drawInteraction.setActive(pressed);\n\n        this._eventKeys.drawstart = this._drawInteraction.on('drawstart', function (e) {\n          return _this2.onDrawStart(e);\n        });\n        this._eventKeys.drawend = this._drawInteraction.on('drawend', function (e) {\n          return _this2.onDrawEnd(e);\n        });\n        this._eventKeys.pointermove = map.on('pointermove', function (e) {\n          return _this2.onMapPointerMove(e);\n        });\n      }\n    }\n    /**\n     * Creates measure vector layer and add this to the map.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"createMeasureLayer\",\n    value: function createMeasureLayer() {\n      var _this$props2 = this.props,\n          measureLayerName = _this$props2.measureLayerName,\n          fillColor = _this$props2.fillColor,\n          strokeColor = _this$props2.strokeColor,\n          map = _this$props2.map;\n\n      var measureLayer = _MapUtil[\"default\"].getLayerByName(map, measureLayerName);\n\n      if (!measureLayer) {\n        measureLayer = new _Vector[\"default\"]({\n          properties: {\n            name: measureLayerName\n          },\n          source: new _Vector2[\"default\"]({\n            features: new _Collection[\"default\"]()\n          }),\n          style: new _Style[\"default\"]({\n            fill: new _Fill[\"default\"]({\n              color: fillColor\n            }),\n            stroke: new _Stroke[\"default\"]({\n              color: strokeColor,\n              width: 2\n            }),\n            image: new _Circle[\"default\"]({\n              radius: 7,\n              fill: new _Fill[\"default\"]({\n                color: fillColor\n              })\n            })\n          })\n        });\n        map.addLayer(measureLayer);\n      }\n\n      this._measureLayer = measureLayer;\n    }\n    /**\n     * Creates a correctly configured OL draw interaction depending on\n     * the configured measureType.\n     *\n     * @return {OlInteractionDraw} The created interaction, which is not yet\n     *   added to the map.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"createDrawInteraction\",\n    value: function createDrawInteraction() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          fillColor = _this$props3.fillColor,\n          strokeColor = _this$props3.strokeColor,\n          measureType = _this$props3.measureType,\n          pressed = _this$props3.pressed,\n          map = _this$props3.map;\n\n      if (!this._measureLayer) {\n        return;\n      }\n\n      var maxPoints = measureType === 'angle' ? 2 : undefined;\n      var drawType = measureType === 'polygon' ? _GeometryType[\"default\"].MULTI_POLYGON : _GeometryType[\"default\"].MULTI_LINE_STRING;\n      var drawInteraction = new _Draw[\"default\"]({\n        source: this._measureLayer.getSource() || undefined,\n        type: drawType,\n        maxPoints: maxPoints,\n        style: new _Style[\"default\"]({\n          fill: new _Fill[\"default\"]({\n            color: fillColor\n          }),\n          stroke: new _Stroke[\"default\"]({\n            color: strokeColor,\n            lineDash: [10, 10],\n            width: 2\n          }),\n          image: new _Circle[\"default\"]({\n            radius: 5,\n            stroke: new _Stroke[\"default\"]({\n              color: strokeColor\n            }),\n            fill: new _Fill[\"default\"]({\n              color: fillColor\n            })\n          })\n        }),\n        freehandCondition: function freehandCondition() {\n          return false;\n        }\n      });\n      map.addInteraction(drawInteraction);\n      drawInteraction.on('change:active', function () {\n        return _this3.onDrawInteractionActiveChange();\n      });\n      this._drawInteraction = drawInteraction;\n\n      if (pressed) {\n        this.onDrawInteractionActiveChange();\n      }\n\n      drawInteraction.setActive(pressed);\n    }\n    /**\n     * Adjusts visibility of measurement related tooltips depending on active\n     * status of draw interaction.\n     */\n\n  }, {\n    key: \"onDrawInteractionActiveChange\",\n    value: function onDrawInteractionActiveChange() {\n      var showHelpTooltip = this.props.showHelpTooltip;\n\n      if (!this._drawInteraction) {\n        return;\n      }\n\n      if (this._drawInteraction.getActive()) {\n        if (showHelpTooltip) {\n          this.createHelpTooltip();\n        }\n\n        this.createMeasureTooltip();\n      } else {\n        if (showHelpTooltip) {\n          this.removeHelpTooltip();\n        }\n\n        this.removeMeasureTooltip();\n      }\n    }\n    /**\n     * Called if the current geometry of the draw interaction has changed.\n     *\n     * @param evt The generic change event.\n     */\n\n  }, {\n    key: \"onDrawInteractionGeometryChange\",\n    value: function\n    /* evt*/\n    onDrawInteractionGeometryChange() {\n      this.updateMeasureTooltip();\n    }\n    /**\n     * Called on map click.\n     *\n     * @param evt The pointer event.\n     */\n\n  }, {\n    key: \"onMapClick\",\n    value: function onMapClick(evt) {\n      var _this$props4 = this.props,\n          measureType = _this$props4.measureType,\n          showMeasureInfoOnClickedPoints = _this$props4.showMeasureInfoOnClickedPoints;\n\n      if (showMeasureInfoOnClickedPoints && measureType === 'line') {\n        this.addMeasureStopTooltip(evt.coordinate);\n      }\n    }\n    /**\n     * Sets up listeners whenever the drawing of a measurement sketch is\n     * started.\n     *\n     * @param evt The event which contains the\n     *   feature we are drawing.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"onDrawStart\",\n    value: function onDrawStart(evt) {\n      var _this$_feature$getGeo,\n          _this4 = this;\n\n      var _this$props5 = this.props,\n          showHelpTooltip = _this$props5.showHelpTooltip,\n          multipleDrawing = _this$props5.multipleDrawing,\n          map = _this$props5.map;\n\n      if (!this._measureLayer) {\n        return;\n      }\n\n      var source = this._measureLayer.getSource();\n\n      this._feature = evt.feature;\n      this._eventKeys.change = (_this$_feature$getGeo = this._feature.getGeometry()) === null || _this$_feature$getGeo === void 0 ? void 0 : _this$_feature$getGeo.on('change', this.onDrawInteractionGeometryChange);\n      this._eventKeys.click = map.on('click', function (e) {\n        return _this4.onMapClick(e);\n      });\n      var features = source === null || source === void 0 ? void 0 : source.getFeatures();\n\n      if (!multipleDrawing && features && features.length > 0) {\n        this.cleanupTooltips();\n        this.createMeasureTooltip();\n\n        if (showHelpTooltip) {\n          this.createHelpTooltip();\n        }\n\n        source === null || source === void 0 ? void 0 : source.clear();\n      }\n    }\n    /**\n     * Called whenever measuring stops, this method draws static tooltips with\n     * the result onto the map canvas and unregisters various listeners.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"onDrawEnd\",\n    value: function onDrawEnd(evt) {\n      var _this$props6 = this.props,\n          measureType = _this$props6.measureType,\n          multipleDrawing = _this$props6.multipleDrawing,\n          showMeasureInfoOnClickedPoints = _this$props6.showMeasureInfoOnClickedPoints,\n          measureTooltipCssClasses = _this$props6.measureTooltipCssClasses;\n\n      if (this._eventKeys.click) {\n        (0, _Observable.unByKey)(this._eventKeys.click);\n      }\n\n      if (this._eventKeys.change) {\n        (0, _Observable.unByKey)(this._eventKeys.change);\n      }\n\n      if (multipleDrawing) {\n        this.addMeasureStopTooltip(evt.feature.getGeometry().getLastCoordinate());\n      } // Fix doubled label for lastPoint of line\n\n\n      if ((multipleDrawing || showMeasureInfoOnClickedPoints) && (measureType === 'line' || measureType === 'polygon')) {\n        this.removeMeasureTooltip();\n      } else {\n        var _this$_measureTooltip;\n\n        if (this._measureTooltipElement && measureTooltipCssClasses) {\n          this._measureTooltipElement.className = \"\".concat(measureTooltipCssClasses.tooltip, \" \").concat(measureTooltipCssClasses.tooltipStatic);\n        }\n\n        (_this$_measureTooltip = this._measureTooltip) === null || _this$_measureTooltip === void 0 ? void 0 : _this$_measureTooltip.setOffset([0, -7]);\n      }\n\n      this.updateMeasureTooltip(); // unset sketch\n\n      this._feature = null; // fix doubled label for last point of line\n\n      if ((multipleDrawing || showMeasureInfoOnClickedPoints) && (measureType === 'line' || measureType === 'polygon')) {\n        this._measureTooltipElement = null;\n        this.createMeasureTooltip();\n      }\n    }\n    /**\n     * Adds a tooltip on click where a measuring stop occured.\n     *\n     * @param coordinate The coordinate for the tooltip.\n     */\n\n  }, {\n    key: \"addMeasureStopTooltip\",\n    value: function addMeasureStopTooltip(coordinate) {\n      var _this$props7 = this.props,\n          measureType = _this$props7.measureType,\n          decimalPlacesInTooltips = _this$props7.decimalPlacesInTooltips,\n          map = _this$props7.map,\n          measureTooltipCssClasses = _this$props7.measureTooltipCssClasses,\n          geodesic = _this$props7.geodesic;\n\n      if (!(0, _isNil2[\"default\"])(this._feature)) {\n        var geom = this._feature.getGeometry();\n\n        if (geom instanceof _MultiPolygon[\"default\"]) {\n          geom = geom.getPolygons()[0];\n        }\n\n        if (geom instanceof _MultiLineString[\"default\"]) {\n          geom = geom.getLineStrings()[0];\n        }\n\n        var value = measureType === 'line' ? _MeasureUtil[\"default\"].formatLength(geom, map, decimalPlacesInTooltips, geodesic) : _MeasureUtil[\"default\"].formatArea(geom, map, decimalPlacesInTooltips, geodesic);\n\n        if (parseInt(value, 10) > 0) {\n          var div = document.createElement('div');\n\n          if (measureTooltipCssClasses) {\n            div.className = \"\".concat(measureTooltipCssClasses.tooltip, \" \").concat(measureTooltipCssClasses.tooltipStatic);\n          }\n\n          div.innerHTML = value;\n          var tooltip = new _Overlay[\"default\"]({\n            element: div,\n            offset: [0, -15],\n            positioning: _OverlayPositioning[\"default\"].BOTTOM_CENTER\n          });\n          map.addOverlay(tooltip);\n          tooltip.setPosition(coordinate);\n\n          this._createdTooltipDivs.push(div);\n\n          this._createdTooltipOverlays.push(tooltip);\n        }\n      }\n    }\n    /**\n     * Creates a new measure tooltip as `OlOverlay`.\n     */\n\n  }, {\n    key: \"createMeasureTooltip\",\n    value: function createMeasureTooltip() {\n      var _this$props8 = this.props,\n          map = _this$props8.map,\n          measureTooltipCssClasses = _this$props8.measureTooltipCssClasses;\n\n      if (this._measureTooltipElement) {\n        return;\n      }\n\n      this._measureTooltipElement = document.createElement('div');\n\n      if (measureTooltipCssClasses) {\n        this._measureTooltipElement.className = \"\".concat(measureTooltipCssClasses.tooltip, \" \").concat(measureTooltipCssClasses.tooltipDynamic);\n      }\n\n      this._measureTooltip = new _Overlay[\"default\"]({\n        element: this._measureTooltipElement,\n        offset: [0, -15],\n        positioning: _OverlayPositioning[\"default\"].BOTTOM_CENTER\n      });\n      map.addOverlay(this._measureTooltip);\n    }\n    /**\n     * Creates a new help tooltip as `OlOverlay`.\n     */\n\n  }, {\n    key: \"createHelpTooltip\",\n    value: function createHelpTooltip() {\n      var _measureTooltipCssCla;\n\n      var _this$props9 = this.props,\n          map = _this$props9.map,\n          measureTooltipCssClasses = _this$props9.measureTooltipCssClasses;\n\n      if (this._helpTooltipElement) {\n        return;\n      }\n\n      this._helpTooltipElement = document.createElement('div');\n      this._helpTooltipElement.className = (_measureTooltipCssCla = measureTooltipCssClasses === null || measureTooltipCssClasses === void 0 ? void 0 : measureTooltipCssClasses.tooltip) !== null && _measureTooltipCssCla !== void 0 ? _measureTooltipCssCla : '';\n      this._helpTooltip = new _Overlay[\"default\"]({\n        element: this._helpTooltipElement,\n        offset: [15, 0],\n        positioning: _OverlayPositioning[\"default\"].CENTER_LEFT\n      });\n      map.addOverlay(this._helpTooltip);\n    }\n    /**\n     * Removes help tooltip from the map if measure button was untoggled.\n     */\n\n  }, {\n    key: \"removeHelpTooltip\",\n    value: function removeHelpTooltip() {\n      if (this._helpTooltip) {\n        this.props.map.removeOverlay(this._helpTooltip);\n      }\n\n      this._helpTooltipElement = null;\n      this._helpTooltip = null;\n    }\n    /**\n     * Removes measure tooltip from the map if measure button was untoggled.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"removeMeasureTooltip\",\n    value: function removeMeasureTooltip() {\n      if (this._measureTooltip) {\n        this.props.map.removeOverlay(this._measureTooltip);\n      }\n\n      this._measureTooltipElement = null;\n      this._measureTooltip = null;\n    }\n    /**\n     * Cleans up tooltips when the button is unpressed.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"cleanupTooltips\",\n    value: function cleanupTooltips() {\n      var map = this.props.map;\n\n      this._createdTooltipOverlays.forEach(function (tooltipOverlay) {\n        map.removeOverlay(tooltipOverlay);\n      });\n\n      this._createdTooltipOverlays = [];\n\n      this._createdTooltipDivs.forEach(function (tooltipDiv) {\n        var parent = tooltipDiv && tooltipDiv.parentNode;\n\n        if (parent) {\n          parent.removeChild(tooltipDiv);\n        }\n      });\n\n      this._createdTooltipDivs = [];\n      this.removeMeasureTooltip();\n    }\n    /**\n     * Cleans up artifacts from measuring when the button is unpressed.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      var _this5 = this;\n\n      if (this._drawInteraction) {\n        this._drawInteraction.setActive(false);\n      }\n\n      Object.keys(this._eventKeys).forEach(function (key) {\n        if (_this5._eventKeys[key]) {\n          (0, _Observable.unByKey)(_this5._eventKeys[key]);\n        }\n      });\n      this.cleanupTooltips();\n\n      if (this._measureLayer) {\n        var _this$_measureLayer$g;\n\n        (_this$_measureLayer$g = this._measureLayer.getSource()) === null || _this$_measureLayer$g === void 0 ? void 0 : _this$_measureLayer$g.clear();\n      }\n    }\n    /**\n     * Called on map's pointermove event.\n     *\n     * @param evt The pointer event.\n     */\n\n  }, {\n    key: \"onMapPointerMove\",\n    value: function onMapPointerMove(evt) {\n      if (!evt.dragging) {\n        this.updateHelpTooltip(evt.coordinate);\n      }\n    }\n    /**\n     * Updates the position and the text of the help tooltip.\n     *\n     * @param coordinate The coordinate to center the tooltip to.\n     */\n\n  }, {\n    key: \"updateHelpTooltip\",\n    value: function updateHelpTooltip(coordinate) {\n      var _this$props10 = this.props,\n          measureType = _this$props10.measureType,\n          clickToDrawText = _this$props10.clickToDrawText,\n          continuePolygonMsg = _this$props10.continuePolygonMsg,\n          continueLineMsg = _this$props10.continueLineMsg,\n          continueAngleMsg = _this$props10.continueAngleMsg;\n\n      if (!this._helpTooltipElement) {\n        return;\n      }\n\n      var msg = clickToDrawText;\n\n      if (this._helpTooltipElement) {\n        var _msg, _this$_helpTooltip;\n\n        if (measureType === 'polygon') {\n          msg = continuePolygonMsg;\n        } else if (measureType === 'line') {\n          msg = continueLineMsg;\n        } else if (measureType === 'angle') {\n          msg = continueAngleMsg;\n        }\n\n        this._helpTooltipElement.innerHTML = (_msg = msg) !== null && _msg !== void 0 ? _msg : '';\n        (_this$_helpTooltip = this._helpTooltip) === null || _this$_helpTooltip === void 0 ? void 0 : _this$_helpTooltip.setPosition(coordinate);\n      }\n    }\n    /**\n     * Updates the text and position of the measture tooltip.\n     */\n\n  }, {\n    key: \"updateMeasureTooltip\",\n    value: function updateMeasureTooltip() {\n      var _this$props11 = this.props,\n          measureType = _this$props11.measureType,\n          decimalPlacesInTooltips = _this$props11.decimalPlacesInTooltips,\n          map = _this$props11.map,\n          geodesic = _this$props11.geodesic;\n\n      if (!this._measureTooltipElement) {\n        return;\n      }\n\n      if (this._feature) {\n        var _this$_measureTooltip2;\n\n        var output;\n\n        var geom = this._feature.getGeometry();\n\n        if (geom instanceof _MultiPolygon[\"default\"]) {\n          geom = geom.getPolygons()[0];\n        } else if (geom instanceof _MultiLineString[\"default\"]) {\n          geom = geom.getLineStrings()[0];\n        }\n\n        var measureTooltipCoord;\n\n        if (geom instanceof _Polygon[\"default\"]) {\n          measureTooltipCoord = geom.getLastCoordinate();\n          output = _MeasureUtil[\"default\"].formatArea(geom, map, decimalPlacesInTooltips, geodesic); // attach area at interior point\n\n          measureTooltipCoord = geom.getInteriorPoint().getCoordinates();\n        } else if (geom instanceof _LineString[\"default\"]) {\n          measureTooltipCoord = geom.getLastCoordinate();\n\n          if (measureType === 'line') {\n            output = _MeasureUtil[\"default\"].formatLength(geom, map, decimalPlacesInTooltips, geodesic);\n          } else if (measureType === 'angle') {\n            output = _MeasureUtil[\"default\"].formatAngle(geom, map, decimalPlacesInTooltips);\n          }\n        } else {\n          return;\n        }\n\n        this._measureTooltipElement.innerHTML = output;\n        (_this$_measureTooltip2 = this._measureTooltip) === null || _this$_measureTooltip2 === void 0 ? void 0 : _this$_measureTooltip2.setPosition(measureTooltipCoord);\n      }\n    }\n    /**\n     * The render function.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props12 = this.props,\n          className = _this$props12.className,\n          map = _this$props12.map,\n          measureType = _this$props12.measureType,\n          measureLayerName = _this$props12.measureLayerName,\n          fillColor = _this$props12.fillColor,\n          strokeColor = _this$props12.strokeColor,\n          showMeasureInfoOnClickedPoints = _this$props12.showMeasureInfoOnClickedPoints,\n          showHelpTooltip = _this$props12.showHelpTooltip,\n          multipleDrawing = _this$props12.multipleDrawing,\n          clickToDrawText = _this$props12.clickToDrawText,\n          continuePolygonMsg = _this$props12.continuePolygonMsg,\n          continueLineMsg = _this$props12.continueLineMsg,\n          continueAngleMsg = _this$props12.continueAngleMsg,\n          decimalPlacesInTooltips = _this$props12.decimalPlacesInTooltips,\n          measureTooltipCssClasses = _this$props12.measureTooltipCssClasses,\n          onToggle = _this$props12.onToggle,\n          passThroughProps = _objectWithoutProperties(_this$props12, _excluded);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      return /*#__PURE__*/React.createElement(_ToggleButton[\"default\"], _extends({\n        onToggle: this.onToggle,\n        className: finalClassName\n      }, passThroughProps));\n    }\n  }]);\n\n  return MeasureButton;\n}(React.Component);\n\n_defineProperty(MeasureButton, \"defaultProps\", {\n  measureLayerName: 'react-geo_measure',\n  fillColor: 'rgba(255, 0, 0, 0.5)',\n  strokeColor: 'rgba(255, 0, 0, 0.8)',\n  showMeasureInfoOnClickedPoints: false,\n  showHelpTooltip: true,\n  decimalPlacesInTooltips: 2,\n  multipleDrawing: false,\n  continuePolygonMsg: 'Click to draw area',\n  continueLineMsg: 'Click to draw line',\n  continueAngleMsg: 'Click to draw angle',\n  clickToDrawText: 'Click to measure',\n  measureTooltipCssClasses: {\n    tooltip: \"\".concat(_constants.CSS_PREFIX, \"measure-tooltip\"),\n    tooltipDynamic: \"\".concat(_constants.CSS_PREFIX, \"measure-tooltip-dynamic\"),\n    tooltipStatic: \"\".concat(_constants.CSS_PREFIX, \"measure-tooltip-static\")\n  },\n  pressed: false,\n  onToggle: function onToggle() {\n    return undefined;\n  }\n});\n\nvar _default = MeasureButton;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@terrestris/react-geo/dist/Button/MeasureButton/MeasureButton.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","React","_interopRequireWildcard","require","_isNil2","_interopRequireDefault","_Vector","_Vector2","_Collection","_MultiPolygon","_MultiLineString","_Style","_Stroke","_Fill","_Circle","_Draw","_Observable","_Overlay","_GeometryType","_OverlayPositioning","_MeasureUtil","_MapUtil","_ToggleButton","_constants","_Polygon","_LineString","_excluded","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_extends","assign","target","i","arguments","length","source","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","MeasureButton","_React$Component","_super","_this","concat","CSS_PREFIX","drawstart","undefined","drawend","pointermove","click","change","onDrawInteractionActiveChange","bind","onToggle","onDrawStart","onDrawEnd","onDrawInteractionGeometryChange","onMapPointerMove","onMapClick","componentDidMount","createMeasureLayer","createDrawInteraction","componentWillUnmount","pressed","_this2","_this$props","map","cleanup","_drawInteraction","setActive","_eventKeys","on","_this$props2","measureLayerName","fillColor","strokeColor","measureLayer","getLayerByName","properties","name","features","style","fill","color","stroke","width","image","radius","addLayer","_measureLayer","_this3","_this$props3","measureType","maxPoints","drawType","MULTI_POLYGON","MULTI_LINE_STRING","drawInteraction","getSource","type","lineDash","freehandCondition","addInteraction","showHelpTooltip","getActive","createHelpTooltip","createMeasureTooltip","removeHelpTooltip","removeMeasureTooltip","updateMeasureTooltip","evt","_this$props4","showMeasureInfoOnClickedPoints","addMeasureStopTooltip","coordinate","_this$_feature$getGeo","_this4","_this$props5","multipleDrawing","_feature","feature","getGeometry","getFeatures","cleanupTooltips","clear","_this$props6","measureTooltipCssClasses","unByKey","getLastCoordinate","_this$_measureTooltip","_measureTooltipElement","className","tooltip","tooltipStatic","_measureTooltip","setOffset","_this$props7","decimalPlacesInTooltips","geodesic","geom","getPolygons","getLineStrings","formatLength","formatArea","parseInt","div","document","createElement","innerHTML","element","offset","positioning","BOTTOM_CENTER","addOverlay","setPosition","_createdTooltipDivs","push","_createdTooltipOverlays","_this$props8","tooltipDynamic","_measureTooltipCssCla","_this$props9","_helpTooltipElement","_helpTooltip","CENTER_LEFT","removeOverlay","forEach","tooltipOverlay","tooltipDiv","parent","parentNode","removeChild","_this5","_this$_measureLayer$g","dragging","updateHelpTooltip","_this$props10","clickToDrawText","continuePolygonMsg","continueLineMsg","continueAngleMsg","msg","_msg","_this$_helpTooltip","_this$props11","_this$_measureTooltip2","output","measureTooltipCoord","getInteriorPoint","getCoordinates","formatAngle","render","_this$props12","passThroughProps","finalClassName","Component","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _isNil2 = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _Vector = _interopRequireDefault(require(\"ol/layer/Vector\"));\n\nvar _Vector2 = _interopRequireDefault(require(\"ol/source/Vector\"));\n\nvar _Collection = _interopRequireDefault(require(\"ol/Collection\"));\n\nvar _MultiPolygon = _interopRequireDefault(require(\"ol/geom/MultiPolygon\"));\n\nvar _MultiLineString = _interopRequireDefault(require(\"ol/geom/MultiLineString\"));\n\nvar _Style = _interopRequireDefault(require(\"ol/style/Style\"));\n\nvar _Stroke = _interopRequireDefault(require(\"ol/style/Stroke\"));\n\nvar _Fill = _interopRequireDefault(require(\"ol/style/Fill\"));\n\nvar _Circle = _interopRequireDefault(require(\"ol/style/Circle\"));\n\nvar _Draw = _interopRequireDefault(require(\"ol/interaction/Draw\"));\n\nvar _Observable = require(\"ol/Observable\");\n\nvar _Overlay = _interopRequireDefault(require(\"ol/Overlay\"));\n\nvar _GeometryType = _interopRequireDefault(require(\"ol/geom/GeometryType\"));\n\nvar _OverlayPositioning = _interopRequireDefault(require(\"ol/OverlayPositioning\"));\n\nvar _MeasureUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/MeasureUtil/MeasureUtil\"));\n\nvar _MapUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/MapUtil/MapUtil\"));\n\nvar _ToggleButton = _interopRequireDefault(require(\"../ToggleButton/ToggleButton\"));\n\nvar _constants = require(\"../../constants\");\n\nrequire(\"./MeasureButton.less\");\n\nvar _Polygon = _interopRequireDefault(require(\"ol/geom/Polygon\"));\n\nvar _LineString = _interopRequireDefault(require(\"ol/geom/LineString\"));\n\nvar _excluded = [\"className\", \"map\", \"measureType\", \"measureLayerName\", \"fillColor\", \"strokeColor\", \"showMeasureInfoOnClickedPoints\", \"showHelpTooltip\", \"multipleDrawing\", \"clickToDrawText\", \"continuePolygonMsg\", \"continueLineMsg\", \"continueAngleMsg\", \"decimalPlacesInTooltips\", \"measureTooltipCssClasses\", \"onToggle\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * The MeasureButton.\n *\n * @class The MeasureButton\n * @extends React.Component\n */\nvar MeasureButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(MeasureButton, _React$Component);\n\n  var _super = _createSuper(MeasureButton);\n\n  /**\n   * The default properties.\n   */\n\n  /**\n   * The className added to this component.\n   *\n   * @private\n   */\n\n  /**\n   * Currently drawn feature.\n   *\n   * @private\n   */\n\n  /**\n   * Overlay to show the measurement.\n   *\n   * @private\n   */\n\n  /**\n   * Overlay to show the help messages.\n   *\n   * @private\n   */\n\n  /**\n   * The help tooltip element.\n   *\n   * @private\n   */\n\n  /**\n   * The measure tooltip element.\n   *\n   * @private\n   */\n\n  /**\n   * An array of created overlays we use for the tooltips. Used to eventually\n   * clean up everything we added.\n   *\n   * @private\n   */\n\n  /**\n   * An array of created divs we use for the tooltips. Used to eventually\n   * clean up everything we added.\n   *\n   * @private\n   */\n\n  /**\n   * An object holding keyed `OlEventsKey` instances returned by the `on`\n   * method of `OlObservable`. These keys are used to unbind temporary\n   * listeners on events of the `OlInteractionDraw` or `OlMap`. The keys\n   * are the names of the events on the various objects. The `click` key is\n   * not always bound, but only for certain #measureType values.\n   *\n   * In #cleanup, we unbind all events we have bound so as to not leak\n   * memory, and to ensure we have no concurring listeners being active at a\n   * time (E.g. when multiple measure buttons are in an application).\n   *\n   * @private\n   */\n\n  /**\n   * The vector layer showing the geometries added by the draw interaction.\n   *\n   * @private\n   */\n\n  /**\n   * The draw interaction used to draw the geometries to measure.\n   *\n   * @private\n   */\n\n  /**\n   * Creates the MeasureButton.\n   *\n   * @constructs MeasureButton\n   */\n  function MeasureButton(props) {\n    var _this;\n\n    _classCallCheck(this, MeasureButton);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"measurebutton\"));\n\n    _defineProperty(_assertThisInitialized(_this), \"_feature\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measureTooltip\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_helpTooltip\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_helpTooltipElement\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measureTooltipElement\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_createdTooltipOverlays\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"_createdTooltipDivs\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"_eventKeys\", {\n      drawstart: undefined,\n      drawend: undefined,\n      pointermove: undefined,\n      click: undefined,\n      change: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_measureLayer\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_drawInteraction\", null);\n\n    _this.onDrawInteractionActiveChange = _this.onDrawInteractionActiveChange.bind(_assertThisInitialized(_this));\n    _this.onToggle = _this.onToggle.bind(_assertThisInitialized(_this));\n    _this.onDrawStart = _this.onDrawStart.bind(_assertThisInitialized(_this));\n    _this.onDrawEnd = _this.onDrawEnd.bind(_assertThisInitialized(_this));\n    _this.onDrawInteractionGeometryChange = _this.onDrawInteractionGeometryChange.bind(_assertThisInitialized(_this));\n    _this.onMapPointerMove = _this.onMapPointerMove.bind(_assertThisInitialized(_this));\n    _this.onMapClick = _this.onMapClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * `componentDidMount` method of the MeasureButton.\n   *\n   * @method\n   */\n\n\n  _createClass(MeasureButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createMeasureLayer();\n      this.createDrawInteraction();\n    }\n    /**\n     * Ensures that component is properly cleaned up on unmount.\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.pressed) {\n        this.onToggle(false);\n      }\n    }\n    /**\n     * Called when the button is toggled, this method ensures that everything\n     * is cleaned up when unpressed, and that measuring can start when pressed.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"onToggle\",\n    value: function onToggle(pressed) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          map = _this$props.map,\n          onToggle = _this$props.onToggle;\n      this.cleanup();\n      onToggle(pressed);\n\n      if (pressed && this._drawInteraction) {\n        this._drawInteraction.setActive(pressed);\n\n        this._eventKeys.drawstart = this._drawInteraction.on('drawstart', function (e) {\n          return _this2.onDrawStart(e);\n        });\n        this._eventKeys.drawend = this._drawInteraction.on('drawend', function (e) {\n          return _this2.onDrawEnd(e);\n        });\n        this._eventKeys.pointermove = map.on('pointermove', function (e) {\n          return _this2.onMapPointerMove(e);\n        });\n      }\n    }\n    /**\n     * Creates measure vector layer and add this to the map.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"createMeasureLayer\",\n    value: function createMeasureLayer() {\n      var _this$props2 = this.props,\n          measureLayerName = _this$props2.measureLayerName,\n          fillColor = _this$props2.fillColor,\n          strokeColor = _this$props2.strokeColor,\n          map = _this$props2.map;\n\n      var measureLayer = _MapUtil[\"default\"].getLayerByName(map, measureLayerName);\n\n      if (!measureLayer) {\n        measureLayer = new _Vector[\"default\"]({\n          properties: {\n            name: measureLayerName\n          },\n          source: new _Vector2[\"default\"]({\n            features: new _Collection[\"default\"]()\n          }),\n          style: new _Style[\"default\"]({\n            fill: new _Fill[\"default\"]({\n              color: fillColor\n            }),\n            stroke: new _Stroke[\"default\"]({\n              color: strokeColor,\n              width: 2\n            }),\n            image: new _Circle[\"default\"]({\n              radius: 7,\n              fill: new _Fill[\"default\"]({\n                color: fillColor\n              })\n            })\n          })\n        });\n        map.addLayer(measureLayer);\n      }\n\n      this._measureLayer = measureLayer;\n    }\n    /**\n     * Creates a correctly configured OL draw interaction depending on\n     * the configured measureType.\n     *\n     * @return {OlInteractionDraw} The created interaction, which is not yet\n     *   added to the map.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"createDrawInteraction\",\n    value: function createDrawInteraction() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          fillColor = _this$props3.fillColor,\n          strokeColor = _this$props3.strokeColor,\n          measureType = _this$props3.measureType,\n          pressed = _this$props3.pressed,\n          map = _this$props3.map;\n\n      if (!this._measureLayer) {\n        return;\n      }\n\n      var maxPoints = measureType === 'angle' ? 2 : undefined;\n      var drawType = measureType === 'polygon' ? _GeometryType[\"default\"].MULTI_POLYGON : _GeometryType[\"default\"].MULTI_LINE_STRING;\n      var drawInteraction = new _Draw[\"default\"]({\n        source: this._measureLayer.getSource() || undefined,\n        type: drawType,\n        maxPoints: maxPoints,\n        style: new _Style[\"default\"]({\n          fill: new _Fill[\"default\"]({\n            color: fillColor\n          }),\n          stroke: new _Stroke[\"default\"]({\n            color: strokeColor,\n            lineDash: [10, 10],\n            width: 2\n          }),\n          image: new _Circle[\"default\"]({\n            radius: 5,\n            stroke: new _Stroke[\"default\"]({\n              color: strokeColor\n            }),\n            fill: new _Fill[\"default\"]({\n              color: fillColor\n            })\n          })\n        }),\n        freehandCondition: function freehandCondition() {\n          return false;\n        }\n      });\n      map.addInteraction(drawInteraction);\n      drawInteraction.on('change:active', function () {\n        return _this3.onDrawInteractionActiveChange();\n      });\n      this._drawInteraction = drawInteraction;\n\n      if (pressed) {\n        this.onDrawInteractionActiveChange();\n      }\n\n      drawInteraction.setActive(pressed);\n    }\n    /**\n     * Adjusts visibility of measurement related tooltips depending on active\n     * status of draw interaction.\n     */\n\n  }, {\n    key: \"onDrawInteractionActiveChange\",\n    value: function onDrawInteractionActiveChange() {\n      var showHelpTooltip = this.props.showHelpTooltip;\n\n      if (!this._drawInteraction) {\n        return;\n      }\n\n      if (this._drawInteraction.getActive()) {\n        if (showHelpTooltip) {\n          this.createHelpTooltip();\n        }\n\n        this.createMeasureTooltip();\n      } else {\n        if (showHelpTooltip) {\n          this.removeHelpTooltip();\n        }\n\n        this.removeMeasureTooltip();\n      }\n    }\n    /**\n     * Called if the current geometry of the draw interaction has changed.\n     *\n     * @param evt The generic change event.\n     */\n\n  }, {\n    key: \"onDrawInteractionGeometryChange\",\n    value: function\n      /* evt*/\n    onDrawInteractionGeometryChange() {\n      this.updateMeasureTooltip();\n    }\n    /**\n     * Called on map click.\n     *\n     * @param evt The pointer event.\n     */\n\n  }, {\n    key: \"onMapClick\",\n    value: function onMapClick(evt) {\n      var _this$props4 = this.props,\n          measureType = _this$props4.measureType,\n          showMeasureInfoOnClickedPoints = _this$props4.showMeasureInfoOnClickedPoints;\n\n      if (showMeasureInfoOnClickedPoints && measureType === 'line') {\n        this.addMeasureStopTooltip(evt.coordinate);\n      }\n    }\n    /**\n     * Sets up listeners whenever the drawing of a measurement sketch is\n     * started.\n     *\n     * @param evt The event which contains the\n     *   feature we are drawing.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"onDrawStart\",\n    value: function onDrawStart(evt) {\n      var _this$_feature$getGeo,\n          _this4 = this;\n\n      var _this$props5 = this.props,\n          showHelpTooltip = _this$props5.showHelpTooltip,\n          multipleDrawing = _this$props5.multipleDrawing,\n          map = _this$props5.map;\n\n      if (!this._measureLayer) {\n        return;\n      }\n\n      var source = this._measureLayer.getSource();\n\n      this._feature = evt.feature;\n      this._eventKeys.change = (_this$_feature$getGeo = this._feature.getGeometry()) === null || _this$_feature$getGeo === void 0 ? void 0 : _this$_feature$getGeo.on('change', this.onDrawInteractionGeometryChange);\n      this._eventKeys.click = map.on('click', function (e) {\n        return _this4.onMapClick(e);\n      });\n      var features = source === null || source === void 0 ? void 0 : source.getFeatures();\n\n      if (!multipleDrawing && features && features.length > 0) {\n        this.cleanupTooltips();\n        this.createMeasureTooltip();\n\n        if (showHelpTooltip) {\n          this.createHelpTooltip();\n        }\n\n        source === null || source === void 0 ? void 0 : source.clear();\n      }\n    }\n    /**\n     * Called whenever measuring stops, this method draws static tooltips with\n     * the result onto the map canvas and unregisters various listeners.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"onDrawEnd\",\n    value: function onDrawEnd(evt) {\n      var _this$props6 = this.props,\n          measureType = _this$props6.measureType,\n          multipleDrawing = _this$props6.multipleDrawing,\n          showMeasureInfoOnClickedPoints = _this$props6.showMeasureInfoOnClickedPoints,\n          measureTooltipCssClasses = _this$props6.measureTooltipCssClasses;\n\n      if (this._eventKeys.click) {\n        (0, _Observable.unByKey)(this._eventKeys.click);\n      }\n\n      if (this._eventKeys.change) {\n        (0, _Observable.unByKey)(this._eventKeys.change);\n      }\n\n      if (multipleDrawing) {\n        this.addMeasureStopTooltip(evt.feature.getGeometry().getLastCoordinate());\n      } // Fix doubled label for lastPoint of line\n\n\n      if ((multipleDrawing || showMeasureInfoOnClickedPoints) && (measureType === 'line' || measureType === 'polygon')) {\n        this.removeMeasureTooltip();\n      } else {\n        var _this$_measureTooltip;\n\n        if (this._measureTooltipElement && measureTooltipCssClasses) {\n          this._measureTooltipElement.className = \"\".concat(measureTooltipCssClasses.tooltip, \" \").concat(measureTooltipCssClasses.tooltipStatic);\n        }\n\n        (_this$_measureTooltip = this._measureTooltip) === null || _this$_measureTooltip === void 0 ? void 0 : _this$_measureTooltip.setOffset([0, -7]);\n      }\n\n      this.updateMeasureTooltip(); // unset sketch\n\n      this._feature = null; // fix doubled label for last point of line\n\n      if ((multipleDrawing || showMeasureInfoOnClickedPoints) && (measureType === 'line' || measureType === 'polygon')) {\n        this._measureTooltipElement = null;\n        this.createMeasureTooltip();\n      }\n    }\n    /**\n     * Adds a tooltip on click where a measuring stop occured.\n     *\n     * @param coordinate The coordinate for the tooltip.\n     */\n\n  }, {\n    key: \"addMeasureStopTooltip\",\n    value: function addMeasureStopTooltip(coordinate) {\n      var _this$props7 = this.props,\n          measureType = _this$props7.measureType,\n          decimalPlacesInTooltips = _this$props7.decimalPlacesInTooltips,\n          map = _this$props7.map,\n          measureTooltipCssClasses = _this$props7.measureTooltipCssClasses,\n          geodesic = _this$props7.geodesic;\n\n      if (!(0, _isNil2[\"default\"])(this._feature)) {\n        var geom = this._feature.getGeometry();\n\n        if (geom instanceof _MultiPolygon[\"default\"]) {\n          geom = geom.getPolygons()[0];\n        }\n\n        if (geom instanceof _MultiLineString[\"default\"]) {\n          geom = geom.getLineStrings()[0];\n        }\n\n        var value = measureType === 'line' ? _MeasureUtil[\"default\"].formatLength(geom, map, decimalPlacesInTooltips, geodesic) : _MeasureUtil[\"default\"].formatArea(geom, map, decimalPlacesInTooltips, geodesic);\n\n        if (parseInt(value, 10) > 0) {\n          var div = document.createElement('div');\n\n          if (measureTooltipCssClasses) {\n            div.className = \"\".concat(measureTooltipCssClasses.tooltip, \" \").concat(measureTooltipCssClasses.tooltipStatic);\n          }\n\n          div.innerHTML = value;\n          var tooltip = new _Overlay[\"default\"]({\n            element: div,\n            offset: [0, -15],\n            positioning: _OverlayPositioning[\"default\"].BOTTOM_CENTER\n          });\n          map.addOverlay(tooltip);\n          tooltip.setPosition(coordinate);\n\n          this._createdTooltipDivs.push(div);\n\n          this._createdTooltipOverlays.push(tooltip);\n        }\n      }\n    }\n    /**\n     * Creates a new measure tooltip as `OlOverlay`.\n     */\n\n  }, {\n    key: \"createMeasureTooltip\",\n    value: function createMeasureTooltip() {\n      var _this$props8 = this.props,\n          map = _this$props8.map,\n          measureTooltipCssClasses = _this$props8.measureTooltipCssClasses;\n\n      if (this._measureTooltipElement) {\n        return;\n      }\n\n      this._measureTooltipElement = document.createElement('div');\n\n      if (measureTooltipCssClasses) {\n        this._measureTooltipElement.className = \"\".concat(measureTooltipCssClasses.tooltip, \" \").concat(measureTooltipCssClasses.tooltipDynamic);\n      }\n\n      this._measureTooltip = new _Overlay[\"default\"]({\n        element: this._measureTooltipElement,\n        offset: [0, -15],\n        positioning: _OverlayPositioning[\"default\"].BOTTOM_CENTER\n      });\n      map.addOverlay(this._measureTooltip);\n    }\n    /**\n     * Creates a new help tooltip as `OlOverlay`.\n     */\n\n  }, {\n    key: \"createHelpTooltip\",\n    value: function createHelpTooltip() {\n      var _measureTooltipCssCla;\n\n      var _this$props9 = this.props,\n          map = _this$props9.map,\n          measureTooltipCssClasses = _this$props9.measureTooltipCssClasses;\n\n      if (this._helpTooltipElement) {\n        return;\n      }\n\n      this._helpTooltipElement = document.createElement('div');\n      this._helpTooltipElement.className = (_measureTooltipCssCla = measureTooltipCssClasses === null || measureTooltipCssClasses === void 0 ? void 0 : measureTooltipCssClasses.tooltip) !== null && _measureTooltipCssCla !== void 0 ? _measureTooltipCssCla : '';\n      this._helpTooltip = new _Overlay[\"default\"]({\n        element: this._helpTooltipElement,\n        offset: [15, 0],\n        positioning: _OverlayPositioning[\"default\"].CENTER_LEFT\n      });\n      map.addOverlay(this._helpTooltip);\n    }\n    /**\n     * Removes help tooltip from the map if measure button was untoggled.\n     */\n\n  }, {\n    key: \"removeHelpTooltip\",\n    value: function removeHelpTooltip() {\n      if (this._helpTooltip) {\n        this.props.map.removeOverlay(this._helpTooltip);\n      }\n\n      this._helpTooltipElement = null;\n      this._helpTooltip = null;\n    }\n    /**\n     * Removes measure tooltip from the map if measure button was untoggled.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"removeMeasureTooltip\",\n    value: function removeMeasureTooltip() {\n      if (this._measureTooltip) {\n        this.props.map.removeOverlay(this._measureTooltip);\n      }\n\n      this._measureTooltipElement = null;\n      this._measureTooltip = null;\n    }\n    /**\n     * Cleans up tooltips when the button is unpressed.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"cleanupTooltips\",\n    value: function cleanupTooltips() {\n      var map = this.props.map;\n\n      this._createdTooltipOverlays.forEach(function (tooltipOverlay) {\n        map.removeOverlay(tooltipOverlay);\n      });\n\n      this._createdTooltipOverlays = [];\n\n      this._createdTooltipDivs.forEach(function (tooltipDiv) {\n        var parent = tooltipDiv && tooltipDiv.parentNode;\n\n        if (parent) {\n          parent.removeChild(tooltipDiv);\n        }\n      });\n\n      this._createdTooltipDivs = [];\n      this.removeMeasureTooltip();\n    }\n    /**\n     * Cleans up artifacts from measuring when the button is unpressed.\n     *\n     * @method\n     */\n\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      var _this5 = this;\n\n      if (this._drawInteraction) {\n        this._drawInteraction.setActive(false);\n      }\n\n      Object.keys(this._eventKeys).forEach(function (key) {\n        if (_this5._eventKeys[key]) {\n          (0, _Observable.unByKey)(_this5._eventKeys[key]);\n        }\n      });\n      this.cleanupTooltips();\n\n      if (this._measureLayer) {\n        var _this$_measureLayer$g;\n\n        (_this$_measureLayer$g = this._measureLayer.getSource()) === null || _this$_measureLayer$g === void 0 ? void 0 : _this$_measureLayer$g.clear();\n      }\n    }\n    /**\n     * Called on map's pointermove event.\n     *\n     * @param evt The pointer event.\n     */\n\n  }, {\n    key: \"onMapPointerMove\",\n    value: function onMapPointerMove(evt) {\n      if (!evt.dragging) {\n        this.updateHelpTooltip(evt.coordinate);\n      }\n    }\n    /**\n     * Updates the position and the text of the help tooltip.\n     *\n     * @param coordinate The coordinate to center the tooltip to.\n     */\n\n  }, {\n    key: \"updateHelpTooltip\",\n    value: function updateHelpTooltip(coordinate) {\n      var _this$props10 = this.props,\n          measureType = _this$props10.measureType,\n          clickToDrawText = _this$props10.clickToDrawText,\n          continuePolygonMsg = _this$props10.continuePolygonMsg,\n          continueLineMsg = _this$props10.continueLineMsg,\n          continueAngleMsg = _this$props10.continueAngleMsg;\n\n      if (!this._helpTooltipElement) {\n        return;\n      }\n\n      var msg = clickToDrawText;\n\n      if (this._helpTooltipElement) {\n        var _msg, _this$_helpTooltip;\n\n        if (measureType === 'polygon') {\n          msg = continuePolygonMsg;\n        } else if (measureType === 'line') {\n          msg = continueLineMsg;\n        } else if (measureType === 'angle') {\n          msg = continueAngleMsg;\n        }\n\n        this._helpTooltipElement.innerHTML = (_msg = msg) !== null && _msg !== void 0 ? _msg : '';\n        (_this$_helpTooltip = this._helpTooltip) === null || _this$_helpTooltip === void 0 ? void 0 : _this$_helpTooltip.setPosition(coordinate);\n      }\n    }\n    /**\n     * Updates the text and position of the measture tooltip.\n     */\n\n  }, {\n    key: \"updateMeasureTooltip\",\n    value: function updateMeasureTooltip() {\n      var _this$props11 = this.props,\n          measureType = _this$props11.measureType,\n          decimalPlacesInTooltips = _this$props11.decimalPlacesInTooltips,\n          map = _this$props11.map,\n          geodesic = _this$props11.geodesic;\n\n      if (!this._measureTooltipElement) {\n        return;\n      }\n\n      if (this._feature) {\n        var _this$_measureTooltip2;\n\n        var output;\n\n        var geom = this._feature.getGeometry();\n\n        if (geom instanceof _MultiPolygon[\"default\"]) {\n          geom = geom.getPolygons()[0];\n        } else if (geom instanceof _MultiLineString[\"default\"]) {\n          geom = geom.getLineStrings()[0];\n        }\n\n        var measureTooltipCoord;\n\n        if (geom instanceof _Polygon[\"default\"]) {\n          measureTooltipCoord = geom.getLastCoordinate();\n          output = _MeasureUtil[\"default\"].formatArea(geom, map, decimalPlacesInTooltips, geodesic); // attach area at interior point\n\n          measureTooltipCoord = geom.getInteriorPoint().getCoordinates();\n        } else if (geom instanceof _LineString[\"default\"]) {\n          measureTooltipCoord = geom.getLastCoordinate();\n\n          if (measureType === 'line') {\n            output = _MeasureUtil[\"default\"].formatLength(geom, map, decimalPlacesInTooltips, geodesic);\n          } else if (measureType === 'angle') {\n            output = _MeasureUtil[\"default\"].formatAngle(geom, map, decimalPlacesInTooltips);\n          }\n        } else {\n          return;\n        }\n\n        this._measureTooltipElement.innerHTML = output;\n        (_this$_measureTooltip2 = this._measureTooltip) === null || _this$_measureTooltip2 === void 0 ? void 0 : _this$_measureTooltip2.setPosition(measureTooltipCoord);\n      }\n    }\n    /**\n     * The render function.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props12 = this.props,\n          className = _this$props12.className,\n          map = _this$props12.map,\n          measureType = _this$props12.measureType,\n          measureLayerName = _this$props12.measureLayerName,\n          fillColor = _this$props12.fillColor,\n          strokeColor = _this$props12.strokeColor,\n          showMeasureInfoOnClickedPoints = _this$props12.showMeasureInfoOnClickedPoints,\n          showHelpTooltip = _this$props12.showHelpTooltip,\n          multipleDrawing = _this$props12.multipleDrawing,\n          clickToDrawText = _this$props12.clickToDrawText,\n          continuePolygonMsg = _this$props12.continuePolygonMsg,\n          continueLineMsg = _this$props12.continueLineMsg,\n          continueAngleMsg = _this$props12.continueAngleMsg,\n          decimalPlacesInTooltips = _this$props12.decimalPlacesInTooltips,\n          measureTooltipCssClasses = _this$props12.measureTooltipCssClasses,\n          onToggle = _this$props12.onToggle,\n          passThroughProps = _objectWithoutProperties(_this$props12, _excluded);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      return /*#__PURE__*/React.createElement(_ToggleButton[\"default\"], _extends({\n        onToggle: this.onToggle,\n        className: finalClassName\n      }, passThroughProps));\n    }\n  }]);\n\n  return MeasureButton;\n}(React.Component);\n\n_defineProperty(MeasureButton, \"defaultProps\", {\n  measureLayerName: 'react-geo_measure',\n  fillColor: 'rgba(255, 0, 0, 0.5)',\n  strokeColor: 'rgba(255, 0, 0, 0.8)',\n  showMeasureInfoOnClickedPoints: false,\n  showHelpTooltip: true,\n  decimalPlacesInTooltips: 2,\n  multipleDrawing: false,\n  continuePolygonMsg: 'Click to draw area',\n  continueLineMsg: 'Click to draw line',\n  continueAngleMsg: 'Click to draw angle',\n  clickToDrawText: 'Click to measure',\n  measureTooltipCssClasses: {\n    tooltip: \"\".concat(_constants.CSS_PREFIX, \"measure-tooltip\"),\n    tooltipDynamic: \"\".concat(_constants.CSS_PREFIX, \"measure-tooltip-dynamic\"),\n    tooltipStatic: \"\".concat(_constants.CSS_PREFIX, \"measure-tooltip-static\")\n  },\n  pressed: false,\n  onToggle: function onToggle() {\n    return undefined;\n  }\n});\n\nvar _default = MeasureButton;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}