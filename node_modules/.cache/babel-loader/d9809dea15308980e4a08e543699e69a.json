{"ast":null,"code":"// @ag-grid-community/react v26.2.0\n\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@ag-grid-community/core\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar beansContext_1 = require(\"./beansContext\");\n\nvar gridHeaderComp_1 = __importDefault(require(\"./header/gridHeaderComp\"));\n\nvar reactComment_1 = __importDefault(require(\"./reactComment\"));\n\nvar rowContainerComp_1 = __importDefault(require(\"./rows/rowContainerComp\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar GridBodyComp = function () {\n  var _a = react_1.useContext(beansContext_1.BeansContext),\n      context = _a.context,\n      agStackComponentsRegistry = _a.agStackComponentsRegistry,\n      resizeObserverService = _a.resizeObserverService;\n\n  var _b = react_1.useState(''),\n      rowAnimationClass = _b[0],\n      setRowAnimationClass = _b[1];\n\n  var _c = react_1.useState(0),\n      ariaColCount = _c[0],\n      setAriaColCount = _c[1];\n\n  var _d = react_1.useState(0),\n      ariaRowCount = _d[0],\n      setAriaRowCount = _d[1];\n\n  var _e = react_1.useState(0),\n      topHeight = _e[0],\n      setTopHeight = _e[1];\n\n  var _f = react_1.useState(0),\n      bottomHeight = _f[0],\n      setBottomHeight = _f[1];\n\n  var _g = react_1.useState(''),\n      topDisplay = _g[0],\n      setTopDisplay = _g[1];\n\n  var _h = react_1.useState(''),\n      bottomDisplay = _h[0],\n      setBottomDisplay = _h[1];\n\n  var _j = react_1.useState(null),\n      movingCss = _j[0],\n      setMovingCss = _j[1];\n\n  var _k = react_1.useState(''),\n      layoutClass = _k[0],\n      setLayoutClass = _k[1];\n\n  var _l = react_1.useState(null),\n      forceVerticalScrollClass = _l[0],\n      setForceVerticalScrollClass = _l[1];\n\n  var _m = react_1.useState(''),\n      topAndBottomOverflowY = _m[0],\n      setTopAndBottomOverflowY = _m[1];\n\n  var _o = react_1.useState(null),\n      cellSelectableCss = _o[0],\n      setCellSelectableCss = _o[1];\n\n  var eRoot = react_1.useRef(null);\n  var eTop = react_1.useRef(null);\n  var eBodyViewport = react_1.useRef(null);\n  var eBottom = react_1.useRef(null);\n  reactComment_1.default(' AG Grid Body ', eRoot);\n  reactComment_1.default(' AG Pinned Top ', eTop);\n  reactComment_1.default(' AG Middle ', eBodyViewport);\n  reactComment_1.default(' AG Pinned Bottom ', eBottom);\n  react_1.useEffect(function () {\n    var beansToDestroy = [];\n    var destroyFuncs = [];\n\n    if (!context) {\n      return;\n    }\n\n    var newComp = function (tag) {\n      var CompClass = agStackComponentsRegistry.getComponentClass(tag);\n      var comp = context.createBean(new CompClass());\n      beansToDestroy.push(comp);\n      return comp;\n    };\n\n    eRoot.current.appendChild(document.createComment(' AG Fake Horizontal Scroll '));\n    eRoot.current.appendChild(newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n    eRoot.current.appendChild(document.createComment(' AG Overlay Wrapper '));\n    eRoot.current.appendChild(newComp('AG-OVERLAY-WRAPPER').getGui());\n    var compProxy = {\n      setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n      setColumnCount: setAriaColCount,\n      setRowCount: setAriaRowCount,\n      setTopHeight: setTopHeight,\n      setBottomHeight: setBottomHeight,\n      setTopDisplay: setTopDisplay,\n      setBottomDisplay: setBottomDisplay,\n      setColumnMovingCss: setMovingCss,\n      updateLayoutClasses: setLayoutClass,\n      setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n      setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n      setCellSelectableCss: setCellSelectableCss,\n      registerBodyViewportResizeListener: function (listener) {\n        var unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport.current, listener);\n        destroyFuncs.push(function () {\n          return unsubscribeFromResize();\n        });\n      }\n    };\n    var ctrl = context.createBean(new core_1.GridBodyCtrl());\n    beansToDestroy.push(ctrl);\n    ctrl.setComp(compProxy, eRoot.current, eBodyViewport.current, eTop.current, eBottom.current);\n    return function () {\n      context.destroyBeans(beansToDestroy);\n      destroyFuncs.forEach(function (f) {\n        return f();\n      });\n    };\n  }, []);\n  var rootClasses = react_1.useMemo(function () {\n    return utils_1.classesList('ag-root', 'ag-unselectable', movingCss, layoutClass);\n  }, [movingCss, layoutClass]);\n  var bodyViewportClasses = react_1.useMemo(function () {\n    return utils_1.classesList('ag-body-viewport', rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss);\n  }, [rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss]);\n  var topClasses = react_1.useMemo(function () {\n    return utils_1.classesList('ag-floating-top', cellSelectableCss);\n  }, [cellSelectableCss]);\n  var bottomClasses = react_1.useMemo(function () {\n    return utils_1.classesList('ag-floating-bottom', cellSelectableCss);\n  }, [cellSelectableCss]);\n  var topStyle = react_1.useMemo(function () {\n    return {\n      height: topHeight,\n      minHeight: topHeight,\n      display: topDisplay,\n      overflowY: topAndBottomOverflowY\n    };\n  }, [topHeight, topDisplay, topAndBottomOverflowY]);\n  var bottomStyle = react_1.useMemo(function () {\n    return {\n      height: bottomHeight,\n      minHeight: bottomHeight,\n      display: bottomDisplay,\n      overflowY: topAndBottomOverflowY\n    };\n  }, [bottomHeight, bottomDisplay, topAndBottomOverflowY]);\n\n  var createRowContainer = function (container) {\n    return react_1.default.createElement(rowContainerComp_1.default, {\n      name: container,\n      key: container + \"-container\"\n    });\n  };\n\n  var createSection = function (_a) {\n    var section = _a.section,\n        children = _a.children,\n        className = _a.className,\n        style = _a.style,\n        unselectable = _a.unselectable;\n    return react_1.default.createElement(\"div\", {\n      ref: section,\n      className: className,\n      role: \"presentation\",\n      style: style,\n      unselectable: unselectable\n    }, children.map(createRowContainer));\n  };\n\n  return react_1.default.createElement(\"div\", {\n    ref: eRoot,\n    className: rootClasses,\n    role: \"grid\",\n    unselectable: \"on\",\n    \"aria-colcount\": ariaColCount,\n    \"aria-rowcount\": ariaRowCount\n  }, react_1.default.createElement(gridHeaderComp_1.default, null), createSection({\n    section: eTop,\n    className: topClasses,\n    style: topStyle,\n    unselectable: 'on',\n    children: [core_1.RowContainerName.TOP_LEFT, core_1.RowContainerName.TOP_CENTER, core_1.RowContainerName.TOP_RIGHT, core_1.RowContainerName.TOP_FULL_WITH]\n  }), createSection({\n    section: eBodyViewport,\n    className: bodyViewportClasses,\n    children: [core_1.RowContainerName.LEFT, core_1.RowContainerName.CENTER, core_1.RowContainerName.RIGHT, core_1.RowContainerName.FULL_WIDTH]\n  }), createSection({\n    section: eBottom,\n    className: bottomClasses,\n    style: bottomStyle,\n    unselectable: 'on',\n    children: [core_1.RowContainerName.BOTTOM_LEFT, core_1.RowContainerName.BOTTOM_CENTER, core_1.RowContainerName.BOTTOM_RIGHT, core_1.RowContainerName.BOTTOM_FULL_WITH]\n  }));\n};\n\nexports.default = react_1.memo(GridBodyComp);","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/react/lib/reactUi/reactUi/gridBodyComp.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    GridBodyCtrl,\n    IGridBodyComp, RowContainerName\n} from '@ag-grid-community/core';\nimport React, { memo, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from './beansContext';\nimport GridHeaderComp from './header/gridHeaderComp';\nimport useReactCommentEffect from './reactComment';\nimport RowContainerComp from './rows/rowContainerComp';\nimport { classesList } from './utils';\n\ninterface SectionProperties {\n    section: React.RefObject<HTMLDivElement>;\n    className: string;\n    style?: React.CSSProperties;\n    unselectable?: 'on';\n}\n\nconst GridBodyComp = () => {\n\n    const {context, agStackComponentsRegistry, resizeObserverService} = useContext(BeansContext);\n\n    const [rowAnimationClass, setRowAnimationClass] = useState<string>('');\n    const [ariaColCount, setAriaColCount] = useState<number>(0);\n    const [ariaRowCount, setAriaRowCount] = useState<number>(0);\n    const [topHeight, setTopHeight] = useState<number>(0);\n    const [bottomHeight, setBottomHeight] = useState<number>(0);\n    const [topDisplay, setTopDisplay] = useState<string>('');\n    const [bottomDisplay, setBottomDisplay] = useState<string>('');\n    const [movingCss, setMovingCss] = useState<string | null>(null);\n    const [layoutClass, setLayoutClass] = useState<string>('');\n    const [forceVerticalScrollClass, setForceVerticalScrollClass] = useState<string | null>(null);\n    const [topAndBottomOverflowY, setTopAndBottomOverflowY] = useState<string>('');\n    const [cellSelectableCss, setCellSelectableCss] = useState<string | null>(null);\n\n    const eRoot = useRef<HTMLDivElement>(null);\n    const eTop = useRef<HTMLDivElement>(null);\n    const eBodyViewport = useRef<HTMLDivElement>(null);\n    const eBottom = useRef<HTMLDivElement>(null);\n\n    useReactCommentEffect(' AG Grid Body ', eRoot);\n    useReactCommentEffect(' AG Pinned Top ', eTop);\n    useReactCommentEffect(' AG Middle ', eBodyViewport);\n    useReactCommentEffect(' AG Pinned Bottom ', eBottom);\n\n    useEffect(() => {\n        const beansToDestroy: any[] = [];\n        const destroyFuncs: (() => void)[] = [];\n\n        if (!context) { return; }\n\n        const newComp = (tag: string) => {\n            const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n            const comp = context.createBean(new CompClass());\n            beansToDestroy.push(comp);\n            return comp;\n        };\n\n        eRoot.current!.appendChild(document.createComment(' AG Fake Horizontal Scroll '));\n        eRoot.current!.appendChild(newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n\n        eRoot.current!.appendChild(document.createComment(' AG Overlay Wrapper '));\n        eRoot.current!.appendChild(newComp('AG-OVERLAY-WRAPPER').getGui());\n\n        const compProxy: IGridBodyComp = {\n            setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n            setColumnCount: setAriaColCount,\n            setRowCount: setAriaRowCount,\n            setTopHeight: setTopHeight,\n            setBottomHeight: setBottomHeight,\n            setTopDisplay: setTopDisplay,\n            setBottomDisplay: setBottomDisplay,\n            setColumnMovingCss: setMovingCss,\n            updateLayoutClasses: setLayoutClass,\n            setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n            setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n            setCellSelectableCss: setCellSelectableCss,\n\n            registerBodyViewportResizeListener: listener => {\n                const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport.current!, listener);\n                destroyFuncs.push(() => unsubscribeFromResize());\n            }\n        };\n\n        const ctrl = context.createBean(new GridBodyCtrl());\n        beansToDestroy.push(ctrl);\n        ctrl.setComp(compProxy, eRoot.current!, eBodyViewport.current!, eTop.current!, eBottom.current!);\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n            destroyFuncs.forEach(f => f());\n        };\n\n    }, []);\n\n    const rootClasses = useMemo( ()=> \n        classesList('ag-root','ag-unselectable', movingCss, layoutClass), \n        [movingCss, layoutClass]\n    );\n    const bodyViewportClasses = useMemo( ()=> \n        classesList('ag-body-viewport', rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss), \n        [rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss]\n    );\n    const topClasses = useMemo( ()=> \n        classesList('ag-floating-top', cellSelectableCss), \n        [cellSelectableCss]\n    );\n    const bottomClasses = useMemo( ()=> \n        classesList('ag-floating-bottom', cellSelectableCss), \n        [cellSelectableCss]\n    );\n\n    const topStyle: React.CSSProperties = useMemo( () => ({\n        height: topHeight,\n        minHeight: topHeight,\n        display: topDisplay,\n        overflowY: (topAndBottomOverflowY as any)\n    }), [topHeight, topDisplay, topAndBottomOverflowY]);\n\n    const bottomStyle: React.CSSProperties = useMemo( ()=> ({\n        height: bottomHeight,\n        minHeight: bottomHeight,\n        display: bottomDisplay,\n        overflowY: (topAndBottomOverflowY as any)\n    }), [bottomHeight, bottomDisplay, topAndBottomOverflowY]);\n\n    const createRowContainer = (container: RowContainerName) => <RowContainerComp name={ container } key={`${container}-container`} />;\n    const createSection = ({\n        section, \n        children,\n        className, \n        style,\n        unselectable\n    }: SectionProperties & { children: RowContainerName[] } ) => (\n        <div ref={ section } className={ className } role=\"presentation\" style={ style } unselectable={unselectable}>\n            { children.map(createRowContainer) }\n        </div>\n    );\n\n    return (\n        <div ref={ eRoot } className={ rootClasses } role=\"grid\" unselectable=\"on\" aria-colcount={ ariaColCount } aria-rowcount={ ariaRowCount }>\n            <GridHeaderComp/>\n            { createSection({ section: eTop, className: topClasses, style: topStyle, unselectable: 'on', children: [\n                RowContainerName.TOP_LEFT,\n                RowContainerName.TOP_CENTER,\n                RowContainerName.TOP_RIGHT,\n                RowContainerName.TOP_FULL_WITH,\n            ]}) }\n            { createSection({ section: eBodyViewport, className: bodyViewportClasses, children: [\n                RowContainerName.LEFT,\n                RowContainerName.CENTER,\n                RowContainerName.RIGHT,\n                RowContainerName.FULL_WIDTH,\n            ]}) }\n            { createSection({ section: eBottom, className: bottomClasses, style: bottomStyle, unselectable: 'on', children: [\n                RowContainerName.BOTTOM_LEFT,\n                RowContainerName.BOTTOM_CENTER,\n                RowContainerName.BOTTOM_RIGHT,\n                RowContainerName.BOTTOM_FULL_WITH,\n            ]}) }\n        </div>\n    );\n};\n\nexport default memo(GridBodyComp);\n"]},"metadata":{},"sourceType":"script"}