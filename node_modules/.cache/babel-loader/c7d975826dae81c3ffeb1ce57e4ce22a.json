{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { AgCheckbox } from \"../../../widgets/agCheckbox\";\nimport { BeanStub } from \"../../../context/beanStub\";\nimport { Autowired } from \"../../../context/context\";\nimport { Events } from \"../../../events\";\nimport { Constants } from \"../../../constants/constants\";\nimport { setAriaRole } from \"../../../utils/aria\";\n\nvar SelectAllFeature =\n/** @class */\nfunction (_super) {\n  __extends(SelectAllFeature, _super);\n\n  function SelectAllFeature(column) {\n    var _this = _super.call(this) || this;\n\n    _this.cbSelectAllVisible = false;\n    _this.processingEventFromCheckbox = false;\n    _this.column = column;\n    var colDef = column.getColDef();\n    _this.filteredOnly = colDef ? !!colDef.headerCheckboxSelectionFilteredOnly : false;\n    return _this;\n  }\n\n  SelectAllFeature.prototype.onSpaceKeyPressed = function (e) {\n    var checkbox = this.cbSelectAll;\n\n    if (checkbox.isDisplayed() && !checkbox.getGui().contains(document.activeElement)) {\n      e.preventDefault();\n      checkbox.setValue(!checkbox.getValue());\n    }\n  };\n\n  SelectAllFeature.prototype.getCheckboxGui = function () {\n    return this.cbSelectAll.getGui();\n  };\n\n  SelectAllFeature.prototype.setComp = function (comp) {\n    this.comp = comp;\n    this.cbSelectAll = this.createManagedBean(new AgCheckbox());\n    this.cbSelectAll.addCssClass('ag-header-select-all');\n    setAriaRole(this.cbSelectAll.getGui(), 'presentation');\n    this.showOrHideSelectAll();\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.showOrHideSelectAll.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelectAll.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_SELECTION_CHANGED, this.onSelectionChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, this.onModelChanged.bind(this));\n    this.addManagedListener(this.cbSelectAll, AgCheckbox.EVENT_CHANGED, this.onCbSelectAll.bind(this));\n    this.cbSelectAll.getInputElement().setAttribute('tabindex', '-1');\n    this.refreshSelectAllLabel();\n  };\n\n  SelectAllFeature.prototype.showOrHideSelectAll = function () {\n    this.cbSelectAllVisible = this.isCheckboxSelection();\n    this.cbSelectAll.setDisplayed(this.cbSelectAllVisible);\n\n    if (this.cbSelectAllVisible) {\n      // in case user is trying this feature with the wrong model type\n      this.checkRightRowModelType(); // make sure checkbox is showing the right state\n\n      this.updateStateOfCheckbox();\n    }\n\n    this.refreshHeaderAriaDescribedBy(this.cbSelectAllVisible);\n  };\n\n  SelectAllFeature.prototype.refreshHeaderAriaDescribedBy = function (isSelectAllVisible) {\n    var describedBy = isSelectAllVisible ? this.cbSelectAll.getInputElement().id : undefined;\n    this.comp.setAriaDescribedBy(describedBy);\n  };\n\n  SelectAllFeature.prototype.onModelChanged = function () {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n\n    this.updateStateOfCheckbox();\n  };\n\n  SelectAllFeature.prototype.onSelectionChanged = function () {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n\n    this.updateStateOfCheckbox();\n  };\n\n  SelectAllFeature.prototype.getNextCheckboxState = function (selectionCount) {\n    // if no rows, always have it unselected\n    if (selectionCount.selected === 0 && selectionCount.notSelected === 0) {\n      return false;\n    } // if mix of selected and unselected, this is the tri-state\n\n\n    if (selectionCount.selected > 0 && selectionCount.notSelected > 0) {\n      return null;\n    } // only selected\n\n\n    if (selectionCount.selected > 0) {\n      return true;\n    } // nothing selected\n\n\n    return false;\n  };\n\n  SelectAllFeature.prototype.updateStateOfCheckbox = function () {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n\n    this.processingEventFromCheckbox = true;\n    var selectionCount = this.getSelectionCount();\n    var allSelected = this.getNextCheckboxState(selectionCount);\n    this.cbSelectAll.setValue(allSelected);\n    this.refreshSelectAllLabel();\n    this.processingEventFromCheckbox = false;\n  };\n\n  SelectAllFeature.prototype.refreshSelectAllLabel = function () {\n    var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n    var checked = this.cbSelectAll.getValue();\n    var ariaStatus = checked ? translate('ariaChecked', 'checked') : translate('ariaUnchecked', 'unchecked');\n    var ariaLabel = translate('ariaRowSelectAll', 'Press Space to toggle all rows selection');\n    this.cbSelectAll.setInputAriaLabel(ariaLabel + \" (\" + ariaStatus + \")\");\n  };\n\n  SelectAllFeature.prototype.getSelectionCount = function () {\n    var _this = this;\n\n    var selectedCount = 0;\n    var notSelectedCount = 0;\n\n    var callback = function (node) {\n      if (_this.gridOptionsWrapper.isGroupSelectsChildren() && node.group) {\n        return;\n      }\n\n      if (node.isSelected()) {\n        selectedCount++;\n      } else if (!node.selectable) {// don't count non-selectable nodes!\n      } else {\n        notSelectedCount++;\n      }\n    };\n\n    if (this.filteredOnly) {\n      this.gridApi.forEachNodeAfterFilter(callback);\n    } else {\n      this.gridApi.forEachNode(callback);\n    }\n\n    return {\n      notSelected: notSelectedCount,\n      selected: selectedCount\n    };\n  };\n\n  SelectAllFeature.prototype.checkRightRowModelType = function () {\n    var rowModelType = this.rowModel.getType();\n    var rowModelMatches = rowModelType === Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n\n    if (!rowModelMatches) {\n      console.warn(\"AG Grid: selectAllCheckbox is only available if using normal row model, you are using \" + rowModelType);\n    }\n  };\n\n  SelectAllFeature.prototype.onCbSelectAll = function () {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n\n    var value = this.cbSelectAll.getValue();\n\n    if (value) {\n      this.selectionService.selectAllRowNodes(this.filteredOnly);\n    } else {\n      this.selectionService.deselectAllRowNodes(this.filteredOnly);\n    }\n  };\n\n  SelectAllFeature.prototype.isCheckboxSelection = function () {\n    var result = this.column.getColDef().headerCheckboxSelection;\n\n    if (typeof result === 'function') {\n      var func = result;\n      result = func({\n        column: this.column,\n        colDef: this.column.getColDef(),\n        columnApi: this.columnApi,\n        api: this.gridApi\n      });\n    }\n\n    if (result) {\n      if (this.gridOptionsWrapper.isRowModelServerSide()) {\n        console.warn('headerCheckboxSelection is not supported for Server Side Row Model');\n        return false;\n      }\n\n      if (this.gridOptionsWrapper.isRowModelInfinite()) {\n        console.warn('headerCheckboxSelection is not supported for Infinite Row Model');\n        return false;\n      }\n\n      if (this.gridOptionsWrapper.isRowModelViewport()) {\n        console.warn('headerCheckboxSelection is not supported for Viewport Row Model');\n        return false;\n      } // otherwise the row model is compatible, so return true\n\n\n      return true;\n    }\n\n    return false;\n  };\n\n  __decorate([Autowired('gridApi')], SelectAllFeature.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('columnApi')], SelectAllFeature.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('rowModel')], SelectAllFeature.prototype, \"rowModel\", void 0);\n\n  __decorate([Autowired('selectionService')], SelectAllFeature.prototype, \"selectionService\", void 0);\n\n  return SelectAllFeature;\n}(BeanStub);\n\nexport { SelectAllFeature };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/headerRendering/cells/column/selectAllFeature.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","AgCheckbox","BeanStub","Autowired","Events","Constants","setAriaRole","SelectAllFeature","_super","column","_this","call","cbSelectAllVisible","processingEventFromCheckbox","colDef","getColDef","filteredOnly","headerCheckboxSelectionFilteredOnly","onSpaceKeyPressed","e","checkbox","cbSelectAll","isDisplayed","getGui","contains","document","activeElement","preventDefault","setValue","getValue","getCheckboxGui","setComp","comp","createManagedBean","addCssClass","showOrHideSelectAll","addManagedListener","eventService","EVENT_NEW_COLUMNS_LOADED","bind","EVENT_DISPLAYED_COLUMNS_CHANGED","EVENT_SELECTION_CHANGED","onSelectionChanged","EVENT_MODEL_UPDATED","onModelChanged","EVENT_CHANGED","onCbSelectAll","getInputElement","setAttribute","refreshSelectAllLabel","isCheckboxSelection","setDisplayed","checkRightRowModelType","updateStateOfCheckbox","refreshHeaderAriaDescribedBy","isSelectAllVisible","describedBy","id","undefined","setAriaDescribedBy","getNextCheckboxState","selectionCount","selected","notSelected","getSelectionCount","allSelected","translate","gridOptionsWrapper","getLocaleTextFunc","checked","ariaStatus","ariaLabel","setInputAriaLabel","selectedCount","notSelectedCount","callback","node","isGroupSelectsChildren","group","isSelected","selectable","gridApi","forEachNodeAfterFilter","forEachNode","rowModelType","rowModel","getType","rowModelMatches","ROW_MODEL_TYPE_CLIENT_SIDE","console","warn","value","selectionService","selectAllRowNodes","deselectAllRowNodes","result","headerCheckboxSelection","func","columnApi","api","isRowModelServerSide","isRowModelInfinite","isRowModelViewport"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AgCheckbox } from \"../../../widgets/agCheckbox\";\nimport { BeanStub } from \"../../../context/beanStub\";\nimport { Autowired } from \"../../../context/context\";\nimport { Events } from \"../../../events\";\nimport { Constants } from \"../../../constants/constants\";\nimport { setAriaRole } from \"../../../utils/aria\";\nvar SelectAllFeature = /** @class */ (function (_super) {\n    __extends(SelectAllFeature, _super);\n    function SelectAllFeature(column) {\n        var _this = _super.call(this) || this;\n        _this.cbSelectAllVisible = false;\n        _this.processingEventFromCheckbox = false;\n        _this.column = column;\n        var colDef = column.getColDef();\n        _this.filteredOnly = colDef ? !!colDef.headerCheckboxSelectionFilteredOnly : false;\n        return _this;\n    }\n    SelectAllFeature.prototype.onSpaceKeyPressed = function (e) {\n        var checkbox = this.cbSelectAll;\n        if (checkbox.isDisplayed() && !checkbox.getGui().contains(document.activeElement)) {\n            e.preventDefault();\n            checkbox.setValue(!checkbox.getValue());\n        }\n    };\n    SelectAllFeature.prototype.getCheckboxGui = function () {\n        return this.cbSelectAll.getGui();\n    };\n    SelectAllFeature.prototype.setComp = function (comp) {\n        this.comp = comp;\n        this.cbSelectAll = this.createManagedBean(new AgCheckbox());\n        this.cbSelectAll.addCssClass('ag-header-select-all');\n        setAriaRole(this.cbSelectAll.getGui(), 'presentation');\n        this.showOrHideSelectAll();\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.showOrHideSelectAll.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelectAll.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_SELECTION_CHANGED, this.onSelectionChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, this.onModelChanged.bind(this));\n        this.addManagedListener(this.cbSelectAll, AgCheckbox.EVENT_CHANGED, this.onCbSelectAll.bind(this));\n        this.cbSelectAll.getInputElement().setAttribute('tabindex', '-1');\n        this.refreshSelectAllLabel();\n    };\n    SelectAllFeature.prototype.showOrHideSelectAll = function () {\n        this.cbSelectAllVisible = this.isCheckboxSelection();\n        this.cbSelectAll.setDisplayed(this.cbSelectAllVisible);\n        if (this.cbSelectAllVisible) {\n            // in case user is trying this feature with the wrong model type\n            this.checkRightRowModelType();\n            // make sure checkbox is showing the right state\n            this.updateStateOfCheckbox();\n        }\n        this.refreshHeaderAriaDescribedBy(this.cbSelectAllVisible);\n    };\n    SelectAllFeature.prototype.refreshHeaderAriaDescribedBy = function (isSelectAllVisible) {\n        var describedBy = isSelectAllVisible ? this.cbSelectAll.getInputElement().id : undefined;\n        this.comp.setAriaDescribedBy(describedBy);\n    };\n    SelectAllFeature.prototype.onModelChanged = function () {\n        if (!this.cbSelectAllVisible) {\n            return;\n        }\n        this.updateStateOfCheckbox();\n    };\n    SelectAllFeature.prototype.onSelectionChanged = function () {\n        if (!this.cbSelectAllVisible) {\n            return;\n        }\n        this.updateStateOfCheckbox();\n    };\n    SelectAllFeature.prototype.getNextCheckboxState = function (selectionCount) {\n        // if no rows, always have it unselected\n        if (selectionCount.selected === 0 && selectionCount.notSelected === 0) {\n            return false;\n        }\n        // if mix of selected and unselected, this is the tri-state\n        if (selectionCount.selected > 0 && selectionCount.notSelected > 0) {\n            return null;\n        }\n        // only selected\n        if (selectionCount.selected > 0) {\n            return true;\n        }\n        // nothing selected\n        return false;\n    };\n    SelectAllFeature.prototype.updateStateOfCheckbox = function () {\n        if (this.processingEventFromCheckbox) {\n            return;\n        }\n        this.processingEventFromCheckbox = true;\n        var selectionCount = this.getSelectionCount();\n        var allSelected = this.getNextCheckboxState(selectionCount);\n        this.cbSelectAll.setValue(allSelected);\n        this.refreshSelectAllLabel();\n        this.processingEventFromCheckbox = false;\n    };\n    SelectAllFeature.prototype.refreshSelectAllLabel = function () {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        var checked = this.cbSelectAll.getValue();\n        var ariaStatus = checked ? translate('ariaChecked', 'checked') : translate('ariaUnchecked', 'unchecked');\n        var ariaLabel = translate('ariaRowSelectAll', 'Press Space to toggle all rows selection');\n        this.cbSelectAll.setInputAriaLabel(ariaLabel + \" (\" + ariaStatus + \")\");\n    };\n    SelectAllFeature.prototype.getSelectionCount = function () {\n        var _this = this;\n        var selectedCount = 0;\n        var notSelectedCount = 0;\n        var callback = function (node) {\n            if (_this.gridOptionsWrapper.isGroupSelectsChildren() && node.group) {\n                return;\n            }\n            if (node.isSelected()) {\n                selectedCount++;\n            }\n            else if (!node.selectable) {\n                // don't count non-selectable nodes!\n            }\n            else {\n                notSelectedCount++;\n            }\n        };\n        if (this.filteredOnly) {\n            this.gridApi.forEachNodeAfterFilter(callback);\n        }\n        else {\n            this.gridApi.forEachNode(callback);\n        }\n        return {\n            notSelected: notSelectedCount,\n            selected: selectedCount\n        };\n    };\n    SelectAllFeature.prototype.checkRightRowModelType = function () {\n        var rowModelType = this.rowModel.getType();\n        var rowModelMatches = rowModelType === Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        if (!rowModelMatches) {\n            console.warn(\"AG Grid: selectAllCheckbox is only available if using normal row model, you are using \" + rowModelType);\n        }\n    };\n    SelectAllFeature.prototype.onCbSelectAll = function () {\n        if (this.processingEventFromCheckbox) {\n            return;\n        }\n        if (!this.cbSelectAllVisible) {\n            return;\n        }\n        var value = this.cbSelectAll.getValue();\n        if (value) {\n            this.selectionService.selectAllRowNodes(this.filteredOnly);\n        }\n        else {\n            this.selectionService.deselectAllRowNodes(this.filteredOnly);\n        }\n    };\n    SelectAllFeature.prototype.isCheckboxSelection = function () {\n        var result = this.column.getColDef().headerCheckboxSelection;\n        if (typeof result === 'function') {\n            var func = result;\n            result = func({\n                column: this.column,\n                colDef: this.column.getColDef(),\n                columnApi: this.columnApi,\n                api: this.gridApi\n            });\n        }\n        if (result) {\n            if (this.gridOptionsWrapper.isRowModelServerSide()) {\n                console.warn('headerCheckboxSelection is not supported for Server Side Row Model');\n                return false;\n            }\n            if (this.gridOptionsWrapper.isRowModelInfinite()) {\n                console.warn('headerCheckboxSelection is not supported for Infinite Row Model');\n                return false;\n            }\n            if (this.gridOptionsWrapper.isRowModelViewport()) {\n                console.warn('headerCheckboxSelection is not supported for Viewport Row Model');\n                return false;\n            }\n            // otherwise the row model is compatible, so return true\n            return true;\n        }\n        return false;\n    };\n    __decorate([\n        Autowired('gridApi')\n    ], SelectAllFeature.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], SelectAllFeature.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('rowModel')\n    ], SelectAllFeature.prototype, \"rowModel\", void 0);\n    __decorate([\n        Autowired('selectionService')\n    ], SelectAllFeature.prototype, \"selectionService\", void 0);\n    return SelectAllFeature;\n}(BeanStub));\nexport { SelectAllFeature };\n"]},"metadata":{},"sourceType":"module"}