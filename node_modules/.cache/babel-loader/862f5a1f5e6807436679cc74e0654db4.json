{"ast":null,"code":"// @ag-grid-community/react v26.2.0\n\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar beansContext_1 = require(\"../beansContext\");\n\nvar core_1 = require(\"@ag-grid-community/core\");\n\nvar utils_1 = require(\"../utils\");\n\nvar headerRowComp_1 = __importDefault(require(\"./headerRowComp\"));\n\nvar HeaderRowContainerComp = function (props) {\n  var _a = react_1.useState(new utils_1.CssClasses()),\n      cssClasses = _a[0],\n      setCssClasses = _a[1];\n\n  var _b = react_1.useState(),\n      centerContainerWidth = _b[0],\n      setCenterContainerWidth = _b[1];\n\n  var _c = react_1.useState(),\n      centerContainerTransform = _c[0],\n      setCenterContainerTransform = _c[1];\n\n  var _d = react_1.useState(),\n      pinnedContainerWidth = _d[0],\n      setPinnedContainerWidth = _d[1];\n\n  var _e = react_1.useState([]),\n      headerRowCtrls = _e[0],\n      setHeaderRowCtrls = _e[1];\n\n  var context = react_1.useContext(beansContext_1.BeansContext).context;\n  var eGui = react_1.useRef(null);\n  var pinnedLeft = props.pinned === core_1.Constants.PINNED_LEFT;\n  var pinnedRight = props.pinned === core_1.Constants.PINNED_RIGHT;\n  var centre = !pinnedLeft && !pinnedRight;\n  react_1.useEffect(function () {\n    var compProxy = {\n      addOrRemoveCssClass: function (name, on) {\n        return setCssClasses(function (prev) {\n          return prev.setClass(name, on);\n        });\n      },\n      setCtrls: function (ctrls) {\n        return setHeaderRowCtrls(ctrls);\n      },\n      // centre only\n      setCenterWidth: function (width) {\n        return setCenterContainerWidth(width);\n      },\n      setContainerTransform: function (transform) {\n        return setCenterContainerTransform(transform);\n      },\n      // pinned only\n      setPinnedContainerWidth: function (width) {\n        return setPinnedContainerWidth(width);\n      }\n    };\n    var ctrl = context.createBean(new core_1.HeaderRowContainerCtrl(props.pinned));\n    ctrl.setComp(compProxy, eGui.current);\n    return function () {\n      context.destroyBean(ctrl);\n    };\n  }, []);\n  var className = react_1.useMemo(function () {\n    return cssClasses.toString();\n  }, [cssClasses]);\n\n  var insertRowsJsx = function () {\n    return headerRowCtrls.map(function (ctrl) {\n      return react_1.default.createElement(headerRowComp_1.default, {\n        ctrl: ctrl,\n        key: ctrl.getInstanceId()\n      });\n    });\n  };\n\n  var eCenterContainerStyle = react_1.useMemo(function () {\n    return {\n      width: centerContainerWidth,\n      transform: centerContainerTransform\n    };\n  }, [centerContainerWidth, centerContainerTransform]);\n  var ePinnedStyle = react_1.useMemo(function () {\n    return {\n      width: pinnedContainerWidth,\n      minWidth: pinnedContainerWidth,\n      maxWidth: pinnedContainerWidth\n    };\n  }, [pinnedContainerWidth]);\n  return react_1.default.createElement(react_1.default.Fragment, null, pinnedLeft && react_1.default.createElement(\"div\", {\n    ref: eGui,\n    className: \"ag-pinned-left-header \" + className,\n    role: \"presentation\",\n    style: ePinnedStyle\n  }, insertRowsJsx()), pinnedRight && react_1.default.createElement(\"div\", {\n    ref: eGui,\n    className: \"ag-pinned-right-header \" + className,\n    role: \"presentation\",\n    style: ePinnedStyle\n  }, insertRowsJsx()), centre && react_1.default.createElement(\"div\", {\n    ref: eGui,\n    className: \"ag-header-viewport \" + className,\n    role: \"presentation\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"ag-header-container\",\n    role: \"rowgroup\",\n    style: eCenterContainerStyle\n  }, insertRowsJsx())));\n};\n\nexports.default = react_1.memo(HeaderRowContainerComp);","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/react/lib/reactUi/header/reactUi/header/headerRowContainerComp.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { memo, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport {\n    IHeaderRowContainerComp, HeaderRowCtrl, HeaderRowContainerCtrl, Constants\n} from '@ag-grid-community/core';\nimport { CssClasses } from '../utils';\nimport HeaderRowComp from './headerRowComp';\n\n\nconst HeaderRowContainerComp = (props: {pinned: string | null}) => {\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses());\n    const [centerContainerWidth, setCenterContainerWidth] = useState<string>();\n    const [centerContainerTransform, setCenterContainerTransform] = useState<string>();\n    const [pinnedContainerWidth, setPinnedContainerWidth] = useState<string>();\n    const [headerRowCtrls, setHeaderRowCtrls] = useState<HeaderRowCtrl[]>([]);\n\n    const {context} = useContext(BeansContext);\n    const eGui = useRef<HTMLDivElement>(null);\n\n    const pinnedLeft = props.pinned === Constants.PINNED_LEFT;\n    const pinnedRight = props.pinned === Constants.PINNED_RIGHT;\n    const centre = !pinnedLeft && !pinnedRight;\n\n    useEffect(() => {\n\n        const compProxy: IHeaderRowContainerComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setCtrls: ctrls => setHeaderRowCtrls(ctrls),\n\n            // centre only\n            setCenterWidth: width => setCenterContainerWidth(width),\n            setContainerTransform: transform => setCenterContainerTransform(transform),\n\n            // pinned only\n            setPinnedContainerWidth: width => setPinnedContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n        ctrl.setComp(compProxy, eGui.current!);\n\n        return () => {\n            context.destroyBean(ctrl);\n        };\n\n    }, []);\n\n    const className = useMemo( ()=> cssClasses.toString(), [cssClasses]);\n\n    const insertRowsJsx = ()=> headerRowCtrls.map( ctrl => <HeaderRowComp ctrl={ctrl} key={ctrl.getInstanceId()} /> );\n\n    const eCenterContainerStyle = useMemo( ()=> ({\n        width: centerContainerWidth,\n        transform: centerContainerTransform\n    }), [centerContainerWidth, centerContainerTransform]);\n\n    const ePinnedStyle = useMemo( ()=> ({\n        width: pinnedContainerWidth,\n        minWidth: pinnedContainerWidth,\n        maxWidth: pinnedContainerWidth,\n    }), [pinnedContainerWidth]);\n\n    return (\n        <>\n            { \n                pinnedLeft && \n                <div ref={eGui} className={\"ag-pinned-left-header \" + className} role=\"presentation\" style={ePinnedStyle}>\n                    { insertRowsJsx() }\n                </div>\n            }\n            { \n                pinnedRight && \n                <div ref={eGui} className={\"ag-pinned-right-header \" + className} role=\"presentation\" style={ePinnedStyle}>\n                { insertRowsJsx() }\n            </div>\n            }\n            { \n                centre && \n                <div ref={eGui} className={\"ag-header-viewport \" + className} role=\"presentation\">\n                    <div className={\"ag-header-container\"} role=\"rowgroup\" style={eCenterContainerStyle}>\n                        { insertRowsJsx() }\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default memo(HeaderRowContainerComp);\n"]},"metadata":{},"sourceType":"script"}