{"ast":null,"code":"'use strict';\n\nconst Promise = require('lie');\n\nconst combine = require('./combine');\n\nconst Buffer = require('buffer').Buffer;\n\nmodule.exports = binaryAjax;\n\nfunction binaryAjax(_url, type) {\n  return new Promise(function (resolve, reject) {\n    const url = combine(_url, type);\n    const ajax = new XMLHttpRequest();\n    ajax.open('GET', url, true);\n\n    if (type !== 'prj' && type !== 'cpg') {\n      ajax.responseType = 'arraybuffer';\n    }\n\n    ajax.addEventListener('load', function () {\n      if (ajax.status > 399) {\n        if (type === 'prj' || type === 'cpg') {\n          return resolve(false);\n        } else {\n          return reject(new Error(ajax.status));\n        }\n      }\n\n      if (type !== 'prj' && type !== 'cpg') {\n        return resolve(Buffer.from(ajax.response));\n      } else {\n        return resolve(ajax.response);\n      }\n    }, false);\n    ajax.send();\n  });\n}","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/shpjs/lib/binaryajax-browser.js"],"names":["Promise","require","combine","Buffer","module","exports","binaryAjax","_url","type","resolve","reject","url","ajax","XMLHttpRequest","open","responseType","addEventListener","status","Error","from","response","send"],"mappings":"AAAA;;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,KAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAP,CAAkBE,MAAjC;;AACAC,MAAM,CAACC,OAAP,GAAiBC,UAAjB;;AACA,SAASA,UAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiC;AAC/B,SAAO,IAAIR,OAAJ,CAAY,UAAUS,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,UAAMC,GAAG,GAAGT,OAAO,CAACK,IAAD,EAAOC,IAAP,CAAnB;AACA,UAAMI,IAAI,GAAG,IAAIC,cAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,IAAL,CAAU,KAAV,EAAiBH,GAAjB,EAAsB,IAAtB;;AACA,QAAIH,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,KAA/B,EAAsC;AACpCI,MAAAA,IAAI,CAACG,YAAL,GAAoB,aAApB;AACD;;AACDH,IAAAA,IAAI,CAACI,gBAAL,CAAsB,MAAtB,EAA8B,YAAY;AACxC,UAAIJ,IAAI,CAACK,MAAL,GAAc,GAAlB,EAAuB;AACrB,YAAIT,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,KAA/B,EAAsC;AACpC,iBAAOC,OAAO,CAAC,KAAD,CAAd;AACD,SAFD,MAEO;AACL,iBAAOC,MAAM,CAAC,IAAIQ,KAAJ,CAAUN,IAAI,CAACK,MAAf,CAAD,CAAb;AACD;AACF;;AACD,UAAIT,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,KAA/B,EAAsC;AACpC,eAAOC,OAAO,CAACN,MAAM,CAACgB,IAAP,CAAYP,IAAI,CAACQ,QAAjB,CAAD,CAAd;AACD,OAFD,MAEO;AACL,eAAOX,OAAO,CAACG,IAAI,CAACQ,QAAN,CAAd;AACD;AACF,KAbD,EAaG,KAbH;AAcAR,IAAAA,IAAI,CAACS,IAAL;AACD,GAtBM,CAAP;AAuBD","sourcesContent":["'use strict';\nconst Promise = require('lie');\nconst combine = require('./combine');\nconst Buffer = require('buffer').Buffer;\nmodule.exports = binaryAjax;\nfunction binaryAjax (_url, type) {\n  return new Promise(function (resolve, reject) {\n    const url = combine(_url, type);\n    const ajax = new XMLHttpRequest();\n    ajax.open('GET', url, true);\n    if (type !== 'prj' && type !== 'cpg') {\n      ajax.responseType = 'arraybuffer';\n    }\n    ajax.addEventListener('load', function () {\n      if (ajax.status > 399) {\n        if (type === 'prj' || type === 'cpg') {\n          return resolve(false);\n        } else {\n          return reject(new Error(ajax.status));\n        }\n      }\n      if (type !== 'prj' && type !== 'cpg') {\n        return resolve(Buffer.from(ajax.response));\n      } else {\n        return resolve(ajax.response);\n      }\n    }, false);\n    ajax.send();\n  });\n}\n"]},"metadata":{},"sourceType":"script"}