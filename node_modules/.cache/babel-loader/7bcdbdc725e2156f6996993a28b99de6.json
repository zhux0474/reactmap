{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar Events =\n/** @class */\nfunction () {\n  function Events() {}\n  /** Everything has changed with the columns. Either complete new set of columns set, or user called setState() */\n\n  /** @deprecated - grid no longer uses this, and setSate() also fires individual events */\n\n\n  Events.EVENT_COLUMN_EVERYTHING_CHANGED = 'columnEverythingChanged';\n  /** User has set in new columns. */\n\n  Events.EVENT_NEW_COLUMNS_LOADED = 'newColumnsLoaded';\n  /** The pivot mode flag was changed */\n\n  Events.EVENT_COLUMN_PIVOT_MODE_CHANGED = 'columnPivotModeChanged';\n  /** A row group column was added, removed or order changed. */\n\n  Events.EVENT_COLUMN_ROW_GROUP_CHANGED = 'columnRowGroupChanged';\n  /** expandAll / collapseAll was called from the api. */\n\n  Events.EVENT_EXPAND_COLLAPSE_ALL = 'expandOrCollapseAll';\n  /** A pivot column was added, removed or order changed. */\n\n  Events.EVENT_COLUMN_PIVOT_CHANGED = 'columnPivotChanged';\n  /** The list of grid columns has changed. */\n\n  Events.EVENT_GRID_COLUMNS_CHANGED = 'gridColumnsChanged';\n  /** A value column was added, removed or agg function was changed. */\n\n  Events.EVENT_COLUMN_VALUE_CHANGED = 'columnValueChanged';\n  /** A column was moved */\n\n  Events.EVENT_COLUMN_MOVED = 'columnMoved';\n  /** One or more columns was shown / hidden */\n\n  Events.EVENT_COLUMN_VISIBLE = 'columnVisible';\n  /** One or more columns was pinned / unpinned*/\n\n  Events.EVENT_COLUMN_PINNED = 'columnPinned';\n  /** A column group was opened / closed */\n\n  Events.EVENT_COLUMN_GROUP_OPENED = 'columnGroupOpened';\n  /** One or more columns was resized. If just one, the column in the event is set. */\n\n  Events.EVENT_COLUMN_RESIZED = 'columnResized';\n  /** The list of displayed columns has changed, can result from columns open / close, column move, pivot, group, etc */\n\n  Events.EVENT_DISPLAYED_COLUMNS_CHANGED = 'displayedColumnsChanged';\n  /** The list of virtual columns has changed, results from viewport changing */\n\n  Events.EVENT_VIRTUAL_COLUMNS_CHANGED = 'virtualColumnsChanged';\n  /** Async Transactions Executed */\n\n  Events.EVENT_ASYNC_TRANSACTIONS_FLUSHED = 'asyncTransactionsFlushed';\n  /** A row group was opened / closed */\n\n  Events.EVENT_ROW_GROUP_OPENED = 'rowGroupOpened';\n  /** The client has set new data into the grid */\n\n  Events.EVENT_ROW_DATA_CHANGED = 'rowDataChanged';\n  /** The client has updated data for the grid */\n\n  Events.EVENT_ROW_DATA_UPDATED = 'rowDataUpdated';\n  /** The client has set new floating data into the grid */\n\n  Events.EVENT_PINNED_ROW_DATA_CHANGED = 'pinnedRowDataChanged';\n  /** Range selection has changed */\n\n  Events.EVENT_RANGE_SELECTION_CHANGED = 'rangeSelectionChanged';\n  /** Chart was created */\n\n  Events.EVENT_CHART_CREATED = 'chartCreated';\n  /** Chart Range selection has changed */\n\n  Events.EVENT_CHART_RANGE_SELECTION_CHANGED = 'chartRangeSelectionChanged';\n  /** Chart Options have changed */\n\n  Events.EVENT_CHART_OPTIONS_CHANGED = 'chartOptionsChanged';\n  /** Chart was destroyed */\n\n  Events.EVENT_CHART_DESTROYED = 'chartDestroyed';\n  /** For when the tool panel is shown / hidden */\n\n  Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED = 'toolPanelVisibleChanged';\n  Events.EVENT_COLUMN_PANEL_ITEM_DRAG_START = 'columnPanelItemDragStart';\n  Events.EVENT_COLUMN_PANEL_ITEM_DRAG_END = 'columnPanelItemDragEnd';\n  /** Model was updated - grid updates the drawn rows when this happens */\n\n  Events.EVENT_MODEL_UPDATED = 'modelUpdated';\n  Events.EVENT_PASTE_START = 'pasteStart';\n  Events.EVENT_PASTE_END = 'pasteEnd';\n  Events.EVENT_FILL_START = 'fillStart';\n  Events.EVENT_FILL_END = 'fillEnd';\n  Events.EVENT_CELL_CLICKED = 'cellClicked';\n  Events.EVENT_CELL_DOUBLE_CLICKED = 'cellDoubleClicked';\n  Events.EVENT_CELL_MOUSE_DOWN = 'cellMouseDown';\n  Events.EVENT_CELL_CONTEXT_MENU = 'cellContextMenu';\n  Events.EVENT_CELL_VALUE_CHANGED = 'cellValueChanged';\n  Events.EVENT_ROW_VALUE_CHANGED = 'rowValueChanged';\n  Events.EVENT_CELL_FOCUSED = 'cellFocused';\n  Events.EVENT_ROW_SELECTED = 'rowSelected';\n  Events.EVENT_SELECTION_CHANGED = 'selectionChanged';\n  Events.EVENT_CELL_KEY_DOWN = 'cellKeyDown';\n  Events.EVENT_CELL_KEY_PRESS = 'cellKeyPress';\n  Events.EVENT_CELL_MOUSE_OVER = 'cellMouseOver';\n  Events.EVENT_CELL_MOUSE_OUT = 'cellMouseOut';\n  /** 2 events for filtering. The grid LISTENS for filterChanged and afterFilterChanged */\n\n  Events.EVENT_FILTER_CHANGED = 'filterChanged';\n  /** Filter was change but not applied. Only useful if apply buttons are used in filters. */\n\n  Events.EVENT_FILTER_MODIFIED = 'filterModified';\n  Events.EVENT_FILTER_OPENED = 'filterOpened';\n  Events.EVENT_SORT_CHANGED = 'sortChanged';\n  /** A row was removed from the dom, for any reason. Use to clean up resources (if any) used by the row. */\n\n  Events.EVENT_VIRTUAL_ROW_REMOVED = 'virtualRowRemoved';\n  Events.EVENT_ROW_CLICKED = 'rowClicked';\n  Events.EVENT_ROW_DOUBLE_CLICKED = 'rowDoubleClicked';\n  /** Gets called once after the grid has finished initialising. */\n\n  Events.EVENT_GRID_READY = 'gridReady';\n  /** Width of height of the main grid div has changed. Grid listens for this and does layout of grid if it's\n   * changed, so always filling the space it was given. */\n\n  Events.EVENT_GRID_SIZE_CHANGED = 'gridSizeChanged';\n  /** The indexes of the rows rendered has changed, eg user has scrolled to a new vertical position. */\n\n  Events.EVENT_VIEWPORT_CHANGED = 'viewportChanged';\n  /* The width of the scrollbar has been calculated */\n\n  Events.EVENT_SCROLLBAR_WIDTH_CHANGED = 'scrollbarWidthChanged';\n  /** Rows were rendered for the first time (ie on async data load). */\n\n  Events.EVENT_FIRST_DATA_RENDERED = 'firstDataRendered';\n  /** A column drag has started, either resizing a column or moving a column. */\n\n  Events.EVENT_DRAG_STARTED = 'dragStarted';\n  /** A column drag has stopped */\n\n  Events.EVENT_DRAG_STOPPED = 'dragStopped';\n  Events.EVENT_CHECKBOX_CHANGED = 'checkboxChanged';\n  Events.EVENT_ROW_EDITING_STARTED = 'rowEditingStarted';\n  Events.EVENT_ROW_EDITING_STOPPED = 'rowEditingStopped';\n  Events.EVENT_CELL_EDITING_STARTED = 'cellEditingStarted';\n  Events.EVENT_CELL_EDITING_STOPPED = 'cellEditingStopped';\n  /** Main body of grid has scrolled, either horizontally or vertically */\n\n  Events.EVENT_BODY_SCROLL = 'bodyScroll';\n  /** Main body of the grid has stopped scrolling, either horizontally or vertically */\n\n  Events.EVENT_BODY_SCROLL_END = 'bodyScrollEnd';\n  Events.EVENT_HEIGHT_SCALE_CHANGED = 'heightScaleChanged';\n  /** The displayed page for pagination has changed. For example the data was filtered or sorted,\n   * or the user has moved to a different page. */\n\n  Events.EVENT_PAGINATION_CHANGED = 'paginationChanged';\n  /** Only used by React, Angular 2+, Web Components and VueJS AG Grid components\n   * (not used if doing plain JavaScript or Angular 1.x). If the grid receives changes due\n   * to bound properties, this event fires after the grid has finished processing the change. */\n\n  Events.EVENT_COMPONENT_STATE_CHANGED = 'componentStateChanged';\n  /*****************************  INTERNAL EVENTS: START ******************************************* */\n\n  /** Please remember to add to ComponentUtil.EXCLUDED_INTERNAL_EVENTS to not have these events exposed to framework components. */\n\n  /** All items from here down are used internally by the grid, not intended for external use. */\n  // not documented, either experimental, or we just don't want users using an depending on them\n\n  Events.EVENT_BODY_HEIGHT_CHANGED = 'bodyHeightChanged';\n  Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED = 'displayedColumnsWidthChanged';\n  Events.EVENT_SCROLL_VISIBILITY_CHANGED = 'scrollVisibilityChanged';\n  Events.EVENT_COLUMN_HOVER_CHANGED = 'columnHoverChanged';\n  Events.EVENT_FLASH_CELLS = 'flashCells';\n  Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED = 'paginationPixelOffsetChanged';\n  Events.EVENT_DISPLAYED_ROWS_CHANGED = 'displayedRowsChanged';\n  Events.EVENT_LEFT_PINNED_WIDTH_CHANGED = 'leftPinnedWidthChanged';\n  Events.EVENT_RIGHT_PINNED_WIDTH_CHANGED = 'rightPinnedWidthChanged';\n  Events.EVENT_ROW_CONTAINER_HEIGHT_CHANGED = 'rowContainerHeightChanged';\n  Events.EVENT_ROW_DRAG_ENTER = 'rowDragEnter';\n  Events.EVENT_ROW_DRAG_MOVE = 'rowDragMove';\n  Events.EVENT_ROW_DRAG_LEAVE = 'rowDragLeave';\n  Events.EVENT_ROW_DRAG_END = 'rowDragEnd'; // primarily for charts\n\n  Events.EVENT_POPUP_TO_FRONT = 'popupToFront'; // these are used for server side group and agg - only used by CS with Viewport Row Model - intention is\n  // to design these better around server side functions and then release to general public when fully working with\n  // all the row models.\n\n  Events.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST = 'columnRowGroupChangeRequest';\n  Events.EVENT_COLUMN_PIVOT_CHANGE_REQUEST = 'columnPivotChangeRequest';\n  Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST = 'columnValueChangeRequest';\n  Events.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST = 'columnAggFuncChangeRequest';\n  Events.EVENT_KEYBOARD_FOCUS = 'keyboardFocus';\n  Events.EVENT_MOUSE_FOCUS = 'mouseFocus';\n  Events.EVENT_STORE_UPDATED = 'storeUpdated';\n  return Events;\n}();\n\nexport { Events };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/eventKeys.js"],"names":["Events","EVENT_COLUMN_EVERYTHING_CHANGED","EVENT_NEW_COLUMNS_LOADED","EVENT_COLUMN_PIVOT_MODE_CHANGED","EVENT_COLUMN_ROW_GROUP_CHANGED","EVENT_EXPAND_COLLAPSE_ALL","EVENT_COLUMN_PIVOT_CHANGED","EVENT_GRID_COLUMNS_CHANGED","EVENT_COLUMN_VALUE_CHANGED","EVENT_COLUMN_MOVED","EVENT_COLUMN_VISIBLE","EVENT_COLUMN_PINNED","EVENT_COLUMN_GROUP_OPENED","EVENT_COLUMN_RESIZED","EVENT_DISPLAYED_COLUMNS_CHANGED","EVENT_VIRTUAL_COLUMNS_CHANGED","EVENT_ASYNC_TRANSACTIONS_FLUSHED","EVENT_ROW_GROUP_OPENED","EVENT_ROW_DATA_CHANGED","EVENT_ROW_DATA_UPDATED","EVENT_PINNED_ROW_DATA_CHANGED","EVENT_RANGE_SELECTION_CHANGED","EVENT_CHART_CREATED","EVENT_CHART_RANGE_SELECTION_CHANGED","EVENT_CHART_OPTIONS_CHANGED","EVENT_CHART_DESTROYED","EVENT_TOOL_PANEL_VISIBLE_CHANGED","EVENT_COLUMN_PANEL_ITEM_DRAG_START","EVENT_COLUMN_PANEL_ITEM_DRAG_END","EVENT_MODEL_UPDATED","EVENT_PASTE_START","EVENT_PASTE_END","EVENT_FILL_START","EVENT_FILL_END","EVENT_CELL_CLICKED","EVENT_CELL_DOUBLE_CLICKED","EVENT_CELL_MOUSE_DOWN","EVENT_CELL_CONTEXT_MENU","EVENT_CELL_VALUE_CHANGED","EVENT_ROW_VALUE_CHANGED","EVENT_CELL_FOCUSED","EVENT_ROW_SELECTED","EVENT_SELECTION_CHANGED","EVENT_CELL_KEY_DOWN","EVENT_CELL_KEY_PRESS","EVENT_CELL_MOUSE_OVER","EVENT_CELL_MOUSE_OUT","EVENT_FILTER_CHANGED","EVENT_FILTER_MODIFIED","EVENT_FILTER_OPENED","EVENT_SORT_CHANGED","EVENT_VIRTUAL_ROW_REMOVED","EVENT_ROW_CLICKED","EVENT_ROW_DOUBLE_CLICKED","EVENT_GRID_READY","EVENT_GRID_SIZE_CHANGED","EVENT_VIEWPORT_CHANGED","EVENT_SCROLLBAR_WIDTH_CHANGED","EVENT_FIRST_DATA_RENDERED","EVENT_DRAG_STARTED","EVENT_DRAG_STOPPED","EVENT_CHECKBOX_CHANGED","EVENT_ROW_EDITING_STARTED","EVENT_ROW_EDITING_STOPPED","EVENT_CELL_EDITING_STARTED","EVENT_CELL_EDITING_STOPPED","EVENT_BODY_SCROLL","EVENT_BODY_SCROLL_END","EVENT_HEIGHT_SCALE_CHANGED","EVENT_PAGINATION_CHANGED","EVENT_COMPONENT_STATE_CHANGED","EVENT_BODY_HEIGHT_CHANGED","EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED","EVENT_SCROLL_VISIBILITY_CHANGED","EVENT_COLUMN_HOVER_CHANGED","EVENT_FLASH_CELLS","EVENT_PAGINATION_PIXEL_OFFSET_CHANGED","EVENT_DISPLAYED_ROWS_CHANGED","EVENT_LEFT_PINNED_WIDTH_CHANGED","EVENT_RIGHT_PINNED_WIDTH_CHANGED","EVENT_ROW_CONTAINER_HEIGHT_CHANGED","EVENT_ROW_DRAG_ENTER","EVENT_ROW_DRAG_MOVE","EVENT_ROW_DRAG_LEAVE","EVENT_ROW_DRAG_END","EVENT_POPUP_TO_FRONT","EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST","EVENT_COLUMN_PIVOT_CHANGE_REQUEST","EVENT_COLUMN_VALUE_CHANGE_REQUEST","EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST","EVENT_KEYBOARD_FOCUS","EVENT_MOUSE_FOCUS","EVENT_STORE_UPDATED"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar Events = /** @class */ (function () {\n    function Events() {\n    }\n    /** Everything has changed with the columns. Either complete new set of columns set, or user called setState() */\n    /** @deprecated - grid no longer uses this, and setSate() also fires individual events */\n    Events.EVENT_COLUMN_EVERYTHING_CHANGED = 'columnEverythingChanged';\n    /** User has set in new columns. */\n    Events.EVENT_NEW_COLUMNS_LOADED = 'newColumnsLoaded';\n    /** The pivot mode flag was changed */\n    Events.EVENT_COLUMN_PIVOT_MODE_CHANGED = 'columnPivotModeChanged';\n    /** A row group column was added, removed or order changed. */\n    Events.EVENT_COLUMN_ROW_GROUP_CHANGED = 'columnRowGroupChanged';\n    /** expandAll / collapseAll was called from the api. */\n    Events.EVENT_EXPAND_COLLAPSE_ALL = 'expandOrCollapseAll';\n    /** A pivot column was added, removed or order changed. */\n    Events.EVENT_COLUMN_PIVOT_CHANGED = 'columnPivotChanged';\n    /** The list of grid columns has changed. */\n    Events.EVENT_GRID_COLUMNS_CHANGED = 'gridColumnsChanged';\n    /** A value column was added, removed or agg function was changed. */\n    Events.EVENT_COLUMN_VALUE_CHANGED = 'columnValueChanged';\n    /** A column was moved */\n    Events.EVENT_COLUMN_MOVED = 'columnMoved';\n    /** One or more columns was shown / hidden */\n    Events.EVENT_COLUMN_VISIBLE = 'columnVisible';\n    /** One or more columns was pinned / unpinned*/\n    Events.EVENT_COLUMN_PINNED = 'columnPinned';\n    /** A column group was opened / closed */\n    Events.EVENT_COLUMN_GROUP_OPENED = 'columnGroupOpened';\n    /** One or more columns was resized. If just one, the column in the event is set. */\n    Events.EVENT_COLUMN_RESIZED = 'columnResized';\n    /** The list of displayed columns has changed, can result from columns open / close, column move, pivot, group, etc */\n    Events.EVENT_DISPLAYED_COLUMNS_CHANGED = 'displayedColumnsChanged';\n    /** The list of virtual columns has changed, results from viewport changing */\n    Events.EVENT_VIRTUAL_COLUMNS_CHANGED = 'virtualColumnsChanged';\n    /** Async Transactions Executed */\n    Events.EVENT_ASYNC_TRANSACTIONS_FLUSHED = 'asyncTransactionsFlushed';\n    /** A row group was opened / closed */\n    Events.EVENT_ROW_GROUP_OPENED = 'rowGroupOpened';\n    /** The client has set new data into the grid */\n    Events.EVENT_ROW_DATA_CHANGED = 'rowDataChanged';\n    /** The client has updated data for the grid */\n    Events.EVENT_ROW_DATA_UPDATED = 'rowDataUpdated';\n    /** The client has set new floating data into the grid */\n    Events.EVENT_PINNED_ROW_DATA_CHANGED = 'pinnedRowDataChanged';\n    /** Range selection has changed */\n    Events.EVENT_RANGE_SELECTION_CHANGED = 'rangeSelectionChanged';\n    /** Chart was created */\n    Events.EVENT_CHART_CREATED = 'chartCreated';\n    /** Chart Range selection has changed */\n    Events.EVENT_CHART_RANGE_SELECTION_CHANGED = 'chartRangeSelectionChanged';\n    /** Chart Options have changed */\n    Events.EVENT_CHART_OPTIONS_CHANGED = 'chartOptionsChanged';\n    /** Chart was destroyed */\n    Events.EVENT_CHART_DESTROYED = 'chartDestroyed';\n    /** For when the tool panel is shown / hidden */\n    Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED = 'toolPanelVisibleChanged';\n    Events.EVENT_COLUMN_PANEL_ITEM_DRAG_START = 'columnPanelItemDragStart';\n    Events.EVENT_COLUMN_PANEL_ITEM_DRAG_END = 'columnPanelItemDragEnd';\n    /** Model was updated - grid updates the drawn rows when this happens */\n    Events.EVENT_MODEL_UPDATED = 'modelUpdated';\n    Events.EVENT_PASTE_START = 'pasteStart';\n    Events.EVENT_PASTE_END = 'pasteEnd';\n    Events.EVENT_FILL_START = 'fillStart';\n    Events.EVENT_FILL_END = 'fillEnd';\n    Events.EVENT_CELL_CLICKED = 'cellClicked';\n    Events.EVENT_CELL_DOUBLE_CLICKED = 'cellDoubleClicked';\n    Events.EVENT_CELL_MOUSE_DOWN = 'cellMouseDown';\n    Events.EVENT_CELL_CONTEXT_MENU = 'cellContextMenu';\n    Events.EVENT_CELL_VALUE_CHANGED = 'cellValueChanged';\n    Events.EVENT_ROW_VALUE_CHANGED = 'rowValueChanged';\n    Events.EVENT_CELL_FOCUSED = 'cellFocused';\n    Events.EVENT_ROW_SELECTED = 'rowSelected';\n    Events.EVENT_SELECTION_CHANGED = 'selectionChanged';\n    Events.EVENT_CELL_KEY_DOWN = 'cellKeyDown';\n    Events.EVENT_CELL_KEY_PRESS = 'cellKeyPress';\n    Events.EVENT_CELL_MOUSE_OVER = 'cellMouseOver';\n    Events.EVENT_CELL_MOUSE_OUT = 'cellMouseOut';\n    /** 2 events for filtering. The grid LISTENS for filterChanged and afterFilterChanged */\n    Events.EVENT_FILTER_CHANGED = 'filterChanged';\n    /** Filter was change but not applied. Only useful if apply buttons are used in filters. */\n    Events.EVENT_FILTER_MODIFIED = 'filterModified';\n    Events.EVENT_FILTER_OPENED = 'filterOpened';\n    Events.EVENT_SORT_CHANGED = 'sortChanged';\n    /** A row was removed from the dom, for any reason. Use to clean up resources (if any) used by the row. */\n    Events.EVENT_VIRTUAL_ROW_REMOVED = 'virtualRowRemoved';\n    Events.EVENT_ROW_CLICKED = 'rowClicked';\n    Events.EVENT_ROW_DOUBLE_CLICKED = 'rowDoubleClicked';\n    /** Gets called once after the grid has finished initialising. */\n    Events.EVENT_GRID_READY = 'gridReady';\n    /** Width of height of the main grid div has changed. Grid listens for this and does layout of grid if it's\n     * changed, so always filling the space it was given. */\n    Events.EVENT_GRID_SIZE_CHANGED = 'gridSizeChanged';\n    /** The indexes of the rows rendered has changed, eg user has scrolled to a new vertical position. */\n    Events.EVENT_VIEWPORT_CHANGED = 'viewportChanged';\n    /* The width of the scrollbar has been calculated */\n    Events.EVENT_SCROLLBAR_WIDTH_CHANGED = 'scrollbarWidthChanged';\n    /** Rows were rendered for the first time (ie on async data load). */\n    Events.EVENT_FIRST_DATA_RENDERED = 'firstDataRendered';\n    /** A column drag has started, either resizing a column or moving a column. */\n    Events.EVENT_DRAG_STARTED = 'dragStarted';\n    /** A column drag has stopped */\n    Events.EVENT_DRAG_STOPPED = 'dragStopped';\n    Events.EVENT_CHECKBOX_CHANGED = 'checkboxChanged';\n    Events.EVENT_ROW_EDITING_STARTED = 'rowEditingStarted';\n    Events.EVENT_ROW_EDITING_STOPPED = 'rowEditingStopped';\n    Events.EVENT_CELL_EDITING_STARTED = 'cellEditingStarted';\n    Events.EVENT_CELL_EDITING_STOPPED = 'cellEditingStopped';\n    /** Main body of grid has scrolled, either horizontally or vertically */\n    Events.EVENT_BODY_SCROLL = 'bodyScroll';\n    /** Main body of the grid has stopped scrolling, either horizontally or vertically */\n    Events.EVENT_BODY_SCROLL_END = 'bodyScrollEnd';\n    Events.EVENT_HEIGHT_SCALE_CHANGED = 'heightScaleChanged';\n    /** The displayed page for pagination has changed. For example the data was filtered or sorted,\n     * or the user has moved to a different page. */\n    Events.EVENT_PAGINATION_CHANGED = 'paginationChanged';\n    /** Only used by React, Angular 2+, Web Components and VueJS AG Grid components\n     * (not used if doing plain JavaScript or Angular 1.x). If the grid receives changes due\n     * to bound properties, this event fires after the grid has finished processing the change. */\n    Events.EVENT_COMPONENT_STATE_CHANGED = 'componentStateChanged';\n    /*****************************  INTERNAL EVENTS: START ******************************************* */\n    /** Please remember to add to ComponentUtil.EXCLUDED_INTERNAL_EVENTS to not have these events exposed to framework components. */\n    /** All items from here down are used internally by the grid, not intended for external use. */\n    // not documented, either experimental, or we just don't want users using an depending on them\n    Events.EVENT_BODY_HEIGHT_CHANGED = 'bodyHeightChanged';\n    Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED = 'displayedColumnsWidthChanged';\n    Events.EVENT_SCROLL_VISIBILITY_CHANGED = 'scrollVisibilityChanged';\n    Events.EVENT_COLUMN_HOVER_CHANGED = 'columnHoverChanged';\n    Events.EVENT_FLASH_CELLS = 'flashCells';\n    Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED = 'paginationPixelOffsetChanged';\n    Events.EVENT_DISPLAYED_ROWS_CHANGED = 'displayedRowsChanged';\n    Events.EVENT_LEFT_PINNED_WIDTH_CHANGED = 'leftPinnedWidthChanged';\n    Events.EVENT_RIGHT_PINNED_WIDTH_CHANGED = 'rightPinnedWidthChanged';\n    Events.EVENT_ROW_CONTAINER_HEIGHT_CHANGED = 'rowContainerHeightChanged';\n    Events.EVENT_ROW_DRAG_ENTER = 'rowDragEnter';\n    Events.EVENT_ROW_DRAG_MOVE = 'rowDragMove';\n    Events.EVENT_ROW_DRAG_LEAVE = 'rowDragLeave';\n    Events.EVENT_ROW_DRAG_END = 'rowDragEnd';\n    // primarily for charts\n    Events.EVENT_POPUP_TO_FRONT = 'popupToFront';\n    // these are used for server side group and agg - only used by CS with Viewport Row Model - intention is\n    // to design these better around server side functions and then release to general public when fully working with\n    // all the row models.\n    Events.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST = 'columnRowGroupChangeRequest';\n    Events.EVENT_COLUMN_PIVOT_CHANGE_REQUEST = 'columnPivotChangeRequest';\n    Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST = 'columnValueChangeRequest';\n    Events.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST = 'columnAggFuncChangeRequest';\n    Events.EVENT_KEYBOARD_FOCUS = 'keyboardFocus';\n    Events.EVENT_MOUSE_FOCUS = 'mouseFocus';\n    Events.EVENT_STORE_UPDATED = 'storeUpdated';\n    return Events;\n}());\nexport { Events };\n"]},"metadata":{},"sourceType":"module"}