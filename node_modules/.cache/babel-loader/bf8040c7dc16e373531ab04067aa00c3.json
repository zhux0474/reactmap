{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Bean, Autowired } from '../context/context';\nimport { BeanStub } from \"../context/beanStub\";\n\nvar ValueFormatterService =\n/** @class */\nfunction (_super) {\n  __extends(ValueFormatterService, _super);\n\n  function ValueFormatterService() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ValueFormatterService.prototype.formatValue = function (column, node, $scope, value, suppliedFormatter, useFormatterFromColumn) {\n    if (useFormatterFromColumn === void 0) {\n      useFormatterFromColumn = true;\n    }\n\n    var result = null;\n    var formatter;\n    var colDef = column.getColDef();\n\n    if (suppliedFormatter) {\n      // use supplied formatter if provided, e.g. set filter items can have their own value formatters\n      formatter = suppliedFormatter;\n    } else if (useFormatterFromColumn) {\n      // if row is pinned, give preference to the pinned formatter\n      formatter = node && node.rowPinned && colDef.pinnedRowValueFormatter ? colDef.pinnedRowValueFormatter : colDef.valueFormatter;\n    }\n\n    if (formatter) {\n      var params = {\n        value: value,\n        node: node,\n        data: node ? node.data : null,\n        colDef: colDef,\n        column: column,\n        api: this.gridOptionsWrapper.getApi(),\n        columnApi: this.gridOptionsWrapper.getColumnApi(),\n        context: this.gridOptionsWrapper.getContext()\n      }; // originally we put the angular 1 scope here, but we don't want the scope\n      // in the params interface, as other frameworks will see the interface, and\n      // angular 1 is not cool any more. so we hack the scope in here (we cannot\n      // include it above, as it's not in the interface, so would cause a compile error).\n      // in the future, when we stop supporting angular 1, we can take this out.\n\n      params.$scope = $scope;\n      result = this.expressionService.evaluate(formatter, params);\n    } else if (colDef.refData) {\n      return colDef.refData[value] || '';\n    } // if we don't do this, then arrays get displayed as 1,2,3, but we want 1, 2, 3 (i.e. with spaces)\n\n\n    if (result == null && Array.isArray(value)) {\n      result = value.join(', ');\n    }\n\n    return result;\n  };\n\n  __decorate([Autowired('expressionService')], ValueFormatterService.prototype, \"expressionService\", void 0);\n\n  ValueFormatterService = __decorate([Bean('valueFormatterService')], ValueFormatterService);\n  return ValueFormatterService;\n}(BeanStub);\n\nexport { ValueFormatterService };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/rendering/valueFormatterService.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Bean","Autowired","BeanStub","ValueFormatterService","_super","apply","formatValue","column","node","$scope","value","suppliedFormatter","useFormatterFromColumn","result","formatter","colDef","getColDef","rowPinned","pinnedRowValueFormatter","valueFormatter","params","data","api","gridOptionsWrapper","getApi","columnApi","getColumnApi","context","getContext","expressionService","evaluate","refData","isArray","join"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Bean, Autowired } from '../context/context';\nimport { BeanStub } from \"../context/beanStub\";\nvar ValueFormatterService = /** @class */ (function (_super) {\n    __extends(ValueFormatterService, _super);\n    function ValueFormatterService() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ValueFormatterService.prototype.formatValue = function (column, node, $scope, value, suppliedFormatter, useFormatterFromColumn) {\n        if (useFormatterFromColumn === void 0) { useFormatterFromColumn = true; }\n        var result = null;\n        var formatter;\n        var colDef = column.getColDef();\n        if (suppliedFormatter) {\n            // use supplied formatter if provided, e.g. set filter items can have their own value formatters\n            formatter = suppliedFormatter;\n        }\n        else if (useFormatterFromColumn) {\n            // if row is pinned, give preference to the pinned formatter\n            formatter = node && node.rowPinned && colDef.pinnedRowValueFormatter ?\n                colDef.pinnedRowValueFormatter : colDef.valueFormatter;\n        }\n        if (formatter) {\n            var params = {\n                value: value,\n                node: node,\n                data: node ? node.data : null,\n                colDef: colDef,\n                column: column,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext()\n            };\n            // originally we put the angular 1 scope here, but we don't want the scope\n            // in the params interface, as other frameworks will see the interface, and\n            // angular 1 is not cool any more. so we hack the scope in here (we cannot\n            // include it above, as it's not in the interface, so would cause a compile error).\n            // in the future, when we stop supporting angular 1, we can take this out.\n            params.$scope = $scope;\n            result = this.expressionService.evaluate(formatter, params);\n        }\n        else if (colDef.refData) {\n            return colDef.refData[value] || '';\n        }\n        // if we don't do this, then arrays get displayed as 1,2,3, but we want 1, 2, 3 (i.e. with spaces)\n        if (result == null && Array.isArray(value)) {\n            result = value.join(', ');\n        }\n        return result;\n    };\n    __decorate([\n        Autowired('expressionService')\n    ], ValueFormatterService.prototype, \"expressionService\", void 0);\n    ValueFormatterService = __decorate([\n        Bean('valueFormatterService')\n    ], ValueFormatterService);\n    return ValueFormatterService;\n}(BeanStub));\nexport { ValueFormatterService };\n"]},"metadata":{},"sourceType":"module"}