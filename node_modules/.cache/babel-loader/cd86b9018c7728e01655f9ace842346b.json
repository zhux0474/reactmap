{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/reactmap/reactmap/src/components/dropdown.js\",\n    _s = $RefreshSig$();\n\n/*import React, { useState } from \"react\";\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form } from \"react-bootstrap\";\nimport {metadata} from './metadata.js';\n\nconst options = [\n    { name: \"Total Smoker\", id: 1 },\n    { name: \"Black Smoker\", id: 2 },\n    { name: \"White Smoker\", id: 3 },\n    \n];\n  \n  export default function App() {\n    const [val, setVal] = useState();\n    console.log(val);\n  \n    return (\n      <Form.Select value={val} onChange={(e) => setVal(e.target.value)}>\n        {options.map((o) => {\n          const { name, id } = o;\n          return <option value={id}>{name}</option>;\n        })}\n      </Form.Select>\n    );\n  }\n*/\nimport React, { useState } from 'react'; //import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Array of objects containing our fruit data\n  let fruits = [{\n    label: \"Apple\",\n    value: \"🍎\"\n  }, {\n    label: \"Banana\",\n    value: \"🍌\"\n  }, {\n    label: \"Orange\",\n    value: \"🍊\"\n  }]; // Using state to keep track of what the selected fruit is\n\n  let [fruit, setFruit] = useState(\"⬇️ Select a fruit ⬇️\"); // Using this function to update the state of fruit\n  // whenever a new option is selected from the dropdown\n\n  let handleFruitChange = e => {\n    setFruit(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [fruit, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleFruitChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\\u2B07\\uFE0F Select a fruit \\u2B07\\uFE0F\",\n        children: \" -- Select a fruit -- \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), fruits.map(fruit => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: fruit.value,\n        children: fruit.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 30\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lS961Wv3pkG90HCumueRGZ6KtD0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/src/components/dropdown.js"],"names":["React","useState","App","fruits","label","value","fruit","setFruit","handleFruitChange","e","target","map"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,MAAIC,MAAM,GAAG,CACX;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADW,EAEX;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAFW,EAGX;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAHW,CAAb,CAFa,CAQf;;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,sBAAD,CAAhC,CATe,CAWf;AACA;;AACA,MAAIO,iBAAiB,GAAIC,CAAD,IAAO;AAC7BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASL,KAAV,CAAR;AACD,GAFD;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eAECC,KAFD,eAGA;AAAA;AAAA;AAAA;AAAA,YAHA,eAKA;AAAQ,MAAA,QAAQ,EAAEE,iBAAlB;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,0CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGL,MAAM,CAACQ,GAAP,CAAYL,KAAD,iBAAW;AAAQ,QAAA,KAAK,EAAEA,KAAK,CAACD,KAArB;AAAA,kBAA6BC,KAAK,CAACF;AAAnC;AAAA;AAAA;AAAA;AAAA,cAAtB,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhCQF,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["/*import React, { useState } from \"react\";\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form } from \"react-bootstrap\";\nimport {metadata} from './metadata.js';\n\nconst options = [\n    { name: \"Total Smoker\", id: 1 },\n    { name: \"Black Smoker\", id: 2 },\n    { name: \"White Smoker\", id: 3 },\n    \n];\n  \n  export default function App() {\n    const [val, setVal] = useState();\n    console.log(val);\n  \n    return (\n      <Form.Select value={val} onChange={(e) => setVal(e.target.value)}>\n        {options.map((o) => {\n          const { name, id } = o;\n          return <option value={id}>{name}</option>;\n        })}\n      </Form.Select>\n    );\n  }\n*/\n\nimport React, {useState} from 'react';\n//import './App.css';\n\nfunction App() {\n  // Array of objects containing our fruit data\n  let fruits = [\n    { label: \"Apple\", value: \"🍎\" },\n    { label: \"Banana\", value: \"🍌\" },\n    { label: \"Orange\", value: \"🍊\" }\n]\n\n// Using state to keep track of what the selected fruit is\nlet [fruit, setFruit] = useState(\"⬇️ Select a fruit ⬇️\")\n\n// Using this function to update the state of fruit\n// whenever a new option is selected from the dropdown\nlet handleFruitChange = (e) => {\n  setFruit(e.target.value)\n}\n\n  return (\n    <div className=\"App\">\n    {/* Displaying the value of fruit */}\n    {fruit}\n    <br />\n\n    <select onChange={handleFruitChange}> \n      <option value=\"⬇️ Select a fruit ⬇️\"> -- Select a fruit -- </option>\n            {/* Mapping through each fruit object in our fruits array\n          and returning an option element with the appropriate attributes / values.\n         */}\n      {fruits.map((fruit) => <option value={fruit.value}>{fruit.label}</option>)}\n    </select>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}