{"ast":null,"code":"// @ag-grid-community/react v26.2.0\n\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.classesList = function () {\n  var list = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    list[_i] = arguments[_i];\n  }\n\n  var filtered = list.filter(function (s) {\n    return s != null && s !== '';\n  });\n  return filtered.join(' ');\n};\n\nvar CssClasses =\n/** @class */\nfunction () {\n  function CssClasses() {\n    this.classesMap = {};\n  }\n\n  CssClasses.prototype.setClass = function (className, on) {\n    // important to not make a copy if nothing has changed, so react\n    // won't trigger a render cycle on new object instance\n    var nothingHasChanged = !!this.classesMap[className] == on;\n\n    if (nothingHasChanged) {\n      return this;\n    }\n\n    var res = new CssClasses();\n    res.classesMap = __assign({}, this.classesMap);\n    res.classesMap[className] = on;\n    return res;\n  };\n\n  CssClasses.prototype.toString = function () {\n    var _this = this;\n\n    var res = Object.keys(this.classesMap).filter(function (key) {\n      return _this.classesMap[key];\n    }).join(' ');\n    return res;\n  };\n\n  return CssClasses;\n}();\n\nexports.CssClasses = CssClasses;\n\nexports.isComponentStateless = function (Component) {\n  var hasSymbol = function () {\n    return typeof Symbol === 'function' && Symbol.for;\n  };\n\n  var getMemoType = function () {\n    return hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n  };\n\n  return typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent) || typeof Component === 'object' && Component.$$typeof === getMemoType();\n};","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/react/lib/reactUi/reactUi/utils.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAa,OAAA,CAAA,WAAA,GAAc,YAAA;AAAC,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAsC;AAAtC,IAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAL,CAAa,UAAA,CAAA,EAAC;AAAI,WAAA,CAAC,IAAI,IAAL,IAAa,CAAC,KAAd,EAAA;AAAqB,GAAvC,CAAjB;AAEA,SAAO,QAAQ,CAAC,IAAT,CAAc,GAAd,CAAP;AACH,CAJY;;AAMb,IAAA,UAAA;AAAA;AAAA,YAAA;AAAA,WAAA,UAAA,GAAA;AAEY,SAAA,UAAA,GAAwC,EAAxC;AAmBX;;AAjBU,EAAA,UAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,SAAhB,EAAmC,EAAnC,EAA8C;AAC1C;AACA;AACA,QAAM,iBAAiB,GAAG,CAAC,CAAC,KAAK,UAAL,CAAgB,SAAhB,CAAF,IAAgC,EAA1D;;AACA,QAAI,iBAAJ,EAAuB;AAAE,aAAO,IAAP;AAAc;;AAEvC,QAAM,GAAG,GAAG,IAAI,UAAJ,EAAZ;AACA,IAAA,GAAG,CAAC,UAAJ,GAAc,QAAA,CAAA,EAAA,EAAO,KAAK,UAAZ,CAAd;AACA,IAAA,GAAG,CAAC,UAAJ,CAAe,SAAf,IAA4B,EAA5B;AACA,WAAO,GAAP;AACH,GAVM;;AAYA,EAAA,UAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,QAAM,GAAG,GAAG,MAAM,CAAC,IAAP,CAAY,KAAK,UAAjB,EAA6B,MAA7B,CAAoC,UAAA,GAAA,EAAG;AAAI,aAAA,KAAI,CAAC,UAAL,CAAA,GAAA,CAAA;AAAoB,KAA/D,EAAiE,IAAjE,CAAsE,GAAtE,CAAZ;AACA,WAAO,GAAP;AACH,GAHM;;AAKX,SAAA,UAAA;AAAC,CArBD,EAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA;;AAuBA,OAAA,CAAA,oBAAA,GAAuB,UAAC,SAAD,EAAe;AAC/C,MAAM,SAAS,GAAG,YAAA;AAAM,WAAA,OAAO,MAAP,KAAkB,UAAlB,IAAgC,MAAM,CAAtC,GAAA;AAA0C,GAAlE;;AACA,MAAM,WAAW,GAAG,YAAA;AAAM,WAAA,SAAS,KAAK,MAAM,CAAC,GAAP,CAAW,YAAX,CAAL,GAAT,MAAA;AAA+C,GAAzE;;AAEA,SACQ,OAAO,SAAP,KAAqB,UAArB,IAAmC,EAAE,SAAS,CAAC,SAAV,IAAuB,SAAS,CAAC,SAAV,CAAoB,gBAA7C,CADpC,IAEG,OAAO,SAAP,KAAqB,QAArB,IAAiC,SAAS,CAAC,QAAV,KAAuB,WAAW,EAF7E;AAGH,CAPY","sourcesContent":["export const classesList = (...list: (string | null | undefined)[]): string => {\n    const filtered = list.filter( s => s != null && s !== '');\n\n    return filtered.join(' ');\n}\n\nexport class CssClasses {\n\n    private classesMap: {[name: string]: boolean} = {};\n\n    public setClass(className: string, on: boolean): CssClasses {\n        // important to not make a copy if nothing has changed, so react\n        // won't trigger a render cycle on new object instance\n        const nothingHasChanged = !!this.classesMap[className] == on;\n        if (nothingHasChanged) { return this; }\n\n        const res = new CssClasses();\n        res.classesMap = {...this.classesMap};\n        res.classesMap[className] = on;\n        return res;\n    }\n\n    public toString(): string {\n        const res = Object.keys(this.classesMap).filter(key => this.classesMap[key]).join(' ');\n        return res;\n    }\n\n}\n\nexport const isComponentStateless = (Component: any) => {\n    const hasSymbol = () => typeof Symbol === 'function' && Symbol.for;\n    const getMemoType = () => hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n\n    return (\n            typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent)\n        ) || (typeof Component === 'object' && Component.$$typeof === getMemoType());\n}"]},"metadata":{},"sourceType":"script"}