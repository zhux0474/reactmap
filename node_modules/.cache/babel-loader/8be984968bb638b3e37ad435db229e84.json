{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { RowNodeBlock } from \"./rowNodeBlock\";\nimport { Bean, PostConstruct, Qualifier } from \"../context/context\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { _ } from \"../utils\";\n\nvar RowNodeBlockLoader =\n/** @class */\nfunction (_super) {\n  __extends(RowNodeBlockLoader, _super);\n\n  function RowNodeBlockLoader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.activeBlockLoadsCount = 0;\n    _this.blocks = [];\n    _this.active = true;\n    return _this;\n  }\n\n  RowNodeBlockLoader_1 = RowNodeBlockLoader;\n\n  RowNodeBlockLoader.prototype.postConstruct = function () {\n    this.maxConcurrentRequests = this.gridOptionsWrapper.getMaxConcurrentDatasourceRequests();\n    var blockLoadDebounceMillis = this.gridOptionsWrapper.getBlockLoadDebounceMillis();\n\n    if (blockLoadDebounceMillis && blockLoadDebounceMillis > 0) {\n      this.checkBlockToLoadDebounce = _.debounce(this.performCheckBlocksToLoad.bind(this), blockLoadDebounceMillis);\n    }\n  };\n\n  RowNodeBlockLoader.prototype.setBeans = function (loggerFactory) {\n    this.logger = loggerFactory.create('RowNodeBlockLoader');\n  };\n\n  RowNodeBlockLoader.prototype.addBlock = function (block) {\n    this.blocks.push(block); // note that we do not remove this listener when removing the block. this is because the\n    // cache can get destroyed (and containing blocks) when a block is loading. however the loading block\n    // is still counted as an active loading block and we must decrement activeBlockLoadsCount when it finishes.\n\n    block.addEventListener(RowNodeBlock.EVENT_LOAD_COMPLETE, this.loadComplete.bind(this));\n    this.checkBlockToLoad();\n  };\n\n  RowNodeBlockLoader.prototype.removeBlock = function (block) {\n    _.removeFromArray(this.blocks, block);\n  };\n\n  RowNodeBlockLoader.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.active = false;\n  };\n\n  RowNodeBlockLoader.prototype.loadComplete = function () {\n    this.activeBlockLoadsCount--;\n    this.checkBlockToLoad();\n\n    if (this.activeBlockLoadsCount == 0) {\n      this.dispatchEvent({\n        type: RowNodeBlockLoader_1.BLOCK_LOADER_FINISHED_EVENT\n      });\n    }\n  };\n\n  RowNodeBlockLoader.prototype.checkBlockToLoad = function () {\n    if (this.checkBlockToLoadDebounce) {\n      this.checkBlockToLoadDebounce();\n    } else {\n      this.performCheckBlocksToLoad();\n    }\n  };\n\n  RowNodeBlockLoader.prototype.performCheckBlocksToLoad = function () {\n    if (!this.active) {\n      return;\n    }\n\n    this.printCacheStatus();\n\n    if (this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {\n      this.logger.log(\"checkBlockToLoad: max loads exceeded\");\n      return;\n    }\n\n    var blockToLoad = null;\n    this.blocks.forEach(function (block) {\n      if (block.getState() === RowNodeBlock.STATE_WAITING_TO_LOAD) {\n        blockToLoad = block;\n      }\n    });\n\n    if (blockToLoad) {\n      blockToLoad.load();\n      this.activeBlockLoadsCount++;\n      this.printCacheStatus();\n    }\n  };\n\n  RowNodeBlockLoader.prototype.getBlockState = function () {\n    var result = {};\n    this.blocks.forEach(function (block) {\n      var _a = block.getBlockStateJson(),\n          id = _a.id,\n          state = _a.state;\n\n      result[id] = state;\n    });\n    return result;\n  };\n\n  RowNodeBlockLoader.prototype.printCacheStatus = function () {\n    if (this.logger.isLogging()) {\n      this.logger.log(\"printCacheStatus: activePageLoadsCount = \" + this.activeBlockLoadsCount + \",\" + (\" blocks = \" + JSON.stringify(this.getBlockState())));\n    }\n  };\n\n  RowNodeBlockLoader.prototype.isLoading = function () {\n    return this.activeBlockLoadsCount > 0;\n  };\n\n  var RowNodeBlockLoader_1;\n  RowNodeBlockLoader.BLOCK_LOADER_FINISHED_EVENT = 'blockLoaderFinished';\n\n  __decorate([PostConstruct], RowNodeBlockLoader.prototype, \"postConstruct\", null);\n\n  __decorate([__param(0, Qualifier('loggerFactory'))], RowNodeBlockLoader.prototype, \"setBeans\", null);\n\n  RowNodeBlockLoader = RowNodeBlockLoader_1 = __decorate([Bean('rowNodeBlockLoader')], RowNodeBlockLoader);\n  return RowNodeBlockLoader;\n}(BeanStub);\n\nexport { RowNodeBlockLoader };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/rowNodeCache/rowNodeBlockLoader.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","RowNodeBlock","Bean","PostConstruct","Qualifier","BeanStub","_","RowNodeBlockLoader","_super","_this","apply","activeBlockLoadsCount","blocks","active","RowNodeBlockLoader_1","postConstruct","maxConcurrentRequests","gridOptionsWrapper","getMaxConcurrentDatasourceRequests","blockLoadDebounceMillis","getBlockLoadDebounceMillis","checkBlockToLoadDebounce","debounce","performCheckBlocksToLoad","bind","setBeans","loggerFactory","logger","addBlock","block","push","addEventListener","EVENT_LOAD_COMPLETE","loadComplete","checkBlockToLoad","removeBlock","removeFromArray","destroy","call","dispatchEvent","type","BLOCK_LOADER_FINISHED_EVENT","printCacheStatus","log","blockToLoad","forEach","getState","STATE_WAITING_TO_LOAD","load","getBlockState","result","_a","getBlockStateJson","id","state","isLogging","JSON","stringify","isLoading"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { RowNodeBlock } from \"./rowNodeBlock\";\nimport { Bean, PostConstruct, Qualifier } from \"../context/context\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { _ } from \"../utils\";\nvar RowNodeBlockLoader = /** @class */ (function (_super) {\n    __extends(RowNodeBlockLoader, _super);\n    function RowNodeBlockLoader() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.activeBlockLoadsCount = 0;\n        _this.blocks = [];\n        _this.active = true;\n        return _this;\n    }\n    RowNodeBlockLoader_1 = RowNodeBlockLoader;\n    RowNodeBlockLoader.prototype.postConstruct = function () {\n        this.maxConcurrentRequests = this.gridOptionsWrapper.getMaxConcurrentDatasourceRequests();\n        var blockLoadDebounceMillis = this.gridOptionsWrapper.getBlockLoadDebounceMillis();\n        if (blockLoadDebounceMillis && blockLoadDebounceMillis > 0) {\n            this.checkBlockToLoadDebounce = _.debounce(this.performCheckBlocksToLoad.bind(this), blockLoadDebounceMillis);\n        }\n    };\n    RowNodeBlockLoader.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('RowNodeBlockLoader');\n    };\n    RowNodeBlockLoader.prototype.addBlock = function (block) {\n        this.blocks.push(block);\n        // note that we do not remove this listener when removing the block. this is because the\n        // cache can get destroyed (and containing blocks) when a block is loading. however the loading block\n        // is still counted as an active loading block and we must decrement activeBlockLoadsCount when it finishes.\n        block.addEventListener(RowNodeBlock.EVENT_LOAD_COMPLETE, this.loadComplete.bind(this));\n        this.checkBlockToLoad();\n    };\n    RowNodeBlockLoader.prototype.removeBlock = function (block) {\n        _.removeFromArray(this.blocks, block);\n    };\n    RowNodeBlockLoader.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.active = false;\n    };\n    RowNodeBlockLoader.prototype.loadComplete = function () {\n        this.activeBlockLoadsCount--;\n        this.checkBlockToLoad();\n        if (this.activeBlockLoadsCount == 0) {\n            this.dispatchEvent({ type: RowNodeBlockLoader_1.BLOCK_LOADER_FINISHED_EVENT });\n        }\n    };\n    RowNodeBlockLoader.prototype.checkBlockToLoad = function () {\n        if (this.checkBlockToLoadDebounce) {\n            this.checkBlockToLoadDebounce();\n        }\n        else {\n            this.performCheckBlocksToLoad();\n        }\n    };\n    RowNodeBlockLoader.prototype.performCheckBlocksToLoad = function () {\n        if (!this.active) {\n            return;\n        }\n        this.printCacheStatus();\n        if (this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {\n            this.logger.log(\"checkBlockToLoad: max loads exceeded\");\n            return;\n        }\n        var blockToLoad = null;\n        this.blocks.forEach(function (block) {\n            if (block.getState() === RowNodeBlock.STATE_WAITING_TO_LOAD) {\n                blockToLoad = block;\n            }\n        });\n        if (blockToLoad) {\n            blockToLoad.load();\n            this.activeBlockLoadsCount++;\n            this.printCacheStatus();\n        }\n    };\n    RowNodeBlockLoader.prototype.getBlockState = function () {\n        var result = {};\n        this.blocks.forEach(function (block) {\n            var _a = block.getBlockStateJson(), id = _a.id, state = _a.state;\n            result[id] = state;\n        });\n        return result;\n    };\n    RowNodeBlockLoader.prototype.printCacheStatus = function () {\n        if (this.logger.isLogging()) {\n            this.logger.log(\"printCacheStatus: activePageLoadsCount = \" + this.activeBlockLoadsCount + \",\"\n                + (\" blocks = \" + JSON.stringify(this.getBlockState())));\n        }\n    };\n    RowNodeBlockLoader.prototype.isLoading = function () {\n        return this.activeBlockLoadsCount > 0;\n    };\n    var RowNodeBlockLoader_1;\n    RowNodeBlockLoader.BLOCK_LOADER_FINISHED_EVENT = 'blockLoaderFinished';\n    __decorate([\n        PostConstruct\n    ], RowNodeBlockLoader.prototype, \"postConstruct\", null);\n    __decorate([\n        __param(0, Qualifier('loggerFactory'))\n    ], RowNodeBlockLoader.prototype, \"setBeans\", null);\n    RowNodeBlockLoader = RowNodeBlockLoader_1 = __decorate([\n        Bean('rowNodeBlockLoader')\n    ], RowNodeBlockLoader);\n    return RowNodeBlockLoader;\n}(BeanStub));\nexport { RowNodeBlockLoader };\n"]},"metadata":{},"sourceType":"module"}