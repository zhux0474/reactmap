{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { missing } from \"../../utils/generic\";\n\nvar CssClassApplier =\n/** @class */\nfunction () {\n  function CssClassApplier() {}\n\n  CssClassApplier.getHeaderClassesFromColDef = function (abstractColDef, gridOptionsWrapper, column, columnGroup) {\n    if (missing(abstractColDef)) {\n      return [];\n    }\n\n    return this.getColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, gridOptionsWrapper, column, columnGroup);\n  };\n\n  CssClassApplier.getToolPanelClassesFromColDef = function (abstractColDef, gridOptionsWrapper, column, columnGroup) {\n    if (missing(abstractColDef)) {\n      return [];\n    }\n\n    return this.getColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, gridOptionsWrapper, column, columnGroup);\n  };\n\n  CssClassApplier.getColumnClassesFromCollDef = function (classesOrFunc, abstractColDef, gridOptionsWrapper, column, columnGroup) {\n    if (missing(classesOrFunc)) {\n      return [];\n    }\n\n    var classToUse;\n\n    if (typeof classesOrFunc === 'function') {\n      var params = {\n        // bad naming, as colDef here can be a group or a column,\n        // however most people won't appreciate the difference,\n        // so keeping it as colDef to avoid confusion.\n        colDef: abstractColDef,\n        column: column,\n        columnGroup: columnGroup,\n        context: gridOptionsWrapper.getContext(),\n        api: gridOptionsWrapper.getApi()\n      };\n      classToUse = classesOrFunc(params);\n    } else {\n      classToUse = classesOrFunc;\n    }\n\n    if (typeof classToUse === 'string') {\n      return [classToUse];\n    } else if (Array.isArray(classToUse)) {\n      return classToUse;\n    } else {\n      return [];\n    }\n  };\n\n  return CssClassApplier;\n}();\n\nexport { CssClassApplier };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/headerRendering/cells/cssClassApplier.js"],"names":["missing","CssClassApplier","getHeaderClassesFromColDef","abstractColDef","gridOptionsWrapper","column","columnGroup","getColumnClassesFromCollDef","headerClass","getToolPanelClassesFromColDef","toolPanelClass","classesOrFunc","classToUse","params","colDef","context","getContext","api","getApi","Array","isArray"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,qBAAxB;;AACA,IAAIC,eAAe;AAAG;AAAe,YAAY;AAC7C,WAASA,eAAT,GAA2B,CAC1B;;AACDA,EAAAA,eAAe,CAACC,0BAAhB,GAA6C,UAAUC,cAAV,EAA0BC,kBAA1B,EAA8CC,MAA9C,EAAsDC,WAAtD,EAAmE;AAC5G,QAAIN,OAAO,CAACG,cAAD,CAAX,EAA6B;AACzB,aAAO,EAAP;AACH;;AACD,WAAO,KAAKI,2BAAL,CAAiCJ,cAAc,CAACK,WAAhD,EAA6DL,cAA7D,EAA6EC,kBAA7E,EAAiGC,MAAjG,EAAyGC,WAAzG,CAAP;AACH,GALD;;AAMAL,EAAAA,eAAe,CAACQ,6BAAhB,GAAgD,UAAUN,cAAV,EAA0BC,kBAA1B,EAA8CC,MAA9C,EAAsDC,WAAtD,EAAmE;AAC/G,QAAIN,OAAO,CAACG,cAAD,CAAX,EAA6B;AACzB,aAAO,EAAP;AACH;;AACD,WAAO,KAAKI,2BAAL,CAAiCJ,cAAc,CAACO,cAAhD,EAAgEP,cAAhE,EAAgFC,kBAAhF,EAAoGC,MAApG,EAA4GC,WAA5G,CAAP;AACH,GALD;;AAMAL,EAAAA,eAAe,CAACM,2BAAhB,GAA8C,UAAUI,aAAV,EAAyBR,cAAzB,EAAyCC,kBAAzC,EAA6DC,MAA7D,EAAqEC,WAArE,EAAkF;AAC5H,QAAIN,OAAO,CAACW,aAAD,CAAX,EAA4B;AACxB,aAAO,EAAP;AACH;;AACD,QAAIC,UAAJ;;AACA,QAAI,OAAOD,aAAP,KAAyB,UAA7B,EAAyC;AACrC,UAAIE,MAAM,GAAG;AACT;AACA;AACA;AACAC,QAAAA,MAAM,EAAEX,cAJC;AAKTE,QAAAA,MAAM,EAAEA,MALC;AAMTC,QAAAA,WAAW,EAAEA,WANJ;AAOTS,QAAAA,OAAO,EAAEX,kBAAkB,CAACY,UAAnB,EAPA;AAQTC,QAAAA,GAAG,EAAEb,kBAAkB,CAACc,MAAnB;AARI,OAAb;AAUAN,MAAAA,UAAU,GAAGD,aAAa,CAACE,MAAD,CAA1B;AACH,KAZD,MAaK;AACDD,MAAAA,UAAU,GAAGD,aAAb;AACH;;AACD,QAAI,OAAOC,UAAP,KAAsB,QAA1B,EAAoC;AAChC,aAAO,CAACA,UAAD,CAAP;AACH,KAFD,MAGK,IAAIO,KAAK,CAACC,OAAN,CAAcR,UAAd,CAAJ,EAA+B;AAChC,aAAOA,UAAP;AACH,KAFI,MAGA;AACD,aAAO,EAAP;AACH;AACJ,GA9BD;;AA+BA,SAAOX,eAAP;AACH,CA/CoC,EAArC;;AAgDA,SAASA,eAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { missing } from \"../../utils/generic\";\nvar CssClassApplier = /** @class */ (function () {\n    function CssClassApplier() {\n    }\n    CssClassApplier.getHeaderClassesFromColDef = function (abstractColDef, gridOptionsWrapper, column, columnGroup) {\n        if (missing(abstractColDef)) {\n            return [];\n        }\n        return this.getColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, gridOptionsWrapper, column, columnGroup);\n    };\n    CssClassApplier.getToolPanelClassesFromColDef = function (abstractColDef, gridOptionsWrapper, column, columnGroup) {\n        if (missing(abstractColDef)) {\n            return [];\n        }\n        return this.getColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, gridOptionsWrapper, column, columnGroup);\n    };\n    CssClassApplier.getColumnClassesFromCollDef = function (classesOrFunc, abstractColDef, gridOptionsWrapper, column, columnGroup) {\n        if (missing(classesOrFunc)) {\n            return [];\n        }\n        var classToUse;\n        if (typeof classesOrFunc === 'function') {\n            var params = {\n                // bad naming, as colDef here can be a group or a column,\n                // however most people won't appreciate the difference,\n                // so keeping it as colDef to avoid confusion.\n                colDef: abstractColDef,\n                column: column,\n                columnGroup: columnGroup,\n                context: gridOptionsWrapper.getContext(),\n                api: gridOptionsWrapper.getApi()\n            };\n            classToUse = classesOrFunc(params);\n        }\n        else {\n            classToUse = classesOrFunc;\n        }\n        if (typeof classToUse === 'string') {\n            return [classToUse];\n        }\n        else if (Array.isArray(classToUse)) {\n            return classToUse;\n        }\n        else {\n            return [];\n        }\n    };\n    return CssClassApplier;\n}());\nexport { CssClassApplier };\n"]},"metadata":{},"sourceType":"module"}