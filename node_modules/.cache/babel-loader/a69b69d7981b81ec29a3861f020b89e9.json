{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar AutoScrollService =\n/** @class */\nfunction () {\n  function AutoScrollService(params) {\n    this.tickingInterval = null;\n    this.onScrollCallback = null;\n    this.scrollContainer = params.scrollContainer;\n    this.scrollHorizontally = params.scrollAxis.indexOf('x') !== -1;\n    this.scrollVertically = params.scrollAxis.indexOf('y') !== -1;\n    this.scrollByTick = params.scrollByTick != null ? params.scrollByTick : 20;\n\n    if (params.onScrollCallback) {\n      this.onScrollCallback = params.onScrollCallback;\n    }\n\n    if (this.scrollVertically) {\n      this.getVerticalPosition = params.getVerticalPosition;\n      this.setVerticalPosition = params.setVerticalPosition;\n    }\n\n    if (this.scrollHorizontally) {\n      this.getHorizontalPosition = params.getHorizontalPosition;\n      this.setHorizontalPosition = params.setHorizontalPosition;\n    }\n\n    this.shouldSkipVerticalScroll = params.shouldSkipVerticalScroll || function () {\n      return false;\n    };\n\n    this.shouldSkipHorizontalScroll = params.shouldSkipHorizontalScroll || function () {\n      return false;\n    };\n  }\n\n  AutoScrollService.prototype.check = function (mouseEvent, forceSkipVerticalScroll) {\n    if (forceSkipVerticalScroll === void 0) {\n      forceSkipVerticalScroll = false;\n    }\n\n    var skipVerticalScroll = forceSkipVerticalScroll || this.shouldSkipVerticalScroll();\n\n    if (skipVerticalScroll && this.shouldSkipHorizontalScroll()) {\n      return;\n    }\n\n    var rect = this.scrollContainer.getBoundingClientRect();\n    var scrollTick = this.scrollByTick;\n    this.tickLeft = mouseEvent.clientX < rect.left + scrollTick;\n    this.tickRight = mouseEvent.clientX > rect.right - scrollTick;\n    this.tickUp = mouseEvent.clientY < rect.top + scrollTick && !skipVerticalScroll;\n    this.tickDown = mouseEvent.clientY > rect.bottom - scrollTick && !skipVerticalScroll;\n\n    if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n      this.ensureTickingStarted();\n    } else {\n      this.ensureCleared();\n    }\n  };\n\n  AutoScrollService.prototype.ensureTickingStarted = function () {\n    if (this.tickingInterval === null) {\n      this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n      this.tickCount = 0;\n    }\n  };\n\n  AutoScrollService.prototype.doTick = function () {\n    this.tickCount++;\n    var tickAmount;\n    tickAmount = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40;\n\n    if (this.scrollVertically) {\n      var vScrollPosition = this.getVerticalPosition();\n\n      if (this.tickUp) {\n        this.setVerticalPosition(vScrollPosition - tickAmount);\n      }\n\n      if (this.tickDown) {\n        this.setVerticalPosition(vScrollPosition + tickAmount);\n      }\n    }\n\n    if (this.scrollHorizontally) {\n      var hScrollPosition = this.getHorizontalPosition();\n\n      if (this.tickLeft) {\n        this.setHorizontalPosition(hScrollPosition - tickAmount);\n      }\n\n      if (this.tickRight) {\n        this.setHorizontalPosition(hScrollPosition + tickAmount);\n      }\n    }\n\n    if (this.onScrollCallback) {\n      this.onScrollCallback();\n    }\n  };\n\n  AutoScrollService.prototype.ensureCleared = function () {\n    if (this.tickingInterval) {\n      window.clearInterval(this.tickingInterval);\n      this.tickingInterval = null;\n    }\n  };\n\n  return AutoScrollService;\n}();\n\nexport { AutoScrollService };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/autoScrollService.js"],"names":["AutoScrollService","params","tickingInterval","onScrollCallback","scrollContainer","scrollHorizontally","scrollAxis","indexOf","scrollVertically","scrollByTick","getVerticalPosition","setVerticalPosition","getHorizontalPosition","setHorizontalPosition","shouldSkipVerticalScroll","shouldSkipHorizontalScroll","prototype","check","mouseEvent","forceSkipVerticalScroll","skipVerticalScroll","rect","getBoundingClientRect","scrollTick","tickLeft","clientX","left","tickRight","right","tickUp","clientY","top","tickDown","bottom","ensureTickingStarted","ensureCleared","window","setInterval","doTick","bind","tickCount","tickAmount","vScrollPosition","hScrollPosition","clearInterval"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar AutoScrollService = /** @class */ (function () {\n    function AutoScrollService(params) {\n        this.tickingInterval = null;\n        this.onScrollCallback = null;\n        this.scrollContainer = params.scrollContainer;\n        this.scrollHorizontally = params.scrollAxis.indexOf('x') !== -1;\n        this.scrollVertically = params.scrollAxis.indexOf('y') !== -1;\n        this.scrollByTick = params.scrollByTick != null ? params.scrollByTick : 20;\n        if (params.onScrollCallback) {\n            this.onScrollCallback = params.onScrollCallback;\n        }\n        if (this.scrollVertically) {\n            this.getVerticalPosition = params.getVerticalPosition;\n            this.setVerticalPosition = params.setVerticalPosition;\n        }\n        if (this.scrollHorizontally) {\n            this.getHorizontalPosition = params.getHorizontalPosition;\n            this.setHorizontalPosition = params.setHorizontalPosition;\n        }\n        this.shouldSkipVerticalScroll = params.shouldSkipVerticalScroll || (function () { return false; });\n        this.shouldSkipHorizontalScroll = params.shouldSkipHorizontalScroll || (function () { return false; });\n    }\n    AutoScrollService.prototype.check = function (mouseEvent, forceSkipVerticalScroll) {\n        if (forceSkipVerticalScroll === void 0) { forceSkipVerticalScroll = false; }\n        var skipVerticalScroll = forceSkipVerticalScroll || this.shouldSkipVerticalScroll();\n        if (skipVerticalScroll && this.shouldSkipHorizontalScroll()) {\n            return;\n        }\n        var rect = this.scrollContainer.getBoundingClientRect();\n        var scrollTick = this.scrollByTick;\n        this.tickLeft = mouseEvent.clientX < (rect.left + scrollTick);\n        this.tickRight = mouseEvent.clientX > (rect.right - scrollTick);\n        this.tickUp = mouseEvent.clientY < (rect.top + scrollTick) && !skipVerticalScroll;\n        this.tickDown = mouseEvent.clientY > (rect.bottom - scrollTick) && !skipVerticalScroll;\n        if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n            this.ensureTickingStarted();\n        }\n        else {\n            this.ensureCleared();\n        }\n    };\n    AutoScrollService.prototype.ensureTickingStarted = function () {\n        if (this.tickingInterval === null) {\n            this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n            this.tickCount = 0;\n        }\n    };\n    AutoScrollService.prototype.doTick = function () {\n        this.tickCount++;\n        var tickAmount;\n        tickAmount = this.tickCount > 20 ? 200 : (this.tickCount > 10 ? 80 : 40);\n        if (this.scrollVertically) {\n            var vScrollPosition = this.getVerticalPosition();\n            if (this.tickUp) {\n                this.setVerticalPosition(vScrollPosition - tickAmount);\n            }\n            if (this.tickDown) {\n                this.setVerticalPosition(vScrollPosition + tickAmount);\n            }\n        }\n        if (this.scrollHorizontally) {\n            var hScrollPosition = this.getHorizontalPosition();\n            if (this.tickLeft) {\n                this.setHorizontalPosition(hScrollPosition - tickAmount);\n            }\n            if (this.tickRight) {\n                this.setHorizontalPosition(hScrollPosition + tickAmount);\n            }\n        }\n        if (this.onScrollCallback) {\n            this.onScrollCallback();\n        }\n    };\n    AutoScrollService.prototype.ensureCleared = function () {\n        if (this.tickingInterval) {\n            window.clearInterval(this.tickingInterval);\n            this.tickingInterval = null;\n        }\n    };\n    return AutoScrollService;\n}());\nexport { AutoScrollService };\n"]},"metadata":{},"sourceType":"module"}