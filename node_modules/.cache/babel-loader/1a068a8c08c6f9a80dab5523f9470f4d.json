{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerLegend.js\";\nimport React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\"; //import \"./SmokerMap.css\";\n\nimport Map from \"ol/Map\"; //import Feature from \"ol/Feature\";\n\nimport View from \"ol/View\"; //import { Point, Style, Circle, Fill, Feature } from \"ol\";\n\nimport TileLayer from \"ol/layer/Tile\"; //import TileWMS from 'ol/source/TileWMS';\n\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport { Fill, Stroke, Style } from 'ol/style';\nimport { metadata } from './metadata.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SmokerLengend extends React.Component {\n  render() {\n    var legend = [];\n\n    for (var i = 1; i < metadata.break.length; i++) {\n      legend.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: metadata.color[i],\n            width: '15px',\n            height: '15px',\n            display: 'inline-block',\n            display: 'flex',\n            alignItems: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 106\n        }, this), metadata.break[i - 1], \"-\", metadata.break[i] - 1]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this));\n    }\n\n    return legend;\n    /*\n    var indents = [];\n    for (var i = 0; i < metadata.break.length; i++) {\n      \n      indents.push(<span style ={{backgroundColor:metadata.color[i], width: '15px', height: '15px', display: 'inline-flex',display: 'flex', alignItems: 'center'}}></span>,<text style ={{position:'relative',alignItems: 'middle'}}>{metadata.break[i+1]-1}</text>);\n    }\n      return (\n       <div>\n        {indents}\n        \n       </div>\n    );\n    */\n  }\n\n}\n/*\nvar indents = [];\n        for (var i = 0; i < metadata.break.length; i++) {\n            list=[\n                {key:i,value:indents.push(<span style ={{backgroundColor:metadata.color[i], width: '15px', height: '15px', display: 'inline-flex',display: 'flex', alignItems: 'center'}}></span>,<text style ={{position:'relative',alignItems: 'middle'}}>{metadata.break[i]}</text>)}\n            ];\n          \n        }\n\n\n        return (\n           <div>\n               {list.map(({key,value})=>(\n               <div>{value}</div>\n               \n               ))}\n            \n            \n           </div>\n        );*/","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerLegend.js"],"names":["React","fromLonLat","get","Map","View","TileLayer","VectorLayer","VectorSource","GeoJSON","OSM","Fill","Stroke","Style","metadata","SmokerLengend","Component","render","legend","i","break","length","push","display","alignItems","position","backgroundColor","color","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,SAAhC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,eAAtB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAkC,UAAlC;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AAEA,eAAe,MAAMC,aAAN,SAA4Bd,KAAK,CAACe,SAAlC,CAA2C;AAEtDC,EAAAA,MAAM,GAAE;AAEJ,QAAIC,MAAM,GAAC,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAACL,QAAQ,CAACM,KAAT,CAAeC,MAAhC,EAAuCF,CAAC,EAAxC,EAA4C;AACxCD,MAAAA,MAAM,CAACI,IAAP,eAAY;AAAa,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAiBC,UAAAA,UAAU,EAAE,QAA7B;AAAsCC,UAAAA,QAAQ,EAAE;AAAhD,SAApB;AAAA,gCAAiF;AAAM,UAAA,KAAK,EAAG;AAACC,YAAAA,eAAe,EAACZ,QAAQ,CAACa,KAAT,CAAeR,CAAf,CAAjB;AAAoCS,YAAAA,KAAK,EAAE,MAA3C;AAAmDC,YAAAA,MAAM,EAAE,MAA3D;AAAmEN,YAAAA,OAAO,EAAE,cAA5E;AAA2FA,YAAAA,OAAO,EAAE,MAApG;AAA4GC,YAAAA,UAAU,EAAE;AAAxH;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAjF,EAA0OV,QAAQ,CAACM,KAAT,CAAeD,CAAC,GAAC,CAAjB,CAA1O,OAAgQL,QAAQ,CAACM,KAAT,CAAeD,CAAf,IAAkB,CAAlR;AAAA,SAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,cAAZ;AAEH;;AACD,WAAOD,MAAP;AAGA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOC;;AA/ByD;AAkC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\";\n//import \"./SmokerMap.css\";\nimport Map from \"ol/Map\";\n//import Feature from \"ol/Feature\";\nimport View from \"ol/View\";\n//import { Point, Style, Circle, Fill, Feature } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\n//import TileWMS from 'ol/source/TileWMS';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport {Fill, Stroke, Style} from 'ol/style';\nimport {metadata} from './metadata.js';\n\nexport default class SmokerLengend extends React.Component{\n    \n    render(){\n        \n        var legend=[];\n        for (var i =1; i<metadata.break.length;i++) {\n            legend.push(<div key={i} style={{display: 'flex',alignItems: 'center',position: 'relative'}}><span style ={{backgroundColor:metadata.color[i], width: '15px', height: '15px', display: 'inline-block',display: 'flex', alignItems: 'center'}}></span>{metadata.break[i-1]}-{metadata.break[i]-1}</div>); \n            \n        }\n        return legend;\n        \n\n        /*\n        var indents = [];\n        for (var i = 0; i < metadata.break.length; i++) {\n          \n          indents.push(<span style ={{backgroundColor:metadata.color[i], width: '15px', height: '15px', display: 'inline-flex',display: 'flex', alignItems: 'center'}}></span>,<text style ={{position:'relative',alignItems: 'middle'}}>{metadata.break[i+1]-1}</text>);\n        }\n\n\n        return (\n           <div>\n            {indents}\n            \n           </div>\n        );\n        */\n        \n\n   \n\n}\n}\n\n/*\nvar indents = [];\n        for (var i = 0; i < metadata.break.length; i++) {\n            list=[\n                {key:i,value:indents.push(<span style ={{backgroundColor:metadata.color[i], width: '15px', height: '15px', display: 'inline-flex',display: 'flex', alignItems: 'center'}}></span>,<text style ={{position:'relative',alignItems: 'middle'}}>{metadata.break[i]}</text>)}\n            ];\n          \n        }\n\n\n        return (\n           <div>\n               {list.map(({key,value})=>(\n               <div>{value}</div>\n               \n               ))}\n            \n            \n           </div>\n        );*/"]},"metadata":{},"sourceType":"module"}