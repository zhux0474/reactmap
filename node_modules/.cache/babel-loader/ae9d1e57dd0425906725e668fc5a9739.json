{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { BeanStub } from \"../context/beanStub\";\nimport { escapeString } from \"../utils/string\";\nimport { CustomTooltipFeature } from \"./customTooltipFeature\";\n\nvar TooltipFeature =\n/** @class */\nfunction (_super) {\n  __extends(TooltipFeature, _super);\n\n  function TooltipFeature(ctrl, beans) {\n    var _this = _super.call(this) || this;\n\n    _this.ctrl = ctrl;\n    _this.beans = beans;\n    return _this;\n  }\n\n  TooltipFeature.prototype.setComp = function (comp) {\n    this.comp = comp;\n    this.setupTooltip();\n  };\n\n  TooltipFeature.prototype.setupTooltip = function () {\n    this.browserTooltips = this.beans.gridOptionsWrapper.isEnableBrowserTooltips();\n    this.updateTooltipText();\n\n    if (this.browserTooltips) {\n      this.comp.setTitle(this.tooltipSanatised != null ? this.tooltipSanatised : undefined);\n    } else {\n      this.createTooltipFeatureIfNeeded();\n    }\n  };\n\n  TooltipFeature.prototype.updateTooltipText = function () {\n    this.tooltip = this.ctrl.getTooltipValue();\n    this.tooltipSanatised = escapeString(this.tooltip);\n  };\n\n  TooltipFeature.prototype.createTooltipFeatureIfNeeded = function () {\n    var _this = this;\n\n    if (this.genericTooltipFeature != null) {\n      return;\n    }\n\n    var parent = {\n      getTooltipParams: function () {\n        return _this.getTooltipParams();\n      },\n      getGui: function () {\n        return _this.ctrl.getGui();\n      }\n    };\n    this.genericTooltipFeature = this.createManagedBean(new CustomTooltipFeature(parent), this.beans.context);\n  };\n\n  TooltipFeature.prototype.refreshToolTip = function () {\n    this.updateTooltipText();\n\n    if (this.browserTooltips) {\n      this.comp.setTitle(this.tooltipSanatised != null ? this.tooltipSanatised : undefined);\n    }\n  };\n\n  TooltipFeature.prototype.getTooltipParams = function () {\n    var ctrl = this.ctrl;\n    var column = ctrl.getColumn ? ctrl.getColumn() : undefined;\n    var colDef = ctrl.getColDef ? ctrl.getColDef() : undefined;\n    var rowNode = ctrl.getRowNode ? ctrl.getRowNode() : undefined;\n    return {\n      location: ctrl.getLocation(),\n      colDef: colDef,\n      column: column,\n      rowIndex: ctrl.getRowIndex ? ctrl.getRowIndex() : undefined,\n      node: rowNode,\n      data: rowNode ? rowNode.data : undefined,\n      value: this.getTooltipText(),\n      valueFormatted: ctrl.getValueFormatted ? ctrl.getValueFormatted() : undefined\n    };\n  };\n\n  TooltipFeature.prototype.getTooltipText = function () {\n    return this.tooltip;\n  }; // overriding to make public, as we don't dispose this bean via context\n\n\n  TooltipFeature.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n\n  return TooltipFeature;\n}(BeanStub);\n\nexport { TooltipFeature };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/widgets/tooltipFeature.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","BeanStub","escapeString","CustomTooltipFeature","TooltipFeature","_super","ctrl","beans","_this","call","setComp","comp","setupTooltip","browserTooltips","gridOptionsWrapper","isEnableBrowserTooltips","updateTooltipText","setTitle","tooltipSanatised","undefined","createTooltipFeatureIfNeeded","tooltip","getTooltipValue","genericTooltipFeature","parent","getTooltipParams","getGui","createManagedBean","context","refreshToolTip","column","getColumn","colDef","getColDef","rowNode","getRowNode","location","getLocation","rowIndex","getRowIndex","node","data","value","getTooltipText","valueFormatted","getValueFormatted","destroy"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BeanStub } from \"../context/beanStub\";\nimport { escapeString } from \"../utils/string\";\nimport { CustomTooltipFeature } from \"./customTooltipFeature\";\nvar TooltipFeature = /** @class */ (function (_super) {\n    __extends(TooltipFeature, _super);\n    function TooltipFeature(ctrl, beans) {\n        var _this = _super.call(this) || this;\n        _this.ctrl = ctrl;\n        _this.beans = beans;\n        return _this;\n    }\n    TooltipFeature.prototype.setComp = function (comp) {\n        this.comp = comp;\n        this.setupTooltip();\n    };\n    TooltipFeature.prototype.setupTooltip = function () {\n        this.browserTooltips = this.beans.gridOptionsWrapper.isEnableBrowserTooltips();\n        this.updateTooltipText();\n        if (this.browserTooltips) {\n            this.comp.setTitle(this.tooltipSanatised != null ? this.tooltipSanatised : undefined);\n        }\n        else {\n            this.createTooltipFeatureIfNeeded();\n        }\n    };\n    TooltipFeature.prototype.updateTooltipText = function () {\n        this.tooltip = this.ctrl.getTooltipValue();\n        this.tooltipSanatised = escapeString(this.tooltip);\n    };\n    TooltipFeature.prototype.createTooltipFeatureIfNeeded = function () {\n        var _this = this;\n        if (this.genericTooltipFeature != null) {\n            return;\n        }\n        var parent = {\n            getTooltipParams: function () { return _this.getTooltipParams(); },\n            getGui: function () { return _this.ctrl.getGui(); }\n        };\n        this.genericTooltipFeature = this.createManagedBean(new CustomTooltipFeature(parent), this.beans.context);\n    };\n    TooltipFeature.prototype.refreshToolTip = function () {\n        this.updateTooltipText();\n        if (this.browserTooltips) {\n            this.comp.setTitle(this.tooltipSanatised != null ? this.tooltipSanatised : undefined);\n        }\n    };\n    TooltipFeature.prototype.getTooltipParams = function () {\n        var ctrl = this.ctrl;\n        var column = ctrl.getColumn ? ctrl.getColumn() : undefined;\n        var colDef = ctrl.getColDef ? ctrl.getColDef() : undefined;\n        var rowNode = ctrl.getRowNode ? ctrl.getRowNode() : undefined;\n        return {\n            location: ctrl.getLocation(),\n            colDef: colDef,\n            column: column,\n            rowIndex: ctrl.getRowIndex ? ctrl.getRowIndex() : undefined,\n            node: rowNode,\n            data: rowNode ? rowNode.data : undefined,\n            value: this.getTooltipText(),\n            valueFormatted: ctrl.getValueFormatted ? ctrl.getValueFormatted() : undefined\n        };\n    };\n    TooltipFeature.prototype.getTooltipText = function () {\n        return this.tooltip;\n    };\n    // overriding to make public, as we don't dispose this bean via context\n    TooltipFeature.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    return TooltipFeature;\n}(BeanStub));\nexport { TooltipFeature };\n"]},"metadata":{},"sourceType":"module"}