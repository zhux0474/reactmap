{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Bean, PostConstruct } from \"../context/context\";\nimport { Events } from \"../eventKeys\";\nimport { FillUndoRedoAction, UndoRedoAction, UndoRedoStack } from \"./undoRedoStack\";\nimport { Constants } from \"../constants/constants\";\nimport { ModuleNames } from \"../modules/moduleNames\";\nimport { ModuleRegistry } from \"../modules/moduleRegistry\";\nimport { BeanStub } from \"../context/beanStub\";\n\nvar UndoRedoService =\n/** @class */\nfunction (_super) {\n  __extends(UndoRedoService, _super);\n\n  function UndoRedoService() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.cellValueChanges = [];\n    _this.activeCellEdit = null;\n    _this.activeRowEdit = null;\n    _this.isPasting = false;\n    _this.isFilling = false;\n\n    _this.onCellValueChanged = function (event) {\n      var eventCell = {\n        column: event.column,\n        rowIndex: event.rowIndex,\n        rowPinned: event.rowPinned\n      };\n\n      var isCellEditing = _this.activeCellEdit !== null && _this.cellPositionUtils.equals(_this.activeCellEdit, eventCell);\n\n      var isRowEditing = _this.activeRowEdit !== null && _this.rowPositionUtils.sameRow(_this.activeRowEdit, eventCell);\n\n      var shouldCaptureAction = isCellEditing || isRowEditing || _this.isPasting || _this.isFilling;\n\n      if (!shouldCaptureAction) {\n        return;\n      }\n\n      var rowPinned = event.rowPinned,\n          rowIndex = event.rowIndex,\n          column = event.column,\n          oldValue = event.oldValue,\n          value = event.value;\n      var cellValueChange = {\n        rowPinned: rowPinned,\n        rowIndex: rowIndex,\n        columnId: column.getColId(),\n        newValue: value,\n        oldValue: oldValue\n      };\n\n      _this.cellValueChanges.push(cellValueChange);\n    };\n\n    _this.clearStacks = function () {\n      _this.undoStack.clear();\n\n      _this.redoStack.clear();\n    };\n\n    return _this;\n  }\n\n  UndoRedoService.prototype.init = function () {\n    if (!this.gridOptionsWrapper.isUndoRedoCellEditing()) {\n      return;\n    }\n\n    var undoRedoLimit = this.gridOptionsWrapper.getUndoRedoCellEditingLimit();\n\n    if (undoRedoLimit <= 0) {\n      return;\n    }\n\n    this.undoStack = new UndoRedoStack(undoRedoLimit);\n    this.redoStack = new UndoRedoStack(undoRedoLimit);\n    this.addRowEditingListeners();\n    this.addCellEditingListeners();\n    this.addPasteListeners();\n    this.addFillListeners();\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged); // undo / redo is restricted to actual editing so we clear the stacks when other operations are\n    // performed that change the order of the row / cols.\n\n    this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_MOVED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PINNED, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VISIBLE, this.clearStacks);\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_DRAG_END, this.clearStacks);\n  };\n\n  UndoRedoService.prototype.getCurrentUndoStackSize = function () {\n    return this.undoStack ? this.undoStack.getCurrentStackSize() : 0;\n  };\n\n  UndoRedoService.prototype.getCurrentRedoStackSize = function () {\n    return this.redoStack ? this.redoStack.getCurrentStackSize() : 0;\n  };\n\n  UndoRedoService.prototype.undo = function () {\n    if (!this.undoStack) {\n      return;\n    }\n\n    var undoAction = this.undoStack.pop();\n\n    if (!undoAction || !undoAction.cellValueChanges) {\n      return;\n    }\n\n    this.processAction(undoAction, function (cellValueChange) {\n      return cellValueChange.oldValue;\n    });\n\n    if (undoAction instanceof FillUndoRedoAction) {\n      this.processRangeAndCellFocus(undoAction.cellValueChanges, undoAction.initialRange);\n    } else {\n      this.processRangeAndCellFocus(undoAction.cellValueChanges);\n    }\n\n    this.redoStack.push(undoAction);\n  };\n\n  UndoRedoService.prototype.redo = function () {\n    if (!this.redoStack) {\n      return;\n    }\n\n    var redoAction = this.redoStack.pop();\n\n    if (!redoAction || !redoAction.cellValueChanges) {\n      return;\n    }\n\n    this.processAction(redoAction, function (cellValueChange) {\n      return cellValueChange.newValue;\n    });\n\n    if (redoAction instanceof FillUndoRedoAction) {\n      this.processRangeAndCellFocus(redoAction.cellValueChanges, redoAction.finalRange);\n    } else {\n      this.processRangeAndCellFocus(redoAction.cellValueChanges);\n    }\n\n    this.undoStack.push(redoAction);\n  };\n\n  UndoRedoService.prototype.processAction = function (action, valueExtractor) {\n    var _this = this;\n\n    action.cellValueChanges.forEach(function (cellValueChange) {\n      var rowIndex = cellValueChange.rowIndex,\n          rowPinned = cellValueChange.rowPinned,\n          columnId = cellValueChange.columnId;\n      var rowPosition = {\n        rowIndex: rowIndex,\n        rowPinned: rowPinned\n      };\n\n      var currentRow = _this.getRowNode(rowPosition); // checks if the row has been filtered out\n\n\n      if (!currentRow.displayed) {\n        return;\n      }\n\n      currentRow.setDataValue(columnId, valueExtractor(cellValueChange));\n    });\n  };\n\n  UndoRedoService.prototype.processRangeAndCellFocus = function (cellValueChanges, range) {\n    var lastFocusedCell;\n\n    if (range) {\n      var startRow = range.startRow;\n      var endRow = range.endRow;\n      lastFocusedCell = {\n        rowPinned: startRow.rowPinned,\n        rowIndex: startRow.rowIndex,\n        columnId: range.startColumn.getColId()\n      };\n      this.setLastFocusedCell(lastFocusedCell);\n      var cellRangeParams = {\n        rowStartIndex: startRow.rowIndex,\n        rowStartPinned: startRow.rowPinned,\n        rowEndIndex: endRow.rowIndex,\n        rowEndPinned: endRow.rowPinned,\n        columnStart: range.startColumn,\n        columns: range.columns\n      };\n      this.gridApi.addCellRange(cellRangeParams);\n      return;\n    }\n\n    var cellValueChange = cellValueChanges[0];\n    var rowIndex = cellValueChange.rowIndex,\n        rowPinned = cellValueChange.rowPinned;\n    var rowPosition = {\n      rowIndex: rowIndex,\n      rowPinned: rowPinned\n    };\n    var row = this.getRowNode(rowPosition);\n    lastFocusedCell = {\n      rowPinned: cellValueChange.rowPinned,\n      rowIndex: row.rowIndex,\n      columnId: cellValueChange.columnId\n    };\n    this.setLastFocusedCell(lastFocusedCell);\n  };\n\n  UndoRedoService.prototype.setLastFocusedCell = function (lastFocusedCell) {\n    var rowIndex = lastFocusedCell.rowIndex,\n        columnId = lastFocusedCell.columnId,\n        rowPinned = lastFocusedCell.rowPinned;\n    this.gridApi.ensureIndexVisible(rowIndex);\n    this.gridApi.ensureColumnVisible(columnId);\n\n    if (ModuleRegistry.isRegistered(ModuleNames.RangeSelectionModule)) {\n      this.gridApi.clearRangeSelection();\n    }\n\n    this.focusService.setFocusedCell(rowIndex, columnId, rowPinned, true);\n  };\n\n  UndoRedoService.prototype.addRowEditingListeners = function () {\n    var _this = this;\n\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_EDITING_STARTED, function (e) {\n      _this.activeRowEdit = {\n        rowIndex: e.rowIndex,\n        rowPinned: e.rowPinned\n      };\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_EDITING_STOPPED, function () {\n      var action = new UndoRedoAction(_this.cellValueChanges);\n\n      _this.pushActionsToUndoStack(action);\n\n      _this.activeRowEdit = null;\n    });\n  };\n\n  UndoRedoService.prototype.addCellEditingListeners = function () {\n    var _this = this;\n\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_EDITING_STARTED, function (e) {\n      _this.activeCellEdit = {\n        column: e.column,\n        rowIndex: e.rowIndex,\n        rowPinned: e.rowPinned\n      };\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_EDITING_STOPPED, function () {\n      _this.activeCellEdit = null;\n      var shouldPushAction = !_this.activeRowEdit && !_this.isPasting && !_this.isFilling;\n\n      if (shouldPushAction) {\n        var action = new UndoRedoAction(_this.cellValueChanges);\n\n        _this.pushActionsToUndoStack(action);\n      }\n    });\n  };\n\n  UndoRedoService.prototype.addPasteListeners = function () {\n    var _this = this;\n\n    this.addManagedListener(this.eventService, Events.EVENT_PASTE_START, function () {\n      _this.isPasting = true;\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_PASTE_END, function () {\n      var action = new UndoRedoAction(_this.cellValueChanges);\n\n      _this.pushActionsToUndoStack(action);\n\n      _this.isPasting = false;\n    });\n  };\n\n  UndoRedoService.prototype.addFillListeners = function () {\n    var _this = this;\n\n    this.addManagedListener(this.eventService, Events.EVENT_FILL_START, function () {\n      _this.isFilling = true;\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_FILL_END, function (event) {\n      var action = new FillUndoRedoAction(_this.cellValueChanges, event.initialRange, event.finalRange);\n\n      _this.pushActionsToUndoStack(action);\n\n      _this.isFilling = false;\n    });\n  };\n\n  UndoRedoService.prototype.pushActionsToUndoStack = function (action) {\n    this.undoStack.push(action);\n    this.cellValueChanges = [];\n    this.redoStack.clear();\n  };\n\n  UndoRedoService.prototype.getRowNode = function (gridRow) {\n    switch (gridRow.rowPinned) {\n      case Constants.PINNED_TOP:\n        return this.pinnedRowModel.getPinnedTopRowData()[gridRow.rowIndex];\n\n      case Constants.PINNED_BOTTOM:\n        return this.pinnedRowModel.getPinnedBottomRowData()[gridRow.rowIndex];\n\n      default:\n        return this.rowModel.getRow(gridRow.rowIndex);\n    }\n  };\n\n  __decorate([Autowired('focusService')], UndoRedoService.prototype, \"focusService\", void 0);\n\n  __decorate([Autowired('gridApi')], UndoRedoService.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('rowModel')], UndoRedoService.prototype, \"rowModel\", void 0);\n\n  __decorate([Autowired('pinnedRowModel')], UndoRedoService.prototype, \"pinnedRowModel\", void 0);\n\n  __decorate([Autowired('cellPositionUtils')], UndoRedoService.prototype, \"cellPositionUtils\", void 0);\n\n  __decorate([Autowired('rowPositionUtils')], UndoRedoService.prototype, \"rowPositionUtils\", void 0);\n\n  __decorate([PostConstruct], UndoRedoService.prototype, \"init\", null);\n\n  UndoRedoService = __decorate([Bean('undoRedoService')], UndoRedoService);\n  return UndoRedoService;\n}(BeanStub);\n\nexport { UndoRedoService };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/undoRedo/undoRedoService.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Bean","PostConstruct","Events","FillUndoRedoAction","UndoRedoAction","UndoRedoStack","Constants","ModuleNames","ModuleRegistry","BeanStub","UndoRedoService","_super","_this","apply","cellValueChanges","activeCellEdit","activeRowEdit","isPasting","isFilling","onCellValueChanged","event","eventCell","column","rowIndex","rowPinned","isCellEditing","cellPositionUtils","equals","isRowEditing","rowPositionUtils","sameRow","shouldCaptureAction","oldValue","value","cellValueChange","columnId","getColId","newValue","push","clearStacks","undoStack","clear","redoStack","init","gridOptionsWrapper","isUndoRedoCellEditing","undoRedoLimit","getUndoRedoCellEditingLimit","addRowEditingListeners","addCellEditingListeners","addPasteListeners","addFillListeners","addManagedListener","eventService","EVENT_CELL_VALUE_CHANGED","EVENT_MODEL_UPDATED","EVENT_COLUMN_PIVOT_MODE_CHANGED","EVENT_NEW_COLUMNS_LOADED","EVENT_COLUMN_GROUP_OPENED","EVENT_COLUMN_ROW_GROUP_CHANGED","EVENT_COLUMN_MOVED","EVENT_COLUMN_PINNED","EVENT_COLUMN_VISIBLE","EVENT_ROW_DRAG_END","getCurrentUndoStackSize","getCurrentStackSize","getCurrentRedoStackSize","undo","undoAction","pop","processAction","processRangeAndCellFocus","initialRange","redo","redoAction","finalRange","action","valueExtractor","forEach","rowPosition","currentRow","getRowNode","displayed","setDataValue","range","lastFocusedCell","startRow","endRow","startColumn","setLastFocusedCell","cellRangeParams","rowStartIndex","rowStartPinned","rowEndIndex","rowEndPinned","columnStart","columns","gridApi","addCellRange","row","ensureIndexVisible","ensureColumnVisible","isRegistered","RangeSelectionModule","clearRangeSelection","focusService","setFocusedCell","EVENT_ROW_EDITING_STARTED","e","EVENT_ROW_EDITING_STOPPED","pushActionsToUndoStack","EVENT_CELL_EDITING_STARTED","EVENT_CELL_EDITING_STOPPED","shouldPushAction","EVENT_PASTE_START","EVENT_PASTE_END","EVENT_FILL_START","EVENT_FILL_END","gridRow","PINNED_TOP","pinnedRowModel","getPinnedTopRowData","PINNED_BOTTOM","getPinnedBottomRowData","rowModel","getRow"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Bean, PostConstruct } from \"../context/context\";\nimport { Events } from \"../eventKeys\";\nimport { FillUndoRedoAction, UndoRedoAction, UndoRedoStack } from \"./undoRedoStack\";\nimport { Constants } from \"../constants/constants\";\nimport { ModuleNames } from \"../modules/moduleNames\";\nimport { ModuleRegistry } from \"../modules/moduleRegistry\";\nimport { BeanStub } from \"../context/beanStub\";\nvar UndoRedoService = /** @class */ (function (_super) {\n    __extends(UndoRedoService, _super);\n    function UndoRedoService() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cellValueChanges = [];\n        _this.activeCellEdit = null;\n        _this.activeRowEdit = null;\n        _this.isPasting = false;\n        _this.isFilling = false;\n        _this.onCellValueChanged = function (event) {\n            var eventCell = { column: event.column, rowIndex: event.rowIndex, rowPinned: event.rowPinned };\n            var isCellEditing = _this.activeCellEdit !== null && _this.cellPositionUtils.equals(_this.activeCellEdit, eventCell);\n            var isRowEditing = _this.activeRowEdit !== null && _this.rowPositionUtils.sameRow(_this.activeRowEdit, eventCell);\n            var shouldCaptureAction = isCellEditing || isRowEditing || _this.isPasting || _this.isFilling;\n            if (!shouldCaptureAction) {\n                return;\n            }\n            var rowPinned = event.rowPinned, rowIndex = event.rowIndex, column = event.column, oldValue = event.oldValue, value = event.value;\n            var cellValueChange = {\n                rowPinned: rowPinned,\n                rowIndex: rowIndex,\n                columnId: column.getColId(),\n                newValue: value,\n                oldValue: oldValue\n            };\n            _this.cellValueChanges.push(cellValueChange);\n        };\n        _this.clearStacks = function () {\n            _this.undoStack.clear();\n            _this.redoStack.clear();\n        };\n        return _this;\n    }\n    UndoRedoService.prototype.init = function () {\n        if (!this.gridOptionsWrapper.isUndoRedoCellEditing()) {\n            return;\n        }\n        var undoRedoLimit = this.gridOptionsWrapper.getUndoRedoCellEditingLimit();\n        if (undoRedoLimit <= 0) {\n            return;\n        }\n        this.undoStack = new UndoRedoStack(undoRedoLimit);\n        this.redoStack = new UndoRedoStack(undoRedoLimit);\n        this.addRowEditingListeners();\n        this.addCellEditingListeners();\n        this.addPasteListeners();\n        this.addFillListeners();\n        this.addManagedListener(this.eventService, Events.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged);\n        // undo / redo is restricted to actual editing so we clear the stacks when other operations are\n        // performed that change the order of the row / cols.\n        this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, this.clearStacks);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.clearStacks);\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.clearStacks);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, this.clearStacks);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.clearStacks);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_MOVED, this.clearStacks);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PINNED, this.clearStacks);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VISIBLE, this.clearStacks);\n        this.addManagedListener(this.eventService, Events.EVENT_ROW_DRAG_END, this.clearStacks);\n    };\n    UndoRedoService.prototype.getCurrentUndoStackSize = function () {\n        return this.undoStack ? this.undoStack.getCurrentStackSize() : 0;\n    };\n    UndoRedoService.prototype.getCurrentRedoStackSize = function () {\n        return this.redoStack ? this.redoStack.getCurrentStackSize() : 0;\n    };\n    UndoRedoService.prototype.undo = function () {\n        if (!this.undoStack) {\n            return;\n        }\n        var undoAction = this.undoStack.pop();\n        if (!undoAction || !undoAction.cellValueChanges) {\n            return;\n        }\n        this.processAction(undoAction, function (cellValueChange) { return cellValueChange.oldValue; });\n        if (undoAction instanceof FillUndoRedoAction) {\n            this.processRangeAndCellFocus(undoAction.cellValueChanges, undoAction.initialRange);\n        }\n        else {\n            this.processRangeAndCellFocus(undoAction.cellValueChanges);\n        }\n        this.redoStack.push(undoAction);\n    };\n    UndoRedoService.prototype.redo = function () {\n        if (!this.redoStack) {\n            return;\n        }\n        var redoAction = this.redoStack.pop();\n        if (!redoAction || !redoAction.cellValueChanges) {\n            return;\n        }\n        this.processAction(redoAction, function (cellValueChange) { return cellValueChange.newValue; });\n        if (redoAction instanceof FillUndoRedoAction) {\n            this.processRangeAndCellFocus(redoAction.cellValueChanges, redoAction.finalRange);\n        }\n        else {\n            this.processRangeAndCellFocus(redoAction.cellValueChanges);\n        }\n        this.undoStack.push(redoAction);\n    };\n    UndoRedoService.prototype.processAction = function (action, valueExtractor) {\n        var _this = this;\n        action.cellValueChanges.forEach(function (cellValueChange) {\n            var rowIndex = cellValueChange.rowIndex, rowPinned = cellValueChange.rowPinned, columnId = cellValueChange.columnId;\n            var rowPosition = { rowIndex: rowIndex, rowPinned: rowPinned };\n            var currentRow = _this.getRowNode(rowPosition);\n            // checks if the row has been filtered out\n            if (!currentRow.displayed) {\n                return;\n            }\n            currentRow.setDataValue(columnId, valueExtractor(cellValueChange));\n        });\n    };\n    UndoRedoService.prototype.processRangeAndCellFocus = function (cellValueChanges, range) {\n        var lastFocusedCell;\n        if (range) {\n            var startRow = range.startRow;\n            var endRow = range.endRow;\n            lastFocusedCell = {\n                rowPinned: startRow.rowPinned,\n                rowIndex: startRow.rowIndex,\n                columnId: range.startColumn.getColId()\n            };\n            this.setLastFocusedCell(lastFocusedCell);\n            var cellRangeParams = {\n                rowStartIndex: startRow.rowIndex,\n                rowStartPinned: startRow.rowPinned,\n                rowEndIndex: endRow.rowIndex,\n                rowEndPinned: endRow.rowPinned,\n                columnStart: range.startColumn,\n                columns: range.columns\n            };\n            this.gridApi.addCellRange(cellRangeParams);\n            return;\n        }\n        var cellValueChange = cellValueChanges[0];\n        var rowIndex = cellValueChange.rowIndex, rowPinned = cellValueChange.rowPinned;\n        var rowPosition = { rowIndex: rowIndex, rowPinned: rowPinned };\n        var row = this.getRowNode(rowPosition);\n        lastFocusedCell = {\n            rowPinned: cellValueChange.rowPinned,\n            rowIndex: row.rowIndex,\n            columnId: cellValueChange.columnId\n        };\n        this.setLastFocusedCell(lastFocusedCell);\n    };\n    UndoRedoService.prototype.setLastFocusedCell = function (lastFocusedCell) {\n        var rowIndex = lastFocusedCell.rowIndex, columnId = lastFocusedCell.columnId, rowPinned = lastFocusedCell.rowPinned;\n        this.gridApi.ensureIndexVisible(rowIndex);\n        this.gridApi.ensureColumnVisible(columnId);\n        if (ModuleRegistry.isRegistered(ModuleNames.RangeSelectionModule)) {\n            this.gridApi.clearRangeSelection();\n        }\n        this.focusService.setFocusedCell(rowIndex, columnId, rowPinned, true);\n    };\n    UndoRedoService.prototype.addRowEditingListeners = function () {\n        var _this = this;\n        this.addManagedListener(this.eventService, Events.EVENT_ROW_EDITING_STARTED, function (e) {\n            _this.activeRowEdit = { rowIndex: e.rowIndex, rowPinned: e.rowPinned };\n        });\n        this.addManagedListener(this.eventService, Events.EVENT_ROW_EDITING_STOPPED, function () {\n            var action = new UndoRedoAction(_this.cellValueChanges);\n            _this.pushActionsToUndoStack(action);\n            _this.activeRowEdit = null;\n        });\n    };\n    UndoRedoService.prototype.addCellEditingListeners = function () {\n        var _this = this;\n        this.addManagedListener(this.eventService, Events.EVENT_CELL_EDITING_STARTED, function (e) {\n            _this.activeCellEdit = { column: e.column, rowIndex: e.rowIndex, rowPinned: e.rowPinned };\n        });\n        this.addManagedListener(this.eventService, Events.EVENT_CELL_EDITING_STOPPED, function () {\n            _this.activeCellEdit = null;\n            var shouldPushAction = !_this.activeRowEdit && !_this.isPasting && !_this.isFilling;\n            if (shouldPushAction) {\n                var action = new UndoRedoAction(_this.cellValueChanges);\n                _this.pushActionsToUndoStack(action);\n            }\n        });\n    };\n    UndoRedoService.prototype.addPasteListeners = function () {\n        var _this = this;\n        this.addManagedListener(this.eventService, Events.EVENT_PASTE_START, function () {\n            _this.isPasting = true;\n        });\n        this.addManagedListener(this.eventService, Events.EVENT_PASTE_END, function () {\n            var action = new UndoRedoAction(_this.cellValueChanges);\n            _this.pushActionsToUndoStack(action);\n            _this.isPasting = false;\n        });\n    };\n    UndoRedoService.prototype.addFillListeners = function () {\n        var _this = this;\n        this.addManagedListener(this.eventService, Events.EVENT_FILL_START, function () {\n            _this.isFilling = true;\n        });\n        this.addManagedListener(this.eventService, Events.EVENT_FILL_END, function (event) {\n            var action = new FillUndoRedoAction(_this.cellValueChanges, event.initialRange, event.finalRange);\n            _this.pushActionsToUndoStack(action);\n            _this.isFilling = false;\n        });\n    };\n    UndoRedoService.prototype.pushActionsToUndoStack = function (action) {\n        this.undoStack.push(action);\n        this.cellValueChanges = [];\n        this.redoStack.clear();\n    };\n    UndoRedoService.prototype.getRowNode = function (gridRow) {\n        switch (gridRow.rowPinned) {\n            case Constants.PINNED_TOP:\n                return this.pinnedRowModel.getPinnedTopRowData()[gridRow.rowIndex];\n            case Constants.PINNED_BOTTOM:\n                return this.pinnedRowModel.getPinnedBottomRowData()[gridRow.rowIndex];\n            default:\n                return this.rowModel.getRow(gridRow.rowIndex);\n        }\n    };\n    __decorate([\n        Autowired('focusService')\n    ], UndoRedoService.prototype, \"focusService\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], UndoRedoService.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('rowModel')\n    ], UndoRedoService.prototype, \"rowModel\", void 0);\n    __decorate([\n        Autowired('pinnedRowModel')\n    ], UndoRedoService.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        Autowired('cellPositionUtils')\n    ], UndoRedoService.prototype, \"cellPositionUtils\", void 0);\n    __decorate([\n        Autowired('rowPositionUtils')\n    ], UndoRedoService.prototype, \"rowPositionUtils\", void 0);\n    __decorate([\n        PostConstruct\n    ], UndoRedoService.prototype, \"init\", null);\n    UndoRedoService = __decorate([\n        Bean('undoRedoService')\n    ], UndoRedoService);\n    return UndoRedoService;\n}(BeanStub));\nexport { UndoRedoService };\n"]},"metadata":{},"sourceType":"module"}