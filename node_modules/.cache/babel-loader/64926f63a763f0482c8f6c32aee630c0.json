{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { forEach } from './array';\nexport var AgPromiseStatus;\n\n(function (AgPromiseStatus) {\n  AgPromiseStatus[AgPromiseStatus[\"IN_PROGRESS\"] = 0] = \"IN_PROGRESS\";\n  AgPromiseStatus[AgPromiseStatus[\"RESOLVED\"] = 1] = \"RESOLVED\";\n})(AgPromiseStatus || (AgPromiseStatus = {}));\n\nvar AgPromise =\n/** @class */\nfunction () {\n  function AgPromise(callback) {\n    var _this = this;\n\n    this.status = AgPromiseStatus.IN_PROGRESS;\n    this.resolution = null;\n    this.waiters = [];\n    callback(function (value) {\n      return _this.onDone(value);\n    }, function (params) {\n      return _this.onReject(params);\n    });\n  }\n\n  AgPromise.all = function (promises) {\n    return new AgPromise(function (resolve) {\n      var remainingToResolve = promises.length;\n      var combinedValues = new Array(remainingToResolve);\n      forEach(promises, function (promise, index) {\n        promise.then(function (value) {\n          combinedValues[index] = value;\n          remainingToResolve--;\n\n          if (remainingToResolve === 0) {\n            resolve(combinedValues);\n          }\n        });\n      });\n    });\n  };\n\n  AgPromise.resolve = function (value) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    return new AgPromise(function (resolve) {\n      return resolve(value);\n    });\n  };\n\n  AgPromise.prototype.then = function (func) {\n    var _this = this;\n\n    return new AgPromise(function (resolve) {\n      if (_this.status === AgPromiseStatus.RESOLVED) {\n        resolve(func(_this.resolution));\n      } else {\n        _this.waiters.push(function (value) {\n          return resolve(func(value));\n        });\n      }\n    });\n  };\n\n  AgPromise.prototype.resolveNow = function (ifNotResolvedValue, ifResolved) {\n    return this.status === AgPromiseStatus.RESOLVED ? ifResolved(this.resolution) : ifNotResolvedValue;\n  };\n\n  AgPromise.prototype.onDone = function (value) {\n    this.status = AgPromiseStatus.RESOLVED;\n    this.resolution = value;\n    forEach(this.waiters, function (waiter) {\n      return waiter(value);\n    });\n  };\n\n  AgPromise.prototype.onReject = function (params) {\n    console.warn('TBI');\n  };\n\n  return AgPromise;\n}();\n\nexport { AgPromise };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/utils/promise.js"],"names":["forEach","AgPromiseStatus","AgPromise","callback","_this","status","IN_PROGRESS","resolution","waiters","value","onDone","params","onReject","all","promises","resolve","remainingToResolve","length","combinedValues","Array","promise","index","then","prototype","func","RESOLVED","push","resolveNow","ifNotResolvedValue","ifResolved","waiter","console","warn"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { forEach } from './array';\nexport var AgPromiseStatus;\n(function (AgPromiseStatus) {\n    AgPromiseStatus[AgPromiseStatus[\"IN_PROGRESS\"] = 0] = \"IN_PROGRESS\";\n    AgPromiseStatus[AgPromiseStatus[\"RESOLVED\"] = 1] = \"RESOLVED\";\n})(AgPromiseStatus || (AgPromiseStatus = {}));\nvar AgPromise = /** @class */ (function () {\n    function AgPromise(callback) {\n        var _this = this;\n        this.status = AgPromiseStatus.IN_PROGRESS;\n        this.resolution = null;\n        this.waiters = [];\n        callback(function (value) { return _this.onDone(value); }, function (params) { return _this.onReject(params); });\n    }\n    AgPromise.all = function (promises) {\n        return new AgPromise(function (resolve) {\n            var remainingToResolve = promises.length;\n            var combinedValues = new Array(remainingToResolve);\n            forEach(promises, function (promise, index) {\n                promise.then(function (value) {\n                    combinedValues[index] = value;\n                    remainingToResolve--;\n                    if (remainingToResolve === 0) {\n                        resolve(combinedValues);\n                    }\n                });\n            });\n        });\n    };\n    AgPromise.resolve = function (value) {\n        if (value === void 0) { value = null; }\n        return new AgPromise(function (resolve) { return resolve(value); });\n    };\n    AgPromise.prototype.then = function (func) {\n        var _this = this;\n        return new AgPromise(function (resolve) {\n            if (_this.status === AgPromiseStatus.RESOLVED) {\n                resolve(func(_this.resolution));\n            }\n            else {\n                _this.waiters.push(function (value) { return resolve(func(value)); });\n            }\n        });\n    };\n    AgPromise.prototype.resolveNow = function (ifNotResolvedValue, ifResolved) {\n        return this.status === AgPromiseStatus.RESOLVED ? ifResolved(this.resolution) : ifNotResolvedValue;\n    };\n    AgPromise.prototype.onDone = function (value) {\n        this.status = AgPromiseStatus.RESOLVED;\n        this.resolution = value;\n        forEach(this.waiters, function (waiter) { return waiter(value); });\n    };\n    AgPromise.prototype.onReject = function (params) {\n        console.warn('TBI');\n    };\n    return AgPromise;\n}());\nexport { AgPromise };\n"]},"metadata":{},"sourceType":"module"}