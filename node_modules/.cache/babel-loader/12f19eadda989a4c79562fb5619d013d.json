{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { Autowired, Bean, Optional, PostConstruct } from \"./context/context\";\nimport { BeanStub } from \"./context/beanStub\";\nimport { Events } from \"./events\";\nimport { ManagedFocusFeature } from \"./widgets/managedFocusFeature\";\nimport { getTabIndex } from './utils/browser';\nimport { findIndex, last } from './utils/array';\nimport { makeNull } from './utils/generic';\nimport { Constants } from \"./constants/constants\";\nimport { RowCtrl } from \"./rendering/row/rowCtrl\";\nimport { AbstractHeaderCellCtrl } from \"./headerRendering/cells/abstractCell/abstractHeaderCellCtrl\";\n\nvar FocusService =\n/** @class */\nfunction (_super) {\n  __extends(FocusService, _super);\n\n  function FocusService() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FocusService_1 = FocusService;\n  /**\n   * Adds a gridCore to the list of the gridCores monitoring Keyboard Mode\n   * in a specific HTMLDocument.\n   *\n   * @param doc {Document} - The Document containing the gridCore.\n   * @param gridCore {GridComp} - The GridCore to be monitored.\n   */\n\n  FocusService.addKeyboardModeEvents = function (doc, controller) {\n    var docControllers = FocusService_1.instancesMonitored.get(doc);\n\n    if (docControllers && docControllers.length > 0) {\n      if (docControllers.indexOf(controller) === -1) {\n        docControllers.push(controller);\n      }\n    } else {\n      FocusService_1.instancesMonitored.set(doc, [controller]);\n      doc.addEventListener('keydown', FocusService_1.toggleKeyboardMode);\n      doc.addEventListener('mousedown', FocusService_1.toggleKeyboardMode);\n    }\n  };\n  /**\n   * Removes a gridCore from the list of the gridCores monitoring Keyboard Mode\n   * in a specific HTMLDocument.\n   *\n   * @param doc {Document} - The Document containing the gridCore.\n   * @param gridCore {GridComp} - The GridCore to be removed.\n   */\n\n\n  FocusService.removeKeyboardModeEvents = function (doc, controller) {\n    var docControllers = FocusService_1.instancesMonitored.get(doc);\n    var newControllers = [];\n\n    if (docControllers && docControllers.length) {\n      newControllers = __spreadArrays(docControllers).filter(function (currentGridCore) {\n        return currentGridCore !== controller;\n      });\n      FocusService_1.instancesMonitored.set(doc, newControllers);\n    }\n\n    if (newControllers.length === 0) {\n      doc.removeEventListener('keydown', FocusService_1.toggleKeyboardMode);\n      doc.removeEventListener('mousedown', FocusService_1.toggleKeyboardMode);\n    }\n  };\n  /**\n   * This method will be called by `keydown` and `mousedown` events on all Documents monitoring\n   * KeyboardMode. It will then fire a KEYBOARD_FOCUS, MOUSE_FOCUS on each gridCore present in\n   * the Document allowing each gridCore to maintain a state for KeyboardMode.\n   *\n   * @param event {KeyboardEvent | MouseEvent | TouchEvent} - The event triggered.\n   */\n\n\n  FocusService.toggleKeyboardMode = function (event) {\n    var isKeyboardActive = FocusService_1.keyboardModeActive;\n    var isKeyboardEvent = event.type === 'keydown';\n\n    if (isKeyboardEvent) {\n      // the following keys should not toggle keyboard mode.\n      if (event.ctrlKey || event.metaKey || event.altKey) {\n        return;\n      }\n    }\n\n    if (isKeyboardActive && isKeyboardEvent || !isKeyboardActive && !isKeyboardEvent) {\n      return;\n    }\n\n    FocusService_1.keyboardModeActive = isKeyboardEvent;\n    var doc = event.target.ownerDocument;\n\n    if (!doc) {\n      return;\n    }\n\n    var controllersForDoc = FocusService_1.instancesMonitored.get(doc);\n\n    if (controllersForDoc) {\n      controllersForDoc.forEach(function (controller) {\n        controller.dispatchEvent({\n          type: isKeyboardEvent ? Events.EVENT_KEYBOARD_FOCUS : Events.EVENT_MOUSE_FOCUS\n        });\n      });\n    }\n  };\n\n  FocusService.prototype.init = function () {\n    var _this = this;\n\n    var clearFocusedCellListener = this.clearFocusedCell.bind(this);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, clearFocusedCellListener);\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverythingChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, clearFocusedCellListener);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, clearFocusedCellListener);\n    this.ctrlsService.whenReady(function (p) {\n      _this.gridCtrl = p.gridCtrl;\n\n      var doc = _this.gridOptionsWrapper.getDocument();\n\n      FocusService_1.addKeyboardModeEvents(doc, _this.gridCtrl);\n\n      _this.addDestroyFunc(function () {\n        return _this.unregisterGridCompController(_this.gridCtrl);\n      });\n    });\n  };\n\n  FocusService.prototype.unregisterGridCompController = function (gridCompController) {\n    var doc = this.gridOptionsWrapper.getDocument();\n    FocusService_1.removeKeyboardModeEvents(doc, gridCompController);\n  };\n\n  FocusService.prototype.onColumnEverythingChanged = function () {\n    // if the columns change, check and see if this column still exists. if it does, then\n    // we can keep the focused cell. if it doesn't, then we need to drop the focused cell.\n    if (!this.focusedCellPosition) {\n      return;\n    }\n\n    var col = this.focusedCellPosition.column;\n    var colFromColumnModel = this.columnModel.getGridColumn(col.getId());\n\n    if (col !== colFromColumnModel) {\n      this.clearFocusedCell();\n    }\n  };\n\n  FocusService.prototype.isKeyboardMode = function () {\n    return FocusService_1.keyboardModeActive;\n  }; // we check if the browser is focusing something, and if it is, and\n  // it's the cell we think is focused, then return the cell. so this\n  // methods returns the cell if a) we think it has focus and b) the\n  // browser thinks it has focus. this then returns nothing if we\n  // first focus a cell, then second click outside the grid, as then the\n  // grid cell will still be focused as far as the grid is concerned,\n  // however the browser focus will have moved somewhere else.\n\n\n  FocusService.prototype.getFocusCellToUseAfterRefresh = function () {\n    if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedCellPosition) {\n      return null;\n    } // we check that the browser is actually focusing on the grid, if it is not, then\n    // we have nothing to worry about. we check for ROW data, as this covers both focused Rows (for Full Width Rows)\n    // and Cells (covers cells as cells live in rows)\n\n\n    if (this.isDomDataMissingInHierarchy(document.activeElement, RowCtrl.DOM_DATA_KEY_ROW_CTRL)) {\n      return null;\n    }\n\n    return this.focusedCellPosition;\n  };\n\n  FocusService.prototype.getFocusHeaderToUseAfterRefresh = function () {\n    if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedHeaderPosition) {\n      return null;\n    } // we check that the browser is actually focusing on the grid, if it is not, then\n    // we have nothing to worry about\n\n\n    if (this.isDomDataMissingInHierarchy(document.activeElement, AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL)) {\n      return null;\n    }\n\n    return this.focusedHeaderPosition;\n  };\n\n  FocusService.prototype.isDomDataMissingInHierarchy = function (eBrowserCell, key) {\n    var ePointer = eBrowserCell;\n\n    while (ePointer) {\n      var data = this.gridOptionsWrapper.getDomData(ePointer, key);\n\n      if (data) {\n        return false;\n      }\n\n      ePointer = ePointer.parentNode;\n    }\n\n    return true;\n  };\n\n  FocusService.prototype.clearFocusedCell = function () {\n    this.focusedCellPosition = null;\n    this.onCellFocused(false);\n  };\n\n  FocusService.prototype.getFocusedCell = function () {\n    return this.focusedCellPosition;\n  };\n\n  FocusService.prototype.setFocusedCell = function (rowIndex, colKey, floating, forceBrowserFocus) {\n    if (forceBrowserFocus === void 0) {\n      forceBrowserFocus = false;\n    }\n\n    var gridColumn = this.columnModel.getGridColumn(colKey); // if column doesn't exist, then blank the focused cell and return. this can happen when user sets new columns,\n    // and the focused cell is in a column that no longer exists. after columns change, the grid refreshes and tries\n    // to re-focus the focused cell.\n\n    if (!gridColumn) {\n      this.focusedCellPosition = null;\n      return;\n    }\n\n    this.focusedCellPosition = gridColumn ? {\n      rowIndex: rowIndex,\n      rowPinned: makeNull(floating),\n      column: gridColumn\n    } : null;\n    this.onCellFocused(forceBrowserFocus);\n  };\n\n  FocusService.prototype.isCellFocused = function (cellPosition) {\n    if (this.focusedCellPosition == null) {\n      return false;\n    }\n\n    return this.focusedCellPosition.column === cellPosition.column && this.isRowFocused(cellPosition.rowIndex, cellPosition.rowPinned);\n  };\n\n  FocusService.prototype.isRowNodeFocused = function (rowNode) {\n    return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n  };\n\n  FocusService.prototype.isHeaderWrapperFocused = function (headerCtrl) {\n    if (this.focusedHeaderPosition == null) {\n      return false;\n    }\n\n    var column = headerCtrl.getColumnGroupChild();\n    var headerRowIndex = headerCtrl.getRowIndex();\n    var pinned = headerCtrl.getPinned();\n    var _a = this.focusedHeaderPosition,\n        focusedColumn = _a.column,\n        focusedHeaderRowIndex = _a.headerRowIndex;\n    return column === focusedColumn && headerRowIndex === focusedHeaderRowIndex && pinned == focusedColumn.getPinned();\n  };\n\n  FocusService.prototype.clearFocusedHeader = function () {\n    this.focusedHeaderPosition = null;\n  };\n\n  FocusService.prototype.getFocusedHeader = function () {\n    return this.focusedHeaderPosition;\n  };\n\n  FocusService.prototype.setFocusedHeader = function (headerRowIndex, column) {\n    this.focusedHeaderPosition = {\n      headerRowIndex: headerRowIndex,\n      column: column\n    };\n  };\n\n  FocusService.prototype.focusHeaderPosition = function (params) {\n    var direction = params.direction,\n        fromTab = params.fromTab,\n        allowUserOverride = params.allowUserOverride,\n        event = params.event;\n    var headerPosition = params.headerPosition;\n\n    if (allowUserOverride) {\n      var gridOptionsWrapper = this.gridOptionsWrapper;\n      var currentPosition = this.getFocusedHeader();\n      var headerRowCount = this.headerNavigationService.getHeaderRowCount();\n\n      if (fromTab) {\n        var userFunc = gridOptionsWrapper.getTabToNextHeaderFunc();\n\n        if (userFunc) {\n          var params_1 = {\n            backwards: direction === 'Before',\n            previousHeaderPosition: currentPosition,\n            nextHeaderPosition: headerPosition,\n            headerRowCount: headerRowCount,\n            api: gridOptionsWrapper.getApi(),\n            columnApi: gridOptionsWrapper.getColumnApi()\n          };\n          headerPosition = userFunc(params_1);\n        }\n      } else {\n        var userFunc = gridOptionsWrapper.getNavigateToNextHeaderFunc();\n\n        if (userFunc && event) {\n          var params_2 = {\n            key: event.key,\n            previousHeaderPosition: currentPosition,\n            nextHeaderPosition: headerPosition,\n            headerRowCount: headerRowCount,\n            event: event,\n            api: gridOptionsWrapper.getApi(),\n            columnApi: gridOptionsWrapper.getColumnApi()\n          };\n          headerPosition = userFunc(params_2);\n        }\n      }\n    }\n\n    if (!headerPosition) {\n      return false;\n    }\n\n    if (headerPosition.headerRowIndex === -1) {\n      return this.focusGridView(headerPosition.column);\n    }\n\n    this.headerNavigationService.scrollToColumn(headerPosition.column, direction);\n    var headerRowContainerCtrl = this.ctrlsService.getHeaderRowContainerCtrl(headerPosition.column.getPinned()); // this will automatically call the setFocusedHeader method above\n\n    var focusSuccess = headerRowContainerCtrl.focusHeader(headerPosition.headerRowIndex, headerPosition.column, event);\n    return focusSuccess;\n  };\n\n  FocusService.prototype.isAnyCellFocused = function () {\n    return !!this.focusedCellPosition;\n  };\n\n  FocusService.prototype.isRowFocused = function (rowIndex, floating) {\n    if (this.focusedCellPosition == null) {\n      return false;\n    }\n\n    return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === makeNull(floating);\n  };\n\n  FocusService.prototype.findFocusableElements = function (rootNode, exclude, onlyUnmanaged) {\n    if (onlyUnmanaged === void 0) {\n      onlyUnmanaged = false;\n    }\n\n    var focusableString = Constants.FOCUSABLE_SELECTOR;\n    var excludeString = Constants.FOCUSABLE_EXCLUDE;\n\n    if (exclude) {\n      excludeString += ', ' + exclude;\n    }\n\n    if (onlyUnmanaged) {\n      excludeString += ', [tabindex=\"-1\"]';\n    }\n\n    var nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString));\n    var excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n\n    if (!excludeNodes.length) {\n      return nodes;\n    }\n\n    var diff = function (a, b) {\n      return a.filter(function (element) {\n        return b.indexOf(element) === -1;\n      });\n    };\n\n    return diff(nodes, excludeNodes);\n  };\n\n  FocusService.prototype.focusInto = function (rootNode, up, onlyUnmanaged) {\n    if (up === void 0) {\n      up = false;\n    }\n\n    if (onlyUnmanaged === void 0) {\n      onlyUnmanaged = false;\n    }\n\n    var focusableElements = this.findFocusableElements(rootNode, null, onlyUnmanaged);\n    var toFocus = up ? last(focusableElements) : focusableElements[0];\n\n    if (toFocus) {\n      toFocus.focus();\n      return true;\n    }\n\n    return false;\n  };\n\n  FocusService.prototype.findNextFocusableElement = function (rootNode, onlyManaged, backwards) {\n    var focusable = this.findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n    var currentIndex;\n\n    if (onlyManaged) {\n      currentIndex = findIndex(focusable, function (el) {\n        return el.contains(document.activeElement);\n      });\n    } else {\n      currentIndex = focusable.indexOf(document.activeElement);\n    }\n\n    var nextIndex = currentIndex + (backwards ? -1 : 1);\n\n    if (nextIndex < 0 || nextIndex >= focusable.length) {\n      return null;\n    }\n\n    return focusable[nextIndex];\n  };\n\n  FocusService.prototype.isFocusUnderManagedComponent = function (rootNode) {\n    var managedContainers = rootNode.querySelectorAll(\".\" + ManagedFocusFeature.FOCUS_MANAGED_CLASS);\n\n    if (!managedContainers.length) {\n      return false;\n    }\n\n    for (var i = 0; i < managedContainers.length; i++) {\n      if (managedContainers[i].contains(document.activeElement)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  FocusService.prototype.findTabbableParent = function (node, limit) {\n    if (limit === void 0) {\n      limit = 5;\n    }\n\n    var counter = 0;\n\n    while (node && getTabIndex(node) === null && ++counter <= limit) {\n      node = node.parentElement;\n    }\n\n    if (getTabIndex(node) === null) {\n      return null;\n    }\n\n    return node;\n  };\n\n  FocusService.prototype.onCellFocused = function (forceBrowserFocus) {\n    var event = {\n      type: Events.EVENT_CELL_FOCUSED,\n      forceBrowserFocus: forceBrowserFocus,\n      rowIndex: null,\n      column: null,\n      floating: null,\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      rowPinned: null,\n      isFullWidthCell: false\n    };\n\n    if (this.focusedCellPosition) {\n      var rowIndex = event.rowIndex = this.focusedCellPosition.rowIndex;\n      var rowPinned = event.rowPinned = this.focusedCellPosition.rowPinned;\n      event.column = this.focusedCellPosition.column;\n      var rowCtrl = this.rowRenderer.getRowByPosition({\n        rowIndex: rowIndex,\n        rowPinned: rowPinned\n      });\n\n      if (rowCtrl) {\n        event.isFullWidthCell = rowCtrl.isFullWidth();\n      }\n    }\n\n    this.eventService.dispatchEvent(event);\n  };\n\n  FocusService.prototype.focusGridView = function (column, backwards) {\n    var nextRow = backwards ? this.rowPositionUtils.getLastRow() : this.rowPositionUtils.getFirstRow();\n\n    if (!nextRow) {\n      return false;\n    }\n\n    var rowIndex = nextRow.rowIndex,\n        rowPinned = nextRow.rowPinned;\n    var focusedHeader = this.getFocusedHeader();\n\n    if (!column && focusedHeader) {\n      column = focusedHeader.column;\n    }\n\n    if (rowIndex == null || !column) {\n      return false;\n    }\n\n    this.navigationService.ensureCellVisible({\n      rowIndex: rowIndex,\n      column: column,\n      rowPinned: rowPinned\n    });\n    this.setFocusedCell(rowIndex, column, makeNull(rowPinned), true);\n\n    if (this.rangeService) {\n      var cellPosition = {\n        rowIndex: rowIndex,\n        rowPinned: rowPinned,\n        column: column\n      };\n      this.rangeService.setRangeToCell(cellPosition);\n    }\n\n    return true;\n  };\n\n  FocusService.prototype.focusNextGridCoreContainer = function (backwards) {\n    if (this.gridCtrl.focusNextInnerContainer(backwards)) {\n      return true;\n    }\n\n    if (!backwards) {\n      this.gridCtrl.forceFocusOutOfContainer();\n    }\n\n    return false;\n  };\n\n  var FocusService_1;\n  FocusService.AG_KEYBOARD_FOCUS = 'ag-keyboard-focus';\n  FocusService.keyboardModeActive = false;\n  FocusService.instancesMonitored = new Map();\n\n  __decorate([Autowired('columnModel')], FocusService.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('headerNavigationService')], FocusService.prototype, \"headerNavigationService\", void 0);\n\n  __decorate([Autowired('columnApi')], FocusService.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], FocusService.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('rowRenderer')], FocusService.prototype, \"rowRenderer\", void 0);\n\n  __decorate([Autowired('rowPositionUtils')], FocusService.prototype, \"rowPositionUtils\", void 0);\n\n  __decorate([Optional('rangeService')], FocusService.prototype, \"rangeService\", void 0);\n\n  __decorate([Autowired('navigationService')], FocusService.prototype, \"navigationService\", void 0);\n\n  __decorate([Autowired('ctrlsService')], FocusService.prototype, \"ctrlsService\", void 0);\n\n  __decorate([PostConstruct], FocusService.prototype, \"init\", null);\n\n  FocusService = FocusService_1 = __decorate([Bean('focusService')], FocusService);\n  return FocusService;\n}(BeanStub);\n\nexport { FocusService };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/focusService.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__spreadArrays","s","il","k","a","j","jl","Autowired","Bean","Optional","PostConstruct","BeanStub","Events","ManagedFocusFeature","getTabIndex","findIndex","last","makeNull","Constants","RowCtrl","AbstractHeaderCellCtrl","FocusService","_super","apply","FocusService_1","addKeyboardModeEvents","doc","controller","docControllers","instancesMonitored","get","indexOf","push","set","addEventListener","toggleKeyboardMode","removeKeyboardModeEvents","newControllers","filter","currentGridCore","removeEventListener","event","isKeyboardActive","keyboardModeActive","isKeyboardEvent","type","ctrlKey","metaKey","altKey","ownerDocument","controllersForDoc","forEach","dispatchEvent","EVENT_KEYBOARD_FOCUS","EVENT_MOUSE_FOCUS","init","_this","clearFocusedCellListener","clearFocusedCell","bind","addManagedListener","eventService","EVENT_COLUMN_PIVOT_MODE_CHANGED","EVENT_NEW_COLUMNS_LOADED","onColumnEverythingChanged","EVENT_COLUMN_GROUP_OPENED","EVENT_COLUMN_ROW_GROUP_CHANGED","ctrlsService","whenReady","gridCtrl","gridOptionsWrapper","getDocument","addDestroyFunc","unregisterGridCompController","gridCompController","focusedCellPosition","col","column","colFromColumnModel","columnModel","getGridColumn","getId","isKeyboardMode","getFocusCellToUseAfterRefresh","isSuppressFocusAfterRefresh","isDomDataMissingInHierarchy","document","activeElement","DOM_DATA_KEY_ROW_CTRL","getFocusHeaderToUseAfterRefresh","focusedHeaderPosition","DOM_DATA_KEY_HEADER_CTRL","eBrowserCell","ePointer","data","getDomData","parentNode","onCellFocused","getFocusedCell","setFocusedCell","rowIndex","colKey","floating","forceBrowserFocus","gridColumn","rowPinned","isCellFocused","cellPosition","isRowFocused","isRowNodeFocused","rowNode","isHeaderWrapperFocused","headerCtrl","getColumnGroupChild","headerRowIndex","getRowIndex","pinned","getPinned","_a","focusedColumn","focusedHeaderRowIndex","clearFocusedHeader","getFocusedHeader","setFocusedHeader","focusHeaderPosition","params","direction","fromTab","allowUserOverride","headerPosition","currentPosition","headerRowCount","headerNavigationService","getHeaderRowCount","userFunc","getTabToNextHeaderFunc","params_1","backwards","previousHeaderPosition","nextHeaderPosition","api","getApi","columnApi","getColumnApi","getNavigateToNextHeaderFunc","params_2","focusGridView","scrollToColumn","headerRowContainerCtrl","getHeaderRowContainerCtrl","focusSuccess","focusHeader","isAnyCellFocused","findFocusableElements","rootNode","exclude","onlyUnmanaged","focusableString","FOCUSABLE_SELECTOR","excludeString","FOCUSABLE_EXCLUDE","nodes","slice","querySelectorAll","excludeNodes","diff","element","focusInto","up","focusableElements","toFocus","focus","findNextFocusableElement","onlyManaged","focusable","currentIndex","el","contains","nextIndex","isFocusUnderManagedComponent","managedContainers","FOCUS_MANAGED_CLASS","findTabbableParent","node","limit","counter","parentElement","EVENT_CELL_FOCUSED","gridApi","isFullWidthCell","rowCtrl","rowRenderer","getRowByPosition","isFullWidth","nextRow","rowPositionUtils","getLastRow","getFirstRow","focusedHeader","navigationService","ensureCellVisible","rangeService","setRangeToCell","focusNextGridCoreContainer","focusNextInnerContainer","forceFocusOutOfContainer","AG_KEYBOARD_FOCUS","Map"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Autowired, Bean, Optional, PostConstruct } from \"./context/context\";\nimport { BeanStub } from \"./context/beanStub\";\nimport { Events } from \"./events\";\nimport { ManagedFocusFeature } from \"./widgets/managedFocusFeature\";\nimport { getTabIndex } from './utils/browser';\nimport { findIndex, last } from './utils/array';\nimport { makeNull } from './utils/generic';\nimport { Constants } from \"./constants/constants\";\nimport { RowCtrl } from \"./rendering/row/rowCtrl\";\nimport { AbstractHeaderCellCtrl } from \"./headerRendering/cells/abstractCell/abstractHeaderCellCtrl\";\nvar FocusService = /** @class */ (function (_super) {\n    __extends(FocusService, _super);\n    function FocusService() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FocusService_1 = FocusService;\n    /**\n     * Adds a gridCore to the list of the gridCores monitoring Keyboard Mode\n     * in a specific HTMLDocument.\n     *\n     * @param doc {Document} - The Document containing the gridCore.\n     * @param gridCore {GridComp} - The GridCore to be monitored.\n     */\n    FocusService.addKeyboardModeEvents = function (doc, controller) {\n        var docControllers = FocusService_1.instancesMonitored.get(doc);\n        if (docControllers && docControllers.length > 0) {\n            if (docControllers.indexOf(controller) === -1) {\n                docControllers.push(controller);\n            }\n        }\n        else {\n            FocusService_1.instancesMonitored.set(doc, [controller]);\n            doc.addEventListener('keydown', FocusService_1.toggleKeyboardMode);\n            doc.addEventListener('mousedown', FocusService_1.toggleKeyboardMode);\n        }\n    };\n    /**\n     * Removes a gridCore from the list of the gridCores monitoring Keyboard Mode\n     * in a specific HTMLDocument.\n     *\n     * @param doc {Document} - The Document containing the gridCore.\n     * @param gridCore {GridComp} - The GridCore to be removed.\n     */\n    FocusService.removeKeyboardModeEvents = function (doc, controller) {\n        var docControllers = FocusService_1.instancesMonitored.get(doc);\n        var newControllers = [];\n        if (docControllers && docControllers.length) {\n            newControllers = __spreadArrays(docControllers).filter(function (currentGridCore) { return currentGridCore !== controller; });\n            FocusService_1.instancesMonitored.set(doc, newControllers);\n        }\n        if (newControllers.length === 0) {\n            doc.removeEventListener('keydown', FocusService_1.toggleKeyboardMode);\n            doc.removeEventListener('mousedown', FocusService_1.toggleKeyboardMode);\n        }\n    };\n    /**\n     * This method will be called by `keydown` and `mousedown` events on all Documents monitoring\n     * KeyboardMode. It will then fire a KEYBOARD_FOCUS, MOUSE_FOCUS on each gridCore present in\n     * the Document allowing each gridCore to maintain a state for KeyboardMode.\n     *\n     * @param event {KeyboardEvent | MouseEvent | TouchEvent} - The event triggered.\n     */\n    FocusService.toggleKeyboardMode = function (event) {\n        var isKeyboardActive = FocusService_1.keyboardModeActive;\n        var isKeyboardEvent = event.type === 'keydown';\n        if (isKeyboardEvent) {\n            // the following keys should not toggle keyboard mode.\n            if (event.ctrlKey || event.metaKey || event.altKey) {\n                return;\n            }\n        }\n        if (isKeyboardActive && isKeyboardEvent || !isKeyboardActive && !isKeyboardEvent) {\n            return;\n        }\n        FocusService_1.keyboardModeActive = isKeyboardEvent;\n        var doc = event.target.ownerDocument;\n        if (!doc) {\n            return;\n        }\n        var controllersForDoc = FocusService_1.instancesMonitored.get(doc);\n        if (controllersForDoc) {\n            controllersForDoc.forEach(function (controller) {\n                controller.dispatchEvent({ type: isKeyboardEvent ? Events.EVENT_KEYBOARD_FOCUS : Events.EVENT_MOUSE_FOCUS });\n            });\n        }\n    };\n    FocusService.prototype.init = function () {\n        var _this = this;\n        var clearFocusedCellListener = this.clearFocusedCell.bind(this);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, clearFocusedCellListener);\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverythingChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, clearFocusedCellListener);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, clearFocusedCellListener);\n        this.ctrlsService.whenReady(function (p) {\n            _this.gridCtrl = p.gridCtrl;\n            var doc = _this.gridOptionsWrapper.getDocument();\n            FocusService_1.addKeyboardModeEvents(doc, _this.gridCtrl);\n            _this.addDestroyFunc(function () { return _this.unregisterGridCompController(_this.gridCtrl); });\n        });\n    };\n    FocusService.prototype.unregisterGridCompController = function (gridCompController) {\n        var doc = this.gridOptionsWrapper.getDocument();\n        FocusService_1.removeKeyboardModeEvents(doc, gridCompController);\n    };\n    FocusService.prototype.onColumnEverythingChanged = function () {\n        // if the columns change, check and see if this column still exists. if it does, then\n        // we can keep the focused cell. if it doesn't, then we need to drop the focused cell.\n        if (!this.focusedCellPosition) {\n            return;\n        }\n        var col = this.focusedCellPosition.column;\n        var colFromColumnModel = this.columnModel.getGridColumn(col.getId());\n        if (col !== colFromColumnModel) {\n            this.clearFocusedCell();\n        }\n    };\n    FocusService.prototype.isKeyboardMode = function () {\n        return FocusService_1.keyboardModeActive;\n    };\n    // we check if the browser is focusing something, and if it is, and\n    // it's the cell we think is focused, then return the cell. so this\n    // methods returns the cell if a) we think it has focus and b) the\n    // browser thinks it has focus. this then returns nothing if we\n    // first focus a cell, then second click outside the grid, as then the\n    // grid cell will still be focused as far as the grid is concerned,\n    // however the browser focus will have moved somewhere else.\n    FocusService.prototype.getFocusCellToUseAfterRefresh = function () {\n        if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedCellPosition) {\n            return null;\n        }\n        // we check that the browser is actually focusing on the grid, if it is not, then\n        // we have nothing to worry about. we check for ROW data, as this covers both focused Rows (for Full Width Rows)\n        // and Cells (covers cells as cells live in rows)\n        if (this.isDomDataMissingInHierarchy(document.activeElement, RowCtrl.DOM_DATA_KEY_ROW_CTRL)) {\n            return null;\n        }\n        return this.focusedCellPosition;\n    };\n    FocusService.prototype.getFocusHeaderToUseAfterRefresh = function () {\n        if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedHeaderPosition) {\n            return null;\n        }\n        // we check that the browser is actually focusing on the grid, if it is not, then\n        // we have nothing to worry about\n        if (this.isDomDataMissingInHierarchy(document.activeElement, AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL)) {\n            return null;\n        }\n        return this.focusedHeaderPosition;\n    };\n    FocusService.prototype.isDomDataMissingInHierarchy = function (eBrowserCell, key) {\n        var ePointer = eBrowserCell;\n        while (ePointer) {\n            var data = this.gridOptionsWrapper.getDomData(ePointer, key);\n            if (data) {\n                return false;\n            }\n            ePointer = ePointer.parentNode;\n        }\n        return true;\n    };\n    FocusService.prototype.clearFocusedCell = function () {\n        this.focusedCellPosition = null;\n        this.onCellFocused(false);\n    };\n    FocusService.prototype.getFocusedCell = function () {\n        return this.focusedCellPosition;\n    };\n    FocusService.prototype.setFocusedCell = function (rowIndex, colKey, floating, forceBrowserFocus) {\n        if (forceBrowserFocus === void 0) { forceBrowserFocus = false; }\n        var gridColumn = this.columnModel.getGridColumn(colKey);\n        // if column doesn't exist, then blank the focused cell and return. this can happen when user sets new columns,\n        // and the focused cell is in a column that no longer exists. after columns change, the grid refreshes and tries\n        // to re-focus the focused cell.\n        if (!gridColumn) {\n            this.focusedCellPosition = null;\n            return;\n        }\n        this.focusedCellPosition = gridColumn ? { rowIndex: rowIndex, rowPinned: makeNull(floating), column: gridColumn } : null;\n        this.onCellFocused(forceBrowserFocus);\n    };\n    FocusService.prototype.isCellFocused = function (cellPosition) {\n        if (this.focusedCellPosition == null) {\n            return false;\n        }\n        return this.focusedCellPosition.column === cellPosition.column &&\n            this.isRowFocused(cellPosition.rowIndex, cellPosition.rowPinned);\n    };\n    FocusService.prototype.isRowNodeFocused = function (rowNode) {\n        return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n    };\n    FocusService.prototype.isHeaderWrapperFocused = function (headerCtrl) {\n        if (this.focusedHeaderPosition == null) {\n            return false;\n        }\n        var column = headerCtrl.getColumnGroupChild();\n        var headerRowIndex = headerCtrl.getRowIndex();\n        var pinned = headerCtrl.getPinned();\n        var _a = this.focusedHeaderPosition, focusedColumn = _a.column, focusedHeaderRowIndex = _a.headerRowIndex;\n        return column === focusedColumn &&\n            headerRowIndex === focusedHeaderRowIndex &&\n            pinned == focusedColumn.getPinned();\n    };\n    FocusService.prototype.clearFocusedHeader = function () {\n        this.focusedHeaderPosition = null;\n    };\n    FocusService.prototype.getFocusedHeader = function () {\n        return this.focusedHeaderPosition;\n    };\n    FocusService.prototype.setFocusedHeader = function (headerRowIndex, column) {\n        this.focusedHeaderPosition = { headerRowIndex: headerRowIndex, column: column };\n    };\n    FocusService.prototype.focusHeaderPosition = function (params) {\n        var direction = params.direction, fromTab = params.fromTab, allowUserOverride = params.allowUserOverride, event = params.event;\n        var headerPosition = params.headerPosition;\n        if (allowUserOverride) {\n            var gridOptionsWrapper = this.gridOptionsWrapper;\n            var currentPosition = this.getFocusedHeader();\n            var headerRowCount = this.headerNavigationService.getHeaderRowCount();\n            if (fromTab) {\n                var userFunc = gridOptionsWrapper.getTabToNextHeaderFunc();\n                if (userFunc) {\n                    var params_1 = {\n                        backwards: direction === 'Before',\n                        previousHeaderPosition: currentPosition,\n                        nextHeaderPosition: headerPosition,\n                        headerRowCount: headerRowCount,\n                        api: gridOptionsWrapper.getApi(),\n                        columnApi: gridOptionsWrapper.getColumnApi()\n                    };\n                    headerPosition = userFunc(params_1);\n                }\n            }\n            else {\n                var userFunc = gridOptionsWrapper.getNavigateToNextHeaderFunc();\n                if (userFunc && event) {\n                    var params_2 = {\n                        key: event.key,\n                        previousHeaderPosition: currentPosition,\n                        nextHeaderPosition: headerPosition,\n                        headerRowCount: headerRowCount,\n                        event: event,\n                        api: gridOptionsWrapper.getApi(),\n                        columnApi: gridOptionsWrapper.getColumnApi()\n                    };\n                    headerPosition = userFunc(params_2);\n                }\n            }\n        }\n        if (!headerPosition) {\n            return false;\n        }\n        if (headerPosition.headerRowIndex === -1) {\n            return this.focusGridView(headerPosition.column);\n        }\n        this.headerNavigationService.scrollToColumn(headerPosition.column, direction);\n        var headerRowContainerCtrl = this.ctrlsService.getHeaderRowContainerCtrl(headerPosition.column.getPinned());\n        // this will automatically call the setFocusedHeader method above\n        var focusSuccess = headerRowContainerCtrl.focusHeader(headerPosition.headerRowIndex, headerPosition.column, event);\n        return focusSuccess;\n    };\n    FocusService.prototype.isAnyCellFocused = function () {\n        return !!this.focusedCellPosition;\n    };\n    FocusService.prototype.isRowFocused = function (rowIndex, floating) {\n        if (this.focusedCellPosition == null) {\n            return false;\n        }\n        return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === makeNull(floating);\n    };\n    FocusService.prototype.findFocusableElements = function (rootNode, exclude, onlyUnmanaged) {\n        if (onlyUnmanaged === void 0) { onlyUnmanaged = false; }\n        var focusableString = Constants.FOCUSABLE_SELECTOR;\n        var excludeString = Constants.FOCUSABLE_EXCLUDE;\n        if (exclude) {\n            excludeString += ', ' + exclude;\n        }\n        if (onlyUnmanaged) {\n            excludeString += ', [tabindex=\"-1\"]';\n        }\n        var nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString));\n        var excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n        if (!excludeNodes.length) {\n            return nodes;\n        }\n        var diff = function (a, b) { return a.filter(function (element) { return b.indexOf(element) === -1; }); };\n        return diff(nodes, excludeNodes);\n    };\n    FocusService.prototype.focusInto = function (rootNode, up, onlyUnmanaged) {\n        if (up === void 0) { up = false; }\n        if (onlyUnmanaged === void 0) { onlyUnmanaged = false; }\n        var focusableElements = this.findFocusableElements(rootNode, null, onlyUnmanaged);\n        var toFocus = up ? last(focusableElements) : focusableElements[0];\n        if (toFocus) {\n            toFocus.focus();\n            return true;\n        }\n        return false;\n    };\n    FocusService.prototype.findNextFocusableElement = function (rootNode, onlyManaged, backwards) {\n        var focusable = this.findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n        var currentIndex;\n        if (onlyManaged) {\n            currentIndex = findIndex(focusable, function (el) { return el.contains(document.activeElement); });\n        }\n        else {\n            currentIndex = focusable.indexOf(document.activeElement);\n        }\n        var nextIndex = currentIndex + (backwards ? -1 : 1);\n        if (nextIndex < 0 || nextIndex >= focusable.length) {\n            return null;\n        }\n        return focusable[nextIndex];\n    };\n    FocusService.prototype.isFocusUnderManagedComponent = function (rootNode) {\n        var managedContainers = rootNode.querySelectorAll(\".\" + ManagedFocusFeature.FOCUS_MANAGED_CLASS);\n        if (!managedContainers.length) {\n            return false;\n        }\n        for (var i = 0; i < managedContainers.length; i++) {\n            if (managedContainers[i].contains(document.activeElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    FocusService.prototype.findTabbableParent = function (node, limit) {\n        if (limit === void 0) { limit = 5; }\n        var counter = 0;\n        while (node && getTabIndex(node) === null && ++counter <= limit) {\n            node = node.parentElement;\n        }\n        if (getTabIndex(node) === null) {\n            return null;\n        }\n        return node;\n    };\n    FocusService.prototype.onCellFocused = function (forceBrowserFocus) {\n        var event = {\n            type: Events.EVENT_CELL_FOCUSED,\n            forceBrowserFocus: forceBrowserFocus,\n            rowIndex: null,\n            column: null,\n            floating: null,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            rowPinned: null,\n            isFullWidthCell: false\n        };\n        if (this.focusedCellPosition) {\n            var rowIndex = event.rowIndex = this.focusedCellPosition.rowIndex;\n            var rowPinned = event.rowPinned = this.focusedCellPosition.rowPinned;\n            event.column = this.focusedCellPosition.column;\n            var rowCtrl = this.rowRenderer.getRowByPosition({ rowIndex: rowIndex, rowPinned: rowPinned });\n            if (rowCtrl) {\n                event.isFullWidthCell = rowCtrl.isFullWidth();\n            }\n        }\n        this.eventService.dispatchEvent(event);\n    };\n    FocusService.prototype.focusGridView = function (column, backwards) {\n        var nextRow = backwards\n            ? this.rowPositionUtils.getLastRow()\n            : this.rowPositionUtils.getFirstRow();\n        if (!nextRow) {\n            return false;\n        }\n        var rowIndex = nextRow.rowIndex, rowPinned = nextRow.rowPinned;\n        var focusedHeader = this.getFocusedHeader();\n        if (!column && focusedHeader) {\n            column = focusedHeader.column;\n        }\n        if (rowIndex == null || !column) {\n            return false;\n        }\n        this.navigationService.ensureCellVisible({ rowIndex: rowIndex, column: column, rowPinned: rowPinned });\n        this.setFocusedCell(rowIndex, column, makeNull(rowPinned), true);\n        if (this.rangeService) {\n            var cellPosition = { rowIndex: rowIndex, rowPinned: rowPinned, column: column };\n            this.rangeService.setRangeToCell(cellPosition);\n        }\n        return true;\n    };\n    FocusService.prototype.focusNextGridCoreContainer = function (backwards) {\n        if (this.gridCtrl.focusNextInnerContainer(backwards)) {\n            return true;\n        }\n        if (!backwards) {\n            this.gridCtrl.forceFocusOutOfContainer();\n        }\n        return false;\n    };\n    var FocusService_1;\n    FocusService.AG_KEYBOARD_FOCUS = 'ag-keyboard-focus';\n    FocusService.keyboardModeActive = false;\n    FocusService.instancesMonitored = new Map();\n    __decorate([\n        Autowired('columnModel')\n    ], FocusService.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('headerNavigationService')\n    ], FocusService.prototype, \"headerNavigationService\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], FocusService.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], FocusService.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('rowRenderer')\n    ], FocusService.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        Autowired('rowPositionUtils')\n    ], FocusService.prototype, \"rowPositionUtils\", void 0);\n    __decorate([\n        Optional('rangeService')\n    ], FocusService.prototype, \"rangeService\", void 0);\n    __decorate([\n        Autowired('navigationService')\n    ], FocusService.prototype, \"navigationService\", void 0);\n    __decorate([\n        Autowired('ctrlsService')\n    ], FocusService.prototype, \"ctrlsService\", void 0);\n    __decorate([\n        PostConstruct\n    ], FocusService.prototype, \"init\", null);\n    FocusService = FocusService_1 = __decorate([\n        Bean('focusService')\n    ], FocusService);\n    return FocusService;\n}(BeanStub));\nexport { FocusService };\n"]},"metadata":{},"sourceType":"module"}