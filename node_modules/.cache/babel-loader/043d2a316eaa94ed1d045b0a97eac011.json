{"ast":null,"code":"// @ag-grid-community/react v26.2.0\n\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@ag-grid-community/core\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar utils_1 = require(\"../utils\");\n\nvar popupEditorComp_1 = __importDefault(require(\"./popupEditorComp\"));\n\nvar showJsRenderer_1 = __importDefault(require(\"./showJsRenderer\"));\n\nvar beansContext_1 = require(\"../beansContext\");\n\nvar jsComp_1 = require(\"../jsComp\");\n\nvar CellCompState;\n\n(function (CellCompState) {\n  CellCompState[CellCompState[\"ShowValue\"] = 0] = \"ShowValue\";\n  CellCompState[CellCompState[\"EditValue\"] = 1] = \"EditValue\";\n})(CellCompState = exports.CellCompState || (exports.CellCompState = {}));\n\nvar checkCellEditorDeprecations = function (popup, cellEditor, cellCtrl) {\n  var col = cellCtrl.getColumn(); // cellEditor is written to be a popup editor, however colDef.cellEditorPopup is not set\n\n  if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n    var msg_1 = \"AG Grid: Found an issue in column \" + col.getColId() + \". If using ReactUI, specify an editor is a popup using colDef.cellEditorPopup=true\";\n\n    core_1._.doOnce(function () {\n      return console.warn(msg_1);\n    }, 'jsEditorComp-isPopup-' + cellCtrl.getColumn().getColId());\n  } // cellEditor is a popup and is trying to position itself the deprecated way\n\n\n  if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition() != null) {\n    var msg_2 = \"AG Grid: AG Grid: Found an issue in column \" + col.getColId() + \". If using ReactUI, specify an editor popup position using colDef.cellEditorPopupPosition=[value]\";\n\n    core_1._.doOnce(function () {\n      return console.warn(msg_2);\n    }, 'jsEditorComp-getPopupPosition-' + cellCtrl.getColumn().getColId());\n  }\n};\n\nvar jsxEditValue = function (editDetails, setInlineCellEditorRef, setPopupCellEditorRef, eGui, cellCtrl, jsEditorComp) {\n  var compDetails = editDetails.compDetails;\n  var CellEditorClass = compDetails.componentClass;\n  var reactInlineEditor = compDetails.componentFromFramework && !editDetails.popup;\n  var reactPopupEditor = compDetails.componentFromFramework && editDetails.popup;\n  var jsPopupEditor = !compDetails.componentFromFramework && editDetails.popup;\n  return react_1.default.createElement(react_1.default.Fragment, null, reactInlineEditor && react_1.default.createElement(CellEditorClass, __assign({}, editDetails.compDetails.params, {\n    ref: setInlineCellEditorRef\n  })), reactPopupEditor && react_1.default.createElement(popupEditorComp_1.default, {\n    editDetails: editDetails,\n    cellCtrl: cellCtrl,\n    eParentCell: eGui,\n    wrappedContent: react_1.default.createElement(CellEditorClass, __assign({}, editDetails.compDetails.params, {\n      ref: setPopupCellEditorRef\n    }))\n  }), jsPopupEditor && jsEditorComp && react_1.default.createElement(popupEditorComp_1.default, {\n    editDetails: editDetails,\n    cellCtrl: cellCtrl,\n    eParentCell: eGui,\n    jsChildComp: jsEditorComp\n  }));\n};\n\nvar jsxShowValue = function (showDetails, parentId, cellRendererRef, showTools, unSelectable, reactCellRendererStateless, toolsRefCallback, toolsValueRefCallback) {\n  var compDetails = showDetails.compDetails,\n      value = showDetails.value;\n  var noCellRenderer = !compDetails;\n  var reactCellRenderer = compDetails && compDetails.componentFromFramework;\n  var CellRendererClass = compDetails && compDetails.componentClass;\n\n  var bodyJsxFunc = function () {\n    return react_1.default.createElement(react_1.default.Fragment, null, noCellRenderer && react_1.default.createElement(react_1.default.Fragment, null, value), reactCellRenderer && !reactCellRendererStateless && react_1.default.createElement(CellRendererClass, __assign({}, compDetails.params, {\n      ref: cellRendererRef\n    })), reactCellRenderer && reactCellRendererStateless && react_1.default.createElement(CellRendererClass, __assign({}, compDetails.params)));\n  };\n\n  return react_1.default.createElement(react_1.default.Fragment, null, showTools ? react_1.default.createElement(\"div\", {\n    className: \"ag-cell-wrapper\",\n    role: \"presentation\",\n    ref: toolsRefCallback\n  }, react_1.default.createElement(\"span\", {\n    role: \"presentation\",\n    id: \"cell-\" + parentId,\n    className: \"ag-cell-value\",\n    unselectable: unSelectable,\n    ref: toolsValueRefCallback\n  }, bodyJsxFunc())) : bodyJsxFunc());\n};\n\nvar CellComp = function (props) {\n  var context = react_1.useContext(beansContext_1.BeansContext).context;\n  var cellCtrl = props.cellCtrl,\n      printLayout = props.printLayout,\n      editingRow = props.editingRow;\n\n  var _a = react_1.useState(),\n      renderDetails = _a[0],\n      setRenderDetails = _a[1];\n\n  var _b = react_1.useState(),\n      editDetails = _b[0],\n      setEditDetails = _b[1];\n\n  var _c = react_1.useState(new utils_1.CssClasses()),\n      cssClasses = _c[0],\n      setCssClasses = _c[1];\n\n  var _d = react_1.useState(),\n      userStyles = _d[0],\n      setUserStyles = _d[1];\n\n  var _e = react_1.useState('on'),\n      unselectable = _e[0],\n      setUnselectable = _e[1];\n\n  var _f = react_1.useState(),\n      left = _f[0],\n      setLeft = _f[1];\n\n  var _g = react_1.useState(),\n      width = _g[0],\n      setWidth = _g[1];\n\n  var _h = react_1.useState(),\n      height = _h[0],\n      setHeight = _h[1];\n\n  var _j = react_1.useState(),\n      transition = _j[0],\n      setTransition = _j[1];\n\n  var _k = react_1.useState(),\n      tabIndex = _k[0],\n      setTabIndex = _k[1];\n\n  var _l = react_1.useState(),\n      ariaSelected = _l[0],\n      setAriaSelected = _l[1];\n\n  var _m = react_1.useState(),\n      ariaExpanded = _m[0],\n      setAriaExpanded = _m[1];\n\n  var _o = react_1.useState(),\n      ariaColIndex = _o[0],\n      setAriaColIndex = _o[1];\n\n  var _p = react_1.useState(),\n      ariaDescribedBy = _p[0],\n      setAriaDescribedBy = _p[1];\n\n  var _q = react_1.useState(),\n      zIndex = _q[0],\n      setZIndex = _q[1];\n\n  var _r = react_1.useState(),\n      role = _r[0],\n      setRole = _r[1];\n\n  var _s = react_1.useState(),\n      colId = _s[0],\n      setColId = _s[1];\n\n  var _t = react_1.useState(),\n      title = _t[0],\n      setTitle = _t[1];\n\n  var _u = react_1.useState(false),\n      includeSelection = _u[0],\n      setIncludeSelection = _u[1];\n\n  var _v = react_1.useState(false),\n      includeRowDrag = _v[0],\n      setIncludeRowDrag = _v[1];\n\n  var _w = react_1.useState(false),\n      includeDndSource = _w[0],\n      setIncludeDndSource = _w[1];\n\n  var _x = react_1.useState(false),\n      forceWrapper = _x[0],\n      setForceWrapper = _x[1];\n\n  var _y = react_1.useState(),\n      jsEditorComp = _y[0],\n      setJsEditorComp = _y[1];\n\n  var eGui = react_1.useRef(null);\n  var cellRendererRef = react_1.useRef(null);\n  var jsCellRendererRef = react_1.useRef();\n  var cellEditorRef = react_1.useRef();\n\n  var _z = react_1.useState(),\n      toolsSpan = _z[0],\n      setToolsSpan = _z[1];\n\n  var _0 = react_1.useState(),\n      toolsValueSpan = _0[0],\n      setToolsValueSpan = _0[1];\n\n  var showTools = renderDetails != null && (includeSelection || includeDndSource || includeRowDrag || forceWrapper);\n  var setCellEditorRef = react_1.useCallback(function (popup, cellEditor) {\n    cellEditorRef.current = cellEditor;\n\n    if (cellEditor) {\n      checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n      var editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n\n      if (editingCancelledByUserComp) {\n        // we cannot set state inside render, so hack is to do it in next VM turn\n        setTimeout(function () {\n          return cellCtrl.stopEditing();\n        }, 0);\n      }\n    }\n  }, []);\n  var setPopupCellEditorRef = react_1.useCallback(function (cellRenderer) {\n    return setCellEditorRef(true, cellRenderer);\n  }, []);\n  var setInlineCellEditorRef = react_1.useCallback(function (cellRenderer) {\n    return setCellEditorRef(false, cellRenderer);\n  }, []);\n  showJsRenderer_1.default(renderDetails, showTools, toolsValueSpan, jsCellRendererRef, eGui);\n  react_1.useEffect(function () {\n    var doingJsEditor = editDetails && !editDetails.compDetails.componentFromFramework;\n\n    if (!doingJsEditor) {\n      return;\n    }\n\n    var compDetails = editDetails.compDetails;\n    var isPopup = editDetails.popup === true;\n    var cellEditor = jsComp_1.createJsComp(compDetails);\n\n    if (!cellEditor) {\n      return;\n    }\n\n    var compGui = cellEditor.getGui();\n    setCellEditorRef(isPopup, cellEditor);\n\n    if (!isPopup) {\n      eGui.current.appendChild(compGui);\n      cellEditor.afterGuiAttached && cellEditor.afterGuiAttached();\n    }\n\n    setJsEditorComp(cellEditor);\n    return function () {\n      context.destroyBean(cellEditor);\n      setCellEditorRef(isPopup, undefined);\n      setJsEditorComp(undefined);\n\n      if (compGui && compGui.parentElement) {\n        compGui.parentElement.removeChild(compGui);\n      }\n    };\n  }, [editDetails]); // tool widgets effect\n\n  react_1.useEffect(function () {\n    if (!cellCtrl || !context) {\n      return;\n    }\n\n    setAriaDescribedBy(!!toolsSpan ? \"cell-\" + cellCtrl.getInstanceId() : undefined);\n\n    if (!toolsSpan) {\n      return;\n    }\n\n    var beansToDestroy = [];\n\n    var addComp = function (comp) {\n      if (comp) {\n        toolsSpan.insertAdjacentElement('afterbegin', comp.getGui());\n        beansToDestroy.push(comp);\n      }\n\n      return comp;\n    };\n\n    if (includeSelection) {\n      addComp(cellCtrl.createSelectionCheckbox());\n    }\n\n    if (includeDndSource) {\n      addComp(cellCtrl.createDndSource());\n    }\n\n    if (includeRowDrag) {\n      addComp(cellCtrl.createRowDragComp());\n    }\n\n    return function () {\n      context.destroyBeans(beansToDestroy);\n    };\n  }, [includeDndSource, includeRowDrag, includeSelection, toolsSpan]); // attaching the ref to state makes sure we render again when state is set. this is\n  // how we make sure the tools are added, as it's not possible to have an effect depend\n  // on a reference, as reference is not state, it doesn't create another render cycle.\n\n  var toolsRefCallback = react_1.useCallback(function (ref) {\n    return setToolsSpan(ref);\n  }, []);\n  var toolsValueRefCallback = react_1.useCallback(function (ref) {\n    return setToolsValueSpan(ref);\n  }, []);\n  react_1.useEffect(function () {\n    if (!cellCtrl) {\n      return;\n    }\n\n    var compProxy = {\n      addOrRemoveCssClass: function (name, on) {\n        return setCssClasses(function (prev) {\n          return prev.setClass(name, on);\n        });\n      },\n      setUserStyles: function (styles) {\n        return setUserStyles(styles);\n      },\n      setAriaSelected: function (value) {\n        return setAriaSelected(value);\n      },\n      setAriaExpanded: function (value) {\n        return setAriaExpanded(value);\n      },\n      getFocusableElement: function () {\n        return eGui.current;\n      },\n      setLeft: function (left) {\n        return setLeft(left);\n      },\n      setWidth: function (width) {\n        return setWidth(width);\n      },\n      setAriaColIndex: function (index) {\n        return setAriaColIndex(index);\n      },\n      setHeight: function (height) {\n        return setHeight(height);\n      },\n      setZIndex: function (zIndex) {\n        return setZIndex(zIndex);\n      },\n      setTabIndex: function (tabIndex) {\n        return setTabIndex(tabIndex);\n      },\n      setRole: function (role) {\n        return setRole(role);\n      },\n      setColId: function (colId) {\n        return setColId(colId);\n      },\n      setTitle: function (title) {\n        return setTitle(title);\n      },\n      setUnselectable: function (value) {\n        return setUnselectable(value || undefined);\n      },\n      setTransition: function (transition) {\n        return setTransition(transition);\n      },\n      setIncludeSelection: function (include) {\n        return setIncludeSelection(include);\n      },\n      setIncludeRowDrag: function (include) {\n        return setIncludeRowDrag(include);\n      },\n      setIncludeDndSource: function (include) {\n        return setIncludeDndSource(include);\n      },\n      setForceWrapper: function (force) {\n        return setForceWrapper(force);\n      },\n      getCellEditor: function () {\n        return cellEditorRef.current || null;\n      },\n      getCellRenderer: function () {\n        return cellRendererRef.current ? cellRendererRef.current : jsCellRendererRef.current;\n      },\n      getParentOfValue: function () {\n        return toolsValueSpan ? toolsValueSpan : eGui.current;\n      },\n      setRenderDetails: function (compDetails, value, force) {\n        setRenderDetails({\n          value: value,\n          compDetails: compDetails,\n          force: force\n        });\n      },\n      setEditDetails: function (compDetails, popup, popupPosition) {\n        if (compDetails) {\n          // start editing\n          setEditDetails({\n            compDetails: compDetails,\n            popup: popup,\n            popupPosition: popupPosition\n          });\n\n          if (!popup) {\n            setRenderDetails(undefined);\n          }\n        } else {\n          // stop editing\n          setEditDetails(undefined);\n        }\n      }\n    };\n    cellCtrl.setComp(compProxy, null, eGui.current, printLayout, editingRow);\n  }, []);\n  var reactCellRendererStateless = react_1.useMemo(function () {\n    var res = renderDetails && renderDetails.compDetails && renderDetails.compDetails.componentFromFramework && utils_1.isComponentStateless(renderDetails.compDetails.componentClass);\n    return !!res;\n  }, [renderDetails]);\n  var className = react_1.useMemo(function () {\n    var res = cssClasses.toString();\n\n    if (!showTools) {\n      res += ' ag-cell-value';\n    }\n\n    return res;\n  }, [cssClasses, showTools]);\n  var cellStyles = react_1.useMemo(function () {\n    var res = {\n      left: left,\n      width: width,\n      height: height,\n      transition: transition,\n      zIndex: zIndex\n    };\n\n    core_1._.assign(res, userStyles);\n\n    return res;\n  }, [left, width, height, transition, zIndex, userStyles]);\n  var cellInstanceId = react_1.useMemo(function () {\n    return cellCtrl.getInstanceId();\n  }, []);\n  return react_1.default.createElement(\"div\", {\n    ref: eGui,\n    className: className,\n    style: cellStyles,\n    tabIndex: tabIndex,\n    \"aria-selected\": ariaSelected,\n    \"aria-colindex\": ariaColIndex,\n    role: role,\n    \"aria-expanded\": ariaExpanded,\n    \"col-id\": colId,\n    title: title,\n    unselectable: unselectable,\n    \"aria-describedby\": ariaDescribedBy\n  }, renderDetails != null && jsxShowValue(renderDetails, cellInstanceId, cellRendererRef, showTools, unselectable, reactCellRendererStateless, toolsRefCallback, toolsValueRefCallback), editDetails != null && jsxEditValue(editDetails, setInlineCellEditorRef, setPopupCellEditorRef, eGui.current, cellCtrl, jsEditorComp));\n};\n\nexports.default = react_1.memo(CellComp);","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/react/lib/reactUi/cells/reactUi/cells/cellComp.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CellCtrl, Component, ICellComp, ICellEditor, ICellRendererComp, UserCompDetails, _, ICellEditorComp } from '@ag-grid-community/core';\nimport React, { MutableRefObject, useCallback, useEffect, useRef, useState, useMemo, memo, useContext } from 'react';\nimport { CssClasses, isComponentStateless } from '../utils';\nimport PopupEditorComp from './popupEditorComp';\nimport useJsCellRenderer from './showJsRenderer';\nimport { BeansContext } from '../beansContext';\nimport { createJsComp } from '../jsComp';\n\nexport enum CellCompState { ShowValue, EditValue }\n\nconst checkCellEditorDeprecations = (popup: boolean, cellEditor: ICellEditor, cellCtrl: CellCtrl) => {\n\n    const col = cellCtrl.getColumn();\n\n    // cellEditor is written to be a popup editor, however colDef.cellEditorPopup is not set\n    if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using ReactUI, specify an editor is a popup using colDef.cellEditorPopup=true`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-isPopup-' + cellCtrl.getColumn().getColId());\n    }\n\n    // cellEditor is a popup and is trying to position itself the deprecated way\n    if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition()!=null) {\n        const msg = `AG Grid: AG Grid: Found an issue in column ${col.getColId()}. If using ReactUI, specify an editor popup position using colDef.cellEditorPopupPosition=[value]`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-getPopupPosition-' + cellCtrl.getColumn().getColId());\n    }\n}\n\nconst jsxEditValue = (\n        editDetails: EditDetails, \n        setInlineCellEditorRef: (cellEditor: ICellEditor | undefined)=>void,\n        setPopupCellEditorRef: (cellEditor: ICellEditor | undefined)=>void,\n        eGui: HTMLElement, \n        cellCtrl: CellCtrl,\n        jsEditorComp: ICellEditorComp | undefined ) => {\n\n    const compDetails = editDetails.compDetails;\n    const CellEditorClass = compDetails.componentClass;\n\n    const reactInlineEditor = compDetails.componentFromFramework && !editDetails.popup;\n    const reactPopupEditor = compDetails.componentFromFramework && editDetails.popup;\n    const jsPopupEditor = !compDetails.componentFromFramework && editDetails.popup;\n\n    return (\n        <>\n\n            { \n                reactInlineEditor \n                && <CellEditorClass { ...editDetails.compDetails.params } ref={ setInlineCellEditorRef }/> \n            }\n\n            { \n                reactPopupEditor \n                && <PopupEditorComp editDetails={editDetails} cellCtrl={cellCtrl} eParentCell={eGui}\n                            wrappedContent={ \n                                <CellEditorClass { ...editDetails.compDetails.params } ref={ setPopupCellEditorRef }/> \n                            }/> \n            }\n\n            { \n                jsPopupEditor && jsEditorComp && <PopupEditorComp editDetails={editDetails} cellCtrl={cellCtrl} \n                            eParentCell={eGui} jsChildComp={ jsEditorComp } /> \n            }\n        </>\n    )\n}\n\nconst jsxShowValue = (\n    showDetails: RenderDetails,\n    parentId: string,\n    cellRendererRef: MutableRefObject<any>,\n    showTools: boolean,\n    unSelectable: 'on' | undefined,\n    reactCellRendererStateless: boolean,\n    toolsRefCallback: (ref:any) => void,\n    toolsValueRefCallback: (ref:any) => void\n) => {\n    const {compDetails, value} = showDetails;\n\n    const noCellRenderer = !compDetails;\n    const reactCellRenderer = compDetails && compDetails.componentFromFramework;\n\n    const CellRendererClass = compDetails && compDetails.componentClass;\n\n    const bodyJsxFunc = () => (\n        <>\n            { noCellRenderer && <>{ value }</> }\n            { reactCellRenderer && !reactCellRendererStateless && <CellRendererClass { ...compDetails!.params } ref={ cellRendererRef }/> }\n            { reactCellRenderer && reactCellRendererStateless && <CellRendererClass { ...compDetails!.params }/> }\n        </>\n    );\n\n    return (\n        <>\n            { showTools ?\n                <div className=\"ag-cell-wrapper\" role=\"presentation\" ref={ toolsRefCallback }>\n                    <span role=\"presentation\" id={`cell-${parentId}`} className=\"ag-cell-value\" unselectable={ unSelectable } ref={ toolsValueRefCallback }>\n                        { bodyJsxFunc() }\n                    </span>\n                </div> :\n                bodyJsxFunc()\n            }\n        </>\n    );\n}\n\nexport interface RenderDetails {\n    compDetails: UserCompDetails | undefined;\n    value?: any;\n    force?: boolean;\n}\nexport interface EditDetails {\n    compDetails: UserCompDetails;\n    popup?: boolean;\n    popupPosition?: string;\n}\n\nconst CellComp = (props: {\n    cellCtrl: CellCtrl,\n    printLayout: boolean, \n    editingRow: boolean\n}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const { cellCtrl, printLayout, editingRow } = props;\n\n    const [renderDetails, setRenderDetails ] = useState<RenderDetails>();\n    const [editDetails, setEditDetails ] = useState<EditDetails>();\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses());\n    const [userStyles, setUserStyles] = useState<any>();\n    const [unselectable, setUnselectable] = useState<'on' | undefined>('on');\n    const [left, setLeft] = useState<string | undefined>();\n    const [width, setWidth] = useState<string | undefined>();\n    const [height, setHeight] = useState<string | undefined>();\n    const [transition, setTransition] = useState<string | undefined>();\n    const [tabIndex, setTabIndex] = useState<number>();\n    const [ariaSelected, setAriaSelected] = useState<boolean | undefined>();\n    const [ariaExpanded, setAriaExpanded] = useState<boolean | undefined>();\n    const [ariaColIndex, setAriaColIndex] = useState<number>();\n    const [ariaDescribedBy, setAriaDescribedBy] = useState<string | undefined>();\n    const [zIndex, setZIndex] = useState<string>();\n    const [role, setRole] = useState<string>();\n    const [colId, setColId] = useState<string>();\n    const [title, setTitle] = useState<string | undefined>();\n    const [includeSelection, setIncludeSelection] = useState<boolean>(false);\n    const [includeRowDrag, setIncludeRowDrag] = useState<boolean>(false);\n    const [includeDndSource, setIncludeDndSource] = useState<boolean>(false);\n    const [forceWrapper, setForceWrapper] = useState<boolean>(false);\n\n    const [jsEditorComp, setJsEditorComp] = useState<ICellEditorComp>();\n\n    const eGui = useRef<HTMLDivElement>(null);\n    const cellRendererRef = useRef<any>(null);\n    const jsCellRendererRef = useRef<ICellRendererComp>();\n    const cellEditorRef = useRef<ICellEditor>();\n\n    const [toolsSpan, setToolsSpan] = useState<HTMLElement>();\n    const [toolsValueSpan, setToolsValueSpan] = useState<HTMLElement>();\n    \n    const showTools = renderDetails!=null && (includeSelection || includeDndSource || includeRowDrag || forceWrapper);\n\n    const setCellEditorRef = useCallback( (popup: boolean, cellEditor: ICellEditor | undefined) => {\n        cellEditorRef.current = cellEditor;\n        if (cellEditor) {\n            checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n            const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n            if (editingCancelledByUserComp) {\n                // we cannot set state inside render, so hack is to do it in next VM turn\n                setTimeout( ()=> cellCtrl.stopEditing(), 0);\n            }\n        }\n    }, []);\n\n    const setPopupCellEditorRef = useCallback( \n        (cellRenderer: ICellEditor | undefined) => setCellEditorRef(true, cellRenderer),\n        []\n    );\n\n    const setInlineCellEditorRef = useCallback(\n        (cellRenderer: ICellEditor | undefined) => setCellEditorRef(false, cellRenderer), \n        []\n    );\n\n    useJsCellRenderer(renderDetails, showTools, toolsValueSpan, jsCellRendererRef, eGui);\n\n    useEffect(() => {\n        const doingJsEditor = editDetails && !editDetails.compDetails.componentFromFramework;\n        if (!doingJsEditor) { return; }\n\n        const compDetails = editDetails!.compDetails;\n        const isPopup = editDetails!.popup===true;\n    \n        const cellEditor = createJsComp(compDetails) as ICellEditorComp;\n        if (!cellEditor) { return; }\n\n        const compGui = cellEditor.getGui();\n\n        setCellEditorRef(isPopup, cellEditor);\n\n        if (!isPopup) {\n            eGui.current!.appendChild(compGui);\n            cellEditor.afterGuiAttached && cellEditor.afterGuiAttached();\n        }\n\n        setJsEditorComp(cellEditor);\n\n        return () => {\n            context.destroyBean(cellEditor);\n            setCellEditorRef(isPopup, undefined);\n            setJsEditorComp(undefined);\n            if (compGui && compGui.parentElement) {\n                compGui.parentElement.removeChild(compGui);\n            }\n        };\n    }, [editDetails]);\n\n    // tool widgets effect\n    useEffect(() => {\n        if (!cellCtrl || !context) { return; }\n\n        setAriaDescribedBy(!!toolsSpan ? `cell-${cellCtrl.getInstanceId()}` : undefined);\n\n        if (!toolsSpan) { return; }\n\n        const beansToDestroy: any[] = [];\n\n        const addComp = (comp: Component | undefined) => {\n            if (comp) {\n                toolsSpan.insertAdjacentElement('afterbegin', comp.getGui());\n                beansToDestroy.push(comp);\n            }\n            return comp;\n        }\n\n        if (includeSelection) {\n            addComp(cellCtrl.createSelectionCheckbox());\n        }\n\n        if (includeDndSource) {\n            addComp(cellCtrl.createDndSource());\n        }\n\n        if (includeRowDrag) {\n            addComp(cellCtrl.createRowDragComp());\n        }\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n        };\n\n    }, [includeDndSource, includeRowDrag, includeSelection, toolsSpan]);\n\n    // attaching the ref to state makes sure we render again when state is set. this is\n    // how we make sure the tools are added, as it's not possible to have an effect depend\n    // on a reference, as reference is not state, it doesn't create another render cycle.\n    const toolsRefCallback = useCallback(ref => setToolsSpan(ref), []);\n    const toolsValueRefCallback = useCallback(ref => setToolsValueSpan(ref), []);\n\n    useEffect(() => {\n        if (!cellCtrl) { return; }\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setUserStyles: styles => setUserStyles(styles),\n            setAriaSelected: value => setAriaSelected(value),\n            setAriaExpanded: value => setAriaExpanded(value),\n            getFocusableElement: () => eGui.current!,\n            setLeft: left => setLeft(left),\n            setWidth: width => setWidth(width),\n            setAriaColIndex: index => setAriaColIndex(index),\n            setHeight: height => setHeight(height),\n            setZIndex: zIndex => setZIndex(zIndex),\n            setTabIndex: tabIndex => setTabIndex(tabIndex),\n            setRole: role => setRole(role),\n            setColId: colId => setColId(colId),\n            setTitle: title => setTitle(title),\n            setUnselectable: value => setUnselectable(value || undefined),\n            setTransition: transition => setTransition(transition),\n            setIncludeSelection: include => setIncludeSelection(include),\n            setIncludeRowDrag: include => setIncludeRowDrag(include),\n            setIncludeDndSource: include => setIncludeDndSource(include),\n            setForceWrapper: force => setForceWrapper(force),\n            \n            getCellEditor: () => cellEditorRef.current || null,\n            getCellRenderer: () => cellRendererRef.current ? cellRendererRef.current : jsCellRendererRef.current,\n            getParentOfValue: () => toolsValueSpan ? toolsValueSpan : eGui.current,\n\n            setRenderDetails: (compDetails, value, force) => {\n                setRenderDetails({\n                    value,\n                    compDetails,\n                    force\n                });\n            },\n            \n            setEditDetails: (compDetails, popup, popupPosition) => {\n                if (compDetails) {\n                    // start editing\n                    setEditDetails({\n                        compDetails: compDetails!,\n                        popup,\n                        popupPosition\n                    });\n                    if (!popup) {\n                        setRenderDetails(undefined);\n                    }\n                } else {\n                    // stop editing\n                    setEditDetails(undefined);\n                }\n            }\n        };\n\n        cellCtrl.setComp(compProxy, null, eGui.current!, printLayout, editingRow);\n\n    }, []);\n\n    const reactCellRendererStateless = useMemo( ()=> {\n        const res = renderDetails && renderDetails.compDetails \n                    && renderDetails.compDetails.componentFromFramework \n                    && isComponentStateless(renderDetails.compDetails.componentClass);\n        return !!res;\n    }, [renderDetails]);\n\n    const className = useMemo( ()=> {\n        let res = cssClasses.toString();\n        if (!showTools) {\n            res += ' ag-cell-value';\n        }\n        return res;\n    }, [cssClasses, showTools]);\n\n    const cellStyles = useMemo( ()=> {\n        const res: React.CSSProperties = {\n            left,\n            width,\n            height,\n            transition,\n            zIndex: (zIndex as any)\n        };\n        _.assign(res, userStyles);\n        return res;\n    }, [left, width, height, transition, zIndex, userStyles]);\n\n    const cellInstanceId = useMemo( ()=> cellCtrl.getInstanceId(), []);\n\n    return (\n        <div ref={ eGui } className={ className } style={ cellStyles } tabIndex={ tabIndex }\n             aria-selected={ ariaSelected } aria-colindex={ ariaColIndex } role={ role }\n             aria-expanded={ ariaExpanded } col-id={ colId } title={ title } \n             unselectable={ unselectable } aria-describedby={ ariaDescribedBy }>\n\n            { renderDetails != null && jsxShowValue(renderDetails, cellInstanceId, cellRendererRef, \n                                                showTools, unselectable, reactCellRendererStateless,\n                                                toolsRefCallback, toolsValueRefCallback) }\n            { editDetails != null && jsxEditValue(editDetails, setInlineCellEditorRef, setPopupCellEditorRef, eGui.current!, cellCtrl, jsEditorComp) }\n\n        </div>\n    );\n}\n\nexport default memo(CellComp);\n"]},"metadata":{},"sourceType":"script"}