{"ast":null,"code":"'use strict';\n\nconst fallback = require('./binaryajax-browser');\n\nconst combine = require('./combine');\n\nconst Buffer = require('buffer').Buffer;\n\nmodule.exports = async function binaryAjax(_url, type) {\n  if (!global.fetch) {\n    return fallback(_url, type);\n  }\n\n  const url = combine(_url, type);\n  const isOptionalTxt = type === 'prj' || type === 'cpg';\n\n  try {\n    const resp = await fetch(url);\n\n    if (resp.status > 399) {\n      throw new Error(resp.statusText);\n    }\n\n    if (isOptionalTxt) {\n      return resp.text();\n    }\n\n    const parsed = await resp.arrayBuffer();\n    return Buffer.from(parsed);\n  } catch (e) {\n    if (isOptionalTxt) {\n      return false;\n    }\n\n    throw e;\n  }\n};","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/shpjs/lib/binaryajax-fetch.js"],"names":["fallback","require","combine","Buffer","module","exports","binaryAjax","_url","type","global","fetch","url","isOptionalTxt","resp","status","Error","statusText","text","parsed","arrayBuffer","from","e"],"mappings":"AAAA;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAP,CAAkBE,MAAjC;;AACAC,MAAM,CAACC,OAAP,GAAiB,eAAeC,UAAf,CAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;AACtD,MAAI,CAACC,MAAM,CAACC,KAAZ,EAAmB;AACjB,WAAOV,QAAQ,CAACO,IAAD,EAAOC,IAAP,CAAf;AACD;;AACD,QAAMG,GAAG,GAAGT,OAAO,CAACK,IAAD,EAAOC,IAAP,CAAnB;AACA,QAAMI,aAAa,GAAGJ,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,KAAjD;;AACA,MAAI;AACF,UAAMK,IAAI,GAAG,MAAMH,KAAK,CAACC,GAAD,CAAxB;;AACA,QAAIE,IAAI,CAACC,MAAL,GAAc,GAAlB,EAAuB;AACrB,YAAM,IAAIC,KAAJ,CAAUF,IAAI,CAACG,UAAf,CAAN;AACD;;AACD,QAAIJ,aAAJ,EAAmB;AACjB,aAAOC,IAAI,CAACI,IAAL,EAAP;AACD;;AACD,UAAMC,MAAM,GAAG,MAAML,IAAI,CAACM,WAAL,EAArB;AACA,WAAOhB,MAAM,CAACiB,IAAP,CAAYF,MAAZ,CAAP;AACD,GAVD,CAUE,OAAOG,CAAP,EAAU;AACV,QAAIT,aAAJ,EAAmB;AACjB,aAAO,KAAP;AACD;;AACD,UAAMS,CAAN;AACD;AACF,CAtBD","sourcesContent":["'use strict';\nconst fallback = require('./binaryajax-browser');\nconst combine = require('./combine');\nconst Buffer = require('buffer').Buffer;\nmodule.exports = async function binaryAjax (_url, type) {\n  if (!global.fetch) {\n    return fallback(_url, type);\n  }\n  const url = combine(_url, type);\n  const isOptionalTxt = type === 'prj' || type === 'cpg';\n  try {\n    const resp = await fetch(url);\n    if (resp.status > 399) {\n      throw new Error(resp.statusText);\n    }\n    if (isOptionalTxt) {\n      return resp.text();\n    }\n    const parsed = await resp.arrayBuffer();\n    return Buffer.from(parsed);\n  } catch (e) {\n    if (isOptionalTxt) {\n      return false;\n    }\n    throw e;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}