{"ast":null,"code":"// @ag-grid-community/react v26.2.0\n\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@ag-grid-community/core\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar utils_1 = require(\"../utils\");\n\nvar reactComment_1 = __importDefault(require(\"../reactComment\"));\n\nvar rowComp_1 = __importDefault(require(\"./rowComp\"));\n\nvar beansContext_1 = require(\"../beansContext\");\n\nvar RowContainerComp = function (params) {\n  var context = react_1.useContext(beansContext_1.BeansContext).context;\n\n  var _a = react_1.useState(''),\n      viewportHeight = _a[0],\n      setViewportHeight = _a[1];\n\n  var _b = react_1.useState([]),\n      rowCtrls = _b[0],\n      setRowCtrls = _b[1];\n\n  var _c = react_1.useState(false),\n      domOrder = _c[0],\n      setDomOrder = _c[1];\n\n  var _d = react_1.useState(''),\n      containerWidth = _d[0],\n      setContainerWidth = _d[1];\n\n  var name = params.name;\n  var pinned = react_1.useMemo(function () {\n    return core_1.RowContainerCtrl.getPinned(name);\n  }, [name]);\n  var eWrapper = react_1.useRef(null);\n  var eViewport = react_1.useRef(null);\n  var eContainer = react_1.useRef(null);\n  var cssClasses = react_1.useMemo(function () {\n    return core_1.RowContainerCtrl.getRowContainerCssClasses(name);\n  }, [name]);\n  var wrapperClasses = react_1.useMemo(function () {\n    return utils_1.classesList(cssClasses.wrapper);\n  }, []);\n  var viewportClasses = react_1.useMemo(function () {\n    return utils_1.classesList(cssClasses.viewport);\n  }, []);\n  var containerClasses = react_1.useMemo(function () {\n    return utils_1.classesList(cssClasses.container);\n  }, []); // no need to useMemo for boolean types\n\n  var template1 = name === core_1.RowContainerName.CENTER;\n  var template2 = name === core_1.RowContainerName.TOP_CENTER || name === core_1.RowContainerName.BOTTOM_CENTER;\n  var template3 = !template1 && !template2;\n  var topLevelRef = template1 ? eWrapper : template2 ? eViewport : eContainer;\n  reactComment_1.default(' AG Row Container ' + name + ' ', topLevelRef);\n  react_1.useEffect(function () {\n    var beansToDestroy = [];\n    var compProxy = {\n      setViewportHeight: setViewportHeight,\n      setRowCtrls: function (rowCtrls) {\n        setRowCtrls(function (prev) {\n          if (domOrder) {\n            return rowCtrls;\n          } // if dom order not important, we don't want to change the order\n          // of the elements in the dom, as this would break transition styles\n\n\n          var oldRows = prev.filter(function (r) {\n            return rowCtrls.indexOf(r) >= 0;\n          });\n          var newRows = rowCtrls.filter(function (r) {\n            return oldRows.indexOf(r) < 0;\n          });\n\n          var next = __spreadArrays(oldRows, newRows);\n\n          return next;\n        });\n      },\n      setDomOrder: function (domOrder) {\n        return setDomOrder(domOrder);\n      },\n      setContainerWidth: function (width) {\n        return setContainerWidth(width);\n      }\n    };\n    var ctrl = context.createBean(new core_1.RowContainerCtrl(name));\n    beansToDestroy.push(ctrl);\n    ctrl.setComp(compProxy, eContainer.current, eViewport.current, eWrapper.current);\n    return function () {\n      context.destroyBeans(beansToDestroy);\n    };\n  }, []);\n  var viewportStyle = react_1.useMemo(function () {\n    return {\n      height: viewportHeight\n    };\n  }, [viewportHeight]);\n  var containerStyle = react_1.useMemo(function () {\n    return {\n      width: containerWidth\n    };\n  }, [containerWidth]);\n\n  var buildContainer = function () {\n    return react_1.default.createElement(\"div\", {\n      className: containerClasses,\n      ref: eContainer,\n      role: \"rowgroup\",\n      style: containerStyle,\n      unselectable: \"on\"\n    }, rowCtrls.map(function (rowCtrl) {\n      return react_1.default.createElement(rowComp_1.default, {\n        rowCtrl: rowCtrl,\n        pinned: pinned,\n        key: rowCtrl.getInstanceId()\n      });\n    }));\n  };\n\n  return react_1.default.createElement(react_1.default.Fragment, null, template1 && react_1.default.createElement(\"div\", {\n    className: wrapperClasses,\n    ref: eWrapper,\n    role: \"presentation\",\n    unselectable: \"on\"\n  }, react_1.default.createElement(\"div\", {\n    className: viewportClasses,\n    ref: eViewport,\n    role: \"presentation\",\n    style: viewportStyle\n  }, buildContainer())), template2 && react_1.default.createElement(\"div\", {\n    className: viewportClasses,\n    ref: eViewport,\n    role: \"presentation\",\n    style: viewportStyle\n  }, buildContainer()), template3 && buildContainer());\n};\n\nexports.default = react_1.memo(RowContainerComp);","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/react/lib/reactUi/rows/reactUi/rows/rowContainerComp.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Context, IRowContainerComp, RowContainerCtrl, RowContainerName, RowCtrl } from '@ag-grid-community/core';\nimport React, { useEffect, useMemo, useRef, useState, memo, useContext } from 'react';\nimport { classesList } from '../utils';\nimport useReactCommentEffect from '../reactComment';\nimport RowComp from './rowComp';\nimport { BeansContext } from '../beansContext';\n\nconst RowContainerComp = (params: {name: RowContainerName}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const [viewportHeight, setViewportHeight] = useState<string>('');\n    const [rowCtrls, setRowCtrls] = useState<RowCtrl[]>([]);\n    const [domOrder, setDomOrder] = useState<boolean>(false);\n    const [containerWidth, setContainerWidth] = useState<string>('');\n\n    const { name } = params;\n\n    const pinned = useMemo(() => RowContainerCtrl.getPinned(name), [name]);\n\n    const eWrapper = useRef<HTMLDivElement>(null);\n    const eViewport = useRef<HTMLDivElement>(null);\n    const eContainer = useRef<HTMLDivElement>(null);\n\n    const cssClasses = useMemo(() => RowContainerCtrl.getRowContainerCssClasses(name), [name]);\n    const wrapperClasses = useMemo( ()=> classesList(cssClasses.wrapper), []);\n    const viewportClasses = useMemo( ()=> classesList(cssClasses.viewport), []);\n    const containerClasses = useMemo( ()=> classesList(cssClasses.container), []);\n\n    // no need to useMemo for boolean types\n    const template1 = name === RowContainerName.CENTER;\n    const template2 = name === RowContainerName.TOP_CENTER || name === RowContainerName.BOTTOM_CENTER;\n    const template3 = !template1 && !template2;\n\n    const topLevelRef = template1 ? eWrapper : template2 ? eViewport : eContainer;\n\n    useReactCommentEffect(' AG Row Container ' + name + ' ', topLevelRef);\n\n    useEffect(() => {\n        const beansToDestroy: any[] = [];\n\n        const compProxy: IRowContainerComp = {\n            setViewportHeight: setViewportHeight,\n            setRowCtrls: rowCtrls => {\n                setRowCtrls( prev => {\n                    if (domOrder) {\n                        return rowCtrls;\n                    }\n                    // if dom order not important, we don't want to change the order\n                    // of the elements in the dom, as this would break transition styles\n                    const oldRows = prev.filter(r => rowCtrls.indexOf(r) >= 0);\n                    const newRows = rowCtrls.filter(r => oldRows.indexOf(r) < 0);\n                    const next = [...oldRows, ...newRows];\n                    return next;\n                });\n            },\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setContainerWidth: width => setContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new RowContainerCtrl(name));\n        beansToDestroy.push(ctrl);\n        ctrl.setComp(compProxy, eContainer.current!, eViewport.current!, eWrapper.current!);\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n        };\n\n    }, []);\n\n    const viewportStyle = useMemo( ()=> ({\n        height: viewportHeight\n    }), [viewportHeight]);\n\n    const containerStyle = useMemo( ()=> ({\n        width: containerWidth\n    }), [containerWidth]);\n\n    const buildContainer = () => (\n        <div\n            className={ containerClasses }\n            ref={ eContainer }\n            role=\"rowgroup\" \n            style={ containerStyle }\n            unselectable=\"on\">\n            {\n                rowCtrls.map(rowCtrl => <RowComp rowCtrl={ rowCtrl } pinned={ pinned } key={ rowCtrl.getInstanceId() }></RowComp>)\n            }\n        </div>\n    );\n\n    return (\n        <>\n            {\n                template1 &&\n                <div className={ wrapperClasses } ref={ eWrapper } role=\"presentation\" unselectable=\"on\">\n                    <div className={ viewportClasses } ref= { eViewport } role=\"presentation\" style={ viewportStyle }>\n                        { buildContainer() }\n                    </div>\n                </div>\n            }\n            {\n                template2 &&\n                <div className={ viewportClasses } ref= { eViewport } role=\"presentation\" style={ viewportStyle }>\n                    { buildContainer() }\n                </div>\n            }\n            {\n                template3 && buildContainer()\n            }\n        </>\n    );\n};\n\nexport default memo(RowContainerComp);\n"]},"metadata":{},"sourceType":"script"}