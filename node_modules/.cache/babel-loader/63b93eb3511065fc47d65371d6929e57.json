{"ast":null,"code":"// @ag-grid-community/react v26.2.0\n\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@ag-grid-community/core\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar beansContext_1 = require(\"./beansContext\");\n\nvar gridBodyComp_1 = __importDefault(require(\"./gridBodyComp\"));\n\nvar reactComment_1 = __importDefault(require(\"./reactComment\"));\n\nvar tabGuardComp_1 = __importDefault(require(\"./tabGuardComp\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar GridComp = function (_a) {\n  var context = _a.context;\n\n  var _b = react_1.useState(''),\n      rtlClass = _b[0],\n      setRtlClass = _b[1];\n\n  var _c = react_1.useState(''),\n      keyboardFocusClass = _c[0],\n      setKeyboardFocusClass = _c[1];\n\n  var _d = react_1.useState(''),\n      layoutClass = _d[0],\n      setLayoutClass = _d[1];\n\n  var _e = react_1.useState(null),\n      cursor = _e[0],\n      setCursor = _e[1];\n\n  var _f = react_1.useState(null),\n      userSelect = _f[0],\n      setUserSelect = _f[1];\n\n  var _g = react_1.useState(false),\n      initialised = _g[0],\n      setInitialised = _g[1];\n\n  var _h = react_1.useState(),\n      tabGuardReady = _h[0],\n      setTabGuardReady = _h[1];\n\n  var gridCtrlRef = react_1.useRef(null);\n  var eRootWrapperRef = react_1.useRef(null);\n  var tabGuardRef = react_1.useRef();\n  var eGridBodyParentRef = react_1.useRef(null);\n  var focusInnerElementRef = react_1.useRef(function () {\n    return undefined;\n  });\n  var onTabKeyDown = react_1.useCallback(function () {\n    return undefined;\n  }, []);\n  var beans = react_1.useMemo(function () {\n    return context.getBean('beans');\n  }, []);\n  reactComment_1.default(' AG Grid ', eRootWrapperRef); // create shared controller.\n\n  react_1.useEffect(function () {\n    var currentController = gridCtrlRef.current = context.createBean(new core_1.GridCtrl());\n    return function () {\n      context.destroyBean(currentController);\n      gridCtrlRef.current = null;\n    };\n  }, []); // initialise the UI\n\n  react_1.useEffect(function () {\n    var gridCtrl = gridCtrlRef.current;\n    focusInnerElementRef.current = gridCtrl.focusInnerElement.bind(gridCtrl);\n    var compProxy = {\n      destroyGridUi: function () {},\n      setRtlClass: setRtlClass,\n      addOrRemoveKeyboardFocusClass: function (addOrRemove) {\n        return setKeyboardFocusClass(addOrRemove ? core_1.FocusService.AG_KEYBOARD_FOCUS : '');\n      },\n      forceFocusOutOfContainer: function () {\n        tabGuardRef.current.forceFocusOutOfContainer();\n      },\n      updateLayoutClasses: setLayoutClass,\n      getFocusableContainers: function () {\n        var els = [];\n        var gridBodyCompEl = eRootWrapperRef.current.querySelector('.ag-root');\n        var sideBarEl = eRootWrapperRef.current.querySelector('.ag-side-bar');\n\n        if (gridBodyCompEl) {\n          els.push(gridBodyCompEl);\n        }\n\n        if (sideBarEl) {\n          els.push(sideBarEl);\n        }\n\n        return els;\n      },\n      setCursor: setCursor,\n      setUserSelect: setUserSelect\n    };\n    gridCtrl.setComp(compProxy, eRootWrapperRef.current, eRootWrapperRef.current);\n    setInitialised(true);\n  }, []); // initialise the extra components\n\n  react_1.useEffect(function () {\n    if (!tabGuardReady) {\n      return;\n    }\n\n    var gridCtrl = gridCtrlRef.current;\n    var beansToDestroy = [];\n    var agStackComponentsRegistry = beans.agStackComponentsRegistry;\n    var HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n    var SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n    var StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n    var WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n    var PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n    var additionalEls = [];\n    var eRootWrapper = eRootWrapperRef.current;\n    var eGridBodyParent = eGridBodyParentRef.current;\n\n    if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n      var headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n      var eGui = headerDropZonesComp.getGui();\n      eRootWrapper.insertAdjacentElement('afterbegin', eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(headerDropZonesComp);\n    }\n\n    if (gridCtrl.showSideBar() && SideBarClass) {\n      var sideBarComp = context.createBean(new SideBarClass());\n      var eGui = sideBarComp.getGui();\n      var bottomTabGuard = eGridBodyParent.querySelector('.ag-tab-guard-bottom');\n\n      if (bottomTabGuard) {\n        bottomTabGuard.insertAdjacentElement('beforebegin', eGui);\n        additionalEls.push(eGui);\n      }\n\n      beansToDestroy.push(sideBarComp);\n    }\n\n    if (gridCtrl.showStatusBar() && StatusBarClass) {\n      var statusBarComp = context.createBean(new StatusBarClass());\n      var eGui = statusBarComp.getGui();\n      eRootWrapper.insertAdjacentElement('beforeend', eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(statusBarComp);\n    }\n\n    if (PaginationClass) {\n      var paginationComp = context.createBean(new PaginationClass());\n      var eGui = paginationComp.getGui();\n      eRootWrapper.insertAdjacentElement('beforeend', eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(paginationComp);\n    }\n\n    if (gridCtrl.showWatermark() && WatermarkClass) {\n      var watermarkComp = context.createBean(new WatermarkClass());\n      var eGui = watermarkComp.getGui();\n      eRootWrapper.insertAdjacentElement('beforeend', eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(watermarkComp);\n    }\n\n    return function () {\n      context.destroyBeans(beansToDestroy);\n      additionalEls.forEach(function (el) {\n        if (el.parentElement) {\n          el.parentElement.removeChild(el);\n        }\n      });\n    };\n  }, [tabGuardReady]);\n  var rootWrapperClasses = react_1.useMemo(function () {\n    return utils_1.classesList('ag-root-wrapper', rtlClass, keyboardFocusClass, layoutClass);\n  }, [rtlClass, keyboardFocusClass, layoutClass]);\n  var rootWrapperBodyClasses = react_1.useMemo(function () {\n    return utils_1.classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass);\n  }, [layoutClass]);\n  var topStyle = react_1.useMemo(function () {\n    return {\n      userSelect: userSelect != null ? userSelect : '',\n      WebkitUserSelect: userSelect != null ? userSelect : '',\n      cursor: cursor != null ? cursor : ''\n    };\n  }, [userSelect, cursor]);\n  var eGridBodyParent = eGridBodyParentRef.current;\n  var setTabGuardCompRef = react_1.useCallback(function (ref) {\n    tabGuardRef.current = ref;\n    setTabGuardReady(true);\n  }, []);\n  return react_1.default.createElement(\"div\", {\n    ref: eRootWrapperRef,\n    className: rootWrapperClasses,\n    style: topStyle\n  }, react_1.default.createElement(\"div\", {\n    className: rootWrapperBodyClasses,\n    ref: eGridBodyParentRef\n  }, initialised && eGridBodyParent && react_1.default.createElement(beansContext_1.BeansContext.Provider, {\n    value: beans\n  }, react_1.default.createElement(tabGuardComp_1.default, {\n    ref: setTabGuardCompRef,\n    eFocusableElement: eGridBodyParent,\n    onTabKeyDown: onTabKeyDown,\n    gridCtrl: gridCtrlRef.current\n  }, // we wait for initialised before rending the children, so GridComp has created and registered with it's\n  // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n  // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n  // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n  // hangs the UI)\n  react_1.default.createElement(gridBodyComp_1.default, null)))));\n};\n\nexports.default = react_1.memo(GridComp);","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/react/lib/reactUi/reactUi/gridComp.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Beans, Context,\n    FocusService,\n    GridCtrl,\n    IGridComp\n} from '@ag-grid-community/core';\nimport React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from './beansContext';\nimport GridBodyComp from './gridBodyComp';\nimport useReactCommentEffect from './reactComment';\nimport TabGuardComp, { TabGuardCompCallback } from './tabGuardComp';\nimport { classesList } from './utils';\n\ninterface GridCompProps {\n    context: Context;\n}\n\nconst GridComp = ({ context }: GridCompProps) => {\n\n    const [rtlClass, setRtlClass] = useState<string>('');\n    const [keyboardFocusClass, setKeyboardFocusClass] = useState<string>('');\n    const [layoutClass, setLayoutClass] = useState<string>('');\n    const [cursor, setCursor] = useState<string | null>(null);\n    const [userSelect, setUserSelect] = useState<string | null>(null);\n    const [initialised, setInitialised] = useState<boolean>(false);\n    const [tabGuardReady, setTabGuardReady] = useState<any>();\n\n    const gridCtrlRef = useRef<GridCtrl | null>(null);\n    const eRootWrapperRef = useRef<HTMLDivElement>(null);\n    const tabGuardRef = useRef<TabGuardCompCallback>();\n    const eGridBodyParentRef = useRef<HTMLDivElement>(null);\n    const focusInnerElementRef = useRef<((fromBottom?: boolean) => void)>(() => undefined);\n\n    const onTabKeyDown = useCallback(() => undefined, []);\n\n    const beans = useMemo( ()=> context.getBean('beans') as Beans, []);\n\n    useReactCommentEffect(' AG Grid ', eRootWrapperRef);\n\n    // create shared controller.\n    useEffect(() => {\n        const currentController = gridCtrlRef.current = context.createBean(new GridCtrl());\n\n        return () => {\n            context.destroyBean(currentController);\n            gridCtrlRef.current = null;\n        }\n    }, []);\n\n    // initialise the UI\n    useEffect(() => {\n        const gridCtrl = gridCtrlRef.current!;\n\n        focusInnerElementRef.current = gridCtrl.focusInnerElement.bind(gridCtrl);\n\n        const compProxy: IGridComp = {\n            destroyGridUi:\n                () => {}, // do nothing, as framework users destroy grid by removing the comp\n            setRtlClass: setRtlClass,\n            addOrRemoveKeyboardFocusClass:\n                (addOrRemove: boolean) => setKeyboardFocusClass(addOrRemove ? FocusService.AG_KEYBOARD_FOCUS : ''),\n            forceFocusOutOfContainer: () => {\n                tabGuardRef.current!.forceFocusOutOfContainer();\n            },\n            updateLayoutClasses: setLayoutClass,\n            getFocusableContainers: () => {\n                const els: HTMLElement[] = [];\n\n                const gridBodyCompEl = eRootWrapperRef.current!.querySelector('.ag-root');\n                const sideBarEl = eRootWrapperRef.current!.querySelector('.ag-side-bar')\n\n                if (gridBodyCompEl) {\n                    els.push(gridBodyCompEl as HTMLElement);\n                }\n\n                if (sideBarEl) {\n                    els.push(sideBarEl as HTMLElement);\n                }\n\n                return els;\n            },\n            setCursor,\n            setUserSelect\n        };\n\n        gridCtrl.setComp(compProxy, eRootWrapperRef.current!, eRootWrapperRef.current!);\n\n        setInitialised(true);\n    }, []);\n\n    // initialise the extra components\n    useEffect(() => {\n        if (!tabGuardReady) { return; }\n\n        const gridCtrl = gridCtrlRef.current!;\n        const beansToDestroy: any[] = [];\n\n        const {agStackComponentsRegistry} = beans;\n\n        const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n        const SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n        const StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n        const WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n        const PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n        const additionalEls: HTMLDivElement[] = [];\n        const eRootWrapper = eRootWrapperRef.current!;\n        const eGridBodyParent = eGridBodyParentRef.current!;\n\n        if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n            const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n            const eGui = headerDropZonesComp.getGui();\n            eRootWrapper.insertAdjacentElement('afterbegin', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(headerDropZonesComp);\n        }\n\n        if (gridCtrl.showSideBar() && SideBarClass) {\n            const sideBarComp = context.createBean(new SideBarClass());\n            const eGui = sideBarComp.getGui();\n            const bottomTabGuard = eGridBodyParent.querySelector('.ag-tab-guard-bottom');\n            if (bottomTabGuard) {\n                bottomTabGuard.insertAdjacentElement('beforebegin', eGui);\n                additionalEls.push(eGui);\n            }\n\n            beansToDestroy.push(sideBarComp);\n        }\n\n        if (gridCtrl.showStatusBar() && StatusBarClass) {\n            const statusBarComp = context.createBean(new StatusBarClass());\n            const eGui = statusBarComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(statusBarComp);\n        }\n\n        if (PaginationClass) {\n            const paginationComp = context.createBean(new PaginationClass());\n            const eGui = paginationComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(paginationComp);\n        }\n\n        if (gridCtrl.showWatermark() && WatermarkClass) {\n            const watermarkComp = context.createBean(new WatermarkClass());\n            const eGui = watermarkComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(watermarkComp);\n        }\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n            additionalEls.forEach(el => {\n                if (el.parentElement) {\n                    el.parentElement.removeChild(el);\n                }\n            });\n        }\n    }, [tabGuardReady])\n\n    const rootWrapperClasses = useMemo( ()=> classesList('ag-root-wrapper', rtlClass, keyboardFocusClass, layoutClass), [rtlClass, keyboardFocusClass, layoutClass]);\n    const rootWrapperBodyClasses = useMemo( () => classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass), [layoutClass]);\n\n    const topStyle: React.CSSProperties = useMemo(() => ({\n        userSelect: userSelect != null ? (userSelect as any) : '',\n        WebkitUserSelect: userSelect != null ? (userSelect as any) : '',\n        cursor: cursor != null ? cursor : ''\n    }), [userSelect, cursor]);\n\n    const eGridBodyParent = eGridBodyParentRef.current;\n\n    const setTabGuardCompRef = useCallback((ref: TabGuardCompCallback) => {\n        tabGuardRef.current = ref;\n        setTabGuardReady(true);\n    }, []);\n\n    return (\n        <div ref={ eRootWrapperRef } className={ rootWrapperClasses } style={ topStyle }>\n            <div className={ rootWrapperBodyClasses } ref={ eGridBodyParentRef }>\n                { initialised && eGridBodyParent &&\n                    <BeansContext.Provider value={beans}>\n                        <TabGuardComp\n                            ref={ setTabGuardCompRef }\n                            eFocusableElement= { eGridBodyParent }\n                            onTabKeyDown={ onTabKeyDown }\n                            gridCtrl={ gridCtrlRef.current! }>\n                        { // we wait for initialised before rending the children, so GridComp has created and registered with it's\n                        // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n                        // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n                        // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n                        // hangs the UI)\n                            <GridBodyComp/>\n                        }\n                        </TabGuardComp>\n                    </BeansContext.Provider>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default memo(GridComp);\n"]},"metadata":{},"sourceType":"script"}