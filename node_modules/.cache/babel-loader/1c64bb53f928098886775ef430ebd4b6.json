{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/git_react/src/components/SmokerMap.js\";\nimport React from \"react\";\nimport { Map, GeoJSON } from \"react-leaflet\"; //import \"leaflet/dist/leaflet.css\";\n\nimport \"./SmokerMap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SmokerMap = _ref => {\n  let {\n    counties\n  } = _ref;\n  const mapStyle = {\n    fillColor: \"white\",\n    weight: 1,\n    color: \"black\",\n    fillOpacity: 1\n  };\n\n  const onEachCountry = (country, layer) => {\n    layer.options.fillColor = country.properties.color;\n    const name = country.properties.ADMIN;\n    const confirmedText = country.properties.confirmedText;\n    layer.bindPopup(`${name} ${confirmedText}`);\n  };\n  /*return (\n    <Map style={{ height: \"90vh\" }} zoom={2} center={[-94.6859,46.7296]}>\n      <GeoJSON\n        style={mapStyle}\n        data={countries}\n        onEachFeature={onEachCountry}\n      />\n    </Map>\n  );*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      className: \"App_map\",\n      style: {\n        height: \"90vh\"\n      },\n      view: {\n        center: fromLonLat([-94.6859, 46.7296]),\n        zoom: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(Layers, {\n        children: /*#__PURE__*/_jsxDEV(layer.Tile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SmokerMap;\nexport default SmokerMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmokerMap\");","map":{"version":3,"sources":["/Users/rongxuan/Desktop/git_react/src/components/SmokerMap.js"],"names":["React","Map","GeoJSON","SmokerMap","counties","mapStyle","fillColor","weight","color","fillOpacity","onEachCountry","country","layer","options","properties","name","ADMIN","confirmedText","bindPopup","height","center","fromLonLat","zoom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,eAA7B,C,CACA;;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,QAAgB;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC9B,QAAMC,QAAQ,GAAC;AACXC,IAAAA,SAAS,EAAE,OADA;AAEXC,IAAAA,MAAM,EAAE,CAFG;AAGXC,IAAAA,KAAK,EAAE,OAHI;AAIXC,IAAAA,WAAW,EAAE;AAJF,GAAf;;AAMA,QAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACtCA,IAAAA,KAAK,CAACC,OAAN,CAAcP,SAAd,GAA0BK,OAAO,CAACG,UAAR,CAAmBN,KAA7C;AACA,UAAMO,IAAI,GAAGJ,OAAO,CAACG,UAAR,CAAmBE,KAAhC;AACA,UAAMC,aAAa,GAAGN,OAAO,CAACG,UAAR,CAAmBG,aAAzC;AACAL,IAAAA,KAAK,CAACM,SAAN,CAAiB,GAAEH,IAAK,IAAGE,aAAc,EAAzC;AACD,GALH;AAOE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEM,sBACE;AAAA,2BACA,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAhC;AAAoD,MAAA,IAAI,EAAE;AAACC,QAAAA,MAAM,EAACC,UAAU,CAAC,CAAC,CAAC,OAAF,EAAU,OAAV,CAAD,CAAlB;AAAuCC,QAAAA,IAAI,EAAC;AAA5C,OAA1D;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAYL,CApCD;;KAAMnB,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Map, GeoJSON } from \"react-leaflet\";\n//import \"leaflet/dist/leaflet.css\";\nimport \"./SmokerMap.css\";\n\nconst SmokerMap = ({ counties}) =>{\n    const mapStyle={\n        fillColor: \"white\",\n        weight: 1,\n        color: \"black\",\n        fillOpacity: 1,\n    };\n    const onEachCountry = (country, layer) => {\n        layer.options.fillColor = country.properties.color;\n        const name = country.properties.ADMIN;\n        const confirmedText = country.properties.confirmedText;\n        layer.bindPopup(`${name} ${confirmedText}`);\n      };\n\n      /*return (\n        <Map style={{ height: \"90vh\" }} zoom={2} center={[-94.6859,46.7296]}>\n          <GeoJSON\n            style={mapStyle}\n            data={countries}\n            onEachFeature={onEachCountry}\n          />\n        </Map>\n      );*/\n\n      return (\n        <div>\n        <Map className=\"App_map\" style={{ height: \"90vh\" }} view={{center:fromLonLat([-94.6859,46.7296]),zoom:5}}>\n          <Layers>\n            <layer.Tile></layer.Tile>\n            </Layers>\n    \n        </Map>\n        \n        </div>\n      );\n\n};\nexport default SmokerMap;\n\n"]},"metadata":{},"sourceType":"module"}