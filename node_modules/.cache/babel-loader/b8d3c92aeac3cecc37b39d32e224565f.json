{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { includes, last } from \"../../utils/array\";\nimport { CellRangeType, SelectionHandleType } from \"../../interfaces/IRangeService\";\nimport { missing } from \"../../utils/generic\";\nvar CSS_CELL_RANGE_SELECTED = 'ag-cell-range-selected';\nvar CSS_CELL_RANGE_CHART = 'ag-cell-range-chart';\nvar CSS_CELL_RANGE_SINGLE_CELL = 'ag-cell-range-single-cell';\nvar CSS_CELL_RANGE_CHART_CATEGORY = 'ag-cell-range-chart-category';\nvar CSS_CELL_RANGE_HANDLE = 'ag-cell-range-handle';\nvar CSS_CELL_RANGE_TOP = 'ag-cell-range-top';\nvar CSS_CELL_RANGE_RIGHT = 'ag-cell-range-right';\nvar CSS_CELL_RANGE_BOTTOM = 'ag-cell-range-bottom';\nvar CSS_CELL_RANGE_LEFT = 'ag-cell-range-left';\n\nvar CellRangeFeature =\n/** @class */\nfunction () {\n  function CellRangeFeature(beans, ctrl) {\n    this.beans = beans;\n    this.cellCtrl = ctrl;\n  }\n\n  CellRangeFeature.prototype.setComp = function (cellComp) {\n    this.cellComp = cellComp;\n    this.onRangeSelectionChanged();\n  };\n\n  CellRangeFeature.prototype.onRangeSelectionChanged = function () {\n    this.rangeCount = this.beans.rangeService.getCellRangeCount(this.cellCtrl.getCellPosition());\n    this.hasChartRange = this.getHasChartRange();\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED, this.rangeCount !== 0);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED + \"-1\", this.rangeCount === 1);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED + \"-2\", this.rangeCount === 2);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED + \"-3\", this.rangeCount === 3);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED + \"-4\", this.rangeCount >= 4);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_CHART, this.hasChartRange);\n    this.cellComp.setAriaSelected(this.rangeCount > 0 ? true : undefined);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SINGLE_CELL, this.isSingleCell());\n    this.updateRangeBorders();\n    this.refreshHandle();\n  };\n\n  CellRangeFeature.prototype.updateRangeBorders = function () {\n    var rangeBorders = this.getRangeBorders();\n    var isSingleCell = this.isSingleCell();\n    var isTop = !isSingleCell && rangeBorders.top;\n    var isRight = !isSingleCell && rangeBorders.right;\n    var isBottom = !isSingleCell && rangeBorders.bottom;\n    var isLeft = !isSingleCell && rangeBorders.left;\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_TOP, isTop);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_RIGHT, isRight);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_BOTTOM, isBottom);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_LEFT, isLeft);\n  };\n\n  CellRangeFeature.prototype.isSingleCell = function () {\n    var rangeService = this.beans.rangeService;\n    return this.rangeCount === 1 && rangeService && !rangeService.isMoreThanOneCell();\n  };\n\n  CellRangeFeature.prototype.getHasChartRange = function () {\n    var rangeService = this.beans.rangeService;\n\n    if (!this.rangeCount || !rangeService) {\n      return false;\n    }\n\n    var cellRanges = rangeService.getCellRanges();\n    return cellRanges.length > 0 && cellRanges.every(function (range) {\n      return includes([CellRangeType.DIMENSION, CellRangeType.VALUE], range.type);\n    });\n  };\n\n  CellRangeFeature.prototype.updateRangeBordersIfRangeCount = function () {\n    // we only need to update range borders if we are in a range\n    if (this.rangeCount > 0) {\n      this.updateRangeBorders();\n      this.refreshHandle();\n    }\n  };\n\n  CellRangeFeature.prototype.getRangeBorders = function () {\n    var _this = this;\n\n    var isRtl = this.beans.gridOptionsWrapper.isEnableRtl();\n    var top = false;\n    var right = false;\n    var bottom = false;\n    var left = false;\n    var thisCol = this.cellCtrl.getCellPosition().column;\n    var _a = this.beans,\n        rangeService = _a.rangeService,\n        columnModel = _a.columnModel;\n    var leftCol;\n    var rightCol;\n\n    if (isRtl) {\n      leftCol = columnModel.getDisplayedColAfter(thisCol);\n      rightCol = columnModel.getDisplayedColBefore(thisCol);\n    } else {\n      leftCol = columnModel.getDisplayedColBefore(thisCol);\n      rightCol = columnModel.getDisplayedColAfter(thisCol);\n    }\n\n    var ranges = rangeService.getCellRanges().filter(function (range) {\n      return rangeService.isCellInSpecificRange(_this.cellCtrl.getCellPosition(), range);\n    }); // this means we are the first column in the grid\n\n    if (!leftCol) {\n      left = true;\n    } // this means we are the last column in the grid\n\n\n    if (!rightCol) {\n      right = true;\n    }\n\n    for (var i = 0; i < ranges.length; i++) {\n      if (top && right && bottom && left) {\n        break;\n      }\n\n      var range = ranges[i];\n      var startRow = rangeService.getRangeStartRow(range);\n      var endRow = rangeService.getRangeEndRow(range);\n\n      if (!top && this.beans.rowPositionUtils.sameRow(startRow, this.cellCtrl.getCellPosition())) {\n        top = true;\n      }\n\n      if (!bottom && this.beans.rowPositionUtils.sameRow(endRow, this.cellCtrl.getCellPosition())) {\n        bottom = true;\n      }\n\n      if (!left && leftCol && range.columns.indexOf(leftCol) < 0) {\n        left = true;\n      }\n\n      if (!right && rightCol && range.columns.indexOf(rightCol) < 0) {\n        right = true;\n      }\n    }\n\n    return {\n      top: top,\n      right: right,\n      bottom: bottom,\n      left: left\n    };\n  };\n\n  CellRangeFeature.prototype.refreshHandle = function () {\n    if (!this.beans.rangeService) {\n      return;\n    }\n\n    var shouldHaveSelectionHandle = this.shouldHaveSelectionHandle();\n\n    if (this.selectionHandle && !shouldHaveSelectionHandle) {\n      this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle);\n    }\n\n    if (shouldHaveSelectionHandle) {\n      this.addSelectionHandle();\n    }\n\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_HANDLE, !!this.selectionHandle);\n  };\n\n  CellRangeFeature.prototype.shouldHaveSelectionHandle = function () {\n    var _a = this.beans,\n        gridOptionsWrapper = _a.gridOptionsWrapper,\n        rangeService = _a.rangeService;\n    var cellRanges = rangeService.getCellRanges();\n    var rangesLen = cellRanges.length;\n\n    if (this.rangeCount < 1 || rangesLen < 1) {\n      return false;\n    }\n\n    var cellRange = last(cellRanges);\n    var cellPosition = this.cellCtrl.getCellPosition();\n    var isFillHandleAvailable = gridOptionsWrapper.isEnableFillHandle() && !this.cellCtrl.isSuppressFillHandle();\n    var isRangeHandleAvailable = gridOptionsWrapper.isEnableRangeHandle();\n    var handleIsAvailable = rangesLen === 1 && !this.cellCtrl.isEditing() && (isFillHandleAvailable || isRangeHandleAvailable);\n\n    if (this.hasChartRange) {\n      var hasCategoryRange = cellRanges[0].type === CellRangeType.DIMENSION;\n      var isCategoryCell = hasCategoryRange && rangeService.isCellInSpecificRange(cellPosition, cellRanges[0]);\n      this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_CHART_CATEGORY, isCategoryCell);\n      handleIsAvailable = cellRange.type === CellRangeType.VALUE;\n    }\n\n    return handleIsAvailable && cellRange.endRow != null && rangeService.isContiguousRange(cellRange) && rangeService.isBottomRightCell(cellRange, cellPosition);\n  };\n\n  CellRangeFeature.prototype.addSelectionHandle = function () {\n    var _a = this.beans,\n        gridOptionsWrapper = _a.gridOptionsWrapper,\n        rangeService = _a.rangeService;\n    var cellRangeType = last(rangeService.getCellRanges()).type;\n    var selectionHandleFill = gridOptionsWrapper.isEnableFillHandle() && missing(cellRangeType);\n    var type = selectionHandleFill ? SelectionHandleType.FILL : SelectionHandleType.RANGE;\n\n    if (this.selectionHandle && this.selectionHandle.getType() !== type) {\n      this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle);\n    }\n\n    if (!this.selectionHandle) {\n      this.selectionHandle = this.beans.selectionHandleFactory.createSelectionHandle(type);\n    }\n\n    this.selectionHandle.refresh(this.cellCtrl);\n  };\n\n  CellRangeFeature.prototype.destroy = function () {\n    this.beans.context.destroyBean(this.selectionHandle);\n  };\n\n  return CellRangeFeature;\n}();\n\nexport { CellRangeFeature };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/rendering/cell/cellRangeFeature.js"],"names":["includes","last","CellRangeType","SelectionHandleType","missing","CSS_CELL_RANGE_SELECTED","CSS_CELL_RANGE_CHART","CSS_CELL_RANGE_SINGLE_CELL","CSS_CELL_RANGE_CHART_CATEGORY","CSS_CELL_RANGE_HANDLE","CSS_CELL_RANGE_TOP","CSS_CELL_RANGE_RIGHT","CSS_CELL_RANGE_BOTTOM","CSS_CELL_RANGE_LEFT","CellRangeFeature","beans","ctrl","cellCtrl","prototype","setComp","cellComp","onRangeSelectionChanged","rangeCount","rangeService","getCellRangeCount","getCellPosition","hasChartRange","getHasChartRange","addOrRemoveCssClass","setAriaSelected","undefined","isSingleCell","updateRangeBorders","refreshHandle","rangeBorders","getRangeBorders","isTop","top","isRight","right","isBottom","bottom","isLeft","left","isMoreThanOneCell","cellRanges","getCellRanges","length","every","range","DIMENSION","VALUE","type","updateRangeBordersIfRangeCount","_this","isRtl","gridOptionsWrapper","isEnableRtl","thisCol","column","_a","columnModel","leftCol","rightCol","getDisplayedColAfter","getDisplayedColBefore","ranges","filter","isCellInSpecificRange","i","startRow","getRangeStartRow","endRow","getRangeEndRow","rowPositionUtils","sameRow","columns","indexOf","shouldHaveSelectionHandle","selectionHandle","context","destroyBean","addSelectionHandle","rangesLen","cellRange","cellPosition","isFillHandleAvailable","isEnableFillHandle","isSuppressFillHandle","isRangeHandleAvailable","isEnableRangeHandle","handleIsAvailable","isEditing","hasCategoryRange","isCategoryCell","isContiguousRange","isBottomRightCell","cellRangeType","selectionHandleFill","FILL","RANGE","getType","selectionHandleFactory","createSelectionHandle","refresh","destroy"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { includes, last } from \"../../utils/array\";\nimport { CellRangeType, SelectionHandleType } from \"../../interfaces/IRangeService\";\nimport { missing } from \"../../utils/generic\";\nvar CSS_CELL_RANGE_SELECTED = 'ag-cell-range-selected';\nvar CSS_CELL_RANGE_CHART = 'ag-cell-range-chart';\nvar CSS_CELL_RANGE_SINGLE_CELL = 'ag-cell-range-single-cell';\nvar CSS_CELL_RANGE_CHART_CATEGORY = 'ag-cell-range-chart-category';\nvar CSS_CELL_RANGE_HANDLE = 'ag-cell-range-handle';\nvar CSS_CELL_RANGE_TOP = 'ag-cell-range-top';\nvar CSS_CELL_RANGE_RIGHT = 'ag-cell-range-right';\nvar CSS_CELL_RANGE_BOTTOM = 'ag-cell-range-bottom';\nvar CSS_CELL_RANGE_LEFT = 'ag-cell-range-left';\nvar CellRangeFeature = /** @class */ (function () {\n    function CellRangeFeature(beans, ctrl) {\n        this.beans = beans;\n        this.cellCtrl = ctrl;\n    }\n    CellRangeFeature.prototype.setComp = function (cellComp) {\n        this.cellComp = cellComp;\n        this.onRangeSelectionChanged();\n    };\n    CellRangeFeature.prototype.onRangeSelectionChanged = function () {\n        this.rangeCount = this.beans.rangeService.getCellRangeCount(this.cellCtrl.getCellPosition());\n        this.hasChartRange = this.getHasChartRange();\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED, this.rangeCount !== 0);\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED + \"-1\", this.rangeCount === 1);\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED + \"-2\", this.rangeCount === 2);\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED + \"-3\", this.rangeCount === 3);\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED + \"-4\", this.rangeCount >= 4);\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_CHART, this.hasChartRange);\n        this.cellComp.setAriaSelected(this.rangeCount > 0 ? true : undefined);\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SINGLE_CELL, this.isSingleCell());\n        this.updateRangeBorders();\n        this.refreshHandle();\n    };\n    CellRangeFeature.prototype.updateRangeBorders = function () {\n        var rangeBorders = this.getRangeBorders();\n        var isSingleCell = this.isSingleCell();\n        var isTop = !isSingleCell && rangeBorders.top;\n        var isRight = !isSingleCell && rangeBorders.right;\n        var isBottom = !isSingleCell && rangeBorders.bottom;\n        var isLeft = !isSingleCell && rangeBorders.left;\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_TOP, isTop);\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_RIGHT, isRight);\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_BOTTOM, isBottom);\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_LEFT, isLeft);\n    };\n    CellRangeFeature.prototype.isSingleCell = function () {\n        var rangeService = this.beans.rangeService;\n        return this.rangeCount === 1 && rangeService && !rangeService.isMoreThanOneCell();\n    };\n    CellRangeFeature.prototype.getHasChartRange = function () {\n        var rangeService = this.beans.rangeService;\n        if (!this.rangeCount || !rangeService) {\n            return false;\n        }\n        var cellRanges = rangeService.getCellRanges();\n        return cellRanges.length > 0 && cellRanges.every(function (range) { return includes([CellRangeType.DIMENSION, CellRangeType.VALUE], range.type); });\n    };\n    CellRangeFeature.prototype.updateRangeBordersIfRangeCount = function () {\n        // we only need to update range borders if we are in a range\n        if (this.rangeCount > 0) {\n            this.updateRangeBorders();\n            this.refreshHandle();\n        }\n    };\n    CellRangeFeature.prototype.getRangeBorders = function () {\n        var _this = this;\n        var isRtl = this.beans.gridOptionsWrapper.isEnableRtl();\n        var top = false;\n        var right = false;\n        var bottom = false;\n        var left = false;\n        var thisCol = this.cellCtrl.getCellPosition().column;\n        var _a = this.beans, rangeService = _a.rangeService, columnModel = _a.columnModel;\n        var leftCol;\n        var rightCol;\n        if (isRtl) {\n            leftCol = columnModel.getDisplayedColAfter(thisCol);\n            rightCol = columnModel.getDisplayedColBefore(thisCol);\n        }\n        else {\n            leftCol = columnModel.getDisplayedColBefore(thisCol);\n            rightCol = columnModel.getDisplayedColAfter(thisCol);\n        }\n        var ranges = rangeService.getCellRanges().filter(function (range) { return rangeService.isCellInSpecificRange(_this.cellCtrl.getCellPosition(), range); });\n        // this means we are the first column in the grid\n        if (!leftCol) {\n            left = true;\n        }\n        // this means we are the last column in the grid\n        if (!rightCol) {\n            right = true;\n        }\n        for (var i = 0; i < ranges.length; i++) {\n            if (top && right && bottom && left) {\n                break;\n            }\n            var range = ranges[i];\n            var startRow = rangeService.getRangeStartRow(range);\n            var endRow = rangeService.getRangeEndRow(range);\n            if (!top && this.beans.rowPositionUtils.sameRow(startRow, this.cellCtrl.getCellPosition())) {\n                top = true;\n            }\n            if (!bottom && this.beans.rowPositionUtils.sameRow(endRow, this.cellCtrl.getCellPosition())) {\n                bottom = true;\n            }\n            if (!left && leftCol && range.columns.indexOf(leftCol) < 0) {\n                left = true;\n            }\n            if (!right && rightCol && range.columns.indexOf(rightCol) < 0) {\n                right = true;\n            }\n        }\n        return { top: top, right: right, bottom: bottom, left: left };\n    };\n    CellRangeFeature.prototype.refreshHandle = function () {\n        if (!this.beans.rangeService) {\n            return;\n        }\n        var shouldHaveSelectionHandle = this.shouldHaveSelectionHandle();\n        if (this.selectionHandle && !shouldHaveSelectionHandle) {\n            this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle);\n        }\n        if (shouldHaveSelectionHandle) {\n            this.addSelectionHandle();\n        }\n        this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_HANDLE, !!this.selectionHandle);\n    };\n    CellRangeFeature.prototype.shouldHaveSelectionHandle = function () {\n        var _a = this.beans, gridOptionsWrapper = _a.gridOptionsWrapper, rangeService = _a.rangeService;\n        var cellRanges = rangeService.getCellRanges();\n        var rangesLen = cellRanges.length;\n        if (this.rangeCount < 1 || rangesLen < 1) {\n            return false;\n        }\n        var cellRange = last(cellRanges);\n        var cellPosition = this.cellCtrl.getCellPosition();\n        var isFillHandleAvailable = gridOptionsWrapper.isEnableFillHandle() && !this.cellCtrl.isSuppressFillHandle();\n        var isRangeHandleAvailable = gridOptionsWrapper.isEnableRangeHandle();\n        var handleIsAvailable = rangesLen === 1 && !this.cellCtrl.isEditing() && (isFillHandleAvailable || isRangeHandleAvailable);\n        if (this.hasChartRange) {\n            var hasCategoryRange = cellRanges[0].type === CellRangeType.DIMENSION;\n            var isCategoryCell = hasCategoryRange && rangeService.isCellInSpecificRange(cellPosition, cellRanges[0]);\n            this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_CHART_CATEGORY, isCategoryCell);\n            handleIsAvailable = cellRange.type === CellRangeType.VALUE;\n        }\n        return handleIsAvailable &&\n            cellRange.endRow != null &&\n            rangeService.isContiguousRange(cellRange) &&\n            rangeService.isBottomRightCell(cellRange, cellPosition);\n    };\n    CellRangeFeature.prototype.addSelectionHandle = function () {\n        var _a = this.beans, gridOptionsWrapper = _a.gridOptionsWrapper, rangeService = _a.rangeService;\n        var cellRangeType = last(rangeService.getCellRanges()).type;\n        var selectionHandleFill = gridOptionsWrapper.isEnableFillHandle() && missing(cellRangeType);\n        var type = selectionHandleFill ? SelectionHandleType.FILL : SelectionHandleType.RANGE;\n        if (this.selectionHandle && this.selectionHandle.getType() !== type) {\n            this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle);\n        }\n        if (!this.selectionHandle) {\n            this.selectionHandle = this.beans.selectionHandleFactory.createSelectionHandle(type);\n        }\n        this.selectionHandle.refresh(this.cellCtrl);\n    };\n    CellRangeFeature.prototype.destroy = function () {\n        this.beans.context.destroyBean(this.selectionHandle);\n    };\n    return CellRangeFeature;\n}());\nexport { CellRangeFeature };\n"]},"metadata":{},"sourceType":"module"}