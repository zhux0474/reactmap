{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/reactmap/reactmap/src/components/context.js\";\nimport React, { useState } from \"react\";\nimport { metadata } from './metadata.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/React.createContext(\"Select an attribute\"); //export const ccontext = React.createContext(\"Select a attribute\");\n\nexport const {\n  Consumer\n} = Context; //this class will live a the top level of our application and \n//will store all data that we want to share with other components\n// need to add a value to <Context.Provider> tags\n// Make the context object:\n// pass the value in provider and return\n//return <Context.Provider value={usersContext}>{children}</Context.Provider>;\n\nexport class Provider extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      attribute: metadata[1]['geojson_url'] //default to total smoker\n\n    };\n  }\n\n  render() {\n    //within the value, set state to be \"this.state\"\n    // add function to handle the change when selection is made to dropdown menu\n    return console.log(this.state),\n    /*#__PURE__*/\n    //handleChange function sets the state of season to event.target.value \n    //which is the option from dropdown\n    _jsxDEV(Context.Provider, {\n      value: {\n        state: this.state,\n        //handleChange function sets the state of 'season' to 'event.target.value' \n        //(the option selected from the dropdown).\n        handleChange: event => this.setState({\n          attribute: event.target.value\n        })\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/src/components/context.js"],"names":["React","useState","metadata","Context","createContext","Consumer","Provider","Component","state","attribute","render","console","log","handleChange","event","setState","target","value","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AAGA,OAAO,MAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAN,CAAoB,qBAApB,CAAhB,C,CAEP;;AAEA,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAeF,OAArB,C,CAIP;AACA;AACA;AAOE;AAGA;AACA;;AAKF,OAAO,MAAMG,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAsC;AAAA;AAAA;AAAA,SACzCC,KADyC,GACnC;AACFC,MAAAA,SAAS,EAAEP,QAAQ,CAAC,CAAD,CAAR,CAAY,aAAZ,CADT,CACoC;;AADpC,KADmC;AAAA;;AAOzCQ,EAAAA,MAAM,GAAE;AAEJ;AACA;AAEA,WACIC,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AAAA;AACA;AACA;AACA,YAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAG;AACtBA,QAAAA,KAAK,EAAC,KAAKA,KADW;AAGtB;AACA;AACAK,QAAAA,YAAY,EAAGC,KAAD,IAAW,KAAKC,QAAL,CAAc;AACnCN,UAAAA,SAAS,EAAEK,KAAK,CAACE,MAAN,CAAaC;AADW,SAAd;AALH,OAA1B;AAAA,gBAYK,KAAKC,KAAL,CAAWC;AAZhB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAmBH;;AA/BwC","sourcesContent":["import React, { useState } from \"react\";\nimport {metadata} from './metadata.js';\n\n\nexport const Context = React.createContext(\"Select an attribute\");\n\n//export const ccontext = React.createContext(\"Select a attribute\");\n\nexport const { Consumer } = Context;\n\n\n\n//this class will live a the top level of our application and \n//will store all data that we want to share with other components\n// need to add a value to <Context.Provider> tags\n\n\n\n\n \n\n  // Make the context object:\n  \n\n  // pass the value in provider and return\n  //return <Context.Provider value={usersContext}>{children}</Context.Provider>;\n\n\n\n\nexport class Provider extends React.Component{\n    state={\n        attribute: metadata[1]['geojson_url'] //default to total smoker\n        \n    }\n\n\n    render(){\n        \n        //within the value, set state to be \"this.state\"\n        // add function to handle the change when selection is made to dropdown menu\n\n        return(\n            console.log(this.state),\n            //handleChange function sets the state of season to event.target.value \n            //which is the option from dropdown\n            <Context.Provider value ={{\n                state:this.state,\n\n                //handleChange function sets the state of 'season' to 'event.target.value' \n                //(the option selected from the dropdown).\n                handleChange: (event) => this.setState({\n                    attribute: event.target.value\n                }),\n                \n\n            }}>\n                \n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}