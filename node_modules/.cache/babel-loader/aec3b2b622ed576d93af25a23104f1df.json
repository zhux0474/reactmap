{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { EventService } from \"../eventService\";\nimport { areEventsNear } from \"../utils/mouse\";\n\nvar TouchListener =\n/** @class */\nfunction () {\n  function TouchListener(eElement, preventMouseClick) {\n    var _this = this;\n\n    if (preventMouseClick === void 0) {\n      preventMouseClick = false;\n    }\n\n    this.destroyFuncs = [];\n    this.touching = false;\n    this.eventService = new EventService();\n    this.eElement = eElement;\n    this.preventMouseClick = preventMouseClick;\n    var startListener = this.onTouchStart.bind(this);\n    var moveListener = this.onTouchMove.bind(this);\n    var endListener = this.onTouchEnd.bind(this);\n    this.eElement.addEventListener(\"touchstart\", startListener, {\n      passive: true\n    });\n    this.eElement.addEventListener(\"touchmove\", moveListener, {\n      passive: true\n    }); // we set passive=false, as we want to prevent default on this event\n\n    this.eElement.addEventListener(\"touchend\", endListener, {\n      passive: false\n    });\n    this.destroyFuncs.push(function () {\n      _this.eElement.removeEventListener(\"touchstart\", startListener, {\n        passive: true\n      });\n\n      _this.eElement.removeEventListener(\"touchmove\", moveListener, {\n        passive: true\n      });\n\n      _this.eElement.removeEventListener(\"touchend\", endListener, {\n        passive: false\n      });\n    });\n  }\n\n  TouchListener.prototype.getActiveTouch = function (touchList) {\n    for (var i = 0; i < touchList.length; i++) {\n      var matches = touchList[i].identifier === this.touchStart.identifier;\n\n      if (matches) {\n        return touchList[i];\n      }\n    }\n\n    return null;\n  };\n\n  TouchListener.prototype.addEventListener = function (eventType, listener) {\n    this.eventService.addEventListener(eventType, listener);\n  };\n\n  TouchListener.prototype.removeEventListener = function (eventType, listener) {\n    this.eventService.removeEventListener(eventType, listener);\n  };\n\n  TouchListener.prototype.onTouchStart = function (touchEvent) {\n    var _this = this; // only looking at one touch point at any time\n\n\n    if (this.touching) {\n      return;\n    }\n\n    this.touchStart = touchEvent.touches[0];\n    this.touching = true;\n    this.moved = false;\n    var touchStartCopy = this.touchStart;\n    window.setTimeout(function () {\n      var touchesMatch = _this.touchStart === touchStartCopy;\n\n      if (_this.touching && touchesMatch && !_this.moved) {\n        _this.moved = true;\n        var event_1 = {\n          type: TouchListener.EVENT_LONG_TAP,\n          touchStart: _this.touchStart,\n          touchEvent: touchEvent\n        };\n\n        _this.eventService.dispatchEvent(event_1);\n      }\n    }, 500);\n  };\n\n  TouchListener.prototype.onTouchMove = function (touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n\n    var touch = this.getActiveTouch(touchEvent.touches);\n\n    if (!touch) {\n      return;\n    }\n\n    var eventIsFarAway = !areEventsNear(touch, this.touchStart, 4);\n\n    if (eventIsFarAway) {\n      this.moved = true;\n    }\n  };\n\n  TouchListener.prototype.onTouchEnd = function (touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n\n    if (!this.moved) {\n      var event_2 = {\n        type: TouchListener.EVENT_TAP,\n        touchStart: this.touchStart\n      };\n      this.eventService.dispatchEvent(event_2);\n      this.checkForDoubleTap();\n    } // stops the tap from also been processed as a mouse click\n\n\n    if (this.preventMouseClick) {\n      touchEvent.preventDefault();\n    }\n\n    this.touching = false;\n  };\n\n  TouchListener.prototype.checkForDoubleTap = function () {\n    var now = new Date().getTime();\n\n    if (this.lastTapTime && this.lastTapTime > 0) {\n      // if previous tap, see if duration is short enough to be considered double tap\n      var interval = now - this.lastTapTime;\n\n      if (interval > TouchListener.DOUBLE_TAP_MILLIS) {\n        // dispatch double tap event\n        var event_3 = {\n          type: TouchListener.EVENT_DOUBLE_TAP,\n          touchStart: this.touchStart\n        };\n        this.eventService.dispatchEvent(event_3); // this stops a tripple tap ending up as two double taps\n\n        this.lastTapTime = null;\n      } else {\n        this.lastTapTime = now;\n      }\n    } else {\n      this.lastTapTime = now;\n    }\n  };\n\n  TouchListener.prototype.destroy = function () {\n    this.destroyFuncs.forEach(function (func) {\n      return func();\n    });\n  };\n\n  TouchListener.EVENT_TAP = \"tap\";\n  TouchListener.EVENT_DOUBLE_TAP = \"doubleTap\";\n  TouchListener.EVENT_LONG_TAP = \"longTap\";\n  TouchListener.DOUBLE_TAP_MILLIS = 500;\n  return TouchListener;\n}();\n\nexport { TouchListener };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/widgets/touchListener.js"],"names":["EventService","areEventsNear","TouchListener","eElement","preventMouseClick","_this","destroyFuncs","touching","eventService","startListener","onTouchStart","bind","moveListener","onTouchMove","endListener","onTouchEnd","addEventListener","passive","push","removeEventListener","prototype","getActiveTouch","touchList","i","length","matches","identifier","touchStart","eventType","listener","touchEvent","touches","moved","touchStartCopy","window","setTimeout","touchesMatch","event_1","type","EVENT_LONG_TAP","dispatchEvent","touch","eventIsFarAway","event_2","EVENT_TAP","checkForDoubleTap","preventDefault","now","Date","getTime","lastTapTime","interval","DOUBLE_TAP_MILLIS","event_3","EVENT_DOUBLE_TAP","destroy","forEach","func"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { EventService } from \"../eventService\";\nimport { areEventsNear } from \"../utils/mouse\";\nvar TouchListener = /** @class */ (function () {\n    function TouchListener(eElement, preventMouseClick) {\n        var _this = this;\n        if (preventMouseClick === void 0) { preventMouseClick = false; }\n        this.destroyFuncs = [];\n        this.touching = false;\n        this.eventService = new EventService();\n        this.eElement = eElement;\n        this.preventMouseClick = preventMouseClick;\n        var startListener = this.onTouchStart.bind(this);\n        var moveListener = this.onTouchMove.bind(this);\n        var endListener = this.onTouchEnd.bind(this);\n        this.eElement.addEventListener(\"touchstart\", startListener, { passive: true });\n        this.eElement.addEventListener(\"touchmove\", moveListener, { passive: true });\n        // we set passive=false, as we want to prevent default on this event\n        this.eElement.addEventListener(\"touchend\", endListener, { passive: false });\n        this.destroyFuncs.push(function () {\n            _this.eElement.removeEventListener(\"touchstart\", startListener, { passive: true });\n            _this.eElement.removeEventListener(\"touchmove\", moveListener, { passive: true });\n            _this.eElement.removeEventListener(\"touchend\", endListener, { passive: false });\n        });\n    }\n    TouchListener.prototype.getActiveTouch = function (touchList) {\n        for (var i = 0; i < touchList.length; i++) {\n            var matches = touchList[i].identifier === this.touchStart.identifier;\n            if (matches) {\n                return touchList[i];\n            }\n        }\n        return null;\n    };\n    TouchListener.prototype.addEventListener = function (eventType, listener) {\n        this.eventService.addEventListener(eventType, listener);\n    };\n    TouchListener.prototype.removeEventListener = function (eventType, listener) {\n        this.eventService.removeEventListener(eventType, listener);\n    };\n    TouchListener.prototype.onTouchStart = function (touchEvent) {\n        var _this = this;\n        // only looking at one touch point at any time\n        if (this.touching) {\n            return;\n        }\n        this.touchStart = touchEvent.touches[0];\n        this.touching = true;\n        this.moved = false;\n        var touchStartCopy = this.touchStart;\n        window.setTimeout(function () {\n            var touchesMatch = _this.touchStart === touchStartCopy;\n            if (_this.touching && touchesMatch && !_this.moved) {\n                _this.moved = true;\n                var event_1 = {\n                    type: TouchListener.EVENT_LONG_TAP,\n                    touchStart: _this.touchStart,\n                    touchEvent: touchEvent\n                };\n                _this.eventService.dispatchEvent(event_1);\n            }\n        }, 500);\n    };\n    TouchListener.prototype.onTouchMove = function (touchEvent) {\n        if (!this.touching) {\n            return;\n        }\n        var touch = this.getActiveTouch(touchEvent.touches);\n        if (!touch) {\n            return;\n        }\n        var eventIsFarAway = !areEventsNear(touch, this.touchStart, 4);\n        if (eventIsFarAway) {\n            this.moved = true;\n        }\n    };\n    TouchListener.prototype.onTouchEnd = function (touchEvent) {\n        if (!this.touching) {\n            return;\n        }\n        if (!this.moved) {\n            var event_2 = {\n                type: TouchListener.EVENT_TAP,\n                touchStart: this.touchStart\n            };\n            this.eventService.dispatchEvent(event_2);\n            this.checkForDoubleTap();\n        }\n        // stops the tap from also been processed as a mouse click\n        if (this.preventMouseClick) {\n            touchEvent.preventDefault();\n        }\n        this.touching = false;\n    };\n    TouchListener.prototype.checkForDoubleTap = function () {\n        var now = new Date().getTime();\n        if (this.lastTapTime && this.lastTapTime > 0) {\n            // if previous tap, see if duration is short enough to be considered double tap\n            var interval = now - this.lastTapTime;\n            if (interval > TouchListener.DOUBLE_TAP_MILLIS) {\n                // dispatch double tap event\n                var event_3 = {\n                    type: TouchListener.EVENT_DOUBLE_TAP,\n                    touchStart: this.touchStart\n                };\n                this.eventService.dispatchEvent(event_3);\n                // this stops a tripple tap ending up as two double taps\n                this.lastTapTime = null;\n            }\n            else {\n                this.lastTapTime = now;\n            }\n        }\n        else {\n            this.lastTapTime = now;\n        }\n    };\n    TouchListener.prototype.destroy = function () {\n        this.destroyFuncs.forEach(function (func) { return func(); });\n    };\n    TouchListener.EVENT_TAP = \"tap\";\n    TouchListener.EVENT_DOUBLE_TAP = \"doubleTap\";\n    TouchListener.EVENT_LONG_TAP = \"longTap\";\n    TouchListener.DOUBLE_TAP_MILLIS = 500;\n    return TouchListener;\n}());\nexport { TouchListener };\n"]},"metadata":{},"sourceType":"module"}