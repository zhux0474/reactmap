{"ast":null,"code":"// @ag-grid-community/react v26.2.0\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.showJsComp = function (compDetails, context, eParent, ref) {\n  var doNothing = !compDetails || compDetails.componentFromFramework;\n\n  if (doNothing) {\n    return;\n  }\n\n  var comp = exports.createJsComp(compDetails);\n\n  if (!comp) {\n    return;\n  }\n\n  var compGui = comp.getGui();\n  eParent.appendChild(compGui);\n  setRef(ref, comp);\n  return function () {\n    var compGui = comp.getGui();\n\n    if (compGui && compGui.parentElement) {\n      compGui.parentElement.removeChild(compGui);\n    }\n\n    context.destroyBean(comp);\n\n    if (ref) {\n      setRef(ref, undefined);\n    }\n  };\n};\n\nvar setRef = function (ref, value) {\n  if (!ref) {\n    return;\n  }\n\n  if (ref instanceof Function) {\n    var refCallback = ref;\n    refCallback(value);\n  } else {\n    var refObj = ref;\n    refObj.current = value;\n  }\n};\n\nexports.createJsComp = function (compDetails) {\n  var promise = compDetails.newAgStackInstance();\n\n  if (!promise) {\n    return;\n  }\n\n  return promise.resolveNow(null, function (x) {\n    return x;\n  }); // js comps are never async\n};","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/react/lib/reactUi/reactUi/jsComp.tsx"],"names":[],"mappings":";;;;;;;AAGa,OAAA,CAAA,UAAA,GAAa,UACtB,WADsB,EAEtB,OAFsB,EAEJ,OAFI,EAGtB,GAHsB,EAG0B;AAGhD,MAAM,SAAS,GAAG,CAAC,WAAD,IAAgB,WAAW,CAAC,sBAA9C;;AACA,MAAI,SAAJ,EAAe;AAAE;AAAS;;AAE1B,MAAM,IAAI,GAAG,OAAA,CAAA,YAAA,CAAa,WAAb,CAAb;;AAEA,MAAI,CAAC,IAAL,EAAW;AAAE;AAAS;;AAEtB,MAAM,OAAO,GAAG,IAAI,CAAC,MAAL,EAAhB;AAEA,EAAA,OAAO,CAAC,WAAR,CAAoB,OAApB;AAEA,EAAA,MAAM,CAAC,GAAD,EAAM,IAAN,CAAN;AAEA,SAAO,YAAA;AACH,QAAM,OAAO,GAAG,IAAI,CAAC,MAAL,EAAhB;;AAEA,QAAI,OAAO,IAAI,OAAO,CAAC,aAAvB,EAAsC;AAClC,MAAA,OAAO,CAAC,aAAR,CAAsB,WAAtB,CAAkC,OAAlC;AACH;;AAED,IAAA,OAAO,CAAC,WAAR,CAAoB,IAApB;;AAEA,QAAI,GAAJ,EAAS;AACL,MAAA,MAAM,CAAC,GAAD,EAAM,SAAN,CAAN;AACH;AACJ,GAZD;AAaH,CAhCY;;AAkCb,IAAM,MAAM,GAAG,UAAC,GAAD,EAA8D,KAA9D,EAAwE;AACnF,MAAI,CAAC,GAAL,EAAU;AAAE;AAAS;;AAErB,MAAI,GAAG,YAAY,QAAnB,EAA6B;AACzB,QAAM,WAAW,GAAG,GAApB;AACA,IAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD,MAGO;AACH,QAAM,MAAM,GAAG,GAAf;AACA,IAAA,MAAM,CAAC,OAAP,GAAiB,KAAjB;AACH;AACJ,CAVD;;AAYa,OAAA,CAAA,YAAA,GAAe,UAAC,WAAD,EAA6B;AACrD,MAAM,OAAO,GAAG,WAAW,CAAC,kBAAZ,EAAhB;;AACA,MAAI,CAAC,OAAL,EAAc;AAAE;AAAS;;AACzB,SAAO,OAAO,CAAC,UAAR,CAAmB,IAAnB,EAAyB,UAAA,CAAA,EAAC;AAAI,WAAA,CAAA;AAAC,GAA/B,CAAP,CAHqD,CAGZ;AAC5C,CAJY","sourcesContent":["import { Context, UserCompDetails, UserComponentFactory, IComponent, AgPromise, ICellRendererComp } from '@ag-grid-community/core';\nimport { MutableRefObject } from 'react';\n\nexport const showJsComp = (\n    compDetails: UserCompDetails | undefined, \n    context: Context, eParent: HTMLElement, \n    ref?: MutableRefObject<any> | ((ref: any)=>void)\n)  => {\n\n    const doNothing = !compDetails || compDetails.componentFromFramework;\n    if (doNothing) { return; }\n\n    const comp = createJsComp(compDetails) as ICellRendererComp;\n\n    if (!comp) { return; }\n\n    const compGui = comp.getGui();\n\n    eParent.appendChild(compGui);\n\n    setRef(ref, comp);\n\n    return () => {\n        const compGui = comp.getGui();\n\n        if (compGui && compGui.parentElement) {\n            compGui.parentElement.removeChild(compGui);\n        }\n\n        context.destroyBean(comp);\n\n        if (ref) {\n            setRef(ref, undefined);\n        }\n    };\n}\n\nconst setRef = (ref: MutableRefObject<any> | ((ref: any)=>void) | undefined, value: any) => {\n    if (!ref) { return; }\n    \n    if (ref instanceof Function) {\n        const refCallback = ref as (ref: any)=>void;\n        refCallback(value);\n    } else {\n        const refObj = ref as MutableRefObject<any>;\n        refObj.current = value;\n    }\n};\n\nexport const createJsComp = (compDetails: UserCompDetails): any => {\n    const promise = compDetails.newAgStackInstance();\n    if (!promise) { return; }\n    return promise.resolveNow(null, x => x); // js comps are never async\n};"]},"metadata":{},"sourceType":"script"}