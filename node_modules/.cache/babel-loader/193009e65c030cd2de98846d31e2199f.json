{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/filter/Contains\n */\n\n\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\n\nvar Contains =\n/** @class */\nfunction (_super) {\n  __extends(Contains, _super);\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [opt_srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n\n\n  function Contains(geometryName, geometry, opt_srsName) {\n    return _super.call(this, 'Contains', geometryName, geometry, opt_srsName) || this;\n  }\n\n  return Contains;\n}(Spatial);\n\nexport default Contains;","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/ol/src/format/filter/Contains.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEG;;;AACH,OAAO,OAAP,MAAoB,cAApB;AAEA;;;;;AAKG;;AACH,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuB,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;AACrB;;;;;AAKG;;;AACH,WAAA,QAAA,CAAY,YAAZ,EAA0B,QAA1B,EAAoC,WAApC,EAA+C;WAC7C,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,UAAN,EAAkB,YAAlB,EAAgC,QAAhC,EAA0C,WAA1C,KAAsD,I;AACvD;;AACH,SAAA,QAAA;AAAC,CAVD,CAAuB,OAAvB,CAAA;;AAYA,eAAe,QAAf","sourcesContent":["/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nclass Contains extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [opt_srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, opt_srsName) {\n    super('Contains', geometryName, geometry, opt_srsName);\n  }\n}\n\nexport default Contains;\n"]},"metadata":{},"sourceType":"module"}