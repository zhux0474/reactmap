{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { PostConstruct } from '../context/context';\nimport { Component } from '../widgets/component';\nimport { Events } from '../events';\nimport { RefSelector } from '../widgets/componentAnnotations';\nimport { RowNode } from '../entities/rowNode';\nimport { stopPropagationForAgGrid } from '../utils/event';\n\nvar CheckboxSelectionComponent =\n/** @class */\nfunction (_super) {\n  __extends(CheckboxSelectionComponent, _super);\n\n  function CheckboxSelectionComponent() {\n    return _super.call(this,\n    /* html*/\n    \"\\n            <div class=\\\"ag-selection-checkbox\\\" role=\\\"presentation\\\">\\n                <ag-checkbox role=\\\"presentation\\\" ref=\\\"eCheckbox\\\"></ag-checkbox>\\n            </div>\") || this;\n  }\n\n  CheckboxSelectionComponent.prototype.postConstruct = function () {\n    this.eCheckbox.setPassive(true);\n  };\n\n  CheckboxSelectionComponent.prototype.getCheckboxId = function () {\n    return this.eCheckbox.getInputElement().id;\n  };\n\n  CheckboxSelectionComponent.prototype.onDataChanged = function () {\n    // when rows are loaded for the second time, this can impact the selection, as a row\n    // could be loaded as already selected (if user scrolls down, and then up again).\n    this.onSelectionChanged();\n  };\n\n  CheckboxSelectionComponent.prototype.onSelectableChanged = function () {\n    this.showOrHideSelect();\n  };\n\n  CheckboxSelectionComponent.prototype.onSelectionChanged = function () {\n    var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n    var state = this.rowNode.isSelected();\n    var stateName = state === undefined ? translate('ariaIndeterminate', 'indeterminate') : state === true ? translate('ariaChecked', 'checked') : translate('ariaUnchecked', 'unchecked');\n    var ariaLabel = translate('ariaRowToggleSelection', 'Press Space to toggle row selection');\n    this.eCheckbox.setValue(state, true);\n    this.eCheckbox.setInputAriaLabel(ariaLabel + \" (\" + stateName + \")\");\n  };\n\n  CheckboxSelectionComponent.prototype.onCheckedClicked = function (event) {\n    var groupSelectsFiltered = this.gridOptionsWrapper.isGroupSelectsFiltered();\n    var updatedCount = this.rowNode.setSelectedParams({\n      newValue: false,\n      rangeSelect: event.shiftKey,\n      groupSelectsFiltered: groupSelectsFiltered\n    });\n    return updatedCount;\n  };\n\n  CheckboxSelectionComponent.prototype.onUncheckedClicked = function (event) {\n    var groupSelectsFiltered = this.gridOptionsWrapper.isGroupSelectsFiltered();\n    var updatedCount = this.rowNode.setSelectedParams({\n      newValue: true,\n      rangeSelect: event.shiftKey,\n      groupSelectsFiltered: groupSelectsFiltered\n    });\n    return updatedCount;\n  };\n\n  CheckboxSelectionComponent.prototype.init = function (params) {\n    var _this = this;\n\n    this.rowNode = params.rowNode;\n    this.column = params.column;\n    this.onSelectionChanged(); // we don't want the row clicked event to fire when selecting the checkbox, otherwise the row\n    // would possibly get selected twice\n\n    this.addGuiEventListener('click', function (event) {\n      return stopPropagationForAgGrid(event);\n    }); // likewise we don't want double click on this icon to open a group\n\n    this.addGuiEventListener('dblclick', function (event) {\n      return stopPropagationForAgGrid(event);\n    });\n    this.addManagedListener(this.eCheckbox.getInputElement(), 'click', function (event) {\n      var isSelected = _this.eCheckbox.getValue();\n\n      var previousValue = _this.eCheckbox.getPreviousValue();\n\n      if (previousValue === undefined) {\n        // indeterminate\n        var result = _this.onUncheckedClicked(event || {});\n\n        if (result === 0) {\n          _this.onCheckedClicked(event);\n        }\n      } else if (isSelected) {\n        _this.onCheckedClicked(event);\n      } else {\n        _this.onUncheckedClicked(event || {});\n      }\n    });\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onSelectionChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onDataChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_SELECTABLE_CHANGED, this.onSelectableChanged.bind(this));\n    var isRowSelectableFunc = this.gridOptionsWrapper.getIsRowSelectableFunc();\n    var checkboxVisibleIsDynamic = isRowSelectableFunc || this.checkboxCallbackExists();\n\n    if (checkboxVisibleIsDynamic) {\n      var showOrHideSelectListener = this.showOrHideSelect.bind(this);\n      this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, showOrHideSelectListener);\n      this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, showOrHideSelectListener);\n      this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, showOrHideSelectListener);\n      this.showOrHideSelect();\n    }\n\n    this.eCheckbox.getInputElement().setAttribute('tabindex', '-1');\n  };\n\n  CheckboxSelectionComponent.prototype.showOrHideSelect = function () {\n    // if the isRowSelectable() is not provided the row node is selectable by default\n    var selectable = this.rowNode.selectable; // checkboxSelection callback is deemed a legacy solution however we will still consider it's result.\n    // If selectable, then also check the colDef callback. if not selectable, this it short circuits - no need\n    // to call the colDef callback.\n\n    if (selectable && this.checkboxCallbackExists()) {\n      selectable = this.column.isCellCheckboxSelection(this.rowNode);\n    } // show checkbox if both conditions are true\n\n\n    this.setVisible(selectable);\n  };\n\n  CheckboxSelectionComponent.prototype.checkboxCallbackExists = function () {\n    // column will be missing if groupUseEntireRow=true\n    var colDef = this.column ? this.column.getColDef() : null;\n    return !!colDef && typeof colDef.checkboxSelection === 'function';\n  };\n\n  __decorate([RefSelector('eCheckbox')], CheckboxSelectionComponent.prototype, \"eCheckbox\", void 0);\n\n  __decorate([PostConstruct], CheckboxSelectionComponent.prototype, \"postConstruct\", null);\n\n  return CheckboxSelectionComponent;\n}(Component);\n\nexport { CheckboxSelectionComponent };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/rendering/checkboxSelectionComponent.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","PostConstruct","Component","Events","RefSelector","RowNode","stopPropagationForAgGrid","CheckboxSelectionComponent","_super","call","postConstruct","eCheckbox","setPassive","getCheckboxId","getInputElement","id","onDataChanged","onSelectionChanged","onSelectableChanged","showOrHideSelect","translate","gridOptionsWrapper","getLocaleTextFunc","state","rowNode","isSelected","stateName","undefined","ariaLabel","setValue","setInputAriaLabel","onCheckedClicked","event","groupSelectsFiltered","isGroupSelectsFiltered","updatedCount","setSelectedParams","newValue","rangeSelect","shiftKey","onUncheckedClicked","init","params","_this","column","addGuiEventListener","addManagedListener","getValue","previousValue","getPreviousValue","result","EVENT_ROW_SELECTED","bind","EVENT_DATA_CHANGED","EVENT_SELECTABLE_CHANGED","isRowSelectableFunc","getIsRowSelectableFunc","checkboxVisibleIsDynamic","checkboxCallbackExists","showOrHideSelectListener","eventService","EVENT_DISPLAYED_COLUMNS_CHANGED","EVENT_CELL_CHANGED","setAttribute","selectable","isCellCheckboxSelection","setVisible","colDef","getColDef","checkboxSelection"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { PostConstruct } from '../context/context';\nimport { Component } from '../widgets/component';\nimport { Events } from '../events';\nimport { RefSelector } from '../widgets/componentAnnotations';\nimport { RowNode } from '../entities/rowNode';\nimport { stopPropagationForAgGrid } from '../utils/event';\nvar CheckboxSelectionComponent = /** @class */ (function (_super) {\n    __extends(CheckboxSelectionComponent, _super);\n    function CheckboxSelectionComponent() {\n        return _super.call(this, /* html*/ \"\\n            <div class=\\\"ag-selection-checkbox\\\" role=\\\"presentation\\\">\\n                <ag-checkbox role=\\\"presentation\\\" ref=\\\"eCheckbox\\\"></ag-checkbox>\\n            </div>\") || this;\n    }\n    CheckboxSelectionComponent.prototype.postConstruct = function () {\n        this.eCheckbox.setPassive(true);\n    };\n    CheckboxSelectionComponent.prototype.getCheckboxId = function () {\n        return this.eCheckbox.getInputElement().id;\n    };\n    CheckboxSelectionComponent.prototype.onDataChanged = function () {\n        // when rows are loaded for the second time, this can impact the selection, as a row\n        // could be loaded as already selected (if user scrolls down, and then up again).\n        this.onSelectionChanged();\n    };\n    CheckboxSelectionComponent.prototype.onSelectableChanged = function () {\n        this.showOrHideSelect();\n    };\n    CheckboxSelectionComponent.prototype.onSelectionChanged = function () {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        var state = this.rowNode.isSelected();\n        var stateName = state === undefined\n            ? translate('ariaIndeterminate', 'indeterminate')\n            : (state === true\n                ? translate('ariaChecked', 'checked')\n                : translate('ariaUnchecked', 'unchecked'));\n        var ariaLabel = translate('ariaRowToggleSelection', 'Press Space to toggle row selection');\n        this.eCheckbox.setValue(state, true);\n        this.eCheckbox.setInputAriaLabel(ariaLabel + \" (\" + stateName + \")\");\n    };\n    CheckboxSelectionComponent.prototype.onCheckedClicked = function (event) {\n        var groupSelectsFiltered = this.gridOptionsWrapper.isGroupSelectsFiltered();\n        var updatedCount = this.rowNode.setSelectedParams({ newValue: false, rangeSelect: event.shiftKey, groupSelectsFiltered: groupSelectsFiltered });\n        return updatedCount;\n    };\n    CheckboxSelectionComponent.prototype.onUncheckedClicked = function (event) {\n        var groupSelectsFiltered = this.gridOptionsWrapper.isGroupSelectsFiltered();\n        var updatedCount = this.rowNode.setSelectedParams({ newValue: true, rangeSelect: event.shiftKey, groupSelectsFiltered: groupSelectsFiltered });\n        return updatedCount;\n    };\n    CheckboxSelectionComponent.prototype.init = function (params) {\n        var _this = this;\n        this.rowNode = params.rowNode;\n        this.column = params.column;\n        this.onSelectionChanged();\n        // we don't want the row clicked event to fire when selecting the checkbox, otherwise the row\n        // would possibly get selected twice\n        this.addGuiEventListener('click', function (event) { return stopPropagationForAgGrid(event); });\n        // likewise we don't want double click on this icon to open a group\n        this.addGuiEventListener('dblclick', function (event) { return stopPropagationForAgGrid(event); });\n        this.addManagedListener(this.eCheckbox.getInputElement(), 'click', function (event) {\n            var isSelected = _this.eCheckbox.getValue();\n            var previousValue = _this.eCheckbox.getPreviousValue();\n            if (previousValue === undefined) { // indeterminate\n                var result = _this.onUncheckedClicked(event || {});\n                if (result === 0) {\n                    _this.onCheckedClicked(event);\n                }\n            }\n            else if (isSelected) {\n                _this.onCheckedClicked(event);\n            }\n            else {\n                _this.onUncheckedClicked(event || {});\n            }\n        });\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onSelectionChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onDataChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_SELECTABLE_CHANGED, this.onSelectableChanged.bind(this));\n        var isRowSelectableFunc = this.gridOptionsWrapper.getIsRowSelectableFunc();\n        var checkboxVisibleIsDynamic = isRowSelectableFunc || this.checkboxCallbackExists();\n        if (checkboxVisibleIsDynamic) {\n            var showOrHideSelectListener = this.showOrHideSelect.bind(this);\n            this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, showOrHideSelectListener);\n            this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, showOrHideSelectListener);\n            this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, showOrHideSelectListener);\n            this.showOrHideSelect();\n        }\n        this.eCheckbox.getInputElement().setAttribute('tabindex', '-1');\n    };\n    CheckboxSelectionComponent.prototype.showOrHideSelect = function () {\n        // if the isRowSelectable() is not provided the row node is selectable by default\n        var selectable = this.rowNode.selectable;\n        // checkboxSelection callback is deemed a legacy solution however we will still consider it's result.\n        // If selectable, then also check the colDef callback. if not selectable, this it short circuits - no need\n        // to call the colDef callback.\n        if (selectable && this.checkboxCallbackExists()) {\n            selectable = this.column.isCellCheckboxSelection(this.rowNode);\n        }\n        // show checkbox if both conditions are true\n        this.setVisible(selectable);\n    };\n    CheckboxSelectionComponent.prototype.checkboxCallbackExists = function () {\n        // column will be missing if groupUseEntireRow=true\n        var colDef = this.column ? this.column.getColDef() : null;\n        return !!colDef && typeof colDef.checkboxSelection === 'function';\n    };\n    __decorate([\n        RefSelector('eCheckbox')\n    ], CheckboxSelectionComponent.prototype, \"eCheckbox\", void 0);\n    __decorate([\n        PostConstruct\n    ], CheckboxSelectionComponent.prototype, \"postConstruct\", null);\n    return CheckboxSelectionComponent;\n}(Component));\nexport { CheckboxSelectionComponent };\n"]},"metadata":{},"sourceType":"module"}