{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { BeanStub } from \"../../context/beanStub\";\nimport { getCtrlForEvent, getTarget, isStopPropagationForAgGrid, isEventSupported } from \"../../utils/event\";\nimport { Autowired, Optional, PostConstruct } from \"../../context/context\";\nimport { RowCtrl } from \"../../rendering/row/rowCtrl\";\nimport { isIOSUserAgent } from \"../../utils/browser\";\nimport { TouchListener } from \"../../widgets/touchListener\";\nimport { isUserSuppressingKeyboardEvent } from \"../../utils/keyboard\";\nimport { Events } from \"../../events\";\nimport { KeyCode } from \"../../constants/keyCode\";\nimport { Constants } from \"../../constants/constants\";\nimport { missingOrEmpty } from \"../../utils/generic\";\nimport { last } from \"../../utils/array\";\nimport { ModuleRegistry } from \"../../modules/moduleRegistry\";\nimport { ModuleNames } from \"../../modules/moduleNames\";\nimport { CellCtrl } from \"../../rendering/cell/cellCtrl\";\n\nvar RowContainerEventsFeature =\n/** @class */\nfunction (_super) {\n  __extends(RowContainerEventsFeature, _super);\n\n  function RowContainerEventsFeature(element) {\n    var _this = _super.call(this) || this;\n\n    _this.element = element;\n    return _this;\n  }\n\n  RowContainerEventsFeature.prototype.postConstruct = function () {\n    this.addMouseListeners();\n    this.mockContextMenuForIPad();\n    this.addKeyboardEvents();\n  };\n\n  RowContainerEventsFeature.prototype.addKeyboardEvents = function () {\n    var _this = this;\n\n    var eventNames = ['keydown', 'keypress'];\n    eventNames.forEach(function (eventName) {\n      var listener = _this.processKeyboardEvent.bind(_this, eventName);\n\n      _this.addManagedListener(_this.element, eventName, listener);\n    });\n  };\n\n  RowContainerEventsFeature.prototype.addMouseListeners = function () {\n    var _this = this;\n\n    var mouseDownEvent = isEventSupported('touchstart') ? 'touchstart' : 'mousedown';\n    var eventNames = ['dblclick', 'contextmenu', 'mouseover', 'mouseout', 'click', mouseDownEvent];\n    eventNames.forEach(function (eventName) {\n      var listener = _this.processMouseEvent.bind(_this, eventName);\n\n      _this.addManagedListener(_this.element, eventName, listener);\n    });\n  };\n\n  RowContainerEventsFeature.prototype.processMouseEvent = function (eventName, mouseEvent) {\n    if (!this.mouseEventService.isEventFromThisGrid(mouseEvent) || isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n\n    var rowComp = this.getRowForEvent(mouseEvent);\n    var cellCtrl = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n\n    if (eventName === \"contextmenu\") {\n      this.handleContextMenuMouseEvent(mouseEvent, null, rowComp, cellCtrl);\n    } else {\n      if (cellCtrl) {\n        cellCtrl.onMouseEvent(eventName, mouseEvent);\n      }\n\n      if (rowComp) {\n        rowComp.onMouseEvent(eventName, mouseEvent);\n      }\n    }\n  };\n\n  RowContainerEventsFeature.prototype.mockContextMenuForIPad = function () {\n    var _this = this; // we do NOT want this when not in iPad, otherwise we will be doing\n\n\n    if (!isIOSUserAgent()) {\n      return;\n    }\n\n    var touchListener = new TouchListener(this.element);\n\n    var longTapListener = function (event) {\n      var rowComp = _this.getRowForEvent(event.touchEvent);\n\n      var cellComp = _this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n\n      _this.handleContextMenuMouseEvent(null, event.touchEvent, rowComp, cellComp);\n    };\n\n    this.addManagedListener(touchListener, TouchListener.EVENT_LONG_TAP, longTapListener);\n    this.addDestroyFunc(function () {\n      return touchListener.destroy();\n    });\n  };\n\n  RowContainerEventsFeature.prototype.getRowForEvent = function (event) {\n    var sourceElement = getTarget(event);\n\n    while (sourceElement) {\n      var rowCon = this.gridOptionsWrapper.getDomData(sourceElement, RowCtrl.DOM_DATA_KEY_ROW_CTRL);\n\n      if (rowCon) {\n        return rowCon;\n      }\n\n      sourceElement = sourceElement.parentElement;\n    }\n\n    return null;\n  };\n\n  RowContainerEventsFeature.prototype.handleContextMenuMouseEvent = function (mouseEvent, touchEvent, rowComp, cellCtrl) {\n    var rowNode = rowComp ? rowComp.getRowNode() : null;\n    var column = cellCtrl ? cellCtrl.getColumn() : null;\n    var value = null;\n\n    if (column) {\n      var event_1 = mouseEvent ? mouseEvent : touchEvent;\n      cellCtrl.dispatchCellContextMenuEvent(event_1);\n      value = this.valueService.getValue(column, rowNode);\n    } // if user clicked on a cell, anchor to that cell, otherwise anchor to the grid panel\n\n\n    var gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    var anchorToElement = cellCtrl ? cellCtrl.getGui() : gridBodyCon.getGridBodyElement();\n\n    if (this.contextMenuFactory) {\n      this.contextMenuFactory.onContextMenu(mouseEvent, touchEvent, rowNode, column, value, anchorToElement);\n    }\n  };\n\n  RowContainerEventsFeature.prototype.processKeyboardEvent = function (eventName, keyboardEvent) {\n    var cellComp = getCtrlForEvent(this.gridOptionsWrapper, keyboardEvent, CellCtrl.DOM_DATA_KEY_CELL_CTRL);\n    var rowComp = getCtrlForEvent(this.gridOptionsWrapper, keyboardEvent, RowCtrl.DOM_DATA_KEY_ROW_CTRL);\n\n    if (keyboardEvent.defaultPrevented) {\n      return;\n    }\n\n    if (cellComp) {\n      this.processCellKeyboardEvent(cellComp, eventName, keyboardEvent);\n    } else if (rowComp && rowComp.isFullWidth()) {\n      this.processFullWidthRowKeyboardEvent(rowComp, eventName, keyboardEvent);\n    }\n  };\n\n  RowContainerEventsFeature.prototype.processCellKeyboardEvent = function (cellCtrl, eventName, keyboardEvent) {\n    var rowNode = cellCtrl.getRowNode();\n    var column = cellCtrl.getColumn();\n    var editing = cellCtrl.isEditing();\n    var gridProcessingAllowed = !isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, keyboardEvent, rowNode, column, editing);\n\n    if (gridProcessingAllowed) {\n      switch (eventName) {\n        case 'keydown':\n          // first see if it's a scroll key, page up / down, home / end etc\n          var wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent); // if not a scroll key, then we pass onto cell\n\n          if (!wasScrollKey) {\n            cellCtrl.onKeyDown(keyboardEvent);\n          } // perform clipboard and undo / redo operations\n\n\n          this.doGridOperations(keyboardEvent, cellCtrl.isEditing());\n          break;\n\n        case 'keypress':\n          cellCtrl.onKeyPress(keyboardEvent);\n          break;\n      }\n    }\n\n    if (eventName === 'keydown') {\n      var cellKeyDownEvent = cellCtrl.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_DOWN);\n      this.eventService.dispatchEvent(cellKeyDownEvent);\n    }\n\n    if (eventName === 'keypress') {\n      var cellKeyPressEvent = cellCtrl.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_PRESS);\n      this.eventService.dispatchEvent(cellKeyPressEvent);\n    }\n  };\n\n  RowContainerEventsFeature.prototype.processFullWidthRowKeyboardEvent = function (rowComp, eventName, keyboardEvent) {\n    var rowNode = rowComp.getRowNode();\n    var focusedCell = this.focusService.getFocusedCell();\n    var column = focusedCell && focusedCell.column;\n    var gridProcessingAllowed = !isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, keyboardEvent, rowNode, column, false);\n\n    if (gridProcessingAllowed) {\n      var key = keyboardEvent.keyCode;\n\n      if (eventName === 'keydown') {\n        switch (key) {\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n            rowComp.onKeyboardNavigate(keyboardEvent);\n            break;\n\n          case KeyCode.TAB:\n            rowComp.onTabKeyDown(keyboardEvent);\n\n          default:\n        }\n      }\n    }\n\n    if (eventName === 'keydown') {\n      var cellKeyDownEvent = rowComp.createRowEvent(Events.EVENT_CELL_KEY_DOWN, keyboardEvent);\n      this.eventService.dispatchEvent(cellKeyDownEvent);\n    }\n\n    if (eventName === 'keypress') {\n      var cellKeyPressEvent = rowComp.createRowEvent(Events.EVENT_CELL_KEY_PRESS, keyboardEvent);\n      this.eventService.dispatchEvent(cellKeyPressEvent);\n    }\n  };\n\n  RowContainerEventsFeature.prototype.doGridOperations = function (keyboardEvent, editing) {\n    // check if ctrl or meta key pressed\n    if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n      return;\n    } // if the cell the event came from is editing, then we do not\n    // want to do the default shortcut keys, otherwise the editor\n    // (eg a text field) would not be able to do the normal cut/copy/paste\n\n\n    if (editing) {\n      return;\n    } // for copy / paste, we don't want to execute when the event\n    // was from a child grid (happens in master detail)\n\n\n    if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) {\n      return;\n    }\n\n    switch (keyboardEvent.which) {\n      case KeyCode.A:\n        return this.onCtrlAndA(keyboardEvent);\n\n      case KeyCode.C:\n        return this.onCtrlAndC(keyboardEvent);\n\n      case KeyCode.V:\n        return this.onCtrlAndV();\n\n      case KeyCode.D:\n        return this.onCtrlAndD(keyboardEvent);\n\n      case KeyCode.Z:\n        return keyboardEvent.shiftKey ? this.undoRedoService.redo() : this.undoRedoService.undo();\n\n      case KeyCode.Y:\n        return this.undoRedoService.redo();\n    }\n  };\n\n  RowContainerEventsFeature.prototype.onCtrlAndA = function (event) {\n    var _a = this,\n        pinnedRowModel = _a.pinnedRowModel,\n        paginationProxy = _a.paginationProxy,\n        rangeService = _a.rangeService;\n\n    var PINNED_BOTTOM = Constants.PINNED_BOTTOM,\n        PINNED_TOP = Constants.PINNED_TOP;\n\n    if (rangeService && paginationProxy.isRowsToRender()) {\n      var _b = [pinnedRowModel.isEmpty(PINNED_TOP), pinnedRowModel.isEmpty(PINNED_BOTTOM)],\n          isEmptyPinnedTop = _b[0],\n          isEmptyPinnedBottom = _b[1];\n      var floatingStart = isEmptyPinnedTop ? null : PINNED_TOP;\n      var floatingEnd = void 0;\n      var rowEnd = void 0;\n\n      if (isEmptyPinnedBottom) {\n        floatingEnd = null;\n        rowEnd = this.paginationProxy.getRowCount() - 1;\n      } else {\n        floatingEnd = PINNED_BOTTOM;\n        rowEnd = pinnedRowModel.getPinnedBottomRowData().length - 1;\n      }\n\n      var allDisplayedColumns = this.columnModel.getAllDisplayedColumns();\n\n      if (missingOrEmpty(allDisplayedColumns)) {\n        return;\n      }\n\n      rangeService.setCellRange({\n        rowStartIndex: 0,\n        rowStartPinned: floatingStart,\n        rowEndIndex: rowEnd,\n        rowEndPinned: floatingEnd,\n        columnStart: allDisplayedColumns[0],\n        columnEnd: last(allDisplayedColumns)\n      });\n    }\n\n    event.preventDefault();\n  };\n\n  RowContainerEventsFeature.prototype.onCtrlAndC = function (event) {\n    if (!this.clipboardService || this.gridOptionsWrapper.isEnableCellTextSelection()) {\n      return;\n    }\n\n    this.clipboardService.copyToClipboard();\n    event.preventDefault();\n  };\n\n  RowContainerEventsFeature.prototype.onCtrlAndV = function () {\n    if (ModuleRegistry.isRegistered(ModuleNames.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n      this.clipboardService.pasteFromClipboard();\n    }\n  };\n\n  RowContainerEventsFeature.prototype.onCtrlAndD = function (event) {\n    if (ModuleRegistry.isRegistered(ModuleNames.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n      this.clipboardService.copyRangeDown();\n    }\n\n    event.preventDefault();\n  };\n\n  __decorate([Autowired('mouseEventService')], RowContainerEventsFeature.prototype, \"mouseEventService\", void 0);\n\n  __decorate([Autowired('valueService')], RowContainerEventsFeature.prototype, \"valueService\", void 0);\n\n  __decorate([Optional('contextMenuFactory')], RowContainerEventsFeature.prototype, \"contextMenuFactory\", void 0);\n\n  __decorate([Autowired('ctrlsService')], RowContainerEventsFeature.prototype, \"ctrlsService\", void 0);\n\n  __decorate([Autowired('navigationService')], RowContainerEventsFeature.prototype, \"navigationService\", void 0);\n\n  __decorate([Autowired('focusService')], RowContainerEventsFeature.prototype, \"focusService\", void 0);\n\n  __decorate([Autowired('undoRedoService')], RowContainerEventsFeature.prototype, \"undoRedoService\", void 0);\n\n  __decorate([Autowired('columnModel')], RowContainerEventsFeature.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('paginationProxy')], RowContainerEventsFeature.prototype, \"paginationProxy\", void 0);\n\n  __decorate([Autowired('pinnedRowModel')], RowContainerEventsFeature.prototype, \"pinnedRowModel\", void 0);\n\n  __decorate([Optional('rangeService')], RowContainerEventsFeature.prototype, \"rangeService\", void 0);\n\n  __decorate([Optional('clipboardService')], RowContainerEventsFeature.prototype, \"clipboardService\", void 0);\n\n  __decorate([PostConstruct], RowContainerEventsFeature.prototype, \"postConstruct\", null);\n\n  return RowContainerEventsFeature;\n}(BeanStub);\n\nexport { RowContainerEventsFeature };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/gridBodyComp/rowContainer/rowContainerEventsFeature.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","BeanStub","getCtrlForEvent","getTarget","isStopPropagationForAgGrid","isEventSupported","Autowired","Optional","PostConstruct","RowCtrl","isIOSUserAgent","TouchListener","isUserSuppressingKeyboardEvent","Events","KeyCode","Constants","missingOrEmpty","last","ModuleRegistry","ModuleNames","CellCtrl","RowContainerEventsFeature","_super","element","_this","call","postConstruct","addMouseListeners","mockContextMenuForIPad","addKeyboardEvents","eventNames","forEach","eventName","listener","processKeyboardEvent","bind","addManagedListener","mouseDownEvent","processMouseEvent","mouseEvent","mouseEventService","isEventFromThisGrid","rowComp","getRowForEvent","cellCtrl","getRenderedCellForEvent","handleContextMenuMouseEvent","onMouseEvent","touchListener","longTapListener","event","touchEvent","cellComp","EVENT_LONG_TAP","addDestroyFunc","destroy","sourceElement","rowCon","gridOptionsWrapper","getDomData","DOM_DATA_KEY_ROW_CTRL","parentElement","rowNode","getRowNode","column","getColumn","value","event_1","dispatchCellContextMenuEvent","valueService","getValue","gridBodyCon","ctrlsService","getGridBodyCtrl","anchorToElement","getGui","getGridBodyElement","contextMenuFactory","onContextMenu","keyboardEvent","DOM_DATA_KEY_CELL_CTRL","defaultPrevented","processCellKeyboardEvent","isFullWidth","processFullWidthRowKeyboardEvent","editing","isEditing","gridProcessingAllowed","wasScrollKey","navigationService","handlePageScrollingKey","onKeyDown","doGridOperations","onKeyPress","cellKeyDownEvent","createEvent","EVENT_CELL_KEY_DOWN","eventService","dispatchEvent","cellKeyPressEvent","EVENT_CELL_KEY_PRESS","focusedCell","focusService","getFocusedCell","keyCode","UP","DOWN","onKeyboardNavigate","TAB","onTabKeyDown","createRowEvent","ctrlKey","metaKey","which","A","onCtrlAndA","C","onCtrlAndC","V","onCtrlAndV","D","onCtrlAndD","Z","shiftKey","undoRedoService","redo","undo","Y","_a","pinnedRowModel","paginationProxy","rangeService","PINNED_BOTTOM","PINNED_TOP","isRowsToRender","_b","isEmpty","isEmptyPinnedTop","isEmptyPinnedBottom","floatingStart","floatingEnd","rowEnd","getRowCount","getPinnedBottomRowData","allDisplayedColumns","columnModel","getAllDisplayedColumns","setCellRange","rowStartIndex","rowStartPinned","rowEndIndex","rowEndPinned","columnStart","columnEnd","preventDefault","clipboardService","isEnableCellTextSelection","copyToClipboard","isRegistered","ClipboardModule","isSuppressClipboardPaste","pasteFromClipboard","copyRangeDown"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { BeanStub } from \"../../context/beanStub\";\nimport { getCtrlForEvent, getTarget, isStopPropagationForAgGrid, isEventSupported } from \"../../utils/event\";\nimport { Autowired, Optional, PostConstruct } from \"../../context/context\";\nimport { RowCtrl } from \"../../rendering/row/rowCtrl\";\nimport { isIOSUserAgent } from \"../../utils/browser\";\nimport { TouchListener } from \"../../widgets/touchListener\";\nimport { isUserSuppressingKeyboardEvent } from \"../../utils/keyboard\";\nimport { Events } from \"../../events\";\nimport { KeyCode } from \"../../constants/keyCode\";\nimport { Constants } from \"../../constants/constants\";\nimport { missingOrEmpty } from \"../../utils/generic\";\nimport { last } from \"../../utils/array\";\nimport { ModuleRegistry } from \"../../modules/moduleRegistry\";\nimport { ModuleNames } from \"../../modules/moduleNames\";\nimport { CellCtrl } from \"../../rendering/cell/cellCtrl\";\nvar RowContainerEventsFeature = /** @class */ (function (_super) {\n    __extends(RowContainerEventsFeature, _super);\n    function RowContainerEventsFeature(element) {\n        var _this = _super.call(this) || this;\n        _this.element = element;\n        return _this;\n    }\n    RowContainerEventsFeature.prototype.postConstruct = function () {\n        this.addMouseListeners();\n        this.mockContextMenuForIPad();\n        this.addKeyboardEvents();\n    };\n    RowContainerEventsFeature.prototype.addKeyboardEvents = function () {\n        var _this = this;\n        var eventNames = ['keydown', 'keypress'];\n        eventNames.forEach(function (eventName) {\n            var listener = _this.processKeyboardEvent.bind(_this, eventName);\n            _this.addManagedListener(_this.element, eventName, listener);\n        });\n    };\n    RowContainerEventsFeature.prototype.addMouseListeners = function () {\n        var _this = this;\n        var mouseDownEvent = isEventSupported('touchstart') ? 'touchstart' : 'mousedown';\n        var eventNames = ['dblclick', 'contextmenu', 'mouseover', 'mouseout', 'click', mouseDownEvent];\n        eventNames.forEach(function (eventName) {\n            var listener = _this.processMouseEvent.bind(_this, eventName);\n            _this.addManagedListener(_this.element, eventName, listener);\n        });\n    };\n    RowContainerEventsFeature.prototype.processMouseEvent = function (eventName, mouseEvent) {\n        if (!this.mouseEventService.isEventFromThisGrid(mouseEvent) ||\n            isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        var rowComp = this.getRowForEvent(mouseEvent);\n        var cellCtrl = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n        if (eventName === \"contextmenu\") {\n            this.handleContextMenuMouseEvent(mouseEvent, null, rowComp, cellCtrl);\n        }\n        else {\n            if (cellCtrl) {\n                cellCtrl.onMouseEvent(eventName, mouseEvent);\n            }\n            if (rowComp) {\n                rowComp.onMouseEvent(eventName, mouseEvent);\n            }\n        }\n    };\n    RowContainerEventsFeature.prototype.mockContextMenuForIPad = function () {\n        var _this = this;\n        // we do NOT want this when not in iPad, otherwise we will be doing\n        if (!isIOSUserAgent()) {\n            return;\n        }\n        var touchListener = new TouchListener(this.element);\n        var longTapListener = function (event) {\n            var rowComp = _this.getRowForEvent(event.touchEvent);\n            var cellComp = _this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n            _this.handleContextMenuMouseEvent(null, event.touchEvent, rowComp, cellComp);\n        };\n        this.addManagedListener(touchListener, TouchListener.EVENT_LONG_TAP, longTapListener);\n        this.addDestroyFunc(function () { return touchListener.destroy(); });\n    };\n    RowContainerEventsFeature.prototype.getRowForEvent = function (event) {\n        var sourceElement = getTarget(event);\n        while (sourceElement) {\n            var rowCon = this.gridOptionsWrapper.getDomData(sourceElement, RowCtrl.DOM_DATA_KEY_ROW_CTRL);\n            if (rowCon) {\n                return rowCon;\n            }\n            sourceElement = sourceElement.parentElement;\n        }\n        return null;\n    };\n    RowContainerEventsFeature.prototype.handleContextMenuMouseEvent = function (mouseEvent, touchEvent, rowComp, cellCtrl) {\n        var rowNode = rowComp ? rowComp.getRowNode() : null;\n        var column = cellCtrl ? cellCtrl.getColumn() : null;\n        var value = null;\n        if (column) {\n            var event_1 = mouseEvent ? mouseEvent : touchEvent;\n            cellCtrl.dispatchCellContextMenuEvent(event_1);\n            value = this.valueService.getValue(column, rowNode);\n        }\n        // if user clicked on a cell, anchor to that cell, otherwise anchor to the grid panel\n        var gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n        var anchorToElement = cellCtrl ? cellCtrl.getGui() : gridBodyCon.getGridBodyElement();\n        if (this.contextMenuFactory) {\n            this.contextMenuFactory.onContextMenu(mouseEvent, touchEvent, rowNode, column, value, anchorToElement);\n        }\n    };\n    RowContainerEventsFeature.prototype.processKeyboardEvent = function (eventName, keyboardEvent) {\n        var cellComp = getCtrlForEvent(this.gridOptionsWrapper, keyboardEvent, CellCtrl.DOM_DATA_KEY_CELL_CTRL);\n        var rowComp = getCtrlForEvent(this.gridOptionsWrapper, keyboardEvent, RowCtrl.DOM_DATA_KEY_ROW_CTRL);\n        if (keyboardEvent.defaultPrevented) {\n            return;\n        }\n        if (cellComp) {\n            this.processCellKeyboardEvent(cellComp, eventName, keyboardEvent);\n        }\n        else if (rowComp && rowComp.isFullWidth()) {\n            this.processFullWidthRowKeyboardEvent(rowComp, eventName, keyboardEvent);\n        }\n    };\n    RowContainerEventsFeature.prototype.processCellKeyboardEvent = function (cellCtrl, eventName, keyboardEvent) {\n        var rowNode = cellCtrl.getRowNode();\n        var column = cellCtrl.getColumn();\n        var editing = cellCtrl.isEditing();\n        var gridProcessingAllowed = !isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, keyboardEvent, rowNode, column, editing);\n        if (gridProcessingAllowed) {\n            switch (eventName) {\n                case 'keydown':\n                    // first see if it's a scroll key, page up / down, home / end etc\n                    var wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent);\n                    // if not a scroll key, then we pass onto cell\n                    if (!wasScrollKey) {\n                        cellCtrl.onKeyDown(keyboardEvent);\n                    }\n                    // perform clipboard and undo / redo operations\n                    this.doGridOperations(keyboardEvent, cellCtrl.isEditing());\n                    break;\n                case 'keypress':\n                    cellCtrl.onKeyPress(keyboardEvent);\n                    break;\n            }\n        }\n        if (eventName === 'keydown') {\n            var cellKeyDownEvent = cellCtrl.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_DOWN);\n            this.eventService.dispatchEvent(cellKeyDownEvent);\n        }\n        if (eventName === 'keypress') {\n            var cellKeyPressEvent = cellCtrl.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_PRESS);\n            this.eventService.dispatchEvent(cellKeyPressEvent);\n        }\n    };\n    RowContainerEventsFeature.prototype.processFullWidthRowKeyboardEvent = function (rowComp, eventName, keyboardEvent) {\n        var rowNode = rowComp.getRowNode();\n        var focusedCell = this.focusService.getFocusedCell();\n        var column = (focusedCell && focusedCell.column);\n        var gridProcessingAllowed = !isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, keyboardEvent, rowNode, column, false);\n        if (gridProcessingAllowed) {\n            var key = keyboardEvent.keyCode;\n            if (eventName === 'keydown') {\n                switch (key) {\n                    case KeyCode.UP:\n                    case KeyCode.DOWN:\n                        rowComp.onKeyboardNavigate(keyboardEvent);\n                        break;\n                    case KeyCode.TAB:\n                        rowComp.onTabKeyDown(keyboardEvent);\n                    default:\n                }\n            }\n        }\n        if (eventName === 'keydown') {\n            var cellKeyDownEvent = rowComp.createRowEvent(Events.EVENT_CELL_KEY_DOWN, keyboardEvent);\n            this.eventService.dispatchEvent(cellKeyDownEvent);\n        }\n        if (eventName === 'keypress') {\n            var cellKeyPressEvent = rowComp.createRowEvent(Events.EVENT_CELL_KEY_PRESS, keyboardEvent);\n            this.eventService.dispatchEvent(cellKeyPressEvent);\n        }\n    };\n    RowContainerEventsFeature.prototype.doGridOperations = function (keyboardEvent, editing) {\n        // check if ctrl or meta key pressed\n        if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n            return;\n        }\n        // if the cell the event came from is editing, then we do not\n        // want to do the default shortcut keys, otherwise the editor\n        // (eg a text field) would not be able to do the normal cut/copy/paste\n        if (editing) {\n            return;\n        }\n        // for copy / paste, we don't want to execute when the event\n        // was from a child grid (happens in master detail)\n        if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) {\n            return;\n        }\n        switch (keyboardEvent.which) {\n            case KeyCode.A:\n                return this.onCtrlAndA(keyboardEvent);\n            case KeyCode.C:\n                return this.onCtrlAndC(keyboardEvent);\n            case KeyCode.V:\n                return this.onCtrlAndV();\n            case KeyCode.D:\n                return this.onCtrlAndD(keyboardEvent);\n            case KeyCode.Z:\n                return keyboardEvent.shiftKey ? this.undoRedoService.redo() : this.undoRedoService.undo();\n            case KeyCode.Y:\n                return this.undoRedoService.redo();\n        }\n    };\n    RowContainerEventsFeature.prototype.onCtrlAndA = function (event) {\n        var _a = this, pinnedRowModel = _a.pinnedRowModel, paginationProxy = _a.paginationProxy, rangeService = _a.rangeService;\n        var PINNED_BOTTOM = Constants.PINNED_BOTTOM, PINNED_TOP = Constants.PINNED_TOP;\n        if (rangeService && paginationProxy.isRowsToRender()) {\n            var _b = [\n                pinnedRowModel.isEmpty(PINNED_TOP),\n                pinnedRowModel.isEmpty(PINNED_BOTTOM)\n            ], isEmptyPinnedTop = _b[0], isEmptyPinnedBottom = _b[1];\n            var floatingStart = isEmptyPinnedTop ? null : PINNED_TOP;\n            var floatingEnd = void 0;\n            var rowEnd = void 0;\n            if (isEmptyPinnedBottom) {\n                floatingEnd = null;\n                rowEnd = this.paginationProxy.getRowCount() - 1;\n            }\n            else {\n                floatingEnd = PINNED_BOTTOM;\n                rowEnd = pinnedRowModel.getPinnedBottomRowData().length - 1;\n            }\n            var allDisplayedColumns = this.columnModel.getAllDisplayedColumns();\n            if (missingOrEmpty(allDisplayedColumns)) {\n                return;\n            }\n            rangeService.setCellRange({\n                rowStartIndex: 0,\n                rowStartPinned: floatingStart,\n                rowEndIndex: rowEnd,\n                rowEndPinned: floatingEnd,\n                columnStart: allDisplayedColumns[0],\n                columnEnd: last(allDisplayedColumns)\n            });\n        }\n        event.preventDefault();\n    };\n    RowContainerEventsFeature.prototype.onCtrlAndC = function (event) {\n        if (!this.clipboardService || this.gridOptionsWrapper.isEnableCellTextSelection()) {\n            return;\n        }\n        this.clipboardService.copyToClipboard();\n        event.preventDefault();\n    };\n    RowContainerEventsFeature.prototype.onCtrlAndV = function () {\n        if (ModuleRegistry.isRegistered(ModuleNames.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n            this.clipboardService.pasteFromClipboard();\n        }\n    };\n    RowContainerEventsFeature.prototype.onCtrlAndD = function (event) {\n        if (ModuleRegistry.isRegistered(ModuleNames.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n            this.clipboardService.copyRangeDown();\n        }\n        event.preventDefault();\n    };\n    __decorate([\n        Autowired('mouseEventService')\n    ], RowContainerEventsFeature.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        Autowired('valueService')\n    ], RowContainerEventsFeature.prototype, \"valueService\", void 0);\n    __decorate([\n        Optional('contextMenuFactory')\n    ], RowContainerEventsFeature.prototype, \"contextMenuFactory\", void 0);\n    __decorate([\n        Autowired('ctrlsService')\n    ], RowContainerEventsFeature.prototype, \"ctrlsService\", void 0);\n    __decorate([\n        Autowired('navigationService')\n    ], RowContainerEventsFeature.prototype, \"navigationService\", void 0);\n    __decorate([\n        Autowired('focusService')\n    ], RowContainerEventsFeature.prototype, \"focusService\", void 0);\n    __decorate([\n        Autowired('undoRedoService')\n    ], RowContainerEventsFeature.prototype, \"undoRedoService\", void 0);\n    __decorate([\n        Autowired('columnModel')\n    ], RowContainerEventsFeature.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('paginationProxy')\n    ], RowContainerEventsFeature.prototype, \"paginationProxy\", void 0);\n    __decorate([\n        Autowired('pinnedRowModel')\n    ], RowContainerEventsFeature.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        Optional('rangeService')\n    ], RowContainerEventsFeature.prototype, \"rangeService\", void 0);\n    __decorate([\n        Optional('clipboardService')\n    ], RowContainerEventsFeature.prototype, \"clipboardService\", void 0);\n    __decorate([\n        PostConstruct\n    ], RowContainerEventsFeature.prototype, \"postConstruct\", null);\n    return RowContainerEventsFeature;\n}(BeanStub));\nexport { RowContainerEventsFeature };\n"]},"metadata":{},"sourceType":"module"}