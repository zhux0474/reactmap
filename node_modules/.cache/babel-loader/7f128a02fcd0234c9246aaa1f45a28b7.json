{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { AgPromise, _ } from '../utils';\nimport { Autowired, Bean, PostConstruct, PreDestroy } from '../context/context';\nimport { Events } from '../events';\nimport { ModuleNames } from '../modules/moduleNames';\nimport { ModuleRegistry } from '../modules/moduleRegistry';\nimport { forEach, some, every } from '../utils/array';\nimport { BeanStub } from '../context/beanStub';\nimport { convertToSet } from '../utils/set';\nimport { exists } from '../utils/generic';\nimport { mergeDeep, cloneObject } from '../utils/object';\nimport { loadTemplate } from '../utils/dom';\n\nvar FilterManager =\n/** @class */\nfunction (_super) {\n  __extends(FilterManager, _super);\n\n  function FilterManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.allAdvancedFilters = new Map();\n    _this.activeAdvancedFilters = [];\n    _this.quickFilter = null;\n    _this.quickFilterParts = null; // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n    // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n    // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n    // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n    // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n\n    _this.processingFilterChange = false;\n    return _this;\n  }\n\n  FilterManager_1 = FilterManager;\n\n  FilterManager.prototype.init = function () {\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_CHANGED, this.onNewRowsLoaded.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n    this.quickFilter = this.parseQuickFilter(this.gridOptionsWrapper.getQuickFilterText());\n    this.setQuickFilterParts();\n    this.allowShowChangeAfterFilter = this.gridOptionsWrapper.isAllowShowChangeAfterFilter();\n  };\n\n  FilterManager.prototype.setQuickFilterParts = function () {\n    this.quickFilterParts = this.quickFilter ? this.quickFilter.split(' ') : null;\n  };\n\n  FilterManager.prototype.setFilterModel = function (model) {\n    var _this = this;\n\n    var allPromises = [];\n    var previousModel = this.getFilterModel();\n\n    if (model) {\n      // mark the filters as we set them, so any active filters left over we stop\n      var modelKeys_1 = convertToSet(Object.keys(model));\n      this.allAdvancedFilters.forEach(function (filterWrapper, colId) {\n        var newModel = model[colId];\n        allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, newModel));\n        modelKeys_1.delete(colId);\n      }); // at this point, processedFields contains data for which we don't have a filter working yet\n\n      modelKeys_1.forEach(function (colId) {\n        var column = _this.columnModel.getPrimaryColumn(colId);\n\n        if (!column) {\n          console.warn('AG-Grid: setFilterModel() - no column found for colId: ' + colId);\n          return;\n        }\n\n        if (!column.isFilterAllowed()) {\n          console.warn('AG-Grid: setFilterModel() - unable to fully apply model, filtering disabled for colId: ' + colId);\n          return;\n        }\n\n        var filterWrapper = _this.getOrCreateFilterWrapper(column, 'NO_UI');\n\n        allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]));\n      });\n    } else {\n      this.allAdvancedFilters.forEach(function (filterWrapper) {\n        allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, null));\n      });\n    }\n\n    AgPromise.all(allPromises).then(function () {\n      var currentModel = _this.getFilterModel();\n\n      var columns = [];\n\n      _this.allAdvancedFilters.forEach(function (filterWrapper, colId) {\n        var before = previousModel ? previousModel[colId] : null;\n        var after = currentModel ? currentModel[colId] : null;\n\n        if (!_.jsonEquals(before, after)) {\n          columns.push(filterWrapper.column);\n        }\n      });\n\n      if (columns.length > 0) {\n        _this.onFilterChanged({\n          columns: columns\n        });\n      }\n    });\n  };\n\n  FilterManager.prototype.setModelOnFilterWrapper = function (filterPromise, newModel) {\n    return new AgPromise(function (resolve) {\n      filterPromise.then(function (filter) {\n        if (typeof filter.setModel !== 'function') {\n          console.warn('Warning ag-grid - filter missing setModel method, which is needed for setFilterModel');\n          resolve();\n        }\n\n        (filter.setModel(newModel) || AgPromise.resolve()).then(function () {\n          return resolve();\n        });\n      });\n    });\n  };\n\n  FilterManager.prototype.getFilterModel = function () {\n    var result = {};\n    this.allAdvancedFilters.forEach(function (filterWrapper, key) {\n      // because user can provide filters, we provide useful error checking and messages\n      var filterPromise = filterWrapper.filterPromise;\n      var filter = filterPromise.resolveNow(null, function (promiseFilter) {\n        return promiseFilter;\n      });\n\n      if (filter == null) {\n        return null;\n      }\n\n      if (typeof filter.getModel !== 'function') {\n        console.warn('Warning ag-grid - filter API missing getModel method, which is needed for getFilterModel');\n        return;\n      }\n\n      var model = filter.getModel();\n\n      if (exists(model)) {\n        result[key] = model;\n      }\n    });\n    return result;\n  }; // returns true if any advanced filter (ie not quick filter) active\n\n\n  FilterManager.prototype.isAdvancedFilterPresent = function () {\n    return this.activeAdvancedFilters.length > 0;\n  }; // called by:\n  // 1) onFilterChanged()\n  // 2) onNewRowsLoaded()\n\n\n  FilterManager.prototype.updateActiveFilters = function () {\n    var _this = this;\n\n    this.activeAdvancedFilters.length = 0;\n\n    var isFilterActive = function (filter) {\n      if (!filter) {\n        return false;\n      } // this never happens, including to avoid compile error\n\n\n      if (!filter.isFilterActive) {\n        console.warn('AG Grid: Filter is missing isFilterActive() method');\n        return false;\n      }\n\n      return filter.isFilterActive();\n    };\n\n    this.allAdvancedFilters.forEach(function (filterWrapper) {\n      if (filterWrapper.filterPromise.resolveNow(false, isFilterActive)) {\n        var resolvedPromise = filterWrapper.filterPromise.resolveNow(null, function (filter) {\n          return filter;\n        });\n\n        _this.activeAdvancedFilters.push(resolvedPromise);\n      }\n    });\n  };\n\n  FilterManager.prototype.updateFilterFlagInColumns = function (source, additionalEventAttributes) {\n    this.allAdvancedFilters.forEach(function (filterWrapper) {\n      var isFilterActive = filterWrapper.filterPromise.resolveNow(false, function (filter) {\n        return filter.isFilterActive();\n      });\n      filterWrapper.column.setFilterActive(isFilterActive, source, additionalEventAttributes);\n    });\n  };\n\n  FilterManager.prototype.isAnyFilterPresent = function () {\n    return this.isQuickFilterPresent() || this.isAdvancedFilterPresent() || this.gridOptionsWrapper.isExternalFilterPresent();\n  };\n\n  FilterManager.prototype.doAdvancedFiltersPass = function (node, filterToSkip) {\n    var data = node.data;\n\n    for (var i = 0; i < this.activeAdvancedFilters.length; i++) {\n      var filter = this.activeAdvancedFilters[i];\n\n      if (filter == null || filter === filterToSkip) {\n        continue;\n      }\n\n      if (typeof filter.doesFilterPass !== 'function') {\n        // because users can do custom filters, give nice error message\n        throw new Error('Filter is missing method doesFilterPass');\n      }\n\n      if (!filter.doesFilterPass({\n        node: node,\n        data: data\n      })) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  FilterManager.prototype.parseQuickFilter = function (newFilter) {\n    if (!exists(newFilter)) {\n      return null;\n    }\n\n    if (!this.gridOptionsWrapper.isRowModelDefault()) {\n      console.warn('ag-grid: quick filtering only works with the Client-Side Row Model');\n      return null;\n    }\n\n    return newFilter.toUpperCase();\n  };\n\n  FilterManager.prototype.setQuickFilter = function (newFilter) {\n    var parsedFilter = this.parseQuickFilter(newFilter);\n\n    if (this.quickFilter !== parsedFilter) {\n      this.quickFilter = parsedFilter;\n      this.setQuickFilterParts();\n      this.onFilterChanged();\n    }\n  };\n\n  FilterManager.prototype.onFilterChanged = function (params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    var filterInstance = params.filterInstance,\n        additionalEventAttributes = params.additionalEventAttributes,\n        columns = params.columns;\n    this.updateActiveFilters();\n    this.updateFilterFlagInColumns('filterChanged', additionalEventAttributes);\n    this.allAdvancedFilters.forEach(function (filterWrapper) {\n      if (!filterWrapper.filterPromise) {\n        return;\n      }\n\n      filterWrapper.filterPromise.then(function (filter) {\n        if (filter && filter !== filterInstance && filter.onAnyFilterChanged) {\n          filter.onAnyFilterChanged();\n        }\n      });\n    });\n    var filterChangedEvent = {\n      type: Events.EVENT_FILTER_CHANGED,\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      columns: columns || []\n    };\n\n    if (additionalEventAttributes) {\n      mergeDeep(filterChangedEvent, additionalEventAttributes);\n    } // because internal events are not async in ag-grid, when the dispatchEvent\n    // method comes back, we know all listeners have finished executing.\n\n\n    this.processingFilterChange = true;\n    this.eventService.dispatchEvent(filterChangedEvent);\n    this.processingFilterChange = false;\n  };\n\n  FilterManager.prototype.isSuppressFlashingCellsBecauseFiltering = function () {\n    // if user has elected to always flash cell changes, then always return false, otherwise we suppress flashing\n    // changes when filtering\n    return !this.allowShowChangeAfterFilter && this.processingFilterChange;\n  };\n\n  FilterManager.prototype.isQuickFilterPresent = function () {\n    return this.quickFilter !== null;\n  };\n\n  FilterManager.prototype.doesRowPassOtherFilters = function (filterToSkip, node) {\n    return this.doesRowPassFilter({\n      rowNode: node,\n      filterInstanceToSkip: filterToSkip\n    });\n  };\n\n  FilterManager.prototype.doesRowPassQuickFilterNoCache = function (node, filterPart) {\n    var _this = this;\n\n    var columns = this.columnModel.getAllColumnsForQuickFilter();\n    return some(columns, function (column) {\n      var part = _this.getQuickFilterTextForColumn(column, node);\n\n      return exists(part) && part.indexOf(filterPart) >= 0;\n    });\n  };\n\n  FilterManager.prototype.doesRowPassQuickFilterCache = function (node, filterPart) {\n    if (!node.quickFilterAggregateText) {\n      this.aggregateRowForQuickFilter(node);\n    }\n\n    return node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n  };\n\n  FilterManager.prototype.doesRowPassQuickFilter = function (node) {\n    var _this = this;\n\n    var usingCache = this.gridOptionsWrapper.isCacheQuickFilter(); // each part must pass, if any fails, then the whole filter fails\n\n    return every(this.quickFilterParts, function (part) {\n      return usingCache ? _this.doesRowPassQuickFilterCache(node, part) : _this.doesRowPassQuickFilterNoCache(node, part);\n    });\n  };\n\n  FilterManager.prototype.doesRowPassFilter = function (params) {\n    // the row must pass ALL of the filters, so if any of them fail,\n    // we return true. that means if a row passes the quick filter,\n    // but fails the column filter, it fails overall\n    // first up, check quick filter\n    if (this.isQuickFilterPresent() && !this.doesRowPassQuickFilter(params.rowNode)) {\n      return false;\n    } // secondly, give the client a chance to reject this row\n\n\n    if (this.gridOptionsWrapper.isExternalFilterPresent() && !this.gridOptionsWrapper.doesExternalFilterPass(params.rowNode)) {\n      return false;\n    } // lastly, check our internal advanced filter\n\n\n    if (this.isAdvancedFilterPresent() && !this.doAdvancedFiltersPass(params.rowNode, params.filterInstanceToSkip)) {\n      return false;\n    } // got this far, all filters pass\n\n\n    return true;\n  };\n\n  FilterManager.prototype.getQuickFilterTextForColumn = function (column, node) {\n    var value = this.valueService.getValue(column, node, true);\n    var colDef = column.getColDef();\n\n    if (colDef.getQuickFilterText) {\n      var params = {\n        value: value,\n        node: node,\n        data: node.data,\n        column: column,\n        colDef: colDef,\n        context: this.gridOptionsWrapper.getContext()\n      };\n      value = colDef.getQuickFilterText(params);\n    }\n\n    return exists(value) ? value.toString().toUpperCase() : null;\n  };\n\n  FilterManager.prototype.aggregateRowForQuickFilter = function (node) {\n    var _this = this;\n\n    var stringParts = [];\n    var columns = this.columnModel.getAllColumnsForQuickFilter();\n    forEach(columns, function (column) {\n      var part = _this.getQuickFilterTextForColumn(column, node);\n\n      if (exists(part)) {\n        stringParts.push(part);\n      }\n    });\n    node.quickFilterAggregateText = stringParts.join(FilterManager_1.QUICK_FILTER_SEPARATOR);\n  };\n\n  FilterManager.prototype.onNewRowsLoaded = function (source) {\n    this.allAdvancedFilters.forEach(function (filterWrapper) {\n      filterWrapper.filterPromise.then(function (filter) {\n        if (filter.onNewRowsLoaded) {\n          filter.onNewRowsLoaded();\n        }\n      });\n    });\n    this.updateFilterFlagInColumns(source);\n    this.updateActiveFilters();\n  };\n\n  FilterManager.prototype.createValueGetter = function (column) {\n    var _this = this;\n\n    return function (node) {\n      return _this.valueService.getValue(column, node, true);\n    };\n  };\n\n  FilterManager.prototype.getFilterComponent = function (column, source, createIfDoesNotExist) {\n    if (createIfDoesNotExist === void 0) {\n      createIfDoesNotExist = true;\n    }\n\n    if (createIfDoesNotExist) {\n      return this.getOrCreateFilterWrapper(column, source).filterPromise;\n    }\n\n    var filterWrapper = this.cachedFilter(column);\n    return filterWrapper ? filterWrapper.filterPromise : null;\n  };\n\n  FilterManager.prototype.isFilterActive = function (column) {\n    var filterWrapper = this.cachedFilter(column);\n    return !!filterWrapper && filterWrapper.filterPromise.resolveNow(false, function (filter) {\n      return filter.isFilterActive();\n    });\n  };\n\n  FilterManager.prototype.getOrCreateFilterWrapper = function (column, source) {\n    var filterWrapper = this.cachedFilter(column);\n\n    if (!filterWrapper) {\n      filterWrapper = this.createFilterWrapper(column, source);\n      this.allAdvancedFilters.set(column.getColId(), filterWrapper);\n    } else if (source !== 'NO_UI') {\n      this.putIntoGui(filterWrapper, source);\n    }\n\n    return filterWrapper;\n  };\n\n  FilterManager.prototype.cachedFilter = function (column) {\n    return this.allAdvancedFilters.get(column.getColId());\n  };\n\n  FilterManager.prototype.createFilterInstance = function (column, $scope) {\n    var _this = this;\n\n    var defaultFilter = ModuleRegistry.isRegistered(ModuleNames.SetFilterModule) ? 'agSetColumnFilter' : 'agTextColumnFilter';\n    var colDef = column.getColDef();\n    var filterInstance;\n\n    var params = __assign(__assign({}, this.createFilterParams(column, colDef, $scope)), {\n      filterModifiedCallback: function () {\n        var event = {\n          type: Events.EVENT_FILTER_MODIFIED,\n          api: _this.gridApi,\n          columnApi: _this.columnApi,\n          column: column,\n          filterInstance: filterInstance\n        };\n\n        _this.eventService.dispatchEvent(event);\n      },\n      filterChangedCallback: function (additionalEventAttributes) {\n        return _this.onFilterChanged({\n          filterInstance: filterInstance,\n          additionalEventAttributes: additionalEventAttributes,\n          columns: [column]\n        });\n      },\n      doesRowPassOtherFilter: function (node) {\n        return _this.doesRowPassOtherFilters(filterInstance, node);\n      }\n    });\n\n    var compDetails = this.userComponentFactory.getFilterDetails(colDef, params, defaultFilter);\n\n    if (!compDetails) {\n      return null;\n    }\n\n    var componentPromise = compDetails.newAgStackInstance();\n\n    if (componentPromise) {\n      componentPromise.then(function (r) {\n        return filterInstance = r;\n      });\n    }\n\n    return componentPromise;\n  };\n\n  FilterManager.prototype.createFilterParams = function (column, colDef, $scope) {\n    if ($scope === void 0) {\n      $scope = null;\n    }\n\n    var params = {\n      api: this.gridOptionsWrapper.getApi(),\n      columnApi: this.gridOptionsWrapper.getColumnApi(),\n      column: column,\n      colDef: cloneObject(colDef),\n      rowModel: this.rowModel,\n      filterChangedCallback: function () {},\n      filterModifiedCallback: function () {},\n      valueGetter: this.createValueGetter(column),\n      context: this.gridOptionsWrapper.getContext(),\n      doesRowPassOtherFilter: function () {\n        return true;\n      }\n    }; // hack in scope if using AngularJS\n\n    if ($scope) {\n      params.$scope = $scope;\n    }\n\n    return params;\n  };\n\n  FilterManager.prototype.createFilterWrapper = function (column, source) {\n    var filterWrapper = {\n      column: column,\n      filterPromise: null,\n      scope: null,\n      compiledElement: null,\n      guiPromise: AgPromise.resolve(null)\n    };\n    filterWrapper.scope = this.gridOptionsWrapper.isAngularCompileFilters() ? this.$scope.$new() : null;\n    filterWrapper.filterPromise = this.createFilterInstance(column, filterWrapper.scope);\n\n    if (filterWrapper.filterPromise) {\n      this.putIntoGui(filterWrapper, source);\n    }\n\n    return filterWrapper;\n  };\n\n  FilterManager.prototype.putIntoGui = function (filterWrapper, source) {\n    var _this = this;\n\n    var eFilterGui = document.createElement('div');\n    eFilterGui.className = 'ag-filter';\n    filterWrapper.guiPromise = new AgPromise(function (resolve) {\n      filterWrapper.filterPromise.then(function (filter) {\n        var guiFromFilter = filter.getGui();\n\n        if (!exists(guiFromFilter)) {\n          console.warn(\"getGui method from filter returned \" + guiFromFilter + \", it should be a DOM element or an HTML template string.\");\n        } // for backwards compatibility with Angular 1 - we\n        // used to allow providing back HTML from getGui().\n        // once we move away from supporting Angular 1\n        // directly, we can change this.\n\n\n        if (typeof guiFromFilter === 'string') {\n          guiFromFilter = loadTemplate(guiFromFilter);\n        }\n\n        eFilterGui.appendChild(guiFromFilter);\n\n        if (filterWrapper.scope) {\n          var compiledElement = _this.$compile(eFilterGui)(filterWrapper.scope);\n\n          filterWrapper.compiledElement = compiledElement;\n          window.setTimeout(function () {\n            return filterWrapper.scope.$apply();\n          }, 0);\n        }\n\n        resolve(eFilterGui);\n\n        _this.eventService.dispatchEvent({\n          type: Events.EVENT_FILTER_OPENED,\n          column: filterWrapper.column,\n          source: source,\n          eGui: eFilterGui,\n          api: _this.gridApi,\n          columnApi: _this.columnApi\n        });\n      });\n    });\n  };\n\n  FilterManager.prototype.onNewColumnsLoaded = function () {\n    var _this = this;\n\n    var atLeastOneFilterGone = false;\n    var columns = [];\n    this.allAdvancedFilters.forEach(function (filterWrapper) {\n      var oldColumn = !_this.columnModel.getPrimaryColumn(filterWrapper.column);\n\n      if (oldColumn) {\n        atLeastOneFilterGone = true;\n        columns.push(filterWrapper.column);\n\n        _this.disposeFilterWrapper(filterWrapper, 'filterDestroyed');\n      }\n    });\n\n    if (atLeastOneFilterGone) {\n      this.onFilterChanged({\n        columns: columns\n      });\n    }\n  }; // destroys the filter, so it not longer takes part\n\n\n  FilterManager.prototype.destroyFilter = function (column, source) {\n    if (source === void 0) {\n      source = 'api';\n    }\n\n    var filterWrapper = this.allAdvancedFilters.get(column.getColId());\n\n    if (filterWrapper) {\n      this.disposeFilterWrapper(filterWrapper, source);\n      this.onFilterChanged({\n        columns: [column]\n      });\n    }\n  };\n\n  FilterManager.prototype.disposeFilterWrapper = function (filterWrapper, source) {\n    var _this = this;\n\n    filterWrapper.filterPromise.then(function (filter) {\n      (filter.setModel(null) || AgPromise.resolve()).then(function () {\n        _this.getContext().destroyBean(filter);\n\n        filterWrapper.column.setFilterActive(false, source);\n\n        if (filterWrapper.scope) {\n          if (filterWrapper.compiledElement) {\n            filterWrapper.compiledElement.remove();\n          }\n\n          filterWrapper.scope.$destroy();\n        }\n\n        _this.allAdvancedFilters.delete(filterWrapper.column.getColId());\n      });\n    });\n  };\n\n  FilterManager.prototype.destroy = function () {\n    var _this = this;\n\n    _super.prototype.destroy.call(this);\n\n    this.allAdvancedFilters.forEach(function (filterWrapper) {\n      return _this.disposeFilterWrapper(filterWrapper, 'filterDestroyed');\n    });\n  };\n\n  var FilterManager_1;\n  FilterManager.QUICK_FILTER_SEPARATOR = '\\n';\n\n  __decorate([Autowired('$compile')], FilterManager.prototype, \"$compile\", void 0);\n\n  __decorate([Autowired('$scope')], FilterManager.prototype, \"$scope\", void 0);\n\n  __decorate([Autowired('valueService')], FilterManager.prototype, \"valueService\", void 0);\n\n  __decorate([Autowired('columnModel')], FilterManager.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('rowModel')], FilterManager.prototype, \"rowModel\", void 0);\n\n  __decorate([Autowired('columnApi')], FilterManager.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], FilterManager.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('userComponentFactory')], FilterManager.prototype, \"userComponentFactory\", void 0);\n\n  __decorate([PostConstruct], FilterManager.prototype, \"init\", null);\n\n  __decorate([PreDestroy], FilterManager.prototype, \"destroy\", null);\n\n  FilterManager = FilterManager_1 = __decorate([Bean('filterManager')], FilterManager);\n  return FilterManager;\n}(BeanStub);\n\nexport { FilterManager };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/filter/filterManager.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","AgPromise","_","Autowired","Bean","PostConstruct","PreDestroy","Events","ModuleNames","ModuleRegistry","forEach","some","every","BeanStub","convertToSet","exists","mergeDeep","cloneObject","loadTemplate","FilterManager","_super","_this","allAdvancedFilters","Map","activeAdvancedFilters","quickFilter","quickFilterParts","processingFilterChange","FilterManager_1","init","addManagedListener","eventService","EVENT_ROW_DATA_CHANGED","onNewRowsLoaded","bind","EVENT_NEW_COLUMNS_LOADED","onNewColumnsLoaded","parseQuickFilter","gridOptionsWrapper","getQuickFilterText","setQuickFilterParts","allowShowChangeAfterFilter","isAllowShowChangeAfterFilter","split","setFilterModel","model","allPromises","previousModel","getFilterModel","modelKeys_1","keys","filterWrapper","colId","newModel","push","setModelOnFilterWrapper","filterPromise","delete","column","columnModel","getPrimaryColumn","console","warn","isFilterAllowed","getOrCreateFilterWrapper","all","then","currentModel","columns","before","after","jsonEquals","onFilterChanged","resolve","filter","setModel","result","resolveNow","promiseFilter","getModel","isAdvancedFilterPresent","updateActiveFilters","isFilterActive","resolvedPromise","updateFilterFlagInColumns","source","additionalEventAttributes","setFilterActive","isAnyFilterPresent","isQuickFilterPresent","isExternalFilterPresent","doAdvancedFiltersPass","node","filterToSkip","data","doesFilterPass","Error","newFilter","isRowModelDefault","toUpperCase","setQuickFilter","parsedFilter","params","filterInstance","onAnyFilterChanged","filterChangedEvent","type","EVENT_FILTER_CHANGED","api","gridApi","columnApi","dispatchEvent","isSuppressFlashingCellsBecauseFiltering","doesRowPassOtherFilters","doesRowPassFilter","rowNode","filterInstanceToSkip","doesRowPassQuickFilterNoCache","filterPart","getAllColumnsForQuickFilter","part","getQuickFilterTextForColumn","indexOf","doesRowPassQuickFilterCache","quickFilterAggregateText","aggregateRowForQuickFilter","doesRowPassQuickFilter","usingCache","isCacheQuickFilter","doesExternalFilterPass","value","valueService","getValue","colDef","getColDef","context","getContext","toString","stringParts","join","QUICK_FILTER_SEPARATOR","createValueGetter","getFilterComponent","createIfDoesNotExist","cachedFilter","createFilterWrapper","set","getColId","putIntoGui","get","createFilterInstance","$scope","defaultFilter","isRegistered","SetFilterModule","createFilterParams","filterModifiedCallback","event","EVENT_FILTER_MODIFIED","filterChangedCallback","doesRowPassOtherFilter","compDetails","userComponentFactory","getFilterDetails","componentPromise","newAgStackInstance","getApi","getColumnApi","rowModel","valueGetter","scope","compiledElement","guiPromise","isAngularCompileFilters","$new","eFilterGui","document","createElement","className","guiFromFilter","getGui","appendChild","$compile","window","setTimeout","$apply","EVENT_FILTER_OPENED","eGui","atLeastOneFilterGone","oldColumn","disposeFilterWrapper","destroyFilter","destroyBean","remove","$destroy","destroy"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AgPromise, _ } from '../utils';\nimport { Autowired, Bean, PostConstruct, PreDestroy } from '../context/context';\nimport { Events } from '../events';\nimport { ModuleNames } from '../modules/moduleNames';\nimport { ModuleRegistry } from '../modules/moduleRegistry';\nimport { forEach, some, every } from '../utils/array';\nimport { BeanStub } from '../context/beanStub';\nimport { convertToSet } from '../utils/set';\nimport { exists } from '../utils/generic';\nimport { mergeDeep, cloneObject } from '../utils/object';\nimport { loadTemplate } from '../utils/dom';\nvar FilterManager = /** @class */ (function (_super) {\n    __extends(FilterManager, _super);\n    function FilterManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allAdvancedFilters = new Map();\n        _this.activeAdvancedFilters = [];\n        _this.quickFilter = null;\n        _this.quickFilterParts = null;\n        // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n        // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n        // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n        // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n        // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n        _this.processingFilterChange = false;\n        return _this;\n    }\n    FilterManager_1 = FilterManager;\n    FilterManager.prototype.init = function () {\n        this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_CHANGED, this.onNewRowsLoaded.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n        this.quickFilter = this.parseQuickFilter(this.gridOptionsWrapper.getQuickFilterText());\n        this.setQuickFilterParts();\n        this.allowShowChangeAfterFilter = this.gridOptionsWrapper.isAllowShowChangeAfterFilter();\n    };\n    FilterManager.prototype.setQuickFilterParts = function () {\n        this.quickFilterParts = this.quickFilter ? this.quickFilter.split(' ') : null;\n    };\n    FilterManager.prototype.setFilterModel = function (model) {\n        var _this = this;\n        var allPromises = [];\n        var previousModel = this.getFilterModel();\n        if (model) {\n            // mark the filters as we set them, so any active filters left over we stop\n            var modelKeys_1 = convertToSet(Object.keys(model));\n            this.allAdvancedFilters.forEach(function (filterWrapper, colId) {\n                var newModel = model[colId];\n                allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, newModel));\n                modelKeys_1.delete(colId);\n            });\n            // at this point, processedFields contains data for which we don't have a filter working yet\n            modelKeys_1.forEach(function (colId) {\n                var column = _this.columnModel.getPrimaryColumn(colId);\n                if (!column) {\n                    console.warn('AG-Grid: setFilterModel() - no column found for colId: ' + colId);\n                    return;\n                }\n                if (!column.isFilterAllowed()) {\n                    console.warn('AG-Grid: setFilterModel() - unable to fully apply model, filtering disabled for colId: ' + colId);\n                    return;\n                }\n                var filterWrapper = _this.getOrCreateFilterWrapper(column, 'NO_UI');\n                allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]));\n            });\n        }\n        else {\n            this.allAdvancedFilters.forEach(function (filterWrapper) {\n                allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, null));\n            });\n        }\n        AgPromise.all(allPromises).then(function () {\n            var currentModel = _this.getFilterModel();\n            var columns = [];\n            _this.allAdvancedFilters.forEach(function (filterWrapper, colId) {\n                var before = previousModel ? previousModel[colId] : null;\n                var after = currentModel ? currentModel[colId] : null;\n                if (!_.jsonEquals(before, after)) {\n                    columns.push(filterWrapper.column);\n                }\n            });\n            if (columns.length > 0) {\n                _this.onFilterChanged({ columns: columns });\n            }\n        });\n    };\n    FilterManager.prototype.setModelOnFilterWrapper = function (filterPromise, newModel) {\n        return new AgPromise(function (resolve) {\n            filterPromise.then(function (filter) {\n                if (typeof filter.setModel !== 'function') {\n                    console.warn('Warning ag-grid - filter missing setModel method, which is needed for setFilterModel');\n                    resolve();\n                }\n                (filter.setModel(newModel) || AgPromise.resolve()).then(function () { return resolve(); });\n            });\n        });\n    };\n    FilterManager.prototype.getFilterModel = function () {\n        var result = {};\n        this.allAdvancedFilters.forEach(function (filterWrapper, key) {\n            // because user can provide filters, we provide useful error checking and messages\n            var filterPromise = filterWrapper.filterPromise;\n            var filter = filterPromise.resolveNow(null, function (promiseFilter) { return promiseFilter; });\n            if (filter == null) {\n                return null;\n            }\n            if (typeof filter.getModel !== 'function') {\n                console.warn('Warning ag-grid - filter API missing getModel method, which is needed for getFilterModel');\n                return;\n            }\n            var model = filter.getModel();\n            if (exists(model)) {\n                result[key] = model;\n            }\n        });\n        return result;\n    };\n    // returns true if any advanced filter (ie not quick filter) active\n    FilterManager.prototype.isAdvancedFilterPresent = function () {\n        return this.activeAdvancedFilters.length > 0;\n    };\n    // called by:\n    // 1) onFilterChanged()\n    // 2) onNewRowsLoaded()\n    FilterManager.prototype.updateActiveFilters = function () {\n        var _this = this;\n        this.activeAdvancedFilters.length = 0;\n        var isFilterActive = function (filter) {\n            if (!filter) {\n                return false;\n            } // this never happens, including to avoid compile error\n            if (!filter.isFilterActive) {\n                console.warn('AG Grid: Filter is missing isFilterActive() method');\n                return false;\n            }\n            return filter.isFilterActive();\n        };\n        this.allAdvancedFilters.forEach(function (filterWrapper) {\n            if (filterWrapper.filterPromise.resolveNow(false, isFilterActive)) {\n                var resolvedPromise = filterWrapper.filterPromise.resolveNow(null, function (filter) { return filter; });\n                _this.activeAdvancedFilters.push(resolvedPromise);\n            }\n        });\n    };\n    FilterManager.prototype.updateFilterFlagInColumns = function (source, additionalEventAttributes) {\n        this.allAdvancedFilters.forEach(function (filterWrapper) {\n            var isFilterActive = filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); });\n            filterWrapper.column.setFilterActive(isFilterActive, source, additionalEventAttributes);\n        });\n    };\n    FilterManager.prototype.isAnyFilterPresent = function () {\n        return this.isQuickFilterPresent() || this.isAdvancedFilterPresent() || this.gridOptionsWrapper.isExternalFilterPresent();\n    };\n    FilterManager.prototype.doAdvancedFiltersPass = function (node, filterToSkip) {\n        var data = node.data;\n        for (var i = 0; i < this.activeAdvancedFilters.length; i++) {\n            var filter = this.activeAdvancedFilters[i];\n            if (filter == null || filter === filterToSkip) {\n                continue;\n            }\n            if (typeof filter.doesFilterPass !== 'function') {\n                // because users can do custom filters, give nice error message\n                throw new Error('Filter is missing method doesFilterPass');\n            }\n            if (!filter.doesFilterPass({ node: node, data: data })) {\n                return false;\n            }\n        }\n        return true;\n    };\n    FilterManager.prototype.parseQuickFilter = function (newFilter) {\n        if (!exists(newFilter)) {\n            return null;\n        }\n        if (!this.gridOptionsWrapper.isRowModelDefault()) {\n            console.warn('ag-grid: quick filtering only works with the Client-Side Row Model');\n            return null;\n        }\n        return newFilter.toUpperCase();\n    };\n    FilterManager.prototype.setQuickFilter = function (newFilter) {\n        var parsedFilter = this.parseQuickFilter(newFilter);\n        if (this.quickFilter !== parsedFilter) {\n            this.quickFilter = parsedFilter;\n            this.setQuickFilterParts();\n            this.onFilterChanged();\n        }\n    };\n    FilterManager.prototype.onFilterChanged = function (params) {\n        if (params === void 0) { params = {}; }\n        var filterInstance = params.filterInstance, additionalEventAttributes = params.additionalEventAttributes, columns = params.columns;\n        this.updateActiveFilters();\n        this.updateFilterFlagInColumns('filterChanged', additionalEventAttributes);\n        this.allAdvancedFilters.forEach(function (filterWrapper) {\n            if (!filterWrapper.filterPromise) {\n                return;\n            }\n            filterWrapper.filterPromise.then(function (filter) {\n                if (filter && filter !== filterInstance && filter.onAnyFilterChanged) {\n                    filter.onAnyFilterChanged();\n                }\n            });\n        });\n        var filterChangedEvent = {\n            type: Events.EVENT_FILTER_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            columns: columns || [],\n        };\n        if (additionalEventAttributes) {\n            mergeDeep(filterChangedEvent, additionalEventAttributes);\n        }\n        // because internal events are not async in ag-grid, when the dispatchEvent\n        // method comes back, we know all listeners have finished executing.\n        this.processingFilterChange = true;\n        this.eventService.dispatchEvent(filterChangedEvent);\n        this.processingFilterChange = false;\n    };\n    FilterManager.prototype.isSuppressFlashingCellsBecauseFiltering = function () {\n        // if user has elected to always flash cell changes, then always return false, otherwise we suppress flashing\n        // changes when filtering\n        return !this.allowShowChangeAfterFilter && this.processingFilterChange;\n    };\n    FilterManager.prototype.isQuickFilterPresent = function () {\n        return this.quickFilter !== null;\n    };\n    FilterManager.prototype.doesRowPassOtherFilters = function (filterToSkip, node) {\n        return this.doesRowPassFilter({ rowNode: node, filterInstanceToSkip: filterToSkip });\n    };\n    FilterManager.prototype.doesRowPassQuickFilterNoCache = function (node, filterPart) {\n        var _this = this;\n        var columns = this.columnModel.getAllColumnsForQuickFilter();\n        return some(columns, function (column) {\n            var part = _this.getQuickFilterTextForColumn(column, node);\n            return exists(part) && part.indexOf(filterPart) >= 0;\n        });\n    };\n    FilterManager.prototype.doesRowPassQuickFilterCache = function (node, filterPart) {\n        if (!node.quickFilterAggregateText) {\n            this.aggregateRowForQuickFilter(node);\n        }\n        return node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n    };\n    FilterManager.prototype.doesRowPassQuickFilter = function (node) {\n        var _this = this;\n        var usingCache = this.gridOptionsWrapper.isCacheQuickFilter();\n        // each part must pass, if any fails, then the whole filter fails\n        return every(this.quickFilterParts, function (part) {\n            return usingCache ? _this.doesRowPassQuickFilterCache(node, part) : _this.doesRowPassQuickFilterNoCache(node, part);\n        });\n    };\n    FilterManager.prototype.doesRowPassFilter = function (params) {\n        // the row must pass ALL of the filters, so if any of them fail,\n        // we return true. that means if a row passes the quick filter,\n        // but fails the column filter, it fails overall\n        // first up, check quick filter\n        if (this.isQuickFilterPresent() && !this.doesRowPassQuickFilter(params.rowNode)) {\n            return false;\n        }\n        // secondly, give the client a chance to reject this row\n        if (this.gridOptionsWrapper.isExternalFilterPresent() && !this.gridOptionsWrapper.doesExternalFilterPass(params.rowNode)) {\n            return false;\n        }\n        // lastly, check our internal advanced filter\n        if (this.isAdvancedFilterPresent() && !this.doAdvancedFiltersPass(params.rowNode, params.filterInstanceToSkip)) {\n            return false;\n        }\n        // got this far, all filters pass\n        return true;\n    };\n    FilterManager.prototype.getQuickFilterTextForColumn = function (column, node) {\n        var value = this.valueService.getValue(column, node, true);\n        var colDef = column.getColDef();\n        if (colDef.getQuickFilterText) {\n            var params = {\n                value: value,\n                node: node,\n                data: node.data,\n                column: column,\n                colDef: colDef,\n                context: this.gridOptionsWrapper.getContext()\n            };\n            value = colDef.getQuickFilterText(params);\n        }\n        return exists(value) ? value.toString().toUpperCase() : null;\n    };\n    FilterManager.prototype.aggregateRowForQuickFilter = function (node) {\n        var _this = this;\n        var stringParts = [];\n        var columns = this.columnModel.getAllColumnsForQuickFilter();\n        forEach(columns, function (column) {\n            var part = _this.getQuickFilterTextForColumn(column, node);\n            if (exists(part)) {\n                stringParts.push(part);\n            }\n        });\n        node.quickFilterAggregateText = stringParts.join(FilterManager_1.QUICK_FILTER_SEPARATOR);\n    };\n    FilterManager.prototype.onNewRowsLoaded = function (source) {\n        this.allAdvancedFilters.forEach(function (filterWrapper) {\n            filterWrapper.filterPromise.then(function (filter) {\n                if (filter.onNewRowsLoaded) {\n                    filter.onNewRowsLoaded();\n                }\n            });\n        });\n        this.updateFilterFlagInColumns(source);\n        this.updateActiveFilters();\n    };\n    FilterManager.prototype.createValueGetter = function (column) {\n        var _this = this;\n        return function (node) { return _this.valueService.getValue(column, node, true); };\n    };\n    FilterManager.prototype.getFilterComponent = function (column, source, createIfDoesNotExist) {\n        if (createIfDoesNotExist === void 0) { createIfDoesNotExist = true; }\n        if (createIfDoesNotExist) {\n            return this.getOrCreateFilterWrapper(column, source).filterPromise;\n        }\n        var filterWrapper = this.cachedFilter(column);\n        return filterWrapper ? filterWrapper.filterPromise : null;\n    };\n    FilterManager.prototype.isFilterActive = function (column) {\n        var filterWrapper = this.cachedFilter(column);\n        return !!filterWrapper && filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); });\n    };\n    FilterManager.prototype.getOrCreateFilterWrapper = function (column, source) {\n        var filterWrapper = this.cachedFilter(column);\n        if (!filterWrapper) {\n            filterWrapper = this.createFilterWrapper(column, source);\n            this.allAdvancedFilters.set(column.getColId(), filterWrapper);\n        }\n        else if (source !== 'NO_UI') {\n            this.putIntoGui(filterWrapper, source);\n        }\n        return filterWrapper;\n    };\n    FilterManager.prototype.cachedFilter = function (column) {\n        return this.allAdvancedFilters.get(column.getColId());\n    };\n    FilterManager.prototype.createFilterInstance = function (column, $scope) {\n        var _this = this;\n        var defaultFilter = ModuleRegistry.isRegistered(ModuleNames.SetFilterModule) ? 'agSetColumnFilter' : 'agTextColumnFilter';\n        var colDef = column.getColDef();\n        var filterInstance;\n        var params = __assign(__assign({}, this.createFilterParams(column, colDef, $scope)), { filterModifiedCallback: function () {\n                var event = {\n                    type: Events.EVENT_FILTER_MODIFIED,\n                    api: _this.gridApi,\n                    columnApi: _this.columnApi,\n                    column: column,\n                    filterInstance: filterInstance\n                };\n                _this.eventService.dispatchEvent(event);\n            }, filterChangedCallback: function (additionalEventAttributes) {\n                return _this.onFilterChanged({ filterInstance: filterInstance, additionalEventAttributes: additionalEventAttributes, columns: [column] });\n            }, doesRowPassOtherFilter: function (node) { return _this.doesRowPassOtherFilters(filterInstance, node); } });\n        var compDetails = this.userComponentFactory.getFilterDetails(colDef, params, defaultFilter);\n        if (!compDetails) {\n            return null;\n        }\n        var componentPromise = compDetails.newAgStackInstance();\n        if (componentPromise) {\n            componentPromise.then(function (r) { return filterInstance = r; });\n        }\n        return componentPromise;\n    };\n    FilterManager.prototype.createFilterParams = function (column, colDef, $scope) {\n        if ($scope === void 0) { $scope = null; }\n        var params = {\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            column: column,\n            colDef: cloneObject(colDef),\n            rowModel: this.rowModel,\n            filterChangedCallback: function () { },\n            filterModifiedCallback: function () { },\n            valueGetter: this.createValueGetter(column),\n            context: this.gridOptionsWrapper.getContext(),\n            doesRowPassOtherFilter: function () { return true; },\n        };\n        // hack in scope if using AngularJS\n        if ($scope) {\n            params.$scope = $scope;\n        }\n        return params;\n    };\n    FilterManager.prototype.createFilterWrapper = function (column, source) {\n        var filterWrapper = {\n            column: column,\n            filterPromise: null,\n            scope: null,\n            compiledElement: null,\n            guiPromise: AgPromise.resolve(null)\n        };\n        filterWrapper.scope = this.gridOptionsWrapper.isAngularCompileFilters() ? this.$scope.$new() : null;\n        filterWrapper.filterPromise = this.createFilterInstance(column, filterWrapper.scope);\n        if (filterWrapper.filterPromise) {\n            this.putIntoGui(filterWrapper, source);\n        }\n        return filterWrapper;\n    };\n    FilterManager.prototype.putIntoGui = function (filterWrapper, source) {\n        var _this = this;\n        var eFilterGui = document.createElement('div');\n        eFilterGui.className = 'ag-filter';\n        filterWrapper.guiPromise = new AgPromise(function (resolve) {\n            filterWrapper.filterPromise.then(function (filter) {\n                var guiFromFilter = filter.getGui();\n                if (!exists(guiFromFilter)) {\n                    console.warn(\"getGui method from filter returned \" + guiFromFilter + \", it should be a DOM element or an HTML template string.\");\n                }\n                // for backwards compatibility with Angular 1 - we\n                // used to allow providing back HTML from getGui().\n                // once we move away from supporting Angular 1\n                // directly, we can change this.\n                if (typeof guiFromFilter === 'string') {\n                    guiFromFilter = loadTemplate(guiFromFilter);\n                }\n                eFilterGui.appendChild(guiFromFilter);\n                if (filterWrapper.scope) {\n                    var compiledElement = _this.$compile(eFilterGui)(filterWrapper.scope);\n                    filterWrapper.compiledElement = compiledElement;\n                    window.setTimeout(function () { return filterWrapper.scope.$apply(); }, 0);\n                }\n                resolve(eFilterGui);\n                _this.eventService.dispatchEvent({\n                    type: Events.EVENT_FILTER_OPENED,\n                    column: filterWrapper.column,\n                    source: source,\n                    eGui: eFilterGui,\n                    api: _this.gridApi,\n                    columnApi: _this.columnApi\n                });\n            });\n        });\n    };\n    FilterManager.prototype.onNewColumnsLoaded = function () {\n        var _this = this;\n        var atLeastOneFilterGone = false;\n        var columns = [];\n        this.allAdvancedFilters.forEach(function (filterWrapper) {\n            var oldColumn = !_this.columnModel.getPrimaryColumn(filterWrapper.column);\n            if (oldColumn) {\n                atLeastOneFilterGone = true;\n                columns.push(filterWrapper.column);\n                _this.disposeFilterWrapper(filterWrapper, 'filterDestroyed');\n            }\n        });\n        if (atLeastOneFilterGone) {\n            this.onFilterChanged({ columns: columns });\n        }\n    };\n    // destroys the filter, so it not longer takes part\n    FilterManager.prototype.destroyFilter = function (column, source) {\n        if (source === void 0) { source = 'api'; }\n        var filterWrapper = this.allAdvancedFilters.get(column.getColId());\n        if (filterWrapper) {\n            this.disposeFilterWrapper(filterWrapper, source);\n            this.onFilterChanged({ columns: [column] });\n        }\n    };\n    FilterManager.prototype.disposeFilterWrapper = function (filterWrapper, source) {\n        var _this = this;\n        filterWrapper.filterPromise.then(function (filter) {\n            (filter.setModel(null) || AgPromise.resolve()).then(function () {\n                _this.getContext().destroyBean(filter);\n                filterWrapper.column.setFilterActive(false, source);\n                if (filterWrapper.scope) {\n                    if (filterWrapper.compiledElement) {\n                        filterWrapper.compiledElement.remove();\n                    }\n                    filterWrapper.scope.$destroy();\n                }\n                _this.allAdvancedFilters.delete(filterWrapper.column.getColId());\n            });\n        });\n    };\n    FilterManager.prototype.destroy = function () {\n        var _this = this;\n        _super.prototype.destroy.call(this);\n        this.allAdvancedFilters.forEach(function (filterWrapper) { return _this.disposeFilterWrapper(filterWrapper, 'filterDestroyed'); });\n    };\n    var FilterManager_1;\n    FilterManager.QUICK_FILTER_SEPARATOR = '\\n';\n    __decorate([\n        Autowired('$compile')\n    ], FilterManager.prototype, \"$compile\", void 0);\n    __decorate([\n        Autowired('$scope')\n    ], FilterManager.prototype, \"$scope\", void 0);\n    __decorate([\n        Autowired('valueService')\n    ], FilterManager.prototype, \"valueService\", void 0);\n    __decorate([\n        Autowired('columnModel')\n    ], FilterManager.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('rowModel')\n    ], FilterManager.prototype, \"rowModel\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], FilterManager.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], FilterManager.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('userComponentFactory')\n    ], FilterManager.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        PostConstruct\n    ], FilterManager.prototype, \"init\", null);\n    __decorate([\n        PreDestroy\n    ], FilterManager.prototype, \"destroy\", null);\n    FilterManager = FilterManager_1 = __decorate([\n        Bean('filterManager')\n    ], FilterManager);\n    return FilterManager;\n}(BeanStub));\nexport { FilterManager };\n"]},"metadata":{},"sourceType":"module"}