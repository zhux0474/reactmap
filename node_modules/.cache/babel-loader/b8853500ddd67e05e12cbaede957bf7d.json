{"ast":null,"code":"var _jsxFileName = \"/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerMap.js\";\nimport React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\"; //import \"./SmokerMap.css\";\n\nimport Map from \"ol/Map\"; //import Feature from \"ol/Feature\";\n\nimport View from \"ol/View\"; //import { Point, Style, Circle, Fill, Feature } from \"ol\";\n\nimport TileLayer from \"ol/layer/Tile\"; //import TileWMS from 'ol/source/TileWMS';\n\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport { Fill, Stroke, Style } from 'ol/style';\nimport { metadata } from './metadata.js';\nimport countyData from './County.geojson.json'; //import Dropdown from \"./dropdown.js\"\n//import ImageWMS from 'ol/source/ImageWMS';\n//for new push\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SmokerMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      smokerSource: null,\n      smokerlayer: false,\n      countySource: null,\n      stateReady: false,\n      countyReady: false,\n      stateOutline: false,\n      countyLayer: false\n    }; //console.log(this.props);\n  }\n\n  componentDidMount() {\n    var basemap = new TileLayer({\n      source: new OSM()\n    }); // use usestate to update the url base on \n\n    var smokerSource = new VectorSource({\n      url: metadata[1]['geojson_url'],\n      format: new GeoJSON()\n    }); //var breakarray= [300,400,500,600];\n    //var colorarray= ['#edf8fb','#b3cde3','#8c96c6','#88419d']\n\n    var stylefunction = function (feature) {\n      var style;\n      var value = feature.get('brfss_smoker'); //var county=feature.get('county');\n      // assign color to each break from metadata.js\n      //console.log(county,value)\n\n      for (let i = 0; i < metadata[1]['break'].length; i++) {\n        if (value > metadata[1]['break'][i]) {\n          style = new Style({\n            fill: new Fill({\n              color: metadata[1]['color'][i]\n            }),\n            stroke: new Stroke({\n              color: 'black',\n              width: 0.3\n            })\n          });\n        }\n\n        ;\n      }\n\n      return style;\n    };\n\n    var smokerlayer = new VectorLayer({\n      source: smokerSource,\n      style: stylefunction,\n      showLegend: true\n    });\n    /*\n    var lungdata = new TileLayer({\n     source : new TileWMS ({\n       url:'https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms',\n       serverType:'geoserver',\n       params: {'LAYERS': 'lung_cancer:total_smokers_v2', 'TILED': true},\n        transition: 0\n      }),\n     style: vectorstyle\n    const wmsSource = new ImageWMS({\n     url: 'https://ahocevar.com/geoserver/wms',\n     params: {'LAYERS': 'topp:states'},\n     target: \"maplegend\",\n     ratio: 1,\n     serverType: 'geoserver',\n    });\n      })*/\n\n    var remap = new Map({\n      layers: [basemap, vectorlayer],\n      target: \"mapContainer\",\n      view: new View({\n        center: fromLonLat([-94.6859, 46.7296]),\n        zoom: 6\n      })\n    });\n  }\n\n  render() {\n    console.log(\"-> render App\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapContainer\",\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/src/components/SmokerMap.js"],"names":["React","fromLonLat","get","Map","View","TileLayer","VectorLayer","VectorSource","GeoJSON","OSM","Fill","Stroke","Style","metadata","countyData","SmokerMap","Component","constructor","props","state","smokerSource","smokerlayer","countySource","stateReady","countyReady","stateOutline","countyLayer","componentDidMount","basemap","source","url","format","stylefunction","feature","style","value","i","length","fill","color","stroke","width","showLegend","remap","layers","vectorlayer","target","view","center","zoom","render","console","log","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { fromLonLat, get } from \"ol/proj\";\n//import \"./SmokerMap.css\";\nimport Map from \"ol/Map\";\n//import Feature from \"ol/Feature\";\nimport View from \"ol/View\";\n//import { Point, Style, Circle, Fill, Feature } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\n//import TileWMS from 'ol/source/TileWMS';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport OSM from \"ol/source/OSM\";\nimport {Fill, Stroke, Style} from 'ol/style';\nimport {metadata} from './metadata.js';\nimport countyData from './County.geojson.json'\n//import Dropdown from \"./dropdown.js\"\n\n//import ImageWMS from 'ol/source/ImageWMS';\n\n//for new push\n\nexport default class SmokerMap extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n     \n      smokerSource : null,\n      smokerlayer: false,\n      countySource: null,\n      stateReady: false,\n      countyReady: false,\n      \n      stateOutline: false,\n      countyLayer: false\n  };\n    //console.log(this.props);\n  }\n\n\n  componentDidMount(){\n\n    var basemap =new TileLayer({\n      source: new OSM()\n    })\n    \n\n    // use usestate to update the url base on \n    var smokerSource = new VectorSource({\n      url:metadata[1]['geojson_url'],\n\n      format: new GeoJSON()\n    })\n\n   \n  \n    \n\n    //var breakarray= [300,400,500,600];\n    //var colorarray= ['#edf8fb','#b3cde3','#8c96c6','#88419d']\n  \n      var stylefunction = function(feature){\n        var style;\n        \n        var value=feature.get('brfss_smoker');\n        //var county=feature.get('county');\n        \n        // assign color to each break from metadata.js\n        //console.log(county,value)\n        for (let i =0;i<metadata[1]['break'].length;i++){\n          if(value>metadata[1]['break'][i]){\n          style= new Style({\n            fill: new Fill({\n              color: metadata[1]['color'][i]\n            }),\n            stroke: new Stroke({\n              color:'black',\n              width:0.3\n            })\n          })\n        };\n      }\n\n        return style;\n\n    };\n\n    var smokerlayer = new VectorLayer({\n\n       source: smokerSource,\n       style: stylefunction,\n       showLegend:true\n\n\n       })\n\n     /*\n    var lungdata = new TileLayer({\n      source : new TileWMS ({\n        url:'https://smartcommunityhealth.ahc.umn.edu/lung_cancer/wms',\n        serverType:'geoserver',\n        params: {'LAYERS': 'lung_cancer:total_smokers_v2', 'TILED': true},\n\n        transition: 0\n\n      }),\n      style: vectorstyle\n   const wmsSource = new ImageWMS({\n      url: 'https://ahocevar.com/geoserver/wms',\n      params: {'LAYERS': 'topp:states'},\n      target: \"maplegend\",\n      ratio: 1,\n      serverType: 'geoserver',\n    });\n\n\n\n    })*/\n\n    var remap=new Map({\n      layers: [basemap,vectorlayer],\n      target: \"mapContainer\",\n      view :new View({\n        center:fromLonLat([-94.6859,46.7296]),\n        zoom: 6\n      })\n\n\n\n    });\n\n\n\n  }\n\n  \n  render() {\n    console.log(\"-> render App\");\n    return (\n\n\n      <div id=\"mapContainer\" style={{ width: \"100%\",height: \"500px\"}}></div>\n      \n\n\n    );\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}