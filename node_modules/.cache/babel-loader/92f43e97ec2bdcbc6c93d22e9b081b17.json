{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { RowNode } from \"../entities/rowNode\";\nimport { Autowired, Bean, PostConstruct } from \"../context/context\";\nimport { Events } from \"../events\";\nimport { Constants } from \"../constants/constants\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { missingOrEmpty } from \"../utils/generic\";\nimport { last } from \"../utils/array\";\n\nvar PinnedRowModel =\n/** @class */\nfunction (_super) {\n  __extends(PinnedRowModel, _super);\n\n  function PinnedRowModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PinnedRowModel.prototype.init = function () {\n    this.setPinnedTopRowData(this.gridOptionsWrapper.getPinnedTopRowData());\n    this.setPinnedBottomRowData(this.gridOptionsWrapper.getPinnedBottomRowData());\n  };\n\n  PinnedRowModel.prototype.isEmpty = function (floating) {\n    var rows = floating === Constants.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;\n    return missingOrEmpty(rows);\n  };\n\n  PinnedRowModel.prototype.isRowsToRender = function (floating) {\n    return !this.isEmpty(floating);\n  };\n\n  PinnedRowModel.prototype.getRowAtPixel = function (pixel, floating) {\n    var rows = floating === Constants.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;\n\n    if (missingOrEmpty(rows)) {\n      return 0; // this should never happen, just in case, 0 is graceful failure\n    }\n\n    for (var i = 0; i < rows.length; i++) {\n      var rowNode = rows[i];\n      var rowTopPixel = rowNode.rowTop + rowNode.rowHeight - 1; // only need to range check against the top pixel, as we are going through the list\n      // in order, first row to hit the pixel wins\n\n      if (rowTopPixel >= pixel) {\n        return i;\n      }\n    }\n\n    return rows.length - 1;\n  };\n\n  PinnedRowModel.prototype.setPinnedTopRowData = function (rowData) {\n    this.pinnedTopRows = this.createNodesFromData(rowData, true);\n    var event = {\n      type: Events.EVENT_PINNED_ROW_DATA_CHANGED,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n    this.eventService.dispatchEvent(event);\n  };\n\n  PinnedRowModel.prototype.setPinnedBottomRowData = function (rowData) {\n    this.pinnedBottomRows = this.createNodesFromData(rowData, false);\n    var event = {\n      type: Events.EVENT_PINNED_ROW_DATA_CHANGED,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n    this.eventService.dispatchEvent(event);\n  };\n\n  PinnedRowModel.prototype.createNodesFromData = function (allData, isTop) {\n    var _this = this;\n\n    var rowNodes = [];\n\n    if (allData) {\n      var nextRowTop_1 = 0;\n      allData.forEach(function (dataItem, index) {\n        var rowNode = new RowNode(_this.beans);\n        rowNode.data = dataItem;\n        var idPrefix = isTop ? RowNode.ID_PREFIX_TOP_PINNED : RowNode.ID_PREFIX_BOTTOM_PINNED;\n        rowNode.id = idPrefix + index;\n        rowNode.rowPinned = isTop ? Constants.PINNED_TOP : Constants.PINNED_BOTTOM;\n        rowNode.setRowTop(nextRowTop_1);\n        rowNode.setRowHeight(_this.gridOptionsWrapper.getRowHeightForNode(rowNode).height);\n        rowNode.setRowIndex(index);\n        nextRowTop_1 += rowNode.rowHeight;\n        rowNodes.push(rowNode);\n      });\n    }\n\n    return rowNodes;\n  };\n\n  PinnedRowModel.prototype.getPinnedTopRowData = function () {\n    return this.pinnedTopRows;\n  };\n\n  PinnedRowModel.prototype.getPinnedBottomRowData = function () {\n    return this.pinnedBottomRows;\n  };\n\n  PinnedRowModel.prototype.getPinnedTopTotalHeight = function () {\n    return this.getTotalHeight(this.pinnedTopRows);\n  };\n\n  PinnedRowModel.prototype.getPinnedTopRowCount = function () {\n    return this.pinnedTopRows ? this.pinnedTopRows.length : 0;\n  };\n\n  PinnedRowModel.prototype.getPinnedBottomRowCount = function () {\n    return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;\n  };\n\n  PinnedRowModel.prototype.getPinnedTopRow = function (index) {\n    return this.pinnedTopRows[index];\n  };\n\n  PinnedRowModel.prototype.getPinnedBottomRow = function (index) {\n    return this.pinnedBottomRows[index];\n  };\n\n  PinnedRowModel.prototype.forEachPinnedTopRow = function (callback) {\n    if (missingOrEmpty(this.pinnedTopRows)) {\n      return;\n    }\n\n    this.pinnedTopRows.forEach(callback);\n  };\n\n  PinnedRowModel.prototype.forEachPinnedBottomRow = function (callback) {\n    if (missingOrEmpty(this.pinnedBottomRows)) {\n      return;\n    }\n\n    this.pinnedBottomRows.forEach(callback);\n  };\n\n  PinnedRowModel.prototype.getPinnedBottomTotalHeight = function () {\n    return this.getTotalHeight(this.pinnedBottomRows);\n  };\n\n  PinnedRowModel.prototype.getTotalHeight = function (rowNodes) {\n    if (!rowNodes || rowNodes.length === 0) {\n      return 0;\n    }\n\n    var lastNode = last(rowNodes);\n    return lastNode.rowTop + lastNode.rowHeight;\n  };\n\n  __decorate([Autowired('columnApi')], PinnedRowModel.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], PinnedRowModel.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('beans')], PinnedRowModel.prototype, \"beans\", void 0);\n\n  __decorate([PostConstruct], PinnedRowModel.prototype, \"init\", null);\n\n  PinnedRowModel = __decorate([Bean('pinnedRowModel')], PinnedRowModel);\n  return PinnedRowModel;\n}(BeanStub);\n\nexport { PinnedRowModel };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/pinnedRowModel/pinnedRowModel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","RowNode","Autowired","Bean","PostConstruct","Events","Constants","BeanStub","missingOrEmpty","last","PinnedRowModel","_super","apply","init","setPinnedTopRowData","gridOptionsWrapper","getPinnedTopRowData","setPinnedBottomRowData","getPinnedBottomRowData","isEmpty","floating","rows","PINNED_TOP","pinnedTopRows","pinnedBottomRows","isRowsToRender","getRowAtPixel","pixel","rowNode","rowTopPixel","rowTop","rowHeight","rowData","createNodesFromData","event","type","EVENT_PINNED_ROW_DATA_CHANGED","api","gridApi","columnApi","eventService","dispatchEvent","allData","isTop","_this","rowNodes","nextRowTop_1","forEach","dataItem","index","beans","data","idPrefix","ID_PREFIX_TOP_PINNED","ID_PREFIX_BOTTOM_PINNED","id","rowPinned","PINNED_BOTTOM","setRowTop","setRowHeight","getRowHeightForNode","height","setRowIndex","push","getPinnedTopTotalHeight","getTotalHeight","getPinnedTopRowCount","getPinnedBottomRowCount","getPinnedTopRow","getPinnedBottomRow","forEachPinnedTopRow","callback","forEachPinnedBottomRow","getPinnedBottomTotalHeight","lastNode"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASM,OAAT,QAAwB,qBAAxB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,aAA1B,QAA+C,oBAA/C;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,IAAT,QAAqB,gBAArB;;AACA,IAAIC,cAAc;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAClDtC,EAAAA,SAAS,CAACqC,cAAD,EAAiBC,MAAjB,CAAT;;AACA,WAASD,cAAT,GAA0B;AACtB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBnB,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDiB,EAAAA,cAAc,CAACzB,SAAf,CAAyB4B,IAAzB,GAAgC,YAAY;AACxC,SAAKC,mBAAL,CAAyB,KAAKC,kBAAL,CAAwBC,mBAAxB,EAAzB;AACA,SAAKC,sBAAL,CAA4B,KAAKF,kBAAL,CAAwBG,sBAAxB,EAA5B;AACH,GAHD;;AAIAR,EAAAA,cAAc,CAACzB,SAAf,CAAyBkC,OAAzB,GAAmC,UAAUC,QAAV,EAAoB;AACnD,QAAIC,IAAI,GAAGD,QAAQ,KAAKd,SAAS,CAACgB,UAAvB,GAAoC,KAAKC,aAAzC,GAAyD,KAAKC,gBAAzE;AACA,WAAOhB,cAAc,CAACa,IAAD,CAArB;AACH,GAHD;;AAIAX,EAAAA,cAAc,CAACzB,SAAf,CAAyBwC,cAAzB,GAA0C,UAAUL,QAAV,EAAoB;AAC1D,WAAO,CAAC,KAAKD,OAAL,CAAaC,QAAb,CAAR;AACH,GAFD;;AAGAV,EAAAA,cAAc,CAACzB,SAAf,CAAyByC,aAAzB,GAAyC,UAAUC,KAAV,EAAiBP,QAAjB,EAA2B;AAChE,QAAIC,IAAI,GAAGD,QAAQ,KAAKd,SAAS,CAACgB,UAAvB,GAAoC,KAAKC,aAAzC,GAAyD,KAAKC,gBAAzE;;AACA,QAAIhB,cAAc,CAACa,IAAD,CAAlB,EAA0B;AACtB,aAAO,CAAP,CADsB,CACZ;AACb;;AACD,SAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsB,IAAI,CAAC3B,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AAClC,UAAI6B,OAAO,GAAGP,IAAI,CAACtB,CAAD,CAAlB;AACA,UAAI8B,WAAW,GAAGD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,SAAzB,GAAqC,CAAvD,CAFkC,CAGlC;AACA;;AACA,UAAIF,WAAW,IAAIF,KAAnB,EAA0B;AACtB,eAAO5B,CAAP;AACH;AACJ;;AACD,WAAOsB,IAAI,CAAC3B,MAAL,GAAc,CAArB;AACH,GAfD;;AAgBAgB,EAAAA,cAAc,CAACzB,SAAf,CAAyB6B,mBAAzB,GAA+C,UAAUkB,OAAV,EAAmB;AAC9D,SAAKT,aAAL,GAAqB,KAAKU,mBAAL,CAAyBD,OAAzB,EAAkC,IAAlC,CAArB;AACA,QAAIE,KAAK,GAAG;AACRC,MAAAA,IAAI,EAAE9B,MAAM,CAAC+B,6BADL;AAERC,MAAAA,GAAG,EAAE,KAAKC,OAFF;AAGRC,MAAAA,SAAS,EAAE,KAAKA;AAHR,KAAZ;AAKA,SAAKC,YAAL,CAAkBC,aAAlB,CAAgCP,KAAhC;AACH,GARD;;AASAxB,EAAAA,cAAc,CAACzB,SAAf,CAAyBgC,sBAAzB,GAAkD,UAAUe,OAAV,EAAmB;AACjE,SAAKR,gBAAL,GAAwB,KAAKS,mBAAL,CAAyBD,OAAzB,EAAkC,KAAlC,CAAxB;AACA,QAAIE,KAAK,GAAG;AACRC,MAAAA,IAAI,EAAE9B,MAAM,CAAC+B,6BADL;AAERC,MAAAA,GAAG,EAAE,KAAKC,OAFF;AAGRC,MAAAA,SAAS,EAAE,KAAKA;AAHR,KAAZ;AAKA,SAAKC,YAAL,CAAkBC,aAAlB,CAAgCP,KAAhC;AACH,GARD;;AASAxB,EAAAA,cAAc,CAACzB,SAAf,CAAyBgD,mBAAzB,GAA+C,UAAUS,OAAV,EAAmBC,KAAnB,EAA0B;AACrE,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIH,OAAJ,EAAa;AACT,UAAII,YAAY,GAAG,CAAnB;AACAJ,MAAAA,OAAO,CAACK,OAAR,CAAgB,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;AACvC,YAAIrB,OAAO,GAAG,IAAI3B,OAAJ,CAAY2C,KAAK,CAACM,KAAlB,CAAd;AACAtB,QAAAA,OAAO,CAACuB,IAAR,GAAeH,QAAf;AACA,YAAII,QAAQ,GAAGT,KAAK,GAAG1C,OAAO,CAACoD,oBAAX,GAAkCpD,OAAO,CAACqD,uBAA9D;AACA1B,QAAAA,OAAO,CAAC2B,EAAR,GAAaH,QAAQ,GAAGH,KAAxB;AACArB,QAAAA,OAAO,CAAC4B,SAAR,GAAoBb,KAAK,GAAGrC,SAAS,CAACgB,UAAb,GAA0BhB,SAAS,CAACmD,aAA7D;AACA7B,QAAAA,OAAO,CAAC8B,SAAR,CAAkBZ,YAAlB;AACAlB,QAAAA,OAAO,CAAC+B,YAAR,CAAqBf,KAAK,CAAC7B,kBAAN,CAAyB6C,mBAAzB,CAA6ChC,OAA7C,EAAsDiC,MAA3E;AACAjC,QAAAA,OAAO,CAACkC,WAAR,CAAoBb,KAApB;AACAH,QAAAA,YAAY,IAAIlB,OAAO,CAACG,SAAxB;AACAc,QAAAA,QAAQ,CAACkB,IAAT,CAAcnC,OAAd;AACH,OAXD;AAYH;;AACD,WAAOiB,QAAP;AACH,GAnBD;;AAoBAnC,EAAAA,cAAc,CAACzB,SAAf,CAAyB+B,mBAAzB,GAA+C,YAAY;AACvD,WAAO,KAAKO,aAAZ;AACH,GAFD;;AAGAb,EAAAA,cAAc,CAACzB,SAAf,CAAyBiC,sBAAzB,GAAkD,YAAY;AAC1D,WAAO,KAAKM,gBAAZ;AACH,GAFD;;AAGAd,EAAAA,cAAc,CAACzB,SAAf,CAAyB+E,uBAAzB,GAAmD,YAAY;AAC3D,WAAO,KAAKC,cAAL,CAAoB,KAAK1C,aAAzB,CAAP;AACH,GAFD;;AAGAb,EAAAA,cAAc,CAACzB,SAAf,CAAyBiF,oBAAzB,GAAgD,YAAY;AACxD,WAAO,KAAK3C,aAAL,GAAqB,KAAKA,aAAL,CAAmB7B,MAAxC,GAAiD,CAAxD;AACH,GAFD;;AAGAgB,EAAAA,cAAc,CAACzB,SAAf,CAAyBkF,uBAAzB,GAAmD,YAAY;AAC3D,WAAO,KAAK3C,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB9B,MAA9C,GAAuD,CAA9D;AACH,GAFD;;AAGAgB,EAAAA,cAAc,CAACzB,SAAf,CAAyBmF,eAAzB,GAA2C,UAAUnB,KAAV,EAAiB;AACxD,WAAO,KAAK1B,aAAL,CAAmB0B,KAAnB,CAAP;AACH,GAFD;;AAGAvC,EAAAA,cAAc,CAACzB,SAAf,CAAyBoF,kBAAzB,GAA8C,UAAUpB,KAAV,EAAiB;AAC3D,WAAO,KAAKzB,gBAAL,CAAsByB,KAAtB,CAAP;AACH,GAFD;;AAGAvC,EAAAA,cAAc,CAACzB,SAAf,CAAyBqF,mBAAzB,GAA+C,UAAUC,QAAV,EAAoB;AAC/D,QAAI/D,cAAc,CAAC,KAAKe,aAAN,CAAlB,EAAwC;AACpC;AACH;;AACD,SAAKA,aAAL,CAAmBwB,OAAnB,CAA2BwB,QAA3B;AACH,GALD;;AAMA7D,EAAAA,cAAc,CAACzB,SAAf,CAAyBuF,sBAAzB,GAAkD,UAAUD,QAAV,EAAoB;AAClE,QAAI/D,cAAc,CAAC,KAAKgB,gBAAN,CAAlB,EAA2C;AACvC;AACH;;AACD,SAAKA,gBAAL,CAAsBuB,OAAtB,CAA8BwB,QAA9B;AACH,GALD;;AAMA7D,EAAAA,cAAc,CAACzB,SAAf,CAAyBwF,0BAAzB,GAAsD,YAAY;AAC9D,WAAO,KAAKR,cAAL,CAAoB,KAAKzC,gBAAzB,CAAP;AACH,GAFD;;AAGAd,EAAAA,cAAc,CAACzB,SAAf,CAAyBgF,cAAzB,GAA0C,UAAUpB,QAAV,EAAoB;AAC1D,QAAI,CAACA,QAAD,IAAaA,QAAQ,CAACnD,MAAT,KAAoB,CAArC,EAAwC;AACpC,aAAO,CAAP;AACH;;AACD,QAAIgF,QAAQ,GAAGjE,IAAI,CAACoC,QAAD,CAAnB;AACA,WAAO6B,QAAQ,CAAC5C,MAAT,GAAkB4C,QAAQ,CAAC3C,SAAlC;AACH,GAND;;AAOA5C,EAAAA,UAAU,CAAC,CACPe,SAAS,CAAC,WAAD,CADF,CAAD,EAEPQ,cAAc,CAACzB,SAFR,EAEmB,WAFnB,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPe,SAAS,CAAC,SAAD,CADF,CAAD,EAEPQ,cAAc,CAACzB,SAFR,EAEmB,SAFnB,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPe,SAAS,CAAC,OAAD,CADF,CAAD,EAEPQ,cAAc,CAACzB,SAFR,EAEmB,OAFnB,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiB,aADO,CAAD,EAEPM,cAAc,CAACzB,SAFR,EAEmB,MAFnB,EAE2B,IAF3B,CAAV;;AAGAyB,EAAAA,cAAc,GAAGvB,UAAU,CAAC,CACxBgB,IAAI,CAAC,gBAAD,CADoB,CAAD,EAExBO,cAFwB,CAA3B;AAGA,SAAOA,cAAP;AACH,CAjImC,CAiIlCH,QAjIkC,CAApC;;AAkIA,SAASG,cAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { RowNode } from \"../entities/rowNode\";\nimport { Autowired, Bean, PostConstruct } from \"../context/context\";\nimport { Events } from \"../events\";\nimport { Constants } from \"../constants/constants\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { missingOrEmpty } from \"../utils/generic\";\nimport { last } from \"../utils/array\";\nvar PinnedRowModel = /** @class */ (function (_super) {\n    __extends(PinnedRowModel, _super);\n    function PinnedRowModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PinnedRowModel.prototype.init = function () {\n        this.setPinnedTopRowData(this.gridOptionsWrapper.getPinnedTopRowData());\n        this.setPinnedBottomRowData(this.gridOptionsWrapper.getPinnedBottomRowData());\n    };\n    PinnedRowModel.prototype.isEmpty = function (floating) {\n        var rows = floating === Constants.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;\n        return missingOrEmpty(rows);\n    };\n    PinnedRowModel.prototype.isRowsToRender = function (floating) {\n        return !this.isEmpty(floating);\n    };\n    PinnedRowModel.prototype.getRowAtPixel = function (pixel, floating) {\n        var rows = floating === Constants.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;\n        if (missingOrEmpty(rows)) {\n            return 0; // this should never happen, just in case, 0 is graceful failure\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rowNode = rows[i];\n            var rowTopPixel = rowNode.rowTop + rowNode.rowHeight - 1;\n            // only need to range check against the top pixel, as we are going through the list\n            // in order, first row to hit the pixel wins\n            if (rowTopPixel >= pixel) {\n                return i;\n            }\n        }\n        return rows.length - 1;\n    };\n    PinnedRowModel.prototype.setPinnedTopRowData = function (rowData) {\n        this.pinnedTopRows = this.createNodesFromData(rowData, true);\n        var event = {\n            type: Events.EVENT_PINNED_ROW_DATA_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    PinnedRowModel.prototype.setPinnedBottomRowData = function (rowData) {\n        this.pinnedBottomRows = this.createNodesFromData(rowData, false);\n        var event = {\n            type: Events.EVENT_PINNED_ROW_DATA_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    PinnedRowModel.prototype.createNodesFromData = function (allData, isTop) {\n        var _this = this;\n        var rowNodes = [];\n        if (allData) {\n            var nextRowTop_1 = 0;\n            allData.forEach(function (dataItem, index) {\n                var rowNode = new RowNode(_this.beans);\n                rowNode.data = dataItem;\n                var idPrefix = isTop ? RowNode.ID_PREFIX_TOP_PINNED : RowNode.ID_PREFIX_BOTTOM_PINNED;\n                rowNode.id = idPrefix + index;\n                rowNode.rowPinned = isTop ? Constants.PINNED_TOP : Constants.PINNED_BOTTOM;\n                rowNode.setRowTop(nextRowTop_1);\n                rowNode.setRowHeight(_this.gridOptionsWrapper.getRowHeightForNode(rowNode).height);\n                rowNode.setRowIndex(index);\n                nextRowTop_1 += rowNode.rowHeight;\n                rowNodes.push(rowNode);\n            });\n        }\n        return rowNodes;\n    };\n    PinnedRowModel.prototype.getPinnedTopRowData = function () {\n        return this.pinnedTopRows;\n    };\n    PinnedRowModel.prototype.getPinnedBottomRowData = function () {\n        return this.pinnedBottomRows;\n    };\n    PinnedRowModel.prototype.getPinnedTopTotalHeight = function () {\n        return this.getTotalHeight(this.pinnedTopRows);\n    };\n    PinnedRowModel.prototype.getPinnedTopRowCount = function () {\n        return this.pinnedTopRows ? this.pinnedTopRows.length : 0;\n    };\n    PinnedRowModel.prototype.getPinnedBottomRowCount = function () {\n        return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;\n    };\n    PinnedRowModel.prototype.getPinnedTopRow = function (index) {\n        return this.pinnedTopRows[index];\n    };\n    PinnedRowModel.prototype.getPinnedBottomRow = function (index) {\n        return this.pinnedBottomRows[index];\n    };\n    PinnedRowModel.prototype.forEachPinnedTopRow = function (callback) {\n        if (missingOrEmpty(this.pinnedTopRows)) {\n            return;\n        }\n        this.pinnedTopRows.forEach(callback);\n    };\n    PinnedRowModel.prototype.forEachPinnedBottomRow = function (callback) {\n        if (missingOrEmpty(this.pinnedBottomRows)) {\n            return;\n        }\n        this.pinnedBottomRows.forEach(callback);\n    };\n    PinnedRowModel.prototype.getPinnedBottomTotalHeight = function () {\n        return this.getTotalHeight(this.pinnedBottomRows);\n    };\n    PinnedRowModel.prototype.getTotalHeight = function (rowNodes) {\n        if (!rowNodes || rowNodes.length === 0) {\n            return 0;\n        }\n        var lastNode = last(rowNodes);\n        return lastNode.rowTop + lastNode.rowHeight;\n    };\n    __decorate([\n        Autowired('columnApi')\n    ], PinnedRowModel.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], PinnedRowModel.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('beans')\n    ], PinnedRowModel.prototype, \"beans\", void 0);\n    __decorate([\n        PostConstruct\n    ], PinnedRowModel.prototype, \"init\", null);\n    PinnedRowModel = __decorate([\n        Bean('pinnedRowModel')\n    ], PinnedRowModel);\n    return PinnedRowModel;\n}(BeanStub));\nexport { PinnedRowModel };\n"]},"metadata":{},"sourceType":"module"}