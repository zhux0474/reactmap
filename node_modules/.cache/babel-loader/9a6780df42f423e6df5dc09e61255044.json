{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { AgAbstractInputField } from './agAbstractInputField';\nimport { some } from '../utils/array';\nimport { exists } from '../utils/generic';\n\nvar AgInputTextField =\n/** @class */\nfunction (_super) {\n  __extends(AgInputTextField, _super);\n\n  function AgInputTextField(config, className, inputType) {\n    if (className === void 0) {\n      className = 'ag-text-field';\n    }\n\n    if (inputType === void 0) {\n      inputType = 'text';\n    }\n\n    return _super.call(this, config, className, inputType) || this;\n  }\n\n  AgInputTextField.prototype.postConstruct = function () {\n    _super.prototype.postConstruct.call(this);\n\n    if (this.config.allowedCharPattern) {\n      this.preventDisallowedCharacters();\n    }\n  };\n\n  AgInputTextField.prototype.setValue = function (value, silent) {\n    var ret = _super.prototype.setValue.call(this, value, silent);\n\n    if (this.eInput.value !== value) {\n      this.eInput.value = exists(value) ? value : '';\n    }\n\n    return ret;\n  };\n\n  AgInputTextField.prototype.preventDisallowedCharacters = function () {\n    var pattern = new RegExp(\"[\" + this.config.allowedCharPattern + \"]\");\n\n    var preventDisallowedCharacters = function (event) {\n      if (event.key && !pattern.test(event.key)) {\n        event.preventDefault();\n      }\n    };\n\n    this.addManagedListener(this.eInput, 'keypress', preventDisallowedCharacters);\n    this.addManagedListener(this.eInput, 'paste', function (e) {\n      var text = e.clipboardData.getData('text');\n\n      if (some(text, function (c) {\n        return !pattern.test(c);\n      })) {\n        e.preventDefault();\n      }\n    });\n  };\n\n  return AgInputTextField;\n}(AgAbstractInputField);\n\nexport { AgInputTextField };","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@ag-grid-community/core/dist/es6/widgets/agInputTextField.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","AgAbstractInputField","some","exists","AgInputTextField","_super","config","className","inputType","call","postConstruct","allowedCharPattern","preventDisallowedCharacters","setValue","value","silent","ret","eInput","pattern","RegExp","event","key","test","preventDefault","addManagedListener","e","text","clipboardData","getData","c"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { AgAbstractInputField } from './agAbstractInputField';\nimport { some } from '../utils/array';\nimport { exists } from '../utils/generic';\nvar AgInputTextField = /** @class */ (function (_super) {\n    __extends(AgInputTextField, _super);\n    function AgInputTextField(config, className, inputType) {\n        if (className === void 0) { className = 'ag-text-field'; }\n        if (inputType === void 0) { inputType = 'text'; }\n        return _super.call(this, config, className, inputType) || this;\n    }\n    AgInputTextField.prototype.postConstruct = function () {\n        _super.prototype.postConstruct.call(this);\n        if (this.config.allowedCharPattern) {\n            this.preventDisallowedCharacters();\n        }\n    };\n    AgInputTextField.prototype.setValue = function (value, silent) {\n        var ret = _super.prototype.setValue.call(this, value, silent);\n        if (this.eInput.value !== value) {\n            this.eInput.value = exists(value) ? value : '';\n        }\n        return ret;\n    };\n    AgInputTextField.prototype.preventDisallowedCharacters = function () {\n        var pattern = new RegExp(\"[\" + this.config.allowedCharPattern + \"]\");\n        var preventDisallowedCharacters = function (event) {\n            if (event.key && !pattern.test(event.key)) {\n                event.preventDefault();\n            }\n        };\n        this.addManagedListener(this.eInput, 'keypress', preventDisallowedCharacters);\n        this.addManagedListener(this.eInput, 'paste', function (e) {\n            var text = e.clipboardData.getData('text');\n            if (some(text, function (c) { return !pattern.test(c); })) {\n                e.preventDefault();\n            }\n        });\n    };\n    return AgInputTextField;\n}(AgAbstractInputField));\nexport { AgInputTextField };\n"]},"metadata":{},"sourceType":"module"}