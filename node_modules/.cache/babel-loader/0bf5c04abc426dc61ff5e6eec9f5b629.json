{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/filter/Bbox\n */\n\n\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\n\nvar Bbox =\n/** @class */\nfunction (_super) {\n  __extends(Bbox, _super);\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [opt_srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n\n\n  function Bbox(geometryName, extent, opt_srsName) {\n    var _this = _super.call(this, 'BBOX') || this;\n    /**\n     * @type {!string}\n     */\n\n\n    _this.geometryName = geometryName;\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    _this.extent = extent;\n\n    if (extent.length !== 4) {\n      throw new Error('Expected an extent with four values ([minX, minY, maxX, maxY])');\n    }\n    /**\n     * @type {string|undefined}\n     */\n\n\n    _this.srsName = opt_srsName;\n    return _this;\n  }\n\n  return Bbox;\n}(Filter);\n\nexport default Bbox;","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/ol/src/format/filter/Bbox.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEG;;;AACH,OAAO,MAAP,MAAmB,aAAnB;AAEA;;;;;;AAMG;;AACH,IAAA,IAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmB,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;AACjB;;;;;AAKG;;;AACH,WAAA,IAAA,CAAY,YAAZ,EAA0B,MAA1B,EAAkC,WAAlC,EAA6C;AAA7C,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,KAAa,IADf;AAGE;;AAEG;;;AACH,IAAA,KAAI,CAAC,YAAL,GAAoB,YAApB;AAEA;;AAEG;;AACH,IAAA,KAAI,CAAC,MAAL,GAAc,MAAd;;AACA,QAAI,MAAM,CAAC,MAAP,KAAkB,CAAtB,EAAyB;AACvB,YAAM,IAAI,KAAJ,CACJ,gEADI,CAAN;AAGD;AAED;;AAEG;;;AACH,IAAA,KAAI,CAAC,OAAL,GAAe,WAAf;;AACD;;AACH,SAAA,IAAA;AAAC,CA9BD,CAAmB,MAAnB,CAAA;;AAgCA,eAAe,IAAf","sourcesContent":["/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [opt_srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, opt_srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])'\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n}\n\nexport default Bbox;\n"]},"metadata":{},"sourceType":"module"}