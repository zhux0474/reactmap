{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"antd/es/tree/style\");\n\nvar _tree = _interopRequireDefault(require(\"antd/es/tree\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Map = _interopRequireDefault(require(\"ol/Map\"));\n\nvar _Group = _interopRequireDefault(require(\"ol/layer/Group\"));\n\nvar _Collection = _interopRequireDefault(require(\"ol/Collection\"));\n\nvar _Observable = require(\"ol/Observable\");\n\nvar _ol = require(\"ol\");\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isEqual2 = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _MapUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/MapUtil/MapUtil\"));\n\nvar _LayerTreeNode = _interopRequireDefault(require(\"./LayerTreeNode/LayerTreeNode\"));\n\nvar _constants = require(\"../constants\");\n\nvar _excluded = [\"className\", \"layerGroup\", \"map\", \"nodeTitleRenderer\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * The LayerTree.\n *\n * Note. This component expects that all layerGroups are permanently visible.\n *\n * @class LayerTree\n * @extends React.Component\n */\n\n\nvar LayerTree = /*#__PURE__*/function (_React$Component) {\n  _inherits(LayerTree, _React$Component);\n\n  var _super = _createSuper(LayerTree);\n  /**\n   * The default properties.\n   */\n\n  /**\n   * The className added to this component.\n   * @private\n   */\n\n  /**\n   *  An array of ol.EventsKey as returned by on() or once().\n   * @private\n   */\n\n  /**\n   * Create the LayerTree.\n   *\n   * @constructs LayerTree\n   */\n\n\n  function LayerTree(props) {\n    var _this;\n\n    _classCallCheck(this, LayerTree);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"layertree\"));\n\n    _defineProperty(_assertThisInitialized(_this), \"olListenerKeys\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"onCollectionAdd\", function (evt) {\n      if (evt.element instanceof _Group[\"default\"]) {\n        _this.registerAddRemoveListeners(evt.element);\n      }\n\n      _this.rebuildTreeNodes();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCollectionRemove\", function (evt) {\n      _this.unregisterEventsByLayer(evt.element);\n\n      if (evt.element instanceof _Group[\"default\"]) {\n        evt.element.getLayers().forEach(function (layer) {\n          _this.unregisterEventsByLayer(layer);\n        });\n      }\n\n      _this.rebuildTreeNodes();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeLayers\", function (evt) {\n      _this.unregisterEventsByLayer(evt.oldValue);\n\n      if (evt.oldValue instanceof _Collection[\"default\"]) {\n        evt.oldValue.forEach(function (layer) {\n          return _this.unregisterEventsByLayer(layer);\n        });\n      }\n\n      if (evt.target instanceof _Group[\"default\"]) {\n        _this.registerAddRemoveListeners(evt.target);\n      }\n\n      _this.rebuildTreeNodes();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unregisterEventsByLayer\", function (layer) {\n      _this.olListenerKeys = _this.olListenerKeys.filter(function (key) {\n        if (layer instanceof _Group[\"default\"]) {\n          var layers = layer.getLayers();\n\n          if (key.target === layers) {\n            if (key.type === 'add' && key.listener === _this.onCollectionAdd || key.type === 'remove' && key.listener === _this.onCollectionRemove || key.type === 'change:layers' && key.listener === _this.onChangeLayers) {\n              (0, _Observable.unByKey)(key);\n              return false;\n            }\n          }\n        } else if (key.target === layer) {\n          if (key.type === 'change:visible' && key.listener === _this.onLayerChangeVisible) {\n            (0, _Observable.unByKey)(key);\n            return false;\n          }\n        }\n\n        return true;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"rebuildTreeNodes\", function (evt) {\n      var mapResolution = _this.state.mapResolution;\n      var newMapResolution = -1;\n\n      if ((evt === null || evt === void 0 ? void 0 : evt.target) instanceof _Map[\"default\"]) {\n        var _evt$target$getView$g;\n\n        newMapResolution = (_evt$target$getView$g = evt.target.getView().getResolution()) !== null && _evt$target$getView$g !== void 0 ? _evt$target$getView$g : -1;\n\n        if (mapResolution === newMapResolution) {\n          // If map resolution didn't change => no redraw of tree nodes needed.\n          return;\n        }\n      }\n\n      if (_this.state.layerGroup) {\n        _this.treeNodesFromLayerGroup(_this.state.layerGroup);\n      }\n\n      var checkedKeys = _this.getVisibleOlUids();\n\n      _this.setState({\n        checkedKeys: checkedKeys,\n        mapResolution: newMapResolution\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasListener\", function (target, type, listener) {\n      return _this.olListenerKeys.some(function (listenerKey) {\n        return listenerKey.target === target && listenerKey.type === type && listenerKey.listener === listener;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLayerChangeVisible\", function () {\n      var checkedKeys = _this.getVisibleOlUids();\n\n      _this.setState({\n        checkedKeys: checkedKeys\n      }, function () {\n        _this.rebuildTreeNodes();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getVisibleOlUids\", function () {\n      var layers = _MapUtil[\"default\"].getAllLayers(_this.state.layerGroup, function (layer) {\n        return !(layer instanceof _Group[\"default\"]) && layer.getVisible();\n      }).filter(_this.props.filterFunction);\n\n      return layers.map(_ol.getUid);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onExpand\", function (expandedKeys, info) {\n      var onExpand = _this.props.onExpand;\n\n      _this.rebuildTreeNodes();\n\n      if (onExpand) {\n        onExpand(expandedKeys, info);\n      }\n    });\n\n    _this.state = {\n      layerGroup: null,\n      layerGroupRevision: 0,\n      treeNodes: [],\n      checkedKeys: [],\n      mapResolution: -1\n    };\n    return _this;\n  }\n  /**\n   * Invoked after the component is instantiated as well as when it\n   * receives new props. It should return an object to update state, or null\n   * to indicate that the new props do not require any state updates.\n   *\n   * @param nextProps The next properties.\n   * @param prevState The previous state.\n   */\n\n\n  _createClass(LayerTree, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * Determines what to do on the initial mount.\n     */\n    function componentDidMount() {\n      var _this2 = this;\n\n      var layerGroup = this.props.layerGroup ? this.props.layerGroup : this.props.map.getLayerGroup();\n      var revision = this.props.layerGroup ? this.props.layerGroup.getRevision() : 0;\n      this.setState({\n        layerGroup: layerGroup,\n        layerGroupRevision: revision\n      }, function () {\n        if (_this2.state.layerGroup) {\n          _this2.registerAddRemoveListeners(_this2.state.layerGroup);\n        }\n\n        _this2.registerResolutionChangeHandler();\n\n        _this2.rebuildTreeNodes();\n      });\n    }\n    /**\n     * Invoked immediately after updating occurs. This method is not called for\n     * the initial render.\n     *\n     * @param prevProps The previous props.\n     * @param prevState The previous state.\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props = this.props,\n          layerGroup = _this$props.layerGroup,\n          nodeTitleRenderer = _this$props.nodeTitleRenderer;\n\n      if (layerGroup && prevState.layerGroup) {\n        if (!(0, _isEqual2[\"default\"])((0, _ol.getUid)(prevState.layerGroup), (0, _ol.getUid)(layerGroup))) {\n          (0, _Observable.unByKey)(this.olListenerKeys);\n          this.olListenerKeys = [];\n          this.registerAddRemoveListeners(layerGroup);\n          this.rebuildTreeNodes();\n        }\n      }\n\n      if (nodeTitleRenderer !== prevProps.nodeTitleRenderer) {\n        this.rebuildTreeNodes();\n      }\n    }\n    /**\n     * Determines what to do when the component is unmounted.\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      (0, _Observable.unByKey)(this.olListenerKeys);\n    }\n    /**\n     * Creates TreeNodes from a given layergroup and sets the treeNodes in the state.\n     *\n     * @param groupLayer A grouplayer.\n     */\n\n  }, {\n    key: \"treeNodesFromLayerGroup\",\n    value: function treeNodesFromLayerGroup(groupLayer) {\n      var _this3 = this;\n\n      var layerArray = groupLayer.getLayers().getArray().filter(this.props.filterFunction);\n      var treeNodes = layerArray.map(function (layer) {\n        return _this3.treeNodeFromLayer(layer);\n      });\n      treeNodes.reverse();\n      this.setState({\n        treeNodes: treeNodes\n      });\n    }\n    /**\n     * Registers the add/remove listeners recursively for all ol.layer.Group.\n     *\n     * @param groupLayer A ol.layer.Group\n     */\n\n  }, {\n    key: \"registerAddRemoveListeners\",\n    value: function registerAddRemoveListeners(groupLayer) {\n      var _this4 = this;\n\n      var collection = groupLayer.getLayers();\n      var addEvtKey = collection.on('add', this.onCollectionAdd);\n      var removeEvtKey = collection.on('remove', this.onCollectionRemove); // @ts-ignore\n\n      var changeEvtKey = groupLayer.on('change:layers', this.onChangeLayers);\n      this.olListenerKeys.push(addEvtKey, removeEvtKey, changeEvtKey);\n      collection.forEach(function (layer) {\n        if (layer instanceof _Group[\"default\"]) {\n          _this4.registerAddRemoveListeners(layer);\n        }\n      });\n    }\n    /**\n     * Registers an eventhandler on the `ol.View`, which will rebuild the tree\n     * nodes whenever the view's resolution changes.\n     */\n\n  }, {\n    key: \"registerResolutionChangeHandler\",\n    value: function registerResolutionChangeHandler() {\n      var map = this.props.map;\n      var evtKey = map.on('moveend', this.rebuildTreeNodes.bind(this));\n      this.olListenerKeys.push(evtKey); // TODO when and how to we unbind?\n    }\n    /**\n     * Listens to the collections add event of a collection.\n     * Registers add/remove listeners if element is a collection and rebuilds the\n     * treeNodes.\n     *\n     * @param evt The add event.\n     */\n\n  }, {\n    key: \"getTreeNodeTitle\",\n    value:\n    /**\n     * Returns the title to render in the LayerTreeNode. If a nodeTitleRenderer\n     * has been passed as prop, it will be called and the (custom) return value\n     * will be rendered. Note: This can be any renderable element collection! If\n     * no function is given (the default) the layer name will be passed.\n     *\n     * @param layer The layer attached to the tree node.\n     * @return The title composition to render.\n     */\n    function getTreeNodeTitle(layer) {\n      if ((0, _isFunction2[\"default\"])(this.props.nodeTitleRenderer)) {\n        return this.props.nodeTitleRenderer.call(this, layer);\n      } else {\n        return layer.get('name');\n      }\n    }\n    /**\n     * Creates a treeNode from a given layer.\n     *\n     * @param layer The given layer.\n     * @return The corresponding LayerTreeNode Element.\n     */\n\n  }, {\n    key: \"treeNodeFromLayer\",\n    value: function treeNodeFromLayer(layer) {\n      var _this5 = this;\n\n      var childNodes = null;\n\n      if (layer instanceof _Group[\"default\"]) {\n        var childLayers = layer.getLayers().getArray().filter(this.props.filterFunction);\n        childNodes = childLayers.map(function (childLayer) {\n          return _this5.treeNodeFromLayer(childLayer);\n        }).reverse();\n      } else {\n        if (!this.hasListener(layer, 'change:visible', this.onLayerChangeVisible)) {\n          var eventKey = layer.on('change:visible', this.onLayerChangeVisible);\n          this.olListenerKeys.push(eventKey);\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(_LayerTreeNode[\"default\"], {\n        title: this.getTreeNodeTitle(layer),\n        key: (0, _ol.getUid)(layer),\n        inResolutionRange: _MapUtil[\"default\"].layerInResolutionRange(layer, this.props.map)\n      }, childNodes);\n    }\n    /**\n     * Determines if the target has already registered the given listener for the\n     * given eventtype.\n     *\n     * @param target The event target.\n     * @param type The events type (name).\n     * @param listener The function.\n     * @return True if the listener is already contained in this.olListenerKeys.\n     */\n\n  }, {\n    key: \"onCheck\",\n    value:\n    /**\n     * Sets the visibility of a layer due to its checked state.\n     *\n     * @param checkedKeys Contains all checkedKeys.\n     * @param e The ant-tree event object for this event. See ant docs.\n     */\n    function onCheck(checkedKeys, e) {\n      var _e$checked = e.checked,\n          checked = _e$checked === void 0 ? false : _e$checked;\n      var eventKey = e.node.props.eventKey;\n\n      var layer = _MapUtil[\"default\"].getLayerByOlUid(this.props.map, eventKey);\n\n      this.setLayerVisibility(layer, checked);\n    }\n    /**\n     * Sets the layer visibility. Calls itself recursively for groupLayers.\n     *\n     * @param layer The layer.\n     * @param visibility The visibility.\n     */\n\n  }, {\n    key: \"setLayerVisibility\",\n    value: function setLayerVisibility(layer, visibility) {\n      var _this6 = this;\n\n      if (layer instanceof _Group[\"default\"]) {\n        layer.setVisible(visibility);\n        layer.getLayers().forEach(function (subLayer) {\n          _this6.setLayerVisibility(subLayer, visibility);\n        });\n      } else {\n        layer.setVisible(visibility); // if layer has a parent folder, make it visible too\n\n        if (visibility) {\n          var group = this.props.layerGroup ? this.props.layerGroup : this.props.map.getLayerGroup();\n          this.setParentFoldersVisible(group, (0, _ol.getUid)(layer), group);\n        }\n      }\n    }\n    /**\n     * Find the parent OlLayerGroup for the given layers ol_uid and make it\n     * visible. Traverse the tree to also set the parenting layer groups visible\n     *\n     * @param currentGroup The current group to search in\n     * @param olUid The ol_uid of the layer or folder that has been set visible\n     * @param masterGroup The main group to search in. Needed when searching for\n     * parents as we always have to start search from top\n     */\n\n  }, {\n    key: \"setParentFoldersVisible\",\n    value: function setParentFoldersVisible(currentGroup, olUid, masterGroup) {\n      var _this7 = this;\n\n      var items = currentGroup.getLayers().getArray();\n      var groups = items.filter(function (l) {\n        return l instanceof _Group[\"default\"];\n      });\n      var match = items.find(function (i) {\n        return (0, _ol.getUid)(i) === olUid;\n      });\n\n      if (match) {\n        currentGroup.setVisible(true);\n        this.setParentFoldersVisible(masterGroup, (0, _ol.getUid)(currentGroup), masterGroup);\n        return;\n      }\n\n      groups.forEach(function (g) {\n        _this7.setParentFoldersVisible(g, olUid, masterGroup);\n      });\n    }\n    /**\n     * The callback method for the drop event. Layers will get reordered in the map\n     * and the tree.\n     *\n     * @param e The ant-tree event object for this event. See ant docs.\n     */\n\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(e) {\n      var dragLayer = _MapUtil[\"default\"].getLayerByOlUid(this.props.map, e.dragNode.props.eventKey);\n\n      var dragInfo = _MapUtil[\"default\"].getLayerPositionInfo(dragLayer, this.props.map);\n\n      var dragCollection = dragInfo.groupLayer.getLayers();\n\n      var dropLayer = _MapUtil[\"default\"].getLayerByOlUid(this.props.map, e.node.props.eventKey);\n\n      var dropPos = e.node.props.pos.split('-');\n      var location = e.dropPosition - Number(dropPos[dropPos.length - 1]);\n      dragCollection.remove(dragLayer);\n\n      var dropInfo = _MapUtil[\"default\"].getLayerPositionInfo(dropLayer, this.props.map);\n\n      var dropPosition = dropInfo.position;\n      var dropCollection = dropInfo.groupLayer.getLayers(); // drop before node\n\n      if (location === -1) {\n        if (dropPosition === dropCollection.getLength() - 1) {\n          dropCollection.push(dragLayer);\n        } else {\n          dropCollection.insertAt(dropPosition + 1, dragLayer);\n        } // drop on node\n\n      } else if (location === 0) {\n        if (dropLayer instanceof _Group[\"default\"]) {\n          dropLayer.getLayers().push(dragLayer);\n        } else {\n          dropCollection.insertAt(dropPosition + 1, dragLayer);\n        } // drop after node\n\n      } else if (location === 1) {\n        dropCollection.insertAt(dropPosition, dragLayer);\n      }\n\n      this.rebuildTreeNodes();\n    }\n    /**\n     * Call rebuildTreeNodes onExpand to avoid sync issues.\n     *\n     */\n\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * The render function.\n     */\n    function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          layerGroup = _this$props2.layerGroup,\n          map = _this$props2.map,\n          nodeTitleRenderer = _this$props2.nodeTitleRenderer,\n          passThroughProps = _objectWithoutProperties(_this$props2, _excluded);\n\n      var ddListeners;\n\n      if (passThroughProps.draggable) {\n        ddListeners = {\n          onDrop: this.onDrop.bind(this)\n        };\n      }\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      return /*#__PURE__*/React.createElement(_tree[\"default\"], _extends({\n        className: finalClassName,\n        checkedKeys: this.state.checkedKeys,\n        onCheck: this.onCheck.bind(this),\n        onExpand: this.onExpand\n      }, ddListeners, passThroughProps), this.state.treeNodes);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (prevState.layerGroup && nextProps.layerGroup) {\n        if (!(0, _isEqual2[\"default\"])((0, _ol.getUid)(prevState.layerGroup), (0, _ol.getUid)(nextProps.layerGroup)) || !(0, _isEqual2[\"default\"])(prevState.layerGroupRevision, nextProps.layerGroup.getRevision())) {\n          return {\n            layerGroup: nextProps.layerGroup,\n            layerGroupRevision: nextProps.layerGroup.getRevision()\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return LayerTree;\n}(React.Component);\n\n_defineProperty(LayerTree, \"defaultProps\", {\n  draggable: true,\n  checkable: true,\n  filterFunction: function filterFunction() {\n    return true;\n  }\n});\n\nvar _default = LayerTree;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/rongxuan/Desktop/reactmap/reactmap/node_modules/@terrestris/react-geo/dist/LayerTree/LayerTree.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","require","_tree","_interopRequireDefault","React","_interopRequireWildcard","_Map","_Group","_Collection","_Observable","_ol","_isFunction2","_isEqual2","_MapUtil","_LayerTreeNode","_constants","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_extends","assign","target","i","arguments","length","source","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","LayerTree","_React$Component","_super","_this","concat","CSS_PREFIX","evt","element","registerAddRemoveListeners","rebuildTreeNodes","unregisterEventsByLayer","getLayers","forEach","layer","oldValue","olListenerKeys","filter","layers","type","listener","onCollectionAdd","onCollectionRemove","onChangeLayers","unByKey","onLayerChangeVisible","mapResolution","state","newMapResolution","_evt$target$getView$g","getView","getResolution","layerGroup","treeNodesFromLayerGroup","checkedKeys","getVisibleOlUids","setState","some","listenerKey","getAllLayers","getVisible","filterFunction","map","getUid","expandedKeys","info","onExpand","layerGroupRevision","treeNodes","componentDidMount","_this2","getLayerGroup","revision","getRevision","registerResolutionChangeHandler","componentDidUpdate","prevProps","prevState","_this$props","nodeTitleRenderer","componentWillUnmount","groupLayer","_this3","layerArray","getArray","treeNodeFromLayer","reverse","_this4","collection","addEvtKey","on","removeEvtKey","changeEvtKey","push","evtKey","bind","getTreeNodeTitle","_this5","childNodes","childLayers","childLayer","hasListener","eventKey","createElement","title","inResolutionRange","layerInResolutionRange","onCheck","_e$checked","checked","node","getLayerByOlUid","setLayerVisibility","visibility","_this6","setVisible","subLayer","group","setParentFoldersVisible","currentGroup","olUid","masterGroup","_this7","items","groups","l","match","find","g","onDrop","dragLayer","dragNode","dragInfo","getLayerPositionInfo","dragCollection","dropLayer","dropPos","pos","split","location","dropPosition","Number","remove","dropInfo","position","dropCollection","getLength","insertAt","render","_this$props2","className","passThroughProps","ddListeners","draggable","finalClassName","getDerivedStateFromProps","nextProps","Component","checkable","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"antd/es/tree/style\");\n\nvar _tree = _interopRequireDefault(require(\"antd/es/tree\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Map = _interopRequireDefault(require(\"ol/Map\"));\n\nvar _Group = _interopRequireDefault(require(\"ol/layer/Group\"));\n\nvar _Collection = _interopRequireDefault(require(\"ol/Collection\"));\n\nvar _Observable = require(\"ol/Observable\");\n\nvar _ol = require(\"ol\");\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isEqual2 = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _MapUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/MapUtil/MapUtil\"));\n\nvar _LayerTreeNode = _interopRequireDefault(require(\"./LayerTreeNode/LayerTreeNode\"));\n\nvar _constants = require(\"../constants\");\n\nvar _excluded = [\"className\", \"layerGroup\", \"map\", \"nodeTitleRenderer\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * The LayerTree.\n *\n * Note. This component expects that all layerGroups are permanently visible.\n *\n * @class LayerTree\n * @extends React.Component\n */\nvar LayerTree = /*#__PURE__*/function (_React$Component) {\n  _inherits(LayerTree, _React$Component);\n\n  var _super = _createSuper(LayerTree);\n\n  /**\n   * The default properties.\n   */\n\n  /**\n   * The className added to this component.\n   * @private\n   */\n\n  /**\n   *  An array of ol.EventsKey as returned by on() or once().\n   * @private\n   */\n\n  /**\n   * Create the LayerTree.\n   *\n   * @constructs LayerTree\n   */\n  function LayerTree(props) {\n    var _this;\n\n    _classCallCheck(this, LayerTree);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"layertree\"));\n\n    _defineProperty(_assertThisInitialized(_this), \"olListenerKeys\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"onCollectionAdd\", function (evt) {\n      if (evt.element instanceof _Group[\"default\"]) {\n        _this.registerAddRemoveListeners(evt.element);\n      }\n\n      _this.rebuildTreeNodes();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCollectionRemove\", function (evt) {\n      _this.unregisterEventsByLayer(evt.element);\n\n      if (evt.element instanceof _Group[\"default\"]) {\n        evt.element.getLayers().forEach(function (layer) {\n          _this.unregisterEventsByLayer(layer);\n        });\n      }\n\n      _this.rebuildTreeNodes();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeLayers\", function (evt) {\n      _this.unregisterEventsByLayer(evt.oldValue);\n\n      if (evt.oldValue instanceof _Collection[\"default\"]) {\n        evt.oldValue.forEach(function (layer) {\n          return _this.unregisterEventsByLayer(layer);\n        });\n      }\n\n      if (evt.target instanceof _Group[\"default\"]) {\n        _this.registerAddRemoveListeners(evt.target);\n      }\n\n      _this.rebuildTreeNodes();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unregisterEventsByLayer\", function (layer) {\n      _this.olListenerKeys = _this.olListenerKeys.filter(function (key) {\n        if (layer instanceof _Group[\"default\"]) {\n          var layers = layer.getLayers();\n\n          if (key.target === layers) {\n            if (key.type === 'add' && key.listener === _this.onCollectionAdd || key.type === 'remove' && key.listener === _this.onCollectionRemove || key.type === 'change:layers' && key.listener === _this.onChangeLayers) {\n              (0, _Observable.unByKey)(key);\n              return false;\n            }\n          }\n        } else if (key.target === layer) {\n          if (key.type === 'change:visible' && key.listener === _this.onLayerChangeVisible) {\n            (0, _Observable.unByKey)(key);\n            return false;\n          }\n        }\n\n        return true;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"rebuildTreeNodes\", function (evt) {\n      var mapResolution = _this.state.mapResolution;\n      var newMapResolution = -1;\n\n      if ((evt === null || evt === void 0 ? void 0 : evt.target) instanceof _Map[\"default\"]) {\n        var _evt$target$getView$g;\n\n        newMapResolution = (_evt$target$getView$g = evt.target.getView().getResolution()) !== null && _evt$target$getView$g !== void 0 ? _evt$target$getView$g : -1;\n\n        if (mapResolution === newMapResolution) {\n          // If map resolution didn't change => no redraw of tree nodes needed.\n          return;\n        }\n      }\n\n      if (_this.state.layerGroup) {\n        _this.treeNodesFromLayerGroup(_this.state.layerGroup);\n      }\n\n      var checkedKeys = _this.getVisibleOlUids();\n\n      _this.setState({\n        checkedKeys: checkedKeys,\n        mapResolution: newMapResolution\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasListener\", function (target, type, listener) {\n      return _this.olListenerKeys.some(function (listenerKey) {\n        return listenerKey.target === target && listenerKey.type === type && listenerKey.listener === listener;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLayerChangeVisible\", function () {\n      var checkedKeys = _this.getVisibleOlUids();\n\n      _this.setState({\n        checkedKeys: checkedKeys\n      }, function () {\n        _this.rebuildTreeNodes();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getVisibleOlUids\", function () {\n      var layers = _MapUtil[\"default\"].getAllLayers(_this.state.layerGroup, function (layer) {\n        return !(layer instanceof _Group[\"default\"]) && layer.getVisible();\n      }).filter(_this.props.filterFunction);\n\n      return layers.map(_ol.getUid);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onExpand\", function (expandedKeys, info) {\n      var onExpand = _this.props.onExpand;\n\n      _this.rebuildTreeNodes();\n\n      if (onExpand) {\n        onExpand(expandedKeys, info);\n      }\n    });\n\n    _this.state = {\n      layerGroup: null,\n      layerGroupRevision: 0,\n      treeNodes: [],\n      checkedKeys: [],\n      mapResolution: -1\n    };\n    return _this;\n  }\n  /**\n   * Invoked after the component is instantiated as well as when it\n   * receives new props. It should return an object to update state, or null\n   * to indicate that the new props do not require any state updates.\n   *\n   * @param nextProps The next properties.\n   * @param prevState The previous state.\n   */\n\n\n  _createClass(LayerTree, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * Determines what to do on the initial mount.\n     */\n    function componentDidMount() {\n      var _this2 = this;\n\n      var layerGroup = this.props.layerGroup ? this.props.layerGroup : this.props.map.getLayerGroup();\n      var revision = this.props.layerGroup ? this.props.layerGroup.getRevision() : 0;\n      this.setState({\n        layerGroup: layerGroup,\n        layerGroupRevision: revision\n      }, function () {\n        if (_this2.state.layerGroup) {\n          _this2.registerAddRemoveListeners(_this2.state.layerGroup);\n        }\n\n        _this2.registerResolutionChangeHandler();\n\n        _this2.rebuildTreeNodes();\n      });\n    }\n    /**\n     * Invoked immediately after updating occurs. This method is not called for\n     * the initial render.\n     *\n     * @param prevProps The previous props.\n     * @param prevState The previous state.\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props = this.props,\n          layerGroup = _this$props.layerGroup,\n          nodeTitleRenderer = _this$props.nodeTitleRenderer;\n\n      if (layerGroup && prevState.layerGroup) {\n        if (!(0, _isEqual2[\"default\"])((0, _ol.getUid)(prevState.layerGroup), (0, _ol.getUid)(layerGroup))) {\n          (0, _Observable.unByKey)(this.olListenerKeys);\n          this.olListenerKeys = [];\n          this.registerAddRemoveListeners(layerGroup);\n          this.rebuildTreeNodes();\n        }\n      }\n\n      if (nodeTitleRenderer !== prevProps.nodeTitleRenderer) {\n        this.rebuildTreeNodes();\n      }\n    }\n    /**\n     * Determines what to do when the component is unmounted.\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      (0, _Observable.unByKey)(this.olListenerKeys);\n    }\n    /**\n     * Creates TreeNodes from a given layergroup and sets the treeNodes in the state.\n     *\n     * @param groupLayer A grouplayer.\n     */\n\n  }, {\n    key: \"treeNodesFromLayerGroup\",\n    value: function treeNodesFromLayerGroup(groupLayer) {\n      var _this3 = this;\n\n      var layerArray = groupLayer.getLayers().getArray().filter(this.props.filterFunction);\n      var treeNodes = layerArray.map(function (layer) {\n        return _this3.treeNodeFromLayer(layer);\n      });\n      treeNodes.reverse();\n      this.setState({\n        treeNodes: treeNodes\n      });\n    }\n    /**\n     * Registers the add/remove listeners recursively for all ol.layer.Group.\n     *\n     * @param groupLayer A ol.layer.Group\n     */\n\n  }, {\n    key: \"registerAddRemoveListeners\",\n    value: function registerAddRemoveListeners(groupLayer) {\n      var _this4 = this;\n\n      var collection = groupLayer.getLayers();\n      var addEvtKey = collection.on('add', this.onCollectionAdd);\n      var removeEvtKey = collection.on('remove', this.onCollectionRemove); // @ts-ignore\n\n      var changeEvtKey = groupLayer.on('change:layers', this.onChangeLayers);\n      this.olListenerKeys.push(addEvtKey, removeEvtKey, changeEvtKey);\n      collection.forEach(function (layer) {\n        if (layer instanceof _Group[\"default\"]) {\n          _this4.registerAddRemoveListeners(layer);\n        }\n      });\n    }\n    /**\n     * Registers an eventhandler on the `ol.View`, which will rebuild the tree\n     * nodes whenever the view's resolution changes.\n     */\n\n  }, {\n    key: \"registerResolutionChangeHandler\",\n    value: function registerResolutionChangeHandler() {\n      var map = this.props.map;\n      var evtKey = map.on('moveend', this.rebuildTreeNodes.bind(this));\n      this.olListenerKeys.push(evtKey); // TODO when and how to we unbind?\n    }\n    /**\n     * Listens to the collections add event of a collection.\n     * Registers add/remove listeners if element is a collection and rebuilds the\n     * treeNodes.\n     *\n     * @param evt The add event.\n     */\n\n  }, {\n    key: \"getTreeNodeTitle\",\n    value:\n    /**\n     * Returns the title to render in the LayerTreeNode. If a nodeTitleRenderer\n     * has been passed as prop, it will be called and the (custom) return value\n     * will be rendered. Note: This can be any renderable element collection! If\n     * no function is given (the default) the layer name will be passed.\n     *\n     * @param layer The layer attached to the tree node.\n     * @return The title composition to render.\n     */\n    function getTreeNodeTitle(layer) {\n      if ((0, _isFunction2[\"default\"])(this.props.nodeTitleRenderer)) {\n        return this.props.nodeTitleRenderer.call(this, layer);\n      } else {\n        return layer.get('name');\n      }\n    }\n    /**\n     * Creates a treeNode from a given layer.\n     *\n     * @param layer The given layer.\n     * @return The corresponding LayerTreeNode Element.\n     */\n\n  }, {\n    key: \"treeNodeFromLayer\",\n    value: function treeNodeFromLayer(layer) {\n      var _this5 = this;\n\n      var childNodes = null;\n\n      if (layer instanceof _Group[\"default\"]) {\n        var childLayers = layer.getLayers().getArray().filter(this.props.filterFunction);\n        childNodes = childLayers.map(function (childLayer) {\n          return _this5.treeNodeFromLayer(childLayer);\n        }).reverse();\n      } else {\n        if (!this.hasListener(layer, 'change:visible', this.onLayerChangeVisible)) {\n          var eventKey = layer.on('change:visible', this.onLayerChangeVisible);\n          this.olListenerKeys.push(eventKey);\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(_LayerTreeNode[\"default\"], {\n        title: this.getTreeNodeTitle(layer),\n        key: (0, _ol.getUid)(layer),\n        inResolutionRange: _MapUtil[\"default\"].layerInResolutionRange(layer, this.props.map)\n      }, childNodes);\n    }\n    /**\n     * Determines if the target has already registered the given listener for the\n     * given eventtype.\n     *\n     * @param target The event target.\n     * @param type The events type (name).\n     * @param listener The function.\n     * @return True if the listener is already contained in this.olListenerKeys.\n     */\n\n  }, {\n    key: \"onCheck\",\n    value:\n    /**\n     * Sets the visibility of a layer due to its checked state.\n     *\n     * @param checkedKeys Contains all checkedKeys.\n     * @param e The ant-tree event object for this event. See ant docs.\n     */\n    function onCheck(checkedKeys, e) {\n      var _e$checked = e.checked,\n          checked = _e$checked === void 0 ? false : _e$checked;\n      var eventKey = e.node.props.eventKey;\n\n      var layer = _MapUtil[\"default\"].getLayerByOlUid(this.props.map, eventKey);\n\n      this.setLayerVisibility(layer, checked);\n    }\n    /**\n     * Sets the layer visibility. Calls itself recursively for groupLayers.\n     *\n     * @param layer The layer.\n     * @param visibility The visibility.\n     */\n\n  }, {\n    key: \"setLayerVisibility\",\n    value: function setLayerVisibility(layer, visibility) {\n      var _this6 = this;\n\n      if (layer instanceof _Group[\"default\"]) {\n        layer.setVisible(visibility);\n        layer.getLayers().forEach(function (subLayer) {\n          _this6.setLayerVisibility(subLayer, visibility);\n        });\n      } else {\n        layer.setVisible(visibility); // if layer has a parent folder, make it visible too\n\n        if (visibility) {\n          var group = this.props.layerGroup ? this.props.layerGroup : this.props.map.getLayerGroup();\n          this.setParentFoldersVisible(group, (0, _ol.getUid)(layer), group);\n        }\n      }\n    }\n    /**\n     * Find the parent OlLayerGroup for the given layers ol_uid and make it\n     * visible. Traverse the tree to also set the parenting layer groups visible\n     *\n     * @param currentGroup The current group to search in\n     * @param olUid The ol_uid of the layer or folder that has been set visible\n     * @param masterGroup The main group to search in. Needed when searching for\n     * parents as we always have to start search from top\n     */\n\n  }, {\n    key: \"setParentFoldersVisible\",\n    value: function setParentFoldersVisible(currentGroup, olUid, masterGroup) {\n      var _this7 = this;\n\n      var items = currentGroup.getLayers().getArray();\n      var groups = items.filter(function (l) {\n        return l instanceof _Group[\"default\"];\n      });\n      var match = items.find(function (i) {\n        return (0, _ol.getUid)(i) === olUid;\n      });\n\n      if (match) {\n        currentGroup.setVisible(true);\n        this.setParentFoldersVisible(masterGroup, (0, _ol.getUid)(currentGroup), masterGroup);\n        return;\n      }\n\n      groups.forEach(function (g) {\n        _this7.setParentFoldersVisible(g, olUid, masterGroup);\n      });\n    }\n    /**\n     * The callback method for the drop event. Layers will get reordered in the map\n     * and the tree.\n     *\n     * @param e The ant-tree event object for this event. See ant docs.\n     */\n\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(e) {\n      var dragLayer = _MapUtil[\"default\"].getLayerByOlUid(this.props.map, e.dragNode.props.eventKey);\n\n      var dragInfo = _MapUtil[\"default\"].getLayerPositionInfo(dragLayer, this.props.map);\n\n      var dragCollection = dragInfo.groupLayer.getLayers();\n\n      var dropLayer = _MapUtil[\"default\"].getLayerByOlUid(this.props.map, e.node.props.eventKey);\n\n      var dropPos = e.node.props.pos.split('-');\n      var location = e.dropPosition - Number(dropPos[dropPos.length - 1]);\n      dragCollection.remove(dragLayer);\n\n      var dropInfo = _MapUtil[\"default\"].getLayerPositionInfo(dropLayer, this.props.map);\n\n      var dropPosition = dropInfo.position;\n      var dropCollection = dropInfo.groupLayer.getLayers(); // drop before node\n\n      if (location === -1) {\n        if (dropPosition === dropCollection.getLength() - 1) {\n          dropCollection.push(dragLayer);\n        } else {\n          dropCollection.insertAt(dropPosition + 1, dragLayer);\n        } // drop on node\n\n      } else if (location === 0) {\n        if (dropLayer instanceof _Group[\"default\"]) {\n          dropLayer.getLayers().push(dragLayer);\n        } else {\n          dropCollection.insertAt(dropPosition + 1, dragLayer);\n        } // drop after node\n\n      } else if (location === 1) {\n        dropCollection.insertAt(dropPosition, dragLayer);\n      }\n\n      this.rebuildTreeNodes();\n    }\n    /**\n     * Call rebuildTreeNodes onExpand to avoid sync issues.\n     *\n     */\n\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * The render function.\n     */\n    function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          layerGroup = _this$props2.layerGroup,\n          map = _this$props2.map,\n          nodeTitleRenderer = _this$props2.nodeTitleRenderer,\n          passThroughProps = _objectWithoutProperties(_this$props2, _excluded);\n\n      var ddListeners;\n\n      if (passThroughProps.draggable) {\n        ddListeners = {\n          onDrop: this.onDrop.bind(this)\n        };\n      }\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      return /*#__PURE__*/React.createElement(_tree[\"default\"], _extends({\n        className: finalClassName,\n        checkedKeys: this.state.checkedKeys,\n        onCheck: this.onCheck.bind(this),\n        onExpand: this.onExpand\n      }, ddListeners, passThroughProps), this.state.treeNodes);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (prevState.layerGroup && nextProps.layerGroup) {\n        if (!(0, _isEqual2[\"default\"])((0, _ol.getUid)(prevState.layerGroup), (0, _ol.getUid)(nextProps.layerGroup)) || !(0, _isEqual2[\"default\"])(prevState.layerGroupRevision, nextProps.layerGroup.getRevision())) {\n          return {\n            layerGroup: nextProps.layerGroup,\n            layerGroupRevision: nextProps.layerGroup.getRevision()\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return LayerTree;\n}(React.Component);\n\n_defineProperty(LayerTree, \"defaultProps\", {\n  draggable: true,\n  checkable: true,\n  filterFunction: function filterFunction() {\n    return true;\n  }\n});\n\nvar _default = LayerTree;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}